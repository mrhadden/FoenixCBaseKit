  Thu Dec  3 2020 22:25                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.c",0
     7                        ;#include "fxos.h"
     8                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
     9                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    10                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    11                        	.line	88
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    13                        	.stag	fake1_,32,1
    14                        	.member	quot,0,5,8,16
    15                        	.member	rem,16,5,8,16
    16                        	.eos
    17                        	.stag	fake2_,64,2
    18                        	.member	quot,0,7,8,32
    19                        	.member	rem,32,7,8,32
    20                        	.eos
    21                        	.stag	int_sqrt,32,3
    22                        	.member	sqrt,0,16,8,16
    23                        	.member	frac,16,16,8,16
    24                        	.eos
    25                        	.line	205
    26                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    27                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    28                        	.line	134
    29                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    30                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    31                        	.line	103
    32                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    33                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    34                        	.stag	_fx_bytebits,8,4
    35                        	.member	b7,0,14,17,1
    36                        	.member	b6,1,14,17,1
    37                        	.member	b5,2,14,17,1
    38                        	.member	b4,3,14,17,1
    39                        	.member	b3,4,14,17,1
    40                        	.member	b2,5,14,17,1
    41                        	.member	b1,6,14,17,1
  Thu Dec  3 2020 22:25                                                Page 2


    42                        	.member	b0,7,14,17,1
    43                        	.eos
    44                        	.stag	_fx_node,384,5
    45                        	.member	type,0,14,8,8
    46                        	.member	Reserved0,8,14,8,8
    47                        	.member	data,16,129,8,32
    48                        	.member	last,48,138,8,32,5
    49                        	.member	next,80,138,8,32,5
    50                        	.member	name,112,110,8,0,32
    51                        	.member	Reserved1,368,16,8,16
    52                        	.eos
    53                        	.stag	_fx_nodelist,96,6
    54                        	.member	listhead,0,138,8,32,5
    55                        	.member	listData,32,129,8,32
    56                        	.member	deallocator,64,641,8,32
    57                        	.eos
    58                        	.stag	_fx_queue,80,7
    59                        	.member	count,0,5,8,16
    60                        	.member	front,16,138,8,32,5
    61                        	.member	rear,48,138,8,32,5
    62                        	.eos
    63                        	.stag	fake8_,32,8
    64                        	.member	subsystem,0,14,8,8
    65                        	.member	level,8,14,8,8
    66                        	.member	error,16,16,8,16
    67                        	.eos
    68                        	.stag	_fx_process_signal,16,9
    69                        	.member	cbSize,0,16,8,16
    70                        	.eos
    71                        	.stag	_fx_semaphore,16,10
    72                        	.member	reserved,0,5,8,16
    73                        	.eos
    74                        	.stag	_fx_fileBlock,552,11
    75                        	.member	openCount,0,16,8,16
    76                        	.member	lockCount,16,16,8,16
    77                        	.member	dirty,32,14,8,8
    78                        	.member	fileBuffer,40,110,8,0,64
    79                        	.eos
    80                        	.stag	_fx_irq_data,48,12
    81                        	.member	line,0,5,8,16
    82                        	.member	keycode,16,142,8,32
    83                        	.eos
    84                        	.stag	_task,48,13
    85                        	.member	SPL,0,14,8,8
    86                        	.member	SPH,8,14,8,8
    87                        	.member	pstack,16,142,8,32
    88                        	.eos
    89                        	.stag	_task_stack,32,14
    90                        	.member	SS,0,142,8,32
    91                        	.eos
    92                        	.stag	int_regs,104,15
    93                        	.member	PB,0,14,8,8
    94                        	.member	PH,8,14,8,8
    95                        	.member	PL,16,14,8,8
    96                        	.member	PP,24,14,8,8
    97                        	.member	DB,32,14,8,8
    98                        	.member	DH,40,14,8,8
    99                        	.member	DL,48,14,8,8
  Thu Dec  3 2020 22:25                                                Page 3


   100                        	.member	AH,56,14,8,8
   101                        	.member	AL,64,14,8,8
   102                        	.member	XH,72,14,8,8
   103                        	.member	XL,80,14,8,8
   104                        	.member	YH,88,14,8,8
   105                        	.member	YL,96,14,8,8
   106                        	.eos
   107                        	.stag	_fx_eventMessage,304,16
   108                        	.member	src,0,18,8,32
   109                        	.member	dest,32,18,8,32
   110                        	.member	type,64,16,8,16
   111                        	.member	hwnd,80,129,8,32
   112                        	.member	pheap,112,129,8,32
   113                        	.member	msgTime,144,18,8,32
   114                        	.member	data,176,110,8,0,16
   115                        	.eos
   116                        	.stag	_fx_cmdMessage,304,17
   117                        	.member	src,0,18,8,32
   118                        	.member	dest,32,18,8,32
   119                        	.member	type,64,16,8,16
   120                        	.member	hwnd,80,129,8,32
   121                        	.member	pheap,112,129,8,32
   122                        	.member	msgTime,144,18,8,32
   123                        	.member	cmdCId,176,16,8,16
   124                        	.member	cmdMId,192,16,8,16
   125                        	.member	parameter1,208,18,8,32
   126                        	.member	parameter2,240,18,8,32
   127                        	.member	parameter3,272,18,8,32
   128                        	.eos
   129                        	.stag	_fx_console_ctl,448,18
   130                        	.member	maxCols,0,5,8,16
   131                        	.member	maxRows,16,5,8,16
   132                        	.member	curX,32,5,8,16
   133                        	.member	curY,48,5,8,16
   134                        	.member	fgColor,64,5,8,16
   135                        	.member	bgColor,80,5,8,16
   136                        	.member	mode,96,14,8,8
   137                        	.member	kbBuffer,104,101,8,0,16
   138                        	.member	screenBuffer,360,142,8,32
   139                        	.member	desktopMode,392,14,8,8
   140                        	.member	lastMouseButton,400,5,8,16
   141                        	.member	lastMouseX,416,5,8,16
   142                        	.member	lastMouseY,432,5,8,16
   143                        	.eos
   144                        	.stag	_fx_desktop_ctl,392,19
   145                        	.member	desktopMode,0,14,8,8
   146                        	.member	cursorCtl,8,5,8,16
   147                        	.member	cursorState,24,5,8,16
   148                        	.member	backgroundColor,40,5,8,16
   149                        	.member	foregroundColor,56,5,8,16
   150                        	.member	menuMode,72,5,8,16
   151                        	.member	lastMouseButton,88,5,8,16
   152                        	.member	lastMouseX,104,5,8,16
   153                        	.member	lastMouseY,120,5,8,16
   154                        	.member	currentDiskName,136,142,8,32
   155                        	.member	diskNodes,168,129,8,32
   156                        	.member	titleNodes,200,129,8,32
   157                        	.member	menuNodes,232,129,8,32
  Thu Dec  3 2020 22:25                                                Page 4


   158                        	.member	iconNodes,264,129,8,32
   159                        	.member	windowNodes,296,129,8,32
   160                        	.member	fontNodes,328,129,8,32
   161                        	.member	wndProc,360,138,8,32,6
   162                        	.eos
   163                        	.stag	_fx_process,800,20
   164                        	.member	cbSize,0,5,8,16
   165                        	.member	procId,16,18,8,32
   166                        	.member	parentId,48,18,8,32
   167                        	.member	ctx,80,129,8,32
   168                        	.member	userId,112,16,8,16
   169                        	.member	status,128,16,8,16
   170                        	.member	foregroundActive,144,14,8,8
   171                        	.member	tls,152,1121,8,32,8
   172                        	.member	commandLine,408,142,8,32
   173                        	.member	semaphores,440,138,8,32,6
   174                        	.member	fileHandles,472,138,8,32,6
   175                        	.member	pathList,504,138,8,32,6
   176                        	.member	resources,536,138,8,32,6
   177                        	.member	timerAware,568,14,8,8
   178                        	.member	timerTicks,576,112,8,0,2
   179                        	.member	timerTickCount,608,112,8,0,2
   180                        	.member	kernelError,640,10,8,32,8
   181                        	.member	consoleCtl,672,138,8,32,18
   182                        	.member	desktopCtl,704,138,8,32,19
   183                        	.member	execProc,736,641,8,32
   184                        	.member	startupArgs,768,129,8,32
   185                        	.eos
   186                        	.stag	_fxProcessMessage,112,21
   187                        	.member	src,0,18,8,32
   188                        	.member	dest,32,18,8,32
   189                        	.member	type,64,16,8,16
   190                        	.member	processInfo,80,138,8,32,20
   191                        	.eos
   192                        	.stag	_fx_property,384,22
   193                        	.member	name,0,110,8,0,16
   194                        	.member	value,128,110,8,0,32
   195                        	.eos
   196                        	.utag	_24bitPointer,32,23
   197                        	.member	address,0,142,11,32
   198                        	.member	bytes,0,110,11,0,4
   199                        	.eos
   200                        	.stag	_PointStruct,32,24
   201                        	.member	x,0,5,8,16
   202                        	.member	y,16,5,8,16
   203                        	.eos
   204                        	.stag	_RectStruct,64,25
   205                        	.member	x,0,5,8,16
   206                        	.member	y,16,5,8,16
   207                        	.member	width,32,5,8,16
   208                        	.member	height,48,5,8,16
   209                        	.eos
   210                        	.stag	_k_WindowClass,256,26
   211                        	.member	cbSize,0,16,8,16
   212                        	.member	style,16,16,8,16
   213                        	.member	pWndProc,32,654,8,32
   214                        	.member	hInstance,64,129,8,32
   215                        	.member	hIcon,96,129,8,32
  Thu Dec  3 2020 22:25                                                Page 5


   216                        	.member	hCursor,128,129,8,32
   217                        	.member	hbrBackground,160,129,8,32
   218                        	.member	lpszMenuName,192,142,8,32
   219                        	.member	lpszClassName,224,142,8,32
   220                        	.eos
   221                        	.stag	_ClickableRect,88,27
   222                        	.member	area,0,10,8,64,25
   223                        	.member	z,64,5,8,16
   224                        	.member	enabled,80,14,8,8
   225                        	.eos
   226                        	.stag	_NCClickableRect,88,28
   227                        	.member	area,0,10,8,64,25
   228                        	.member	msgType,64,16,8,16
   229                        	.member	enabled,80,14,8,8
   230                        	.eos
   231                        	.stag	_DragData,136,29
   232                        	.member	area,0,10,8,64,25
   233                        	.member	xoffset,64,5,8,16
   234                        	.member	yoffset,80,5,8,16
   235                        	.member	msgType,96,16,8,16
   236                        	.member	isDrag,112,14,8,8
   237                        	.member	canDrag,120,14,8,8
   238                        	.member	canDrop,128,14,8,8
   239                        	.eos
   240                        	.stag	_k_WindowStruct,2808,30
   241                        	.member	cbSize,0,16,8,16
   242                        	.member	style,16,18,8,32
   243                        	.member	win_id,48,5,8,16
   244                        	.member	win_x,64,5,8,16
   245                        	.member	win_y,80,5,8,16
   246                        	.member	win_width,96,5,8,16
   247                        	.member	win_height,112,5,8,16
   248                        	.member	wndRect,128,10,8,64,25
   249                        	.member	clientRect,192,10,8,64,25
   250                        	.member	nonclientGadgets,256,106,8,0,28,16
   251                        	.member	clickable,1664,129,8,32
   252                        	.member	win_title,1696,110,8,0,32
   253                        	.member	Reserved0,1952,16,8,16
   254                        	.member	win_class,1968,110,8,0,16
   255                        	.member	win_class_name,2096,110,8,0,32
   256                        	.member	nBitmapLayer,2352,16,8,16
   257                        	.member	procid,2368,18,8,32
   258                        	.member	pWndClass,2400,138,8,32,26
   259                        	.member	pParentWindow,2432,129,8,32
   260                        	.member	hMenu,2464,129,8,32
   261                        	.member	pChildWindows,2496,138,8,32,6
   262                        	.member	pChildHitList,2528,138,8,32,6
   263                        	.member	isVisible,2560,14,8,8
   264                        	.member	windowData,2568,129,8,32
   265                        	.member	clientData,2600,1121,8,32,6
   266                        	.member	isClosed,2792,14,8,8
   267                        	.member	isClosing,2800,14,8,8
   268                        	.eos
   269                        	.stag	_k_WindowStructEx,2704,31
   270                        	.member	cbSize,0,16,8,16
   271                        	.member	style,16,18,8,32
   272                        	.member	win_id,48,5,8,16
   273                        	.member	win_x,64,5,8,16
  Thu Dec  3 2020 22:25                                                Page 6


   274                        	.member	win_y,80,5,8,16
   275                        	.member	win_width,96,5,8,16
   276                        	.member	win_height,112,5,8,16
   277                        	.member	wndRect,128,10,8,64,25
   278                        	.member	clientRect,192,10,8,64,25
   279                        	.member	nonclientGadgets,256,106,8,0,28,16
   280                        	.member	clickable,1664,129,8,32
   281                        	.member	win_title,1696,110,8,0,32
   282                        	.member	Reserved0,1952,16,8,16
   283                        	.member	win_class,1968,110,8,0,16
   284                        	.member	nBitmapLayer,2096,16,8,16
   285                        	.member	procid,2112,18,8,32
   286                        	.member	pWndClass,2144,138,8,32,26
   287                        	.member	pParentWindow,2176,129,8,32
   288                        	.member	hMenu,2208,129,8,32
   289                        	.member	pChildWindows,2240,138,8,32,6
   290                        	.member	pChildHitList,2272,138,8,32,6
   291                        	.member	isVisible,2304,14,8,8
   292                        	.member	windowData,2312,129,8,32
   293                        	.member	clientData,2344,1121,8,32,4
   294                        	.member	isClosed,2472,14,8,8
   295                        	.member	hWnd,2480,129,8,32
   296                        	.member	localRect,2512,10,8,64,25
   297                        	.member	globalRect,2576,10,8,64,25
   298                        	.member	clientOffsetRect,2640,10,8,64,25
   299                        	.eos
   300                        	.stag	_FontMetric,32,32
   301                        	.member	width,0,5,8,16
   302                        	.member	height,16,5,8,16
   303                        	.eos
   304                        	.stag	_ctl_Textbox,112,33
   305                        	.member	win_id,0,5,8,16
   306                        	.member	win_x,16,5,8,16
   307                        	.member	win_y,32,5,8,16
   308                        	.member	win_width,48,5,8,16
   309                        	.member	win_height,64,5,8,16
   310                        	.member	content,80,1166,8,32
   311                        	.eos
   312                        	.stag	_MenuStruct,248,34
   313                        	.member	cx,0,5,8,16
   314                        	.member	cy,16,5,8,16
   315                        	.member	width,32,5,8,16
   316                        	.member	height,48,5,8,16
   317                        	.member	fcolor,64,14,8,8
   318                        	.member	bcolor,72,14,8,8
   319                        	.member	chromeLeft,80,14,8,8
   320                        	.member	chromeRight1,88,14,8,8
   321                        	.member	chromeRight2,96,14,8,8
   322                        	.member	itemId,104,16,8,16
   323                        	.member	pCaption,120,142,8,32
   324                        	.member	subMenus,152,138,8,32,6
   325                        	.member	pBackground,184,129,8,32
   326                        	.member	hWndOwner,216,129,8,32
   327                        	.eos
   328                        	.stag	fake35_,112,35
   329                        	.member	menuId,0,16,8,16
   330                        	.member	caption,16,142,8,32
   331                        	.member	rect,48,10,8,64,25
  Thu Dec  3 2020 22:25                                                Page 7


   332                        	.eos
   333                        	.stag	fake36_,3568,36
   334                        	.member	pParent,0,138,8,32,30
   335                        	.member	rect,32,10,8,64,25
   336                        	.member	captions,96,1134,8,32,24
   337                        	.member	chrome,864,110,8,0,24
   338                        	.member	ids,1056,112,8,0,24
   339                        	.member	clickable,1440,106,8,0,27,24
   340                        	.member	selected,3552,16,8,16
   341                        	.eos
   342                        	.stag	_fx_button_t,80,37
   343                        	.member	pCaption,0,142,8,32
   344                        	.member	data,32,129,8,32
   345                        	.member	captionPixelWidth,64,16,8,16
   346                        	.eos
   347                        	.stag	_fx_scrollbar_t,192,38
   348                        	.member	min,0,16,8,16
   349                        	.member	max,16,16,8,16
   350                        	.member	increment,32,16,8,16
   351                        	.member	stopsize,48,16,8,16
   352                        	.member	location,64,5,8,16
   353                        	.member	state,80,5,8,16
   354                        	.member	rectThumb,96,10,8,64,25
   355                        	.member	data,160,129,8,32
   356                        	.eos
   357                        	.stag	_fx_listbox_t,240,39
   358                        	.member	pos,0,5,8,16
   359                        	.member	selected,16,16,8,16
   360                        	.member	offsetX,32,5,8,16
   361                        	.member	offsetY,48,5,8,16
   362                        	.member	inc,64,5,8,16
   363                        	.member	direction,80,5,8,16
   364                        	.member	top,96,5,8,16
   365                        	.member	bottom,112,5,8,16
   366                        	.member	indexTop,128,5,8,16
   367                        	.member	indexBottom,144,5,8,16
   368                        	.member	maxItems,160,16,8,16
   369                        	.member	fontSet,176,142,8,32
   370                        	.member	data,208,129,8,32
   371                        	.eos
   372                        	.stag	_fx_textbox_t,144,40
   373                        	.member	pos,0,5,8,16
   374                        	.member	selected,16,16,8,16
   375                        	.member	offsetX,32,5,8,16
   376                        	.member	offsetY,48,5,8,16
   377                        	.member	isShifted,64,14,8,8
   378                        	.member	cursorState,72,14,8,8
   379                        	.member	fontSet,80,142,8,32
   380                        	.member	data,112,129,8,32
   381                        	.eos
   382                        	.stag	_fx_menuAnchor_t,144,41
   383                        	.member	pCaption,0,142,8,32
   384                        	.member	renderLayoutX,32,16,8,16
   385                        	.member	renderLayoutY,48,16,8,16
   386                        	.member	captionPixelWidth,64,16,8,16
   387                        	.member	data,80,129,8,32
   388                        	.member	droppedWindow,112,138,8,32,30
   389                        	.eos
  Thu Dec  3 2020 22:25                                                Page 8


   390                        	.stag	_SubMenuStruct,64,42
   391                        	.member	caption,0,142,8,32
   392                        	.member	action,32,641,8,32
   393                        	.eos
   394                        	.stag	_SubMenuListStruct,40,43
   395                        	.member	cMenus,0,14,8,8
   396                        	.member	psubmenus,8,9354,8,32,42
   397                        	.eos
   398                        	.stag	_fx_ComBuffer,2080,44
   399                        	.member	cbSize,0,16,8,16
   400                        	.member	cbBuffer,16,16,8,16
   401                        	.member	buffer,32,110,8,0,256
   402                        	.eos
   403                        	.line	708
   404                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   405                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   406                        	.line	89
   407                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   408                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",0
   409                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   410                        	.line	708
   411                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",5
   412                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   413                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   414                        	.line	708
   415                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   416                        	.line	72
   417                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",6
   418                        	.line	1325
   419                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",13
   420                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   421                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   422                        	.line	25
   423                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   424                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   425                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   426                        	.line	708
   427                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",5
   428                        	.line	61
   429                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
  Thu Dec  3 2020 22:25                                                Page 9


   430                        	.stag	_fx_zero_page,448,45
   431                        	.member	fxos_mouse_byte_0,0,14,8,8
   432                        	.member	fxos_mouse_byte_1,8,14,8,8
   433                        	.member	fxos_mouse_byte_2,16,14,8,8
   434                        	.member	fxos_mouse_byte_t,24,14,8,8
   435                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   436                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   437                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   438                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   439                        	.member	fxos_key_byte_0,64,14,8,8
   440                        	.member	fxos_key_byte_1,72,14,8,8
   441                        	.member	fxos_key_byte_2,80,14,8,8
   442                        	.member	fxos_mouse_ctl,88,14,8,8
   443                        	.member	fxos_mouse_index,96,14,8,8
   444                        	.member	fxos_mouse_status,104,14,8,8
   445                        	.member	VersionMajor,112,16,8,16
   446                        	.member	VersionMinor,128,16,8,16
   447                        	.member	VersionRelease,144,16,8,16
   448                        	.member	topMemory,160,18,8,32
   449                        	.member	bottomMemory,192,18,8,32
   450                        	.member	availableMemory,224,18,8,32
   451                        	.member	availableMemoryK,256,18,8,32
   452                        	.member	availableHeapMemory,288,18,8,32
   453                        	.member	availableHeapMemoryK,320,18,8,32
   454                        	.member	kernelFunctionCallId,352,16,8,16
   455                        	.member	kernelFunctionCallBank,368,14,8,8
   456                        	.member	kernelFunctionCallReserved,376,14,8,8
   457                        	.member	kernelFunctionCallParameter,384,129,8,32
   458                        	.member	kernelFunctionCallReturn,416,129,8,32
   459                        	.eos
   460                        	.stag	_fx_environment,96,46
   461                        	.member	variables,0,142,8,32
   462                        	.member	reserved1,32,5,8,16
   463                        	.member	reserved2,48,5,8,16
   464                        	.member	reserved3,64,5,8,16
   465                        	.member	reserved4,80,5,8,16
   466                        	.eos
   467                        	.stag	_debug_byte_bits,8,47
   468                        	.member	bit7,0,14,17,1
   469                        	.member	bit6,1,14,17,1
   470                        	.member	bit5,2,14,17,1
   471                        	.member	bit4,3,14,17,1
   472                        	.member	bit3,4,14,17,1
   473                        	.member	bit2,5,14,17,1
   474                        	.member	bit1,6,14,17,1
   475                        	.member	bit0,7,14,17,1
   476                        	.eos
   477                        	.stag	_fx_device_driver,1416,48
   478                        	.member	name,0,110,8,0,64
   479                        	.member	version,512,110,8,0,64
   480                        	.member	hmajor,1024,110,8,0,16
   481                        	.member	hminor,1152,110,8,0,16
   482                        	.member	type,1280,14,8,8
   483                        	.member	f_driver_load,1288,129,8,32
   484                        	.member	f_driver_read,1320,129,8,32
   485                        	.member	f_driver_write,1352,129,8,32
   486                        	.member	f_driver_unload,1384,129,8,32
   487                        	.eos
  Thu Dec  3 2020 22:25                                                Page 10


   488                        	.stag	_fx_block_device_driver,1448,49
   489                        	.member	name,0,110,8,0,64
   490                        	.member	version,512,110,8,0,64
   491                        	.member	hmajor,1024,110,8,0,16
   492                        	.member	hminor,1152,110,8,0,16
   493                        	.member	type,1280,14,8,8
   494                        	.member	f_driver_load,1288,129,8,32
   495                        	.member	f_driver_read,1320,129,8,32
   496                        	.member	f_driver_write,1352,129,8,32
   497                        	.member	f_driver_unload,1384,129,8,32
   498                        	.member	f_driver_command,1416,129,8,32
   499                        	.eos
   500                        	.line	270
   501                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",19
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   503                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   504                        	.line	134
   505                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   506                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   507                        	.line	205
   508                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   509                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   510                        	.line	708
   511                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",0
   513                        	.line	1325
   514                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",10
   515                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   516                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   517                        	.line	205
   518                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   519                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   520                        	.line	134
   521                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   522                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   523                        	.line	708
   524                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   525                        	.stag	_fx_string,64,50
   526                        	.member	size,0,16,8,16
   527                        	.member	pos,16,5,8,16
   528                        	.member	buffer,32,142,8,32
  Thu Dec  3 2020 22:25                                                Page 11


   529                        	.eos
   530                        	.line	71
   531                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",15
   532                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   533                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   534                        	.line	25
   535                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   536                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   537                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   538                        	.line	708
   539                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   540                        	.line	52
   541                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   542                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   543                        	.line	61
   544                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   545                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   546                        	.line	171
   547                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   548                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   549                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   550                        	.line	708
   551                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   552                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   553                        	.line	25
   554                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   555                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   556                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   557                        	.line	25
   558                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   559                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   560                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   561                        	.line	32
   562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   563                        	.stag	UMM_HEAP_INFO_t,256,51
  Thu Dec  3 2020 22:25                                                Page 12


   564                        	.member	totalEntries,0,18,8,32
   565                        	.member	usedEntries,32,18,8,32
   566                        	.member	freeEntries,64,18,8,32
   567                        	.member	totalBlocks,96,18,8,32
   568                        	.member	usedBlocks,128,18,8,32
   569                        	.member	freeBlocks,160,18,8,32
   570                        	.member	maxFreeContiguousBlocks,192,18,8,32
   571                        	.member	blockSize,224,18,8,32
   572                        	.eos
   573                        	.line	199
   574                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   575                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   576                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   577                        	.line	708
   578                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   579                        	.line	24
   580                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   581                        	.stag	_fx_memory_map,2072,52
   582                        	.member	availableMemory,0,18,8,32
   583                        	.member	valid_segments,32,110,8,0,255
   584                        	.eos
   585                        	.line	39
   586                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   587                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   588                        	.line	743
   589                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   590                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   591                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   592                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   593                        	.line	708
   594                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   595                        	.line	64
   596                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",4
   597                        	.stag	_click_detected,64,53
   598                        	.member	window,0,138,8,32,30
   599                        	.member	handler,32,641,8,32
   600                        	.eos
   601                        	.stag	_current_palette_map,400,54
   602                        	.member	CUR_DESKTOP,0,5,8,16
   603                        	.member	CUR_BACKGROUND,16,5,8,16
   604                        	.member	CUR_FONT,32,5,8,16
   605                        	.member	CUR_SELECTED_FONT,48,5,8,16
   606                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   607                        	.member	CUR_WINDOWFRAME,80,5,8,16
   608                        	.member	CUR_WINDOWBORDER,96,5,8,16
  Thu Dec  3 2020 22:25                                                Page 13


   609                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   610                        	.member	CUR_MENU,128,5,8,16
   611                        	.member	CUR_GADGET,144,5,8,16
   612                        	.member	CUR_COLOR,160,101,8,0,15
   613                        	.eos
   614                        	.line	264
   615                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",9
   616                        	.stag	_childMessage_t,64,55
   617                        	.member	msgType,0,16,8,16
   618                        	.member	msgData,16,129,8,32
   619                        	.member	dataSize,48,16,8,16
   620                        	.eos
   621                        	.line	362
   622                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   623                        	.stag	_fx_main_loopvars,16,56
   624                        	.member	dummy,0,5,8,16
   625                        	.eos
   626                        	.stag	_fxMouseMessageData,64,57
   627                        	.member	button1,0,14,8,8
   628                        	.member	button2,8,14,8,8
   629                        	.member	button3,16,14,8,8
   630                        	.member	button4,24,14,8,8
   631                        	.member	x,32,16,8,16
   632                        	.member	y,48,16,8,16
   633                        	.eos
   634                        	.stag	_fx_eventProcess,64,58
   635                        	.member	process,0,138,8,32,20
   636                        	.member	eventProc,32,641,8,32
   637                        	.eos
   638                        	.stag	_mouse_msg_state,184,59
   639                        	.member	lastEvent,0,18,8,32
   640                        	.member	buttonLeftDown,32,14,8,8
   641                        	.member	lastLeftDown,40,18,8,32
   642                        	.member	buttonRightDown,72,14,8,8
   643                        	.member	lastRightDown,80,18,8,32
   644                        	.member	buttonMiddleDown,112,14,8,8
   645                        	.member	lastMiddleDown,120,18,8,32
   646                        	.member	lastX,152,16,8,16
   647                        	.member	lastY,168,16,8,16
   648                        	.eos
   649                        	.line	743
   650                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",16
   651                        	.stag	_fx_spinner_ctx,48,60
   652                        	.member	index,0,5,8,16
   653                        	.member	spinner,16,142,8,32
   654                        	.eos
   655                        	.stag	_fx_console_ctx,1144,61
   656                        	.member	lineBufferIndex,0,5,8,16
   657                        	.member	lineBuffer,16,110,8,0,128
   658                        	.member	isShifted,1040,14,8,8
   659                        	.member	userData,1048,129,8,32
   660                        	.member	screenBuffer,1080,129,8,32
   661                        	.member	Reserved1,1112,129,8,32
   662                        	.eos
   663                        	.stag	_token,64,62
  Thu Dec  3 2020 22:25                                                Page 14


   664                        	.member	type,0,5,8,16
   665                        	.member	depth,16,16,8,16
   666                        	.member	text,32,142,8,32
   667                        	.eos
   668                        	.stag	_command_args,64,63
   669                        	.member	proc,0,656,8,32
   670                        	.member	tokens,32,138,8,32,5
   671                        	.eos
   672                        	.line	171
   673                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",20
   674                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   675                        	.line	71
   676                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",21
   677                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   678                        	.line	61
   679                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   680                        	.line	25
   681                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.c",1
   682                        ;#include "fxdos.h"
   683                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",0
   684                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   685                        	.line	708
   686                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",5
   687                        	.stag	_fx_sd_direntry,256,64
   688                        	.member	filename,0,110,8,0,11
   689                        	.member	type,88,14,8,8
   690                        	.member	attrs,96,110,8,0,20
   691                        	.eos
   692                        	.stag	_fx_info,416,65
   693                        	.member	stgName,0,110,8,0,32
   694                        	.member	Reserved1,256,14,8,8
   695                        	.member	stgType,264,16,8,16
   696                        	.member	Reserved2,280,14,8,8
   697                        	.member	stgReserved,288,110,8,0,16
   698                        	.eos
   699                        	.stag	_fx_fileinfo,136,66
   700                        	.member	type,0,14,8,8
   701                        	.member	pFilename,8,142,8,32
   702                        	.member	lSize,40,18,8,32
   703                        	.member	lcreateDate,72,18,8,32
   704                        	.member	lchangeDate,104,18,8,32
   705                        	.eos
   706                        	.stag	_FX_FAT_DIR_INFO,256,67
   707                        	.member	DIR_Name,0,110,8,0,11
   708                        	.member	DIR_Attr,88,14,8,8
   709                        	.member	DIR_NTRes,96,14,8,8
   710                        	.member	DIR_CrtTimeTenth,104,14,8,8
   711                        	.member	DIR_CrtTime,112,16,8,16
   712                        	.member	DIR_CrtDate,128,16,8,16
  Thu Dec  3 2020 22:25                                                Page 15


   713                        	.member	DIR_LstAccDate,144,16,8,16
   714                        	.member	DIR_FstClusHI,160,16,8,16
   715                        	.member	DIR_WrtTime,176,16,8,16
   716                        	.member	DIR_WrtDate,192,16,8,16
   717                        	.member	DIR_FstClusLO,208,16,8,16
   718                        	.member	DIR_FileSize,224,18,8,32
   719                        	.eos
   720                        	.stag	fat_extBS_32,416,68
   721                        	.member	table_size_32,0,18,8,32
   722                        	.member	extended_flags,32,16,8,16
   723                        	.member	fat_version,48,16,8,16
   724                        	.member	root_cluster,64,18,8,32
   725                        	.member	fat_info,96,16,8,16
   726                        	.member	backup_BS_sector,112,16,8,16
   727                        	.member	reserved_0,128,110,8,0,12
   728                        	.member	drive_number,224,14,8,8
   729                        	.member	reserved_1,232,14,8,8
   730                        	.member	boot_signature,240,14,8,8
   731                        	.member	volume_id,248,16,8,16
   732                        	.member	volume_label,264,110,8,0,11
   733                        	.member	fat_type_label,352,110,8,0,8
   734                        	.eos
   735                        	.stag	fat_extBS_16,192,69
   736                        	.member	bios_drive_num,0,14,8,8
   737                        	.member	reserved1,8,14,8,8
   738                        	.member	boot_signature,16,14,8,8
   739                        	.member	volume_id,24,16,8,16
   740                        	.member	volume_label,40,110,8,0,11
   741                        	.member	fat_type_label,128,110,8,0,8
   742                        	.eos
   743                        	.stag	fat_BS,688,70
   744                        	.member	bootjmp,0,110,8,0,3
   745                        	.member	oem_name,24,110,8,0,8
   746                        	.member	bytes_per_sector,88,16,8,16
   747                        	.member	sectors_per_cluster,104,14,8,8
   748                        	.member	reserved_sector_count,112,16,8,16
   749                        	.member	table_count,128,14,8,8
   750                        	.member	root_entry_count,136,16,8,16
   751                        	.member	total_sectors_16,152,16,8,16
   752                        	.member	media_type,168,14,8,8
   753                        	.member	table_size_16,176,16,8,16
   754                        	.member	sectors_per_track,192,16,8,16
   755                        	.member	head_side_count,208,16,8,16
   756                        	.member	hidden_sector_count,224,16,8,16
   757                        	.member	total_sectors_32,240,16,8,16
   758                        	.member	extended_section,256,110,8,0,54
   759                        	.eos
   760                        	.stag	__FATBootSector,928,71
   761                        	.member	bootjmp,0,110,8,0,3
   762                        	.member	oem_name,24,110,8,0,8
   763                        	.member	bytes_per_sector,88,16,8,16
   764                        	.member	sectors_per_cluster,104,14,8,8
   765                        	.member	reserved_sector_count,112,16,8,16
   766                        	.member	fat_table_count,128,14,8,8
   767                        	.member	root_entry_count,136,16,8,16
   768                        	.member	total_sectors_16,152,16,8,16
   769                        	.member	media_type,168,14,8,8
   770                        	.member	sectors_per_fat,176,16,8,16
  Thu Dec  3 2020 22:25                                                Page 16


   771                        	.member	sectors_per_track,192,16,8,16
   772                        	.member	head_side_count,208,16,8,16
   773                        	.member	hidden_sector_count,224,18,8,32
   774                        	.member	total_sectors_32,256,18,8,32
   775                        	.member	drive_number,288,14,8,8
   776                        	.member	reserved1,296,14,8,8
   777                        	.member	boot_sig,304,14,8,8
   778                        	.member	vol_id,312,18,8,32
   779                        	.member	vol_name,344,110,8,0,11
   780                        	.member	file_system_type,432,110,8,0,8
   781                        	.member	extended_section,496,110,8,0,54
   782                        	.eos
   783                        	.stag	__PARTITIONTABLE,128,72
   784                        	.member	first_byte,0,14,8,8
   785                        	.member	start_chs,8,110,8,0,3
   786                        	.member	partition_type,32,14,8,8
   787                        	.member	end_chs,40,110,8,0,3
   788                        	.member	start_sector,64,18,8,32
   789                        	.member	length_sectors,96,18,8,32
   790                        	.eos
   791                        	.stag	fake73_,4096,73
   792                        	.member	jmp,0,110,8,0,3
   793                        	.member	oem,24,110,8,0,8
   794                        	.member	sector_size,88,15,8,16
   795                        	.member	sectors_per_cluster,104,14,8,8
   796                        	.member	reserved_sectors,112,15,8,16
   797                        	.member	number_of_fats,128,14,8,8
   798                        	.member	root_dir_entries,136,15,8,16
   799                        	.member	total_sectors_short,152,15,8,16
   800                        	.member	media_descriptor,168,14,8,8
   801                        	.member	fat_size_sectors,176,15,8,16
   802                        	.member	sectors_per_track,192,15,8,16
   803                        	.member	number_of_heads,208,15,8,16
   804                        	.member	hidden_sectors,224,18,8,32
   805                        	.member	total_sectors_long,256,18,8,32
   806                        	.member	drive_number,288,14,8,8
   807                        	.member	current_head,296,14,8,8
   808                        	.member	boot_signature,304,14,8,8
   809                        	.member	volume_id,312,18,8,32
   810                        	.member	volume_label,344,110,8,0,11
   811                        	.member	fs_type,432,110,8,0,8
   812                        	.member	boot_code,496,110,8,0,448
   813                        	.member	boot_sector_signature,4080,15,8,16
   814                        	.eos
   815                        	.stag	__FAT16ENTRY,256,74
   816                        	.member	filename,0,110,8,0,8
   817                        	.member	ext,64,110,8,0,3
   818                        	.member	attributes,88,14,8,8
   819                        	.member	reserved,96,110,8,0,10
   820                        	.member	modify_time,176,16,8,16
   821                        	.member	modify_date,192,16,8,16
   822                        	.member	starting_cluster,208,16,8,16
   823                        	.member	file_size,224,18,8,32
   824                        	.eos
   825                        	.stag	__FAT16ENTRYLONG,288,75
   826                        	.member	filename,0,110,8,0,8
   827                        	.member	ext,64,110,8,0,3
   828                        	.member	attributes,88,14,8,8
  Thu Dec  3 2020 22:25                                                Page 17


   829                        	.member	reserved,96,110,8,0,10
   830                        	.member	modify_time,176,16,8,16
   831                        	.member	modify_date,192,16,8,16
   832                        	.member	starting_cluster,208,16,8,16
   833                        	.member	file_size,224,18,8,32
   834                        	.member	plongfileName,256,142,8,32
   835                        	.eos
   836                        	.stag	_LongFileName,256,76
   837                        	.member	sequenceNo,0,14,8,8
   838                        	.member	fileName_Part1,8,110,8,0,10
   839                        	.member	fileattribute,88,14,8,8
   840                        	.member	type,96,14,8,8
   841                        	.member	checksum,104,14,8,8
   842                        	.member	fileName_Part2,112,110,8,0,12
   843                        	.member	fstclusLO,208,5,8,16
   844                        	.member	fileName_Part3,224,110,8,0,4
   845                        	.eos
   846                        	.stag	_IDSECTOR,2048,77
   847                        	.member	wGenConfig,0,16,8,16
   848                        	.member	wNumCyls,16,16,8,16
   849                        	.member	wReserved,32,16,8,16
   850                        	.member	wNumHeads,48,16,8,16
   851                        	.member	wBytesPerTrack,64,16,8,16
   852                        	.member	wBytesPerSector,80,16,8,16
   853                        	.member	wSectorsPerTrack,96,16,8,16
   854                        	.member	wVendorUnique,112,112,8,0,3
   855                        	.member	sSerialNumber,160,110,8,0,20
   856                        	.member	wBufferType,320,16,8,16
   857                        	.member	wBufferSize,336,16,8,16
   858                        	.member	wECCSize,352,16,8,16
   859                        	.member	sFirmwareRev,368,110,8,0,8
   860                        	.member	sModelNumber,432,110,8,0,40
   861                        	.member	wMoreVendorUnique,752,16,8,16
   862                        	.member	wDoubleWordIO,768,16,8,16
   863                        	.member	wCapabilities,784,16,8,16
   864                        	.member	wReserved1,800,16,8,16
   865                        	.member	wPIOTiming,816,16,8,16
   866                        	.member	wDMATiming,832,16,8,16
   867                        	.member	wBS,848,16,8,16
   868                        	.member	wNumCurrentCyls,864,16,8,16
   869                        	.member	wNumCurrentHeads,880,16,8,16
   870                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
   871                        	.member	ulCurrentSectorCapacity,912,18,8,32
   872                        	.member	wMultSectorStuff,944,16,8,16
   873                        	.member	ulTotalAddressableSectors,960,18,8,32
   874                        	.member	wSingleWordDMA,992,16,8,16
   875                        	.member	wMultiWordDMA,1008,16,8,16
   876                        	.member	bReserved,1024,110,8,0,128
   877                        	.eos
   878                        	.stag	fake78_,16,78
   879                        	.member	Reserved1,0,16,17,1
   880                        	.member	Retired3,1,16,17,1
   881                        	.member	ResponseIncomplete,2,16,17,1
   882                        	.member	Retired2,3,16,17,3
   883                        	.member	FixedDevice,6,16,17,1
   884                        	.member	RemovableMedia,7,16,17,1
   885                        	.member	Retired1,8,16,17,7
   886                        	.member	DeviceType,15,16,17,1
  Thu Dec  3 2020 22:25                                                Page 18


   887                        	.eos
   888                        	.stag	fake79_,16,79
   889                        	.member	FeatureSupported,0,16,17,1
   890                        	.member	Reserved,1,16,17,15
   891                        	.eos
   892                        	.stag	fake80_,32,80
   893                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
   894                        	.member	ReservedByte49,2,14,17,6
   895                        	.member	DmaSupported,8,14,17,1
   896                        	.member	LbaSupported,9,14,17,1
   897                        	.member	IordyDisable,10,14,17,1
   898                        	.member	IordySupported,11,14,17,1
   899                        	.member	Reserved1,12,14,17,1
   900                        	.member	StandybyTimerSupport,13,14,17,1
   901                        	.member	Reserved2,14,14,17,2
   902                        	.member	ReservedWord50,16,16,8,16
   903                        	.eos
   904                        	.stag	fake81_,16,81
   905                        	.member	ZonedCapabilities,0,16,17,2
   906                        	.member	NonVolatileWriteCache,2,16,17,1
   907                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
   908                        	.member	DeviceEncryptsAllUserData,4,16,17,1
   909                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
   910                        	.member	Optional28BitCommandsSupported,6,16,17,1
   911                        	.member	IEEE1667,7,16,17,1
   912                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
   913                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
   914                        	.member	WriteBufferDmaSupported,10,16,17,1
   915                        	.member	ReadBufferDmaSupported,11,16,17,1
   916                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
   917                        	.member	LPSAERCSupported,13,16,17,1
   918                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
   919                        	.member	CFastSpecSupported,15,16,17,1
   920                        	.eos
   921                        	.stag	fake82_,32,82
   922                        	.member	Reserved0,0,16,17,1
   923                        	.member	SataGen1,1,16,17,1
   924                        	.member	SataGen2,2,16,17,1
   925                        	.member	SataGen3,3,16,17,1
   926                        	.member	Reserved1,4,16,17,4
   927                        	.member	NCQ,8,16,17,1
   928                        	.member	HIPM,9,16,17,1
   929                        	.member	PhyEvents,10,16,17,1
   930                        	.member	NcqUnload,11,16,17,1
   931                        	.member	NcqPriority,12,16,17,1
   932                        	.member	HostAutoPS,13,16,17,1
   933                        	.member	DeviceAutoPS,14,16,17,1
   934                        	.member	ReadLogDMA,15,16,17,1
   935                        	.member	Reserved2,16,16,17,1
   936                        	.member	CurrentSpeed,17,16,17,3
   937                        	.member	NcqStreaming,20,16,17,1
   938                        	.member	NcqQueueMgmt,21,16,17,1
   939                        	.member	NcqReceiveSend,22,16,17,1
  Thu Dec  3 2020 22:25                                                Page 19


   940                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
   941                        	.member	Reserved3,24,16,17,8
   942                        	.eos
   943                        	.stag	fake83_,16,83
   944                        	.member	Reserved0,0,16,17,1
   945                        	.member	NonZeroOffsets,1,16,17,1
   946                        	.member	DmaSetupAutoActivate,2,16,17,1
   947                        	.member	DIPM,3,16,17,1
   948                        	.member	InOrderData,4,16,17,1
   949                        	.member	HardwareFeatureControl,5,16,17,1
   950                        	.member	SoftwareSettingsPreservation,6,16,17,1
   951                        	.member	NCQAutosense,7,16,17,1
   952                        	.member	DEVSLP,8,16,17,1
   953                        	.member	HybridInformation,9,16,17,1
   954                        	.member	Reserved1,10,16,17,6
   955                        	.eos
   956                        	.stag	fake84_,16,84
   957                        	.member	Reserved0,0,16,17,1
   958                        	.member	NonZeroOffsets,1,16,17,1
   959                        	.member	DmaSetupAutoActivate,2,16,17,1
   960                        	.member	DIPM,3,16,17,1
   961                        	.member	InOrderData,4,16,17,1
   962                        	.member	HardwareFeatureControl,5,16,17,1
   963                        	.member	SoftwareSettingsPreservation,6,16,17,1
   964                        	.member	DeviceAutoPS,7,16,17,1
   965                        	.member	DEVSLP,8,16,17,1
   966                        	.member	HybridInformation,9,16,17,1
   967                        	.member	Reserved1,10,16,17,6
   968                        	.eos
   969                        	.stag	fake85_,48,85
   970                        	.member	SmartCommands,0,16,17,1
   971                        	.member	SecurityMode,1,16,17,1
   972                        	.member	RemovableMediaFeature,2,16,17,1
   973                        	.member	PowerManagement,3,16,17,1
   974                        	.member	Reserved1,4,16,17,1
   975                        	.member	WriteCache,5,16,17,1
   976                        	.member	LookAhead,6,16,17,1
   977                        	.member	ReleaseInterrupt,7,16,17,1
   978                        	.member	ServiceInterrupt,8,16,17,1
   979                        	.member	DeviceReset,9,16,17,1
   980                        	.member	HostProtectedArea,10,16,17,1
   981                        	.member	Obsolete1,11,16,17,1
   982                        	.member	WriteBuffer,12,16,17,1
   983                        	.member	ReadBuffer,13,16,17,1
   984                        	.member	Nop,14,16,17,1
   985                        	.member	Obsolete2,15,16,17,1
   986                        	.member	DownloadMicrocode,16,16,17,1
   987                        	.member	DmaQueued,17,16,17,1
   988                        	.member	Cfa,18,16,17,1
   989                        	.member	AdvancedPm,19,16,17,1
   990                        	.member	Msn,20,16,17,1
   991                        	.member	PowerUpInStandby,21,16,17,1
   992                        	.member	ManualPowerUp,22,16,17,1
   993                        	.member	Reserved2,23,16,17,1
   994                        	.member	SetMax,24,16,17,1
   995                        	.member	Acoustics,25,16,17,1
   996                        	.member	BigLba,26,16,17,1
   997                        	.member	DeviceConfigOverlay,27,16,17,1
  Thu Dec  3 2020 22:25                                                Page 20


   998                        	.member	FlushCache,28,16,17,1
   999                        	.member	FlushCacheExt,29,16,17,1
  1000                        	.member	WordValid83,30,16,17,2
  1001                        	.member	SmartErrorLog,32,16,17,1
  1002                        	.member	SmartSelfTest,33,16,17,1
  1003                        	.member	MediaSerialNumber,34,16,17,1
  1004                        	.member	MediaCardPassThrough,35,16,17,1
  1005                        	.member	StreamingFeature,36,16,17,1
  1006                        	.member	GpLogging,37,16,17,1
  1007                        	.member	WriteFua,38,16,17,1
  1008                        	.member	WriteQueuedFua,39,16,17,1
  1009                        	.member	WWN64Bit,40,16,17,1
  1010                        	.member	URGReadStream,41,16,17,1
  1011                        	.member	URGWriteStream,42,16,17,1
  1012                        	.member	ReservedForTechReport,43,16,17,2
  1013                        	.member	IdleWithUnloadFeature,45,16,17,1
  1014                        	.member	WordValid,46,16,17,2
  1015                        	.eos
  1016                        	.stag	fake86_,48,86
  1017                        	.member	SmartCommands,0,16,17,1
  1018                        	.member	SecurityMode,1,16,17,1
  1019                        	.member	RemovableMediaFeature,2,16,17,1
  1020                        	.member	PowerManagement,3,16,17,1
  1021                        	.member	Reserved1,4,16,17,1
  1022                        	.member	WriteCache,5,16,17,1
  1023                        	.member	LookAhead,6,16,17,1
  1024                        	.member	ReleaseInterrupt,7,16,17,1
  1025                        	.member	ServiceInterrupt,8,16,17,1
  1026                        	.member	DeviceReset,9,16,17,1
  1027                        	.member	HostProtectedArea,10,16,17,1
  1028                        	.member	Obsolete1,11,16,17,1
  1029                        	.member	WriteBuffer,12,16,17,1
  1030                        	.member	ReadBuffer,13,16,17,1
  1031                        	.member	Nop,14,16,17,1
  1032                        	.member	Obsolete2,15,16,17,1
  1033                        	.member	DownloadMicrocode,16,16,17,1
  1034                        	.member	DmaQueued,17,16,17,1
  1035                        	.member	Cfa,18,16,17,1
  1036                        	.member	AdvancedPm,19,16,17,1
  1037                        	.member	Msn,20,16,17,1
  1038                        	.member	PowerUpInStandby,21,16,17,1
  1039                        	.member	ManualPowerUp,22,16,17,1
  1040                        	.member	Reserved2,23,16,17,1
  1041                        	.member	SetMax,24,16,17,1
  1042                        	.member	Acoustics,25,16,17,1
  1043                        	.member	BigLba,26,16,17,1
  1044                        	.member	DeviceConfigOverlay,27,16,17,1
  1045                        	.member	FlushCache,28,16,17,1
  1046                        	.member	FlushCacheExt,29,16,17,1
  1047                        	.member	Resrved3,30,16,17,1
  1048                        	.member	Words119_120Valid,31,16,17,1
  1049                        	.member	SmartErrorLog,32,16,17,1
  1050                        	.member	SmartSelfTest,33,16,17,1
  1051                        	.member	MediaSerialNumber,34,16,17,1
  1052                        	.member	MediaCardPassThrough,35,16,17,1
  1053                        	.member	StreamingFeature,36,16,17,1
  1054                        	.member	GpLogging,37,16,17,1
  1055                        	.member	WriteFua,38,16,17,1
  Thu Dec  3 2020 22:25                                                Page 21


  1056                        	.member	WriteQueuedFua,39,16,17,1
  1057                        	.member	WWN64Bit,40,16,17,1
  1058                        	.member	URGReadStream,41,16,17,1
  1059                        	.member	URGWriteStream,42,16,17,1
  1060                        	.member	ReservedForTechReport,43,16,17,2
  1061                        	.member	IdleWithUnloadFeature,45,16,17,1
  1062                        	.member	Reserved4,46,16,17,2
  1063                        	.eos
  1064                        	.stag	fake87_,16,87
  1065                        	.member	TimeRequired,0,16,17,15
  1066                        	.member	ExtendedTimeReported,15,16,17,1
  1067                        	.eos
  1068                        	.stag	fake88_,16,88
  1069                        	.member	TimeRequired,0,16,17,15
  1070                        	.member	ExtendedTimeReported,15,16,17,1
  1071                        	.eos
  1072                        	.stag	fake89_,16,89
  1073                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
  1074                        	.member	Reserved0,4,16,17,8
  1075                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
  1076                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
  1077                        	.member	Reserved1,14,16,17,2
  1078                        	.eos
  1079                        	.stag	fake90_,16,90
  1080                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1081                        	.member	WriteReadVerify,1,16,17,1
  1082                        	.member	WriteUncorrectableExt,2,16,17,1
  1083                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1084                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1085                        	.member	FreefallControl,5,16,17,1
  1086                        	.member	SenseDataReporting,6,16,17,1
  1087                        	.member	ExtendedPowerConditions,7,16,17,1
  1088                        	.member	Reserved0,8,16,17,6
  1089                        	.member	WordValid,14,16,17,2
  1090                        	.eos
  1091                        	.stag	fake91_,16,91
  1092                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1093                        	.member	WriteReadVerify,1,16,17,1
  1094                        	.member	WriteUncorrectableExt,2,16,17,1
  1095                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1096                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1097                        	.member	FreefallControl,5,16,17,1
  1098                        	.member	SenseDataReporting,6,16,17,1
  1099                        	.member	ExtendedPowerConditions,7,16,17,1
  1100                        	.member	Reserved0,8,16,17,6
  1101                        	.member	Reserved1,14,16,17,2
  1102                        	.eos
  1103                        	.stag	fake92_,16,92
  1104                        	.member	SecuritySupported,0,16,17,1
  1105                        	.member	SecurityEnabled,1,16,17,1
  1106                        	.member	SecurityLocked,2,16,17,1
  1107                        	.member	SecurityFrozen,3,16,17,1
  1108                        	.member	SecurityCountExpired,4,16,17,1
  1109                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
  1110                        	.member	Reserved0,6,16,17,2
  Thu Dec  3 2020 22:25                                                Page 22


  1111                        	.member	SecurityLevel,8,16,17,1
  1112                        	.member	Reserved1,9,16,17,7
  1113                        	.eos
  1114                        	.stag	fake93_,16,93
  1115                        	.member	MaximumCurrentInMA,0,16,17,12
  1116                        	.member	CfaPowerMode1Disabled,12,16,17,1
  1117                        	.member	CfaPowerMode1Required,13,16,17,1
  1118                        	.member	Reserved0,14,16,17,1
  1119                        	.member	Word160Supported,15,16,17,1
  1120                        	.eos
  1121                        	.stag	fake94_,16,94
  1122                        	.member	SupportsTrim,0,16,17,1
  1123                        	.member	Reserved0,1,16,17,15
  1124                        	.eos
  1125                        	.stag	fake95_,16,95
  1126                        	.member	Supported,0,16,17,1
  1127                        	.member	Reserved0,1,16,17,1
  1128                        	.member	WriteSameSuported,2,16,17,1
  1129                        	.member	ErrorRecoveryControlSupported,3,16,17,1
  1130                        	.member	FeatureControlSuported,4,16,17,1
  1131                        	.member	DataTablesSuported,5,16,17,1
  1132                        	.member	Reserved1,6,16,17,6
  1133                        	.member	VendorSpecific,12,16,17,4
  1134                        	.eos
  1135                        	.stag	fake96_,16,96
  1136                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
  1137                        	.member	Word209Supported,14,16,17,1
  1138                        	.member	Reserved0,15,16,17,1
  1139                        	.eos
  1140                        	.stag	fake97_,16,97
  1141                        	.member	NVCachePowerModeEnabled,0,16,17,1
  1142                        	.member	Reserved0,1,16,17,3
  1143                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
  1144                        	.member	Reserved1,5,16,17,3
  1145                        	.member	NVCachePowerModeVersion,8,16,17,4
  1146                        	.member	NVCacheFeatureSetVersion,12,16,17,4
  1147                        	.eos
  1148                        	.stag	fake98_,16,98
  1149                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
  1150                        	.member	Reserved,8,14,8,8
  1151                        	.eos
  1152                        	.stag	fake99_,16,99
  1153                        	.member	MajorVersion,0,16,17,12
  1154                        	.member	TransportType,12,16,17,4
  1155                        	.eos
  1156                        	.stag	_IDENTIFY_DEVICE_DATA,4096,100
  1157                        	.member	GeneralConfiguration,0,10,8,16,78
  1158                        	.member	NumCylinders,16,16,8,16
  1159                        	.member	SpecificConfiguration,32,16,8,16
  1160                        	.member	NumHeads,48,16,8,16
  1161                        	.member	Retired1Bytes,64,110,8,0,4
  1162                        	.member	NumSectorsPerTrack,96,16,8,16
  1163                        	.member	VendorUnique1Bytes,112,110,8,0,6
  1164                        	.member	SerialNumber,160,110,8,0,20
  1165                        	.member	Retired2,320,112,8,0,2
  1166                        	.member	Obsolete1,352,16,8,16
  Thu Dec  3 2020 22:25                                                Page 23


  1167                        	.member	FirmwareRevision,368,110,8,0,8
  1168                        	.member	ModelNumber,432,110,8,0,40
  1169                        	.member	MaximumBlockTransfer,752,14,8,8
  1170                        	.member	VendorUnique2,760,14,8,8
  1171                        	.member	TrustedComputing,768,10,8,16,79
  1172                        	.member	Capabilities,784,10,8,32,80
  1173                        	.member	ObsoleteWords51,816,112,8,0,2
  1174                        	.member	TranslationFieldsValid,848,16,17,3
  1175                        	.member	Reserved3,851,16,17,5
  1176                        	.member	FreeFallControlSensitivity,856,16,17,8
  1177                        	.member	NumberOfCurrentCylinders,864,16,8,16
  1178                        	.member	NumberOfCurrentHeads,880,16,8,16
  1179                        	.member	CurrentSectorsPerTrack,896,16,8,16
  1180                        	.member	CurrentSectorCapacity,912,18,8,32
  1181                        	.member	CurrentMultiSectorSetting,944,14,8,8
  1182                        	.member	MultiSectorSettingValid,952,14,17,1
  1183                        	.member	ReservedByte59,953,14,17,3
  1184                        	.member	SanitizeFeatureSupported,956,14,17,1
  1185                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
  1186                        	.member	OverwriteExtCommandSupported,958,14,17,1
  1187                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
  1188                        	.member	UserAddressableSectors,960,18,8,32
  1189                        	.member	ObsoleteWord62,992,16,8,16
  1190                        	.member	MultiWordDMASupport,1008,16,17,8
  1191                        	.member	MultiWordDMAActive,1016,16,17,8
  1192                        	.member	AdvancedPIOModes,1024,16,17,8
  1193                        	.member	ReservedByte64,1032,16,17,8
  1194                        	.member	MinimumMWXferCycleTime,1040,16,8,16
  1195                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
  1196                        	.member	MinimumPIOCycleTime,1072,16,8,16
  1197                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
  1198                        	.member	AdditionalSupported,1104,10,8,16,81
  1199                        	.member	ReservedWords70,1120,112,8,0,5
  1200                        	.member	QueueDepth,1200,16,17,5
  1201                        	.member	ReservedWord75,1205,16,17,11
  1202                        	.member	SerialAtaCapabilities,1216,10,8,32,82
  1203                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    83
  1204                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,84
  1205                        	.member	MajorRevision,1280,16,8,16
  1206                        	.member	MinorRevision,1296,16,8,16
  1207                        	.member	CommandSetSupport,1312,10,8,48,85
  1208                        	.member	CommandSetActive,1360,10,8,48,86
  1209                        	.member	UltraDMASupport,1408,16,17,8
  1210                        	.member	UltraDMAActive,1416,16,17,8
  1211                        	.member	NormalSecurityEraseUnit,1424,10,8,16,87
  1212                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,8
                    8
  1213                        	.member	CurrentAPMLevel,1456,16,17,8
  1214                        	.member	ReservedWord91,1464,16,17,8
  1215                        	.member	MasterPasswordID,1472,16,8,16
  1216                        	.member	HardwareResetResult,1488,16,8,16
  1217                        	.member	CurrentAcousticValue,1504,16,17,8
  1218                        	.member	RecommendedAcousticValue,1512,16,17,8
  1219                        	.member	StreamMinRequestSize,1520,16,8,16
  1220                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  Thu Dec  3 2020 22:25                                                Page 24


  1221                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
                    6
  1222                        	.member	StreamingPerfGranularity,1568,18,8,32
  1223                        	.member	Max48BitLBA,1600,114,8,0,2
  1224                        	.member	StreamingTransferTime,1664,16,8,16
  1225                        	.member	DsmCap,1680,16,8,16
  1226                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,8
                    9
  1227                        	.member	InterSeekDelay,1712,16,8,16
  1228                        	.member	WorldWideName,1728,112,8,0,4
  1229                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1230                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1231                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1232                        	.member	CommandSetSupportExt,1904,10,8,16,90
  1233                        	.member	CommandSetActiveExt,1920,10,8,16,91
  1234                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1235                        	.member	MsnSupport,2032,16,17,2
  1236                        	.member	ReservedWord127,2034,16,17,14
  1237                        	.member	SecurityStatus,2048,10,8,16,92
  1238                        	.member	ReservedWord129,2064,112,8,0,31
  1239                        	.member	CfaPowerMode1,2560,10,8,16,93
  1240                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1241                        	.member	NominalFormFactor,2688,16,17,4
  1242                        	.member	ReservedWord168,2692,16,17,12
  1243                        	.member	DataSetManagementFeature,2704,10,8,16,94
  1244                        	.member	AdditionalProductID,2720,112,8,0,4
  1245                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  1246                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1247                        	.member	SCTCommandTransport,3296,10,8,16,95
  1248                        	.member	ReservedWord207,3312,112,8,0,2
  1249                        	.member	BlockAlignment,3344,10,8,16,96
  1250                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1251                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1252                        	.member	NVCacheCapabilities,3424,10,8,16,97
  1253                        	.member	NVCacheSizeLSW,3440,16,8,16
  1254                        	.member	NVCacheSizeMSW,3456,16,8,16
  1255                        	.member	NominalMediaRotationRate,3472,16,8,16
  1256                        	.member	ReservedWord218,3488,16,8,16
  1257                        	.member	NVCacheOptions,3504,10,8,16,98
  1258                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1259                        	.member	ReservedWord220,3528,16,17,8
  1260                        	.member	ReservedWord221,3536,16,8,16
  1261                        	.member	TransportMajorVersion,3552,10,8,16,99
  1262                        	.member	TransportMinorVersion,3568,16,8,16
  1263                        	.member	ReservedWord224,3584,112,8,0,6
  1264                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1265                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1266                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  1267                        	.member	ReservedWord236,3776,112,8,0,19
  Thu Dec  3 2020 22:25                                                Page 25


  1268                        	.member	Signature,4080,16,17,8
  1269                        	.member	CheckSum,4088,16,17,8
  1270                        	.eos
  1271                        	.stag	_FXDosDevice,5648,101
  1272                        	.member	type,0,14,8,8
  1273                        	.member	initialized,8,14,8,8
  1274                        	.member	devdata,16,129,8,32
  1275                        	.member	devstatus,48,14,8,8
  1276                        	.member	bootSector,56,10,8,928,71
  1277                        	.member	partitionTable,984,10,8,128,72
  1278                        	.member	fileAllocationTable,1112,110,8,0,512
  1279                        	.member	bsOffset,5208,18,8,32
  1280                        	.member	rootDirSectors,5240,18,8,32
  1281                        	.member	root_entry_count,5272,5,8,16
  1282                        	.member	rootEntriesPerPage,5288,5,8,16
  1283                        	.member	sectors_per_cluster,5304,5,8,16
  1284                        	.member	fatTableOffset,5320,18,8,32
  1285                        	.member	volume_name,5352,110,8,0,12
  1286                        	.member	root_volume_name,5448,110,8,0,12
  1287                        	.member	errorCode,5544,14,8,8
  1288                        	.member	pfInit,5552,641,8,32
  1289                        	.member	pfReader,5584,654,8,32
  1290                        	.member	pfWriter,5616,654,8,32
  1291                        	.eos
  1292                        	.line	705
  1293                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.c",2
  1294                        ;#include "fxmemorymanager.h"
  1295                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
  1296                        	.line	39
  1297                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.c",3
  1298                        ;#include "MINDRVR.H"
  1299                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\MINDRVR.H",0
  1300                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
  1301                        	.line	25
  1302                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\MINDRVR.H",35
  1303                        	.stag	REG_CMD_INFO,328,102
  1304                        	.member	cmd,0,14,8,8
  1305                        	.member	fr,8,16,8,16
  1306                        	.member	sc,24,16,8,16
  1307                        	.member	sn,40,16,8,16
  1308                        	.member	cl,56,16,8,16
  1309                        	.member	ch,72,16,8,16
  1310                        	.member	dh,88,14,8,8
  1311                        	.member	dc,96,14,8,8
  1312                        	.member	ns,104,7,8,32
  1313                        	.member	mc,136,5,8,16
  1314                        	.member	lbaSize,152,14,8,8
  1315                        	.member	lbaLow,160,18,8,32
  1316                        	.member	lbaHigh,192,18,8,32
  1317                        	.member	st,224,14,8,8
  1318                        	.member	as,232,14,8,8
  1319                        	.member	er,240,14,8,8
  Thu Dec  3 2020 22:25                                                Page 26


  1320                        	.member	ec,248,14,8,8
  1321                        	.member	to,256,14,8,8
  1322                        	.member	totalBytesXfer,264,7,8,32
  1323                        	.member	drqPackets,296,7,8,32
  1324                        	.eos
  1325                        	.line	475
  1326                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.c",4
  1327                        ;#include "fxfloppy.h"
  1328                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfloppy.h",0
  1329                        	.line	70
  1330                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.c",5
  1331                        ;
  1332                        ;#pragma section CODE=FXDOS,offset $08:7FFF
  1333                        FXDOS	section	offset $08:7FFF
  1334 08:7FFF:              	ends
  1335                        ;
  1336                        ;static UCHAR sectorBuffer[512];
  1337                        ;static CHAR	 longnamecount;
  1338                        ;static UCHAR longnameBuffer[255];
  1339                        ;
  1340                        ;FXDOSDEVICE fxdosDevice;
  1341                        ;
  1342                        ;static PFXNODELIST _k_dos_devicedrivers	= NULL;
  1343                        	data
  1344                        ~~_k_dos_devicedrivers:
  1345 00:0000: 00 00 00 00  	dl	$0
  1346 00:0004:              	ends
  1347                        ;
  1348                        ;extern FX_DEVICE_DRIVER DRIVER_B2Console;
  1349                        ;extern FX_DEVICE_DRIVER DRIVER_B2SDCard;
  1350                        ;extern FX_DEVICE_DRIVER DRIVER_FMXSDCard;
  1351                        ;
  1352                        ;void k_dos_load_drivers(void)
  1353                        ;{
  1354                        	.line	21
  1355                        	.line	22
  1356                        	FXDOS
  1357                        	xdef	~~k_dos_load_drivers
  1358                        	func
  1359                        	.function	22
  1360                        ~~k_dos_load_drivers:
  1361                        	longa	on
  1362                        	longi	on
  1363 08:7FFF: 3B           	tsc
  1364 08:8000: 38           	sec
  1365 08:8001: E9 2C 00     	sbc	#L2
  1366 08:8004: 1B           	tcs
  1367 08:8005: 0B           	phd
  1368 08:8006: 5B           	tcd
  1369                        	.block	22
  1370                        ;	CHAR major[16];
  1371                        ;	CHAR minor[16];
  1372                        ;
  1373                        ;	PFX_DEVICE_DRIVER driver = NULL;
  1374                        ;
  Thu Dec  3 2020 22:25                                                Page 27


  1375                        ;	_k_dos_devicedrivers 	= k_nodelist_allocate_li
                    st("_k_dos_devicedrivers" ,NULL);
  1376             00000000   major_1	set	0
  1377             00000010   minor_1	set	16
  1378             00000020   driver_1	set	32
  1379                        	.sym	major,0,110,1,0,16
  1380                        	.sym	minor,16,110,1,0,16
  1381                        	.sym	driver,32,138,1,32,48
  1382 08:8007: 64 29        	stz	<L3+driver_1
  1383 08:8009: 64 2B        	stz	<L3+driver_1+2
  1384                        	.line	28
  1385 08:800B: F4 00 00     	pea	#^$0
  1386 08:800E: F4 00 00     	pea	#<$0
  1387 08:8011: F4 xx xx     	pea	#^L1
  1388 08:8014: F4 xx xx     	pea	#<L1
  1389 08:8017: 22 xx xx xx  	jsl	~~k_nodelist_allocate_list
  1390 08:801B: 8D xx xx     	sta	|~~_k_dos_devicedrivers
  1391 08:801E: 8E xx xx     	stx	|~~_k_dos_devicedrivers+2
  1392                        ;
  1393                        ;	k_get_c256_major_version(major);
  1394                        	.line	30
  1395 08:8021: F4 00 00     	pea	#0
  1396 08:8024: 18           	clc
  1397 08:8025: 7B           	tdc
  1398 08:8026: 69 09 00     	adc	#<L3+major_1
  1399 08:8029: 48           	pha
  1400 08:802A: 22 xx xx xx  	jsl	~~k_get_c256_major_version
  1401                        ;	k_debug_strings("k_dos_load_drivers VERSION MAJO
                    R:",major);
  1402                        	.line	31
  1403 08:802E: F4 00 00     	pea	#0
  1404 08:8031: 18           	clc
  1405 08:8032: 7B           	tdc
  1406 08:8033: 69 09 00     	adc	#<L3+major_1
  1407 08:8036: 48           	pha
  1408 08:8037: F4 xx xx     	pea	#^L1+21
  1409 08:803A: F4 xx xx     	pea	#<L1+21
  1410 08:803D: 22 xx xx xx  	jsl	~~k_debug_strings
  1411                        ;	k_get_c256_minor_version(minor);
  1412                        	.line	32
  1413 08:8041: F4 00 00     	pea	#0
  1414 08:8044: 18           	clc
  1415 08:8045: 7B           	tdc
  1416 08:8046: 69 19 00     	adc	#<L3+minor_1
  1417 08:8049: 48           	pha
  1418 08:804A: 22 xx xx xx  	jsl	~~k_get_c256_minor_version
  1419                        ;	k_debug_strings("k_dos_load_drivers VERSION MINO
                    R:",minor);
  1420                        	.line	33
  1421 08:804E: F4 00 00     	pea	#0
  1422 08:8051: 18           	clc
  1423 08:8052: 7B           	tdc
  1424 08:8053: 69 19 00     	adc	#<L3+minor_1
  1425 08:8056: 48           	pha
  1426 08:8057: F4 xx xx     	pea	#^L1+55
  1427 08:805A: F4 xx xx     	pea	#<L1+55
  1428 08:805D: 22 xx xx xx  	jsl	~~k_debug_strings
  1429                        ;
  Thu Dec  3 2020 22:25                                                Page 28


  1430                        ;	driver = &DRIVER_B2Console;
  1431                        	.line	35
  1432 08:8061: A9 xx xx     	lda	#<~~DRIVER_B2Console
  1433 08:8064: 85 29        	sta	<L3+driver_1
  1434                        	xref	_BEG_DATA
  1435 08:8066: A9 xx xx     	lda	#_BEG_DATA>>16
  1436 08:8069: 85 2B        	sta	<L3+driver_1+2
  1437                        ;	k_nodelist_addtolist(_k_dos_devicedrivers,driver
                    ->type,driver->name,driver);
  1438                        	.line	36
  1439 08:806B: D4 2B        	pei	<L3+driver_1+2
  1440 08:806D: D4 29        	pei	<L3+driver_1
  1441 08:806F: D4 2B        	pei	<L3+driver_1+2
  1442 08:8071: D4 29        	pei	<L3+driver_1
  1443 08:8073: A0 A0 00     	ldy	#$a0
  1444 08:8076: B7 29        	lda	[<L3+driver_1],Y
  1445 08:8078: 48           	pha
  1446 08:8079: AD xx xx     	lda	|~~_k_dos_devicedrivers+2
  1447 08:807C: 48           	pha
  1448 08:807D: AD xx xx     	lda	|~~_k_dos_devicedrivers
  1449 08:8080: 48           	pha
  1450 08:8081: 22 xx xx xx  	jsl	~~k_nodelist_addtolist
  1451                        ;
  1452                        ;	k_debug_strings("k_dos_load_drivers::driver->nam
                    e:",driver->name);
  1453                        	.line	38
  1454 08:8085: D4 2B        	pei	<L3+driver_1+2
  1455 08:8087: D4 29        	pei	<L3+driver_1
  1456 08:8089: F4 xx xx     	pea	#^L1+89
  1457 08:808C: F4 xx xx     	pea	#<L1+89
  1458 08:808F: 22 xx xx xx  	jsl	~~k_debug_strings
  1459                        ;	k_debug_strings("k_dos_load_drivers::driver->ver
                    sion:",driver->version);
  1460                        	.line	39
  1461 08:8093: 18           	clc
  1462 08:8094: A9 40 00     	lda	#$40
  1463 08:8097: 65 29        	adc	<L3+driver_1
  1464 08:8099: 85 01        	sta	<R0
  1465 08:809B: A9 00 00     	lda	#$0
  1466 08:809E: 65 2B        	adc	<L3+driver_1+2
  1467 08:80A0: 85 03        	sta	<R0+2
  1468 08:80A2: D4 03        	pei	<R0+2
  1469 08:80A4: D4 01        	pei	<R0
  1470 08:80A6: F4 xx xx     	pea	#^L1+123
  1471 08:80A9: F4 xx xx     	pea	#<L1+123
  1472 08:80AC: 22 xx xx xx  	jsl	~~k_debug_strings
  1473                        ;	k_debug_strings("k_dos_load_drivers::driver->maj
                    or:",driver->hmajor);
  1474                        	.line	40
  1475 08:80B0: 18           	clc
  1476 08:80B1: A9 80 00     	lda	#$80
  1477 08:80B4: 65 29        	adc	<L3+driver_1
  1478 08:80B6: 85 01        	sta	<R0
  1479 08:80B8: A9 00 00     	lda	#$0
  1480 08:80BB: 65 2B        	adc	<L3+driver_1+2
  1481 08:80BD: 85 03        	sta	<R0+2
  1482 08:80BF: D4 03        	pei	<R0+2
  1483 08:80C1: D4 01        	pei	<R0
  Thu Dec  3 2020 22:25                                                Page 29


  1484 08:80C3: F4 xx xx     	pea	#^L1+160
  1485 08:80C6: F4 xx xx     	pea	#<L1+160
  1486 08:80C9: 22 xx xx xx  	jsl	~~k_debug_strings
  1487                        ;	k_debug_strings("k_dos_load_drivers::driver->min
                    or:",driver->hminor);
  1488                        	.line	41
  1489 08:80CD: 18           	clc
  1490 08:80CE: A9 90 00     	lda	#$90
  1491 08:80D1: 65 29        	adc	<L3+driver_1
  1492 08:80D3: 85 01        	sta	<R0
  1493 08:80D5: A9 00 00     	lda	#$0
  1494 08:80D8: 65 2B        	adc	<L3+driver_1+2
  1495 08:80DA: 85 03        	sta	<R0+2
  1496 08:80DC: D4 03        	pei	<R0+2
  1497 08:80DE: D4 01        	pei	<R0
  1498 08:80E0: F4 xx xx     	pea	#^L1+195
  1499 08:80E3: F4 xx xx     	pea	#<L1+195
  1500 08:80E6: 22 xx xx xx  	jsl	~~k_debug_strings
  1501                        ;	k_debug_integer("k_dos_load_drivers::driver->typ
                    e:",driver->type);
  1502                        	.line	42
  1503 08:80EA: A0 A0 00     	ldy	#$a0
  1504 08:80ED: B7 29        	lda	[<L3+driver_1],Y
  1505 08:80EF: 29 FF 00     	and	#$ff
  1506 08:80F2: 48           	pha
  1507 08:80F3: F4 xx xx     	pea	#^L1+230
  1508 08:80F6: F4 xx xx     	pea	#<L1+230
  1509 08:80F9: 22 xx xx xx  	jsl	~~k_debug_integer
  1510                        ;	k_debug_pointer("k_dos_load_drivers::driver->f_d
                    river_load:",driver->f_driver_load);
  1511                        	.line	43
  1512 08:80FD: A0 A3 00     	ldy	#$a3
  1513 08:8100: B7 29        	lda	[<L3+driver_1],Y
  1514 08:8102: 48           	pha
  1515 08:8103: A0 A1 00     	ldy	#$a1
  1516 08:8106: B7 29        	lda	[<L3+driver_1],Y
  1517 08:8108: 48           	pha
  1518 08:8109: F4 xx xx     	pea	#^L1+264
  1519 08:810C: F4 xx xx     	pea	#<L1+264
  1520 08:810F: 22 xx xx xx  	jsl	~~k_debug_pointer
  1521                        ;
  1522                        ;	if((strcmp(driver->hmajor,major) == 0) && (strcm
                    p(driver->hminor,minor) == 0))
  1523                        	.line	45
  1524                        ;	{
  1525 08:8113: F4 00 00     	pea	#0
  1526 08:8116: 18           	clc
  1527 08:8117: 7B           	tdc
  1528 08:8118: 69 09 00     	adc	#<L3+major_1
  1529 08:811B: 48           	pha
  1530 08:811C: 18           	clc
  1531 08:811D: A9 80 00     	lda	#$80
  1532 08:8120: 65 29        	adc	<L3+driver_1
  1533 08:8122: 85 01        	sta	<R0
  1534 08:8124: A9 00 00     	lda	#$0
  1535 08:8127: 65 2B        	adc	<L3+driver_1+2
  1536 08:8129: 85 03        	sta	<R0+2
  1537 08:812B: D4 03        	pei	<R0+2
  Thu Dec  3 2020 22:25                                                Page 30


  1538 08:812D: D4 01        	pei	<R0
  1539 08:812F: 22 xx xx xx  	jsl	~~strcmp
  1540 08:8133: AA           	tax
  1541 08:8134: F0 03        	beq	L5
  1542 08:8136: 82 52 00     	brl	L10001
  1543                        L5:
  1544 08:8139: F4 00 00     	pea	#0
  1545 08:813C: 18           	clc
  1546 08:813D: 7B           	tdc
  1547 08:813E: 69 19 00     	adc	#<L3+minor_1
  1548 08:8141: 48           	pha
  1549 08:8142: 18           	clc
  1550 08:8143: A9 90 00     	lda	#$90
  1551 08:8146: 65 29        	adc	<L3+driver_1
  1552 08:8148: 85 05        	sta	<R1
  1553 08:814A: A9 00 00     	lda	#$0
  1554 08:814D: 65 2B        	adc	<L3+driver_1+2
  1555 08:814F: 85 07        	sta	<R1+2
  1556 08:8151: D4 07        	pei	<R1+2
  1557 08:8153: D4 05        	pei	<R1
  1558 08:8155: 22 xx xx xx  	jsl	~~strcmp
  1559 08:8159: AA           	tax
  1560 08:815A: F0 03        	beq	L6
  1561 08:815C: 82 2C 00     	brl	L10001
  1562                        L6:
  1563                        	.line	46
  1564                        ;		k_debug_strings("k_dos_load_drivers[HARW
                    ARE MATCH]:",driver->name);
  1565                        	.line	47
  1566 08:815F: D4 2B        	pei	<L3+driver_1+2
  1567 08:8161: D4 29        	pei	<L3+driver_1
  1568 08:8163: F4 xx xx     	pea	#^L1+307
  1569 08:8166: F4 xx xx     	pea	#<L1+307
  1570 08:8169: 22 xx xx xx  	jsl	~~k_debug_strings
  1571                        ;		if(driver->f_driver_load)
  1572                        	.line	48
  1573                        ;			((DEVICEDRIVER_LOAD)driver->f_dr
                    iver_load)();
  1574 08:816D: A0 A1 00     	ldy	#$a1
  1575 08:8170: B7 29        	lda	[<L3+driver_1],Y
  1576 08:8172: A0 A3 00     	ldy	#$a3
  1577 08:8175: 17 29        	ora	[<L3+driver_1],Y
  1578 08:8177: D0 03        	bne	L7
  1579 08:8179: 82 0F 00     	brl	L10002
  1580                        L7:
  1581                        	.line	49
  1582 08:817C: A0 A3 00     	ldy	#$a3
  1583 08:817F: B7 29        	lda	[<L3+driver_1],Y
  1584 08:8181: AA           	tax
  1585 08:8182: A0 A1 00     	ldy	#$a1
  1586 08:8185: B7 29        	lda	[<L3+driver_1],Y
  1587                        	xref	~~~lcal
  1588 08:8187: 22 xx xx xx  	jsl	~~~lcal
  1589                        ;	}
  1590                        L10002:
  1591                        	.line	50
  1592                        ;
  1593                        ;
  Thu Dec  3 2020 22:25                                                Page 31


  1594                        ;	driver = &DRIVER_B2SDCard;
  1595                        L10001:
  1596                        	.line	53
  1597 08:818B: A9 xx xx     	lda	#<~~DRIVER_B2SDCard
  1598 08:818E: 85 29        	sta	<L3+driver_1
  1599                        	xref	_BEG_DATA
  1600 08:8190: A9 xx xx     	lda	#_BEG_DATA>>16
  1601 08:8193: 85 2B        	sta	<L3+driver_1+2
  1602                        ;
  1603                        ;	k_nodelist_addtolist(_k_dos_devicedrivers,driver
                    ->type,driver->name,driver);
  1604                        	.line	55
  1605 08:8195: D4 2B        	pei	<L3+driver_1+2
  1606 08:8197: D4 29        	pei	<L3+driver_1
  1607 08:8199: D4 2B        	pei	<L3+driver_1+2
  1608 08:819B: D4 29        	pei	<L3+driver_1
  1609 08:819D: A0 A0 00     	ldy	#$a0
  1610 08:81A0: B7 29        	lda	[<L3+driver_1],Y
  1611 08:81A2: 48           	pha
  1612 08:81A3: AD xx xx     	lda	|~~_k_dos_devicedrivers+2
  1613 08:81A6: 48           	pha
  1614 08:81A7: AD xx xx     	lda	|~~_k_dos_devicedrivers
  1615 08:81AA: 48           	pha
  1616 08:81AB: 22 xx xx xx  	jsl	~~k_nodelist_addtolist
  1617                        ;
  1618                        ;	k_debug_strings("k_dos_load_drivers::driver->nam
                    e:",driver->name);
  1619                        	.line	57
  1620 08:81AF: D4 2B        	pei	<L3+driver_1+2
  1621 08:81B1: D4 29        	pei	<L3+driver_1
  1622 08:81B3: F4 xx xx     	pea	#^L1+342
  1623 08:81B6: F4 xx xx     	pea	#<L1+342
  1624 08:81B9: 22 xx xx xx  	jsl	~~k_debug_strings
  1625                        ;	k_debug_strings("k_dos_load_drivers::driver->ver
                    sion:",driver->version);
  1626                        	.line	58
  1627 08:81BD: 18           	clc
  1628 08:81BE: A9 40 00     	lda	#$40
  1629 08:81C1: 65 29        	adc	<L3+driver_1
  1630 08:81C3: 85 01        	sta	<R0
  1631 08:81C5: A9 00 00     	lda	#$0
  1632 08:81C8: 65 2B        	adc	<L3+driver_1+2
  1633 08:81CA: 85 03        	sta	<R0+2
  1634 08:81CC: D4 03        	pei	<R0+2
  1635 08:81CE: D4 01        	pei	<R0
  1636 08:81D0: F4 xx xx     	pea	#^L1+376
  1637 08:81D3: F4 xx xx     	pea	#<L1+376
  1638 08:81D6: 22 xx xx xx  	jsl	~~k_debug_strings
  1639                        ;	k_debug_strings("k_dos_load_drivers::driver->maj
                    or:",driver->hmajor);
  1640                        	.line	59
  1641 08:81DA: 18           	clc
  1642 08:81DB: A9 80 00     	lda	#$80
  1643 08:81DE: 65 29        	adc	<L3+driver_1
  1644 08:81E0: 85 01        	sta	<R0
  1645 08:81E2: A9 00 00     	lda	#$0
  1646 08:81E5: 65 2B        	adc	<L3+driver_1+2
  1647 08:81E7: 85 03        	sta	<R0+2
  Thu Dec  3 2020 22:25                                                Page 32


  1648 08:81E9: D4 03        	pei	<R0+2
  1649 08:81EB: D4 01        	pei	<R0
  1650 08:81ED: F4 xx xx     	pea	#^L1+413
  1651 08:81F0: F4 xx xx     	pea	#<L1+413
  1652 08:81F3: 22 xx xx xx  	jsl	~~k_debug_strings
  1653                        ;	k_debug_strings("k_dos_load_drivers::driver->min
                    or:",driver->hminor);
  1654                        	.line	60
  1655 08:81F7: 18           	clc
  1656 08:81F8: A9 90 00     	lda	#$90
  1657 08:81FB: 65 29        	adc	<L3+driver_1
  1658 08:81FD: 85 01        	sta	<R0
  1659 08:81FF: A9 00 00     	lda	#$0
  1660 08:8202: 65 2B        	adc	<L3+driver_1+2
  1661 08:8204: 85 03        	sta	<R0+2
  1662 08:8206: D4 03        	pei	<R0+2
  1663 08:8208: D4 01        	pei	<R0
  1664 08:820A: F4 xx xx     	pea	#^L1+448
  1665 08:820D: F4 xx xx     	pea	#<L1+448
  1666 08:8210: 22 xx xx xx  	jsl	~~k_debug_strings
  1667                        ;	k_debug_integer("k_dos_load_drivers::driver->typ
                    e:",driver->type);
  1668                        	.line	61
  1669 08:8214: A0 A0 00     	ldy	#$a0
  1670 08:8217: B7 29        	lda	[<L3+driver_1],Y
  1671 08:8219: 29 FF 00     	and	#$ff
  1672 08:821C: 48           	pha
  1673 08:821D: F4 xx xx     	pea	#^L1+483
  1674 08:8220: F4 xx xx     	pea	#<L1+483
  1675 08:8223: 22 xx xx xx  	jsl	~~k_debug_integer
  1676                        ;	k_debug_pointer("k_dos_load_drivers::driver->f_d
                    river_load:",driver->f_driver_load);
  1677                        	.line	62
  1678 08:8227: A0 A3 00     	ldy	#$a3
  1679 08:822A: B7 29        	lda	[<L3+driver_1],Y
  1680 08:822C: 48           	pha
  1681 08:822D: A0 A1 00     	ldy	#$a1
  1682 08:8230: B7 29        	lda	[<L3+driver_1],Y
  1683 08:8232: 48           	pha
  1684 08:8233: F4 xx xx     	pea	#^L1+517
  1685 08:8236: F4 xx xx     	pea	#<L1+517
  1686 08:8239: 22 xx xx xx  	jsl	~~k_debug_pointer
  1687                        ;
  1688                        ;	if((strcmp(driver->hmajor,major) == 0) && (strcm
                    p(driver->hminor,minor) == 0))
  1689                        	.line	64
  1690                        ;	{
  1691 08:823D: F4 00 00     	pea	#0
  1692 08:8240: 18           	clc
  1693 08:8241: 7B           	tdc
  1694 08:8242: 69 09 00     	adc	#<L3+major_1
  1695 08:8245: 48           	pha
  1696 08:8246: 18           	clc
  1697 08:8247: A9 80 00     	lda	#$80
  1698 08:824A: 65 29        	adc	<L3+driver_1
  1699 08:824C: 85 01        	sta	<R0
  1700 08:824E: A9 00 00     	lda	#$0
  1701 08:8251: 65 2B        	adc	<L3+driver_1+2
  Thu Dec  3 2020 22:25                                                Page 33


  1702 08:8253: 85 03        	sta	<R0+2
  1703 08:8255: D4 03        	pei	<R0+2
  1704 08:8257: D4 01        	pei	<R0
  1705 08:8259: 22 xx xx xx  	jsl	~~strcmp
  1706 08:825D: AA           	tax
  1707 08:825E: F0 03        	beq	L8
  1708 08:8260: 82 52 00     	brl	L10003
  1709                        L8:
  1710 08:8263: F4 00 00     	pea	#0
  1711 08:8266: 18           	clc
  1712 08:8267: 7B           	tdc
  1713 08:8268: 69 19 00     	adc	#<L3+minor_1
  1714 08:826B: 48           	pha
  1715 08:826C: 18           	clc
  1716 08:826D: A9 90 00     	lda	#$90
  1717 08:8270: 65 29        	adc	<L3+driver_1
  1718 08:8272: 85 05        	sta	<R1
  1719 08:8274: A9 00 00     	lda	#$0
  1720 08:8277: 65 2B        	adc	<L3+driver_1+2
  1721 08:8279: 85 07        	sta	<R1+2
  1722 08:827B: D4 07        	pei	<R1+2
  1723 08:827D: D4 05        	pei	<R1
  1724 08:827F: 22 xx xx xx  	jsl	~~strcmp
  1725 08:8283: AA           	tax
  1726 08:8284: F0 03        	beq	L9
  1727 08:8286: 82 2C 00     	brl	L10003
  1728                        L9:
  1729                        	.line	65
  1730                        ;		k_debug_strings("k_dos_load_drivers[HARW
                    ARE MATCH]:",driver->name);
  1731                        	.line	66
  1732 08:8289: D4 2B        	pei	<L3+driver_1+2
  1733 08:828B: D4 29        	pei	<L3+driver_1
  1734 08:828D: F4 xx xx     	pea	#^L1+560
  1735 08:8290: F4 xx xx     	pea	#<L1+560
  1736 08:8293: 22 xx xx xx  	jsl	~~k_debug_strings
  1737                        ;		if(driver->f_driver_load)
  1738                        	.line	67
  1739                        ;			((DEVICEDRIVER_LOAD)driver->f_dr
                    iver_load)();
  1740 08:8297: A0 A1 00     	ldy	#$a1
  1741 08:829A: B7 29        	lda	[<L3+driver_1],Y
  1742 08:829C: A0 A3 00     	ldy	#$a3
  1743 08:829F: 17 29        	ora	[<L3+driver_1],Y
  1744 08:82A1: D0 03        	bne	L10
  1745 08:82A3: 82 0F 00     	brl	L10004
  1746                        L10:
  1747                        	.line	68
  1748 08:82A6: A0 A3 00     	ldy	#$a3
  1749 08:82A9: B7 29        	lda	[<L3+driver_1],Y
  1750 08:82AB: AA           	tax
  1751 08:82AC: A0 A1 00     	ldy	#$a1
  1752 08:82AF: B7 29        	lda	[<L3+driver_1],Y
  1753                        	xref	~~~lcal
  1754 08:82B1: 22 xx xx xx  	jsl	~~~lcal
  1755                        ;	}
  1756                        L10004:
  1757                        	.line	69
  Thu Dec  3 2020 22:25                                                Page 34


  1758                        ;
  1759                        ;	driver = &DRIVER_FMXSDCard;
  1760                        L10003:
  1761                        	.line	71
  1762 08:82B5: A9 xx xx     	lda	#<~~DRIVER_FMXSDCard
  1763 08:82B8: 85 29        	sta	<L3+driver_1
  1764                        	xref	_BEG_DATA
  1765 08:82BA: A9 xx xx     	lda	#_BEG_DATA>>16
  1766 08:82BD: 85 2B        	sta	<L3+driver_1+2
  1767                        ;	k_nodelist_addtolist(_k_dos_devicedrivers,driver
                    ->type,driver->name,driver);
  1768                        	.line	72
  1769 08:82BF: D4 2B        	pei	<L3+driver_1+2
  1770 08:82C1: D4 29        	pei	<L3+driver_1
  1771 08:82C3: D4 2B        	pei	<L3+driver_1+2
  1772 08:82C5: D4 29        	pei	<L3+driver_1
  1773 08:82C7: A0 A0 00     	ldy	#$a0
  1774 08:82CA: B7 29        	lda	[<L3+driver_1],Y
  1775 08:82CC: 48           	pha
  1776 08:82CD: AD xx xx     	lda	|~~_k_dos_devicedrivers+2
  1777 08:82D0: 48           	pha
  1778 08:82D1: AD xx xx     	lda	|~~_k_dos_devicedrivers
  1779 08:82D4: 48           	pha
  1780 08:82D5: 22 xx xx xx  	jsl	~~k_nodelist_addtolist
  1781                        ;	k_debug_strings("k_dos_load_drivers::driver->nam
                    e:",driver->name);
  1782                        	.line	73
  1783 08:82D9: D4 2B        	pei	<L3+driver_1+2
  1784 08:82DB: D4 29        	pei	<L3+driver_1
  1785 08:82DD: F4 xx xx     	pea	#^L1+595
  1786 08:82E0: F4 xx xx     	pea	#<L1+595
  1787 08:82E3: 22 xx xx xx  	jsl	~~k_debug_strings
  1788                        ;	k_debug_strings("k_dos_load_drivers::driver->ver
                    sion:",driver->version);
  1789                        	.line	74
  1790 08:82E7: 18           	clc
  1791 08:82E8: A9 40 00     	lda	#$40
  1792 08:82EB: 65 29        	adc	<L3+driver_1
  1793 08:82ED: 85 01        	sta	<R0
  1794 08:82EF: A9 00 00     	lda	#$0
  1795 08:82F2: 65 2B        	adc	<L3+driver_1+2
  1796 08:82F4: 85 03        	sta	<R0+2
  1797 08:82F6: D4 03        	pei	<R0+2
  1798 08:82F8: D4 01        	pei	<R0
  1799 08:82FA: F4 xx xx     	pea	#^L1+629
  1800 08:82FD: F4 xx xx     	pea	#<L1+629
  1801 08:8300: 22 xx xx xx  	jsl	~~k_debug_strings
  1802                        ;	k_debug_strings("k_dos_load_drivers::driver->maj
                    or:",driver->hmajor);
  1803                        	.line	75
  1804 08:8304: 18           	clc
  1805 08:8305: A9 80 00     	lda	#$80
  1806 08:8308: 65 29        	adc	<L3+driver_1
  1807 08:830A: 85 01        	sta	<R0
  1808 08:830C: A9 00 00     	lda	#$0
  1809 08:830F: 65 2B        	adc	<L3+driver_1+2
  1810 08:8311: 85 03        	sta	<R0+2
  1811 08:8313: D4 03        	pei	<R0+2
  Thu Dec  3 2020 22:25                                                Page 35


  1812 08:8315: D4 01        	pei	<R0
  1813 08:8317: F4 xx xx     	pea	#^L1+666
  1814 08:831A: F4 xx xx     	pea	#<L1+666
  1815 08:831D: 22 xx xx xx  	jsl	~~k_debug_strings
  1816                        ;	k_debug_strings("k_dos_load_drivers::driver->min
                    or:",driver->hminor);
  1817                        	.line	76
  1818 08:8321: 18           	clc
  1819 08:8322: A9 90 00     	lda	#$90
  1820 08:8325: 65 29        	adc	<L3+driver_1
  1821 08:8327: 85 01        	sta	<R0
  1822 08:8329: A9 00 00     	lda	#$0
  1823 08:832C: 65 2B        	adc	<L3+driver_1+2
  1824 08:832E: 85 03        	sta	<R0+2
  1825 08:8330: D4 03        	pei	<R0+2
  1826 08:8332: D4 01        	pei	<R0
  1827 08:8334: F4 xx xx     	pea	#^L1+701
  1828 08:8337: F4 xx xx     	pea	#<L1+701
  1829 08:833A: 22 xx xx xx  	jsl	~~k_debug_strings
  1830                        ;	k_debug_integer("k_dos_load_drivers::driver->typ
                    e:",driver->type);
  1831                        	.line	77
  1832 08:833E: A0 A0 00     	ldy	#$a0
  1833 08:8341: B7 29        	lda	[<L3+driver_1],Y
  1834 08:8343: 29 FF 00     	and	#$ff
  1835 08:8346: 48           	pha
  1836 08:8347: F4 xx xx     	pea	#^L1+736
  1837 08:834A: F4 xx xx     	pea	#<L1+736
  1838 08:834D: 22 xx xx xx  	jsl	~~k_debug_integer
  1839                        ;	k_debug_pointer("k_dos_load_drivers::driver->f_d
                    river_load:",driver->f_driver_load);
  1840                        	.line	78
  1841 08:8351: A0 A3 00     	ldy	#$a3
  1842 08:8354: B7 29        	lda	[<L3+driver_1],Y
  1843 08:8356: 48           	pha
  1844 08:8357: A0 A1 00     	ldy	#$a1
  1845 08:835A: B7 29        	lda	[<L3+driver_1],Y
  1846 08:835C: 48           	pha
  1847 08:835D: F4 xx xx     	pea	#^L1+770
  1848 08:8360: F4 xx xx     	pea	#<L1+770
  1849 08:8363: 22 xx xx xx  	jsl	~~k_debug_pointer
  1850                        ;
  1851                        ;	if((strcmp(driver->hmajor,major) == 0) && (strcm
                    p(driver->hminor,minor) == 0))
  1852                        	.line	80
  1853                        ;	{
  1854 08:8367: F4 00 00     	pea	#0
  1855 08:836A: 18           	clc
  1856 08:836B: 7B           	tdc
  1857 08:836C: 69 09 00     	adc	#<L3+major_1
  1858 08:836F: 48           	pha
  1859 08:8370: 18           	clc
  1860 08:8371: A9 80 00     	lda	#$80
  1861 08:8374: 65 29        	adc	<L3+driver_1
  1862 08:8376: 85 01        	sta	<R0
  1863 08:8378: A9 00 00     	lda	#$0
  1864 08:837B: 65 2B        	adc	<L3+driver_1+2
  1865 08:837D: 85 03        	sta	<R0+2
  Thu Dec  3 2020 22:25                                                Page 36


  1866 08:837F: D4 03        	pei	<R0+2
  1867 08:8381: D4 01        	pei	<R0
  1868 08:8383: 22 xx xx xx  	jsl	~~strcmp
  1869 08:8387: AA           	tax
  1870 08:8388: F0 03        	beq	L11
  1871 08:838A: 82 34 00     	brl	L10005
  1872                        L11:
  1873 08:838D: F4 00 00     	pea	#0
  1874 08:8390: 18           	clc
  1875 08:8391: 7B           	tdc
  1876 08:8392: 69 19 00     	adc	#<L3+minor_1
  1877 08:8395: 48           	pha
  1878 08:8396: 18           	clc
  1879 08:8397: A9 90 00     	lda	#$90
  1880 08:839A: 65 29        	adc	<L3+driver_1
  1881 08:839C: 85 05        	sta	<R1
  1882 08:839E: A9 00 00     	lda	#$0
  1883 08:83A1: 65 2B        	adc	<L3+driver_1+2
  1884 08:83A3: 85 07        	sta	<R1+2
  1885 08:83A5: D4 07        	pei	<R1+2
  1886 08:83A7: D4 05        	pei	<R1
  1887 08:83A9: 22 xx xx xx  	jsl	~~strcmp
  1888 08:83AD: AA           	tax
  1889 08:83AE: F0 03        	beq	L12
  1890 08:83B0: 82 0E 00     	brl	L10005
  1891                        L12:
  1892                        	.line	81
  1893                        ;		k_debug_strings("k_dos_load_drivers[HARW
                    ARE MATCH]:",driver->name);
  1894                        	.line	82
  1895 08:83B3: D4 2B        	pei	<L3+driver_1+2
  1896 08:83B5: D4 29        	pei	<L3+driver_1
  1897 08:83B7: F4 xx xx     	pea	#^L1+813
  1898 08:83BA: F4 xx xx     	pea	#<L1+813
  1899 08:83BD: 22 xx xx xx  	jsl	~~k_debug_strings
  1900                        ;	}
  1901                        	.line	83
  1902                        ;
  1903                        ;}
  1904                        L10005:
  1905                        	.line	85
  1906                        L13:
  1907 08:83C1: 2B           	pld
  1908 08:83C2: 3B           	tsc
  1909 08:83C3: 18           	clc
  1910 08:83C4: 69 2C 00     	adc	#L2
  1911 08:83C7: 1B           	tcs
  1912 08:83C8: 6B           	rtl
  1913                        	.endblock	85
  1914             0000002C   L2	equ	44
  1915             00000009   L3	equ	9
  1916 08:83C9:              	ends
  1917                        	efunc
  1918                        	.endfunc	85,9,44
  1919                        	.line	85
  1920                        	data
  1921                        L1:
  1922 00:0004: 5F 6B 5F 64  	db	$5F,$6B,$5F,$64,$6F,$73,$5F,$64,$65,$76,
  Thu Dec  3 2020 22:25                                                Page 37


                    $69,$63,$65,$64,$72
       00:0008: 6F 73 5F 64 
       00:000C: 65 76 69 63 
       00:0010: 65 64 72 
  1923 00:0013: 69 76 65 72  	db	$69,$76,$65,$72,$73,$00,$6B,$5F,$64,$6F,
                    $73,$5F,$6C,$6F,$61
       00:0017: 73 00 6B 5F 
       00:001B: 64 6F 73 5F 
       00:001F: 6C 6F 61 
  1924 00:0022: 64 5F 64 72  	db	$64,$5F,$64,$72,$69,$76,$65,$72,$73,$20,
                    $56,$45,$52,$53,$49
       00:0026: 69 76 65 72 
       00:002A: 73 20 56 45 
       00:002E: 52 53 49 
  1925 00:0031: 4F 4E 20 4D  	db	$4F,$4E,$20,$4D,$41,$4A,$4F,$52,$3A,$00,
                    $6B,$5F,$64,$6F,$73
       00:0035: 41 4A 4F 52 
       00:0039: 3A 00 6B 5F 
       00:003D: 64 6F 73 
  1926 00:0040: 5F 6C 6F 61  	db	$5F,$6C,$6F,$61,$64,$5F,$64,$72,$69,$76,
                    $65,$72,$73,$20,$56
       00:0044: 64 5F 64 72 
       00:0048: 69 76 65 72 
       00:004C: 73 20 56 
  1927 00:004F: 45 52 53 49  	db	$45,$52,$53,$49,$4F,$4E,$20,$4D,$49,$4E,
                    $4F,$52,$3A,$00,$6B
       00:0053: 4F 4E 20 4D 
       00:0057: 49 4E 4F 52 
       00:005B: 3A 00 6B 
  1928 00:005E: 5F 64 6F 73  	db	$5F,$64,$6F,$73,$5F,$6C,$6F,$61,$64,$5F,
                    $64,$72,$69,$76,$65
       00:0062: 5F 6C 6F 61 
       00:0066: 64 5F 64 72 
       00:006A: 69 76 65 
  1929 00:006D: 72 73 3A 3A  	db	$72,$73,$3A,$3A,$64,$72,$69,$76,$65,$72,
                    $2D,$3E,$6E,$61,$6D
       00:0071: 64 72 69 76 
       00:0075: 65 72 2D 3E 
       00:0079: 6E 61 6D 
  1930 00:007C: 65 3A 00 6B  	db	$65,$3A,$00,$6B,$5F,$64,$6F,$73,$5F,$6C,
                    $6F,$61,$64,$5F,$64
       00:0080: 5F 64 6F 73 
       00:0084: 5F 6C 6F 61 
       00:0088: 64 5F 64 
  1931 00:008B: 72 69 76 65  	db	$72,$69,$76,$65,$72,$73,$3A,$3A,$64,$72,
                    $69,$76,$65,$72,$2D
       00:008F: 72 73 3A 3A 
       00:0093: 64 72 69 76 
       00:0097: 65 72 2D 
  1932 00:009A: 3E 76 65 72  	db	$3E,$76,$65,$72,$73,$69,$6F,$6E,$3A,$00,
                    $6B,$5F,$64,$6F,$73
       00:009E: 73 69 6F 6E 
       00:00A2: 3A 00 6B 5F 
       00:00A6: 64 6F 73 
  1933 00:00A9: 5F 6C 6F 61  	db	$5F,$6C,$6F,$61,$64,$5F,$64,$72,$69,$76,
                    $65,$72,$73,$3A,$3A
       00:00AD: 64 5F 64 72 
       00:00B1: 69 76 65 72 
  Thu Dec  3 2020 22:25                                                Page 38


       00:00B5: 73 3A 3A 
  1934 00:00B8: 64 72 69 76  	db	$64,$72,$69,$76,$65,$72,$2D,$3E,$6D,$61,
                    $6A,$6F,$72,$3A,$00
       00:00BC: 65 72 2D 3E 
       00:00C0: 6D 61 6A 6F 
       00:00C4: 72 3A 00 
  1935 00:00C7: 6B 5F 64 6F  	db	$6B,$5F,$64,$6F,$73,$5F,$6C,$6F,$61,$64,
                    $5F,$64,$72,$69,$76
       00:00CB: 73 5F 6C 6F 
       00:00CF: 61 64 5F 64 
       00:00D3: 72 69 76 
  1936 00:00D6: 65 72 73 3A  	db	$65,$72,$73,$3A,$3A,$64,$72,$69,$76,$65,
                    $72,$2D,$3E,$6D,$69
       00:00DA: 3A 64 72 69 
       00:00DE: 76 65 72 2D 
       00:00E2: 3E 6D 69 
  1937 00:00E5: 6E 6F 72 3A  	db	$6E,$6F,$72,$3A,$00,$6B,$5F,$64,$6F,$73,
                    $5F,$6C,$6F,$61,$64
       00:00E9: 00 6B 5F 64 
       00:00ED: 6F 73 5F 6C 
       00:00F1: 6F 61 64 
  1938 00:00F4: 5F 64 72 69  	db	$5F,$64,$72,$69,$76,$65,$72,$73,$3A,$3A,
                    $64,$72,$69,$76,$65
       00:00F8: 76 65 72 73 
       00:00FC: 3A 3A 64 72 
       00:0100: 69 76 65 
  1939 00:0103: 72 2D 3E 74  	db	$72,$2D,$3E,$74,$79,$70,$65,$3A,$00,$6B,
                    $5F,$64,$6F,$73,$5F
       00:0107: 79 70 65 3A 
       00:010B: 00 6B 5F 64 
       00:010F: 6F 73 5F 
  1940 00:0112: 6C 6F 61 64  	db	$6C,$6F,$61,$64,$5F,$64,$72,$69,$76,$65,
                    $72,$73,$3A,$3A,$64
       00:0116: 5F 64 72 69 
       00:011A: 76 65 72 73 
       00:011E: 3A 3A 64 
  1941 00:0121: 72 69 76 65  	db	$72,$69,$76,$65,$72,$2D,$3E,$66,$5F,$64,
                    $72,$69,$76,$65,$72
       00:0125: 72 2D 3E 66 
       00:0129: 5F 64 72 69 
       00:012D: 76 65 72 
  1942 00:0130: 5F 6C 6F 61  	db	$5F,$6C,$6F,$61,$64,$3A,$00,$6B,$5F,$64,
                    $6F,$73,$5F,$6C,$6F
       00:0134: 64 3A 00 6B 
       00:0138: 5F 64 6F 73 
       00:013C: 5F 6C 6F 
  1943 00:013F: 61 64 5F 64  	db	$61,$64,$5F,$64,$72,$69,$76,$65,$72,$73,
                    $5B,$48,$41,$52,$57
       00:0143: 72 69 76 65 
       00:0147: 72 73 5B 48 
       00:014B: 41 52 57 
  1944 00:014E: 41 52 45 20  	db	$41,$52,$45,$20,$4D,$41,$54,$43,$48,$5D,
                    $3A,$00,$6B,$5F,$64
       00:0152: 4D 41 54 43 
       00:0156: 48 5D 3A 00 
       00:015A: 6B 5F 64 
  1945 00:015D: 6F 73 5F 6C  	db	$6F,$73,$5F,$6C,$6F,$61,$64,$5F,$64,$72,
                    $69,$76,$65,$72,$73
  Thu Dec  3 2020 22:25                                                Page 39


       00:0161: 6F 61 64 5F 
       00:0165: 64 72 69 76 
       00:0169: 65 72 73 
  1946 00:016C: 3A 3A 64 72  	db	$3A,$3A,$64,$72,$69,$76,$65,$72,$2D,$3E,
                    $6E,$61,$6D,$65,$3A
       00:0170: 69 76 65 72 
       00:0174: 2D 3E 6E 61 
       00:0178: 6D 65 3A 
  1947 00:017B: 00 6B 5F 64  	db	$00,$6B,$5F,$64,$6F,$73,$5F,$6C,$6F,$61,
                    $64,$5F,$64,$72,$69
       00:017F: 6F 73 5F 6C 
       00:0183: 6F 61 64 5F 
       00:0187: 64 72 69 
  1948 00:018A: 76 65 72 73  	db	$76,$65,$72,$73,$3A,$3A,$64,$72,$69,$76,
                    $65,$72,$2D,$3E,$76
       00:018E: 3A 3A 64 72 
       00:0192: 69 76 65 72 
       00:0196: 2D 3E 76 
  1949 00:0199: 65 72 73 69  	db	$65,$72,$73,$69,$6F,$6E,$3A,$00,$6B,$5F,
                    $64,$6F,$73,$5F,$6C
       00:019D: 6F 6E 3A 00 
       00:01A1: 6B 5F 64 6F 
       00:01A5: 73 5F 6C 
  1950 00:01A8: 6F 61 64 5F  	db	$6F,$61,$64,$5F,$64,$72,$69,$76,$65,$72,
                    $73,$3A,$3A,$64,$72
       00:01AC: 64 72 69 76 
       00:01B0: 65 72 73 3A 
       00:01B4: 3A 64 72 
  1951 00:01B7: 69 76 65 72  	db	$69,$76,$65,$72,$2D,$3E,$6D,$61,$6A,$6F,
                    $72,$3A,$00,$6B,$5F
       00:01BB: 2D 3E 6D 61 
       00:01BF: 6A 6F 72 3A 
       00:01C3: 00 6B 5F 
  1952 00:01C6: 64 6F 73 5F  	db	$64,$6F,$73,$5F,$6C,$6F,$61,$64,$5F,$64,
                    $72,$69,$76,$65,$72
       00:01CA: 6C 6F 61 64 
       00:01CE: 5F 64 72 69 
       00:01D2: 76 65 72 
  1953 00:01D5: 73 3A 3A 64  	db	$73,$3A,$3A,$64,$72,$69,$76,$65,$72,$2D,
                    $3E,$6D,$69,$6E,$6F
       00:01D9: 72 69 76 65 
       00:01DD: 72 2D 3E 6D 
       00:01E1: 69 6E 6F 
  1954 00:01E4: 72 3A 00 6B  	db	$72,$3A,$00,$6B,$5F,$64,$6F,$73,$5F,$6C,
                    $6F,$61,$64,$5F,$64
       00:01E8: 5F 64 6F 73 
       00:01EC: 5F 6C 6F 61 
       00:01F0: 64 5F 64 
  1955 00:01F3: 72 69 76 65  	db	$72,$69,$76,$65,$72,$73,$3A,$3A,$64,$72,
                    $69,$76,$65,$72,$2D
       00:01F7: 72 73 3A 3A 
       00:01FB: 64 72 69 76 
       00:01FF: 65 72 2D 
  1956 00:0202: 3E 74 79 70  	db	$3E,$74,$79,$70,$65,$3A,$00,$6B,$5F,$64,
                    $6F,$73,$5F,$6C,$6F
       00:0206: 65 3A 00 6B 
       00:020A: 5F 64 6F 73 
       00:020E: 5F 6C 6F 
  Thu Dec  3 2020 22:25                                                Page 40


  1957 00:0211: 61 64 5F 64  	db	$61,$64,$5F,$64,$72,$69,$76,$65,$72,$73,
                    $3A,$3A,$64,$72,$69
       00:0215: 72 69 76 65 
       00:0219: 72 73 3A 3A 
       00:021D: 64 72 69 
  1958 00:0220: 76 65 72 2D  	db	$76,$65,$72,$2D,$3E,$66,$5F,$64,$72,$69,
                    $76,$65,$72,$5F,$6C
       00:0224: 3E 66 5F 64 
       00:0228: 72 69 76 65 
       00:022C: 72 5F 6C 
  1959 00:022F: 6F 61 64 3A  	db	$6F,$61,$64,$3A,$00,$6B,$5F,$64,$6F,$73,
                    $5F,$6C,$6F,$61,$64
       00:0233: 00 6B 5F 64 
       00:0237: 6F 73 5F 6C 
       00:023B: 6F 61 64 
  1960 00:023E: 5F 64 72 69  	db	$5F,$64,$72,$69,$76,$65,$72,$73,$5B,$48,
                    $41,$52,$57,$41,$52
       00:0242: 76 65 72 73 
       00:0246: 5B 48 41 52 
       00:024A: 57 41 52 
  1961 00:024D: 45 20 4D 41  	db	$45,$20,$4D,$41,$54,$43,$48,$5D,$3A,$00,
                    $6B,$5F,$64,$6F,$73
       00:0251: 54 43 48 5D 
       00:0255: 3A 00 6B 5F 
       00:0259: 64 6F 73 
  1962 00:025C: 5F 6C 6F 61  	db	$5F,$6C,$6F,$61,$64,$5F,$64,$72,$69,$76,
                    $65,$72,$73,$3A,$3A
       00:0260: 64 5F 64 72 
       00:0264: 69 76 65 72 
       00:0268: 73 3A 3A 
  1963 00:026B: 64 72 69 76  	db	$64,$72,$69,$76,$65,$72,$2D,$3E,$6E,$61,
                    $6D,$65,$3A,$00,$6B
       00:026F: 65 72 2D 3E 
       00:0273: 6E 61 6D 65 
       00:0277: 3A 00 6B 
  1964 00:027A: 5F 64 6F 73  	db	$5F,$64,$6F,$73,$5F,$6C,$6F,$61,$64,$5F,
                    $64,$72,$69,$76,$65
       00:027E: 5F 6C 6F 61 
       00:0282: 64 5F 64 72 
       00:0286: 69 76 65 
  1965 00:0289: 72 73 3A 3A  	db	$72,$73,$3A,$3A,$64,$72,$69,$76,$65,$72,
                    $2D,$3E,$76,$65,$72
       00:028D: 64 72 69 76 
       00:0291: 65 72 2D 3E 
       00:0295: 76 65 72 
  1966 00:0298: 73 69 6F 6E  	db	$73,$69,$6F,$6E,$3A,$00,$6B,$5F,$64,$6F,
                    $73,$5F,$6C,$6F,$61
       00:029C: 3A 00 6B 5F 
       00:02A0: 64 6F 73 5F 
       00:02A4: 6C 6F 61 
  1967 00:02A7: 64 5F 64 72  	db	$64,$5F,$64,$72,$69,$76,$65,$72,$73,$3A,
                    $3A,$64,$72,$69,$76
       00:02AB: 69 76 65 72 
       00:02AF: 73 3A 3A 64 
       00:02B3: 72 69 76 
  1968 00:02B6: 65 72 2D 3E  	db	$65,$72,$2D,$3E,$6D,$61,$6A,$6F,$72,$3A,
                    $00,$6B,$5F,$64,$6F
       00:02BA: 6D 61 6A 6F 
  Thu Dec  3 2020 22:25                                                Page 41


       00:02BE: 72 3A 00 6B 
       00:02C2: 5F 64 6F 
  1969 00:02C5: 73 5F 6C 6F  	db	$73,$5F,$6C,$6F,$61,$64,$5F,$64,$72,$69,
                    $76,$65,$72,$73,$3A
       00:02C9: 61 64 5F 64 
       00:02CD: 72 69 76 65 
       00:02D1: 72 73 3A 
  1970 00:02D4: 3A 64 72 69  	db	$3A,$64,$72,$69,$76,$65,$72,$2D,$3E,$6D,
                    $69,$6E,$6F,$72,$3A
       00:02D8: 76 65 72 2D 
       00:02DC: 3E 6D 69 6E 
       00:02E0: 6F 72 3A 
  1971 00:02E3: 00 6B 5F 64  	db	$00,$6B,$5F,$64,$6F,$73,$5F,$6C,$6F,$61,
                    $64,$5F,$64,$72,$69
       00:02E7: 6F 73 5F 6C 
       00:02EB: 6F 61 64 5F 
       00:02EF: 64 72 69 
  1972 00:02F2: 76 65 72 73  	db	$76,$65,$72,$73,$3A,$3A,$64,$72,$69,$76,
                    $65,$72,$2D,$3E,$74
       00:02F6: 3A 3A 64 72 
       00:02FA: 69 76 65 72 
       00:02FE: 2D 3E 74 
  1973 00:0301: 79 70 65 3A  	db	$79,$70,$65,$3A,$00,$6B,$5F,$64,$6F,$73,
                    $5F,$6C,$6F,$61,$64
       00:0305: 00 6B 5F 64 
       00:0309: 6F 73 5F 6C 
       00:030D: 6F 61 64 
  1974 00:0310: 5F 64 72 69  	db	$5F,$64,$72,$69,$76,$65,$72,$73,$3A,$3A,
                    $64,$72,$69,$76,$65
       00:0314: 76 65 72 73 
       00:0318: 3A 3A 64 72 
       00:031C: 69 76 65 
  1975 00:031F: 72 2D 3E 66  	db	$72,$2D,$3E,$66,$5F,$64,$72,$69,$76,$65,
                    $72,$5F,$6C,$6F,$61
       00:0323: 5F 64 72 69 
       00:0327: 76 65 72 5F 
       00:032B: 6C 6F 61 
  1976 00:032E: 64 3A 00 6B  	db	$64,$3A,$00,$6B,$5F,$64,$6F,$73,$5F,$6C,
                    $6F,$61,$64,$5F,$64
       00:0332: 5F 64 6F 73 
       00:0336: 5F 6C 6F 61 
       00:033A: 64 5F 64 
  1977 00:033D: 72 69 76 65  	db	$72,$69,$76,$65,$72,$73,$5B,$48,$41,$52,
                    $57,$41,$52,$45,$20
       00:0341: 72 73 5B 48 
       00:0345: 41 52 57 41 
       00:0349: 52 45 20 
  1978 00:034C: 4D 41 54 43  	db	$4D,$41,$54,$43,$48,$5D,$3A,$00
       00:0350: 48 5D 3A 00 
  1979 00:0354:              	ends
  1980                        ;
  1981                        ;
  1982                        ;PFXDOSDEVICE k_create_dos_device(UINT type)
  1983                        ;{
  1984                        	.line	88
  1985                        	.line	89
  1986                        	FXDOS
  1987                        	xdef	~~k_create_dos_device
  Thu Dec  3 2020 22:25                                                Page 42


  1988                        	func
  1989                        	.function	89
  1990                        ~~k_create_dos_device:
  1991                        	longa	on
  1992                        	longi	on
  1993 08:83C9: 3B           	tsc
  1994 08:83CA: 38           	sec
  1995 08:83CB: E9 2C 00     	sbc	#L15
  1996 08:83CE: 1B           	tcs
  1997 08:83CF: 0B           	phd
  1998 08:83D0: 5B           	tcd
  1999             00000004   type_0	set	4
  2000                        	.block	89
  2001                        ;	INT x = 0;
  2002                        ;
  2003                        ;	BYTE	errorCode;
  2004                        ;	CHAR	byte;
  2005                        ;
  2006                        ;	BYTE	s;
  2007                        ;
  2008                        ;	BOOL isFAT12 = FALSE;
  2009                        ;
  2010                        ;	PFATBOOTSECTOR  pBoot = NULL;
  2011                        ;	PPARTITIONTABLE pPartTable 		= NULL;
  2012                        ;	PFXDOSDEVICE 	pfxdosDevice 	= NULL;
  2013                        ;	PFAT32EXT		pfat32 			
                    = NULL;
  2014                        ;	ULONG lba = 0L;
  2015                        ;
  2016                        ;	INT partitionId = 0x00;
  2017                        ;
  2018                        ;    k_debug_integer("k_create_dos_device:",type);
  2019             00000000   x_1	set	0
  2020             00000002   errorCode_1	set	2
  2021             00000003   byte_1	set	3
  2022             00000004   s_1	set	4
  2023             00000005   isFAT12_1	set	5
  2024             00000006   pBoot_1	set	6
  2025             0000000A   pPartTable_1	set	10
  2026             0000000E   pfxdosDevice_1	set	14
  2027             00000012   pfat32_1	set	18
  2028             00000016   lba_1	set	22
  2029             0000001A   partitionId_1	set	26
  2030                        	.sym	x,0,5,1,16
  2031                        	.sym	errorCode,2,14,1,8
  2032                        	.sym	byte,3,14,1,8
  2033                        	.sym	s,4,14,1,8
  2034                        	.sym	isFAT12,5,14,1,8
  2035                        	.sym	pBoot,6,138,1,32,71
  2036                        	.sym	pPartTable,10,138,1,32,72
  2037                        	.sym	pfxdosDevice,14,138,1,32,101
  2038                        	.sym	pfat32,18,138,1,32,68
  2039                        	.sym	lba,22,18,1,32
  2040                        	.sym	partitionId,26,5,1,16
  2041                        	.sym	type,4,16,6,16
  2042 08:83D1: 64 11        	stz	<L16+x_1
  2043 08:83D3: E2 20        	sep	#$20
  2044                        	longa	off
  Thu Dec  3 2020 22:25                                                Page 43


  2045 08:83D5: 64 16        	stz	<L16+isFAT12_1
  2046 08:83D7: C2 20        	rep	#$20
  2047                        	longa	on
  2048 08:83D9: 64 17        	stz	<L16+pBoot_1
  2049 08:83DB: 64 19        	stz	<L16+pBoot_1+2
  2050 08:83DD: 64 1B        	stz	<L16+pPartTable_1
  2051 08:83DF: 64 1D        	stz	<L16+pPartTable_1+2
  2052 08:83E1: 64 1F        	stz	<L16+pfxdosDevice_1
  2053 08:83E3: 64 21        	stz	<L16+pfxdosDevice_1+2
  2054 08:83E5: 64 23        	stz	<L16+pfat32_1
  2055 08:83E7: 64 25        	stz	<L16+pfat32_1+2
  2056 08:83E9: 64 27        	stz	<L16+lba_1
  2057 08:83EB: 64 29        	stz	<L16+lba_1+2
  2058 08:83ED: 64 2B        	stz	<L16+partitionId_1
  2059                        	.line	107
  2060 08:83EF: D4 30        	pei	<L15+type_0
  2061 08:83F1: F4 xx xx     	pea	#^L14
  2062 08:83F4: F4 xx xx     	pea	#<L14
  2063 08:83F7: 22 xx xx xx  	jsl	~~k_debug_integer
  2064                        ;
  2065                        ;
  2066                        ;    pfxdosDevice = k_mem_allocate_heap(sizeof(FXD
                    OSDEVICE));
  2067                        	.line	110
  2068 08:83FB: F4 C2 02     	pea	#<$2c2
  2069 08:83FE: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  2070 08:8402: 85 1F        	sta	<L16+pfxdosDevice_1
  2071 08:8404: 86 21        	stx	<L16+pfxdosDevice_1+2
  2072                        ;    if(pfxdosDevice)
  2073                        	.line	111
  2074                        ;    {
  2075 08:8406: A5 1F        	lda	<L16+pfxdosDevice_1
  2076 08:8408: 05 21        	ora	<L16+pfxdosDevice_1+2
  2077 08:840A: D0 03        	bne	L18
  2078 08:840C: 82 DF 06     	brl	L10006
  2079                        L18:
  2080                        	.line	112
  2081                        ;    	memset(pfxdosDevice,0,sizeof(FXDOSDEVICE
                    ));
  2082                        	.line	113
  2083 08:840F: F4 C2 02     	pea	#<$2c2
  2084 08:8412: F4 00 00     	pea	#<$0
  2085 08:8415: D4 21        	pei	<L16+pfxdosDevice_1+2
  2086 08:8417: D4 1F        	pei	<L16+pfxdosDevice_1
  2087 08:8419: 22 xx xx xx  	jsl	~~memset
  2088                        ;
  2089                        ;    	switch(type)
  2090                        	.line	115
  2091 08:841D: A5 30        	lda	<L15+type_0
  2092 08:841F: 82 11 00     	brl	L10007
  2093                        ;		{
  2094                        	.line	116
  2095                        ;    	case FXDOS_SDC:
  2096                        	.line	117
  2097                        L10009:
  2098                        ;
  2099                        ;    		//pfxdosDevice->pfInit   = (DOSI
                    NITDEVICE)k_sd_dos_init;
  Thu Dec  3 2020 22:25                                                Page 44


  2100                        ;    		//pfxdosDevice->pfReader = (DOSS
                    ECTORREADER)k_read_sd_sector;
  2101                        ;    		break;
  2102                        	.line	121
  2103 08:8422: 82 22 00     	brl	L10008
  2104                        ;
  2105                        ;    	case FXDOS_HDD:
  2106                        	.line	123
  2107                        L10010:
  2108                        ;
  2109                        ;    		//pfxdosDevice->pfInit   = (DOSI
                    NITDEVICE)k_hd_dos_init;
  2110                        ;    		//pfxdosDevice->pfReader = (DOSS
                    ECTORREADER)k_read_hd_sector;
  2111                        ;    		lba = 0L;
  2112                        	.line	127
  2113 08:8425: 64 27        	stz	<L16+lba_1
  2114 08:8427: 64 29        	stz	<L16+lba_1+2
  2115                        ;
  2116                        ;    		break;
  2117                        	.line	129
  2118 08:8429: 82 1B 00     	brl	L10008
  2119                        ;
  2120                        ;    	case FXDOS_FDD:
  2121                        	.line	131
  2122                        L10011:
  2123                        ;
  2124                        ;    		//pfxdosDevice->pfInit   = (DOSI
                    NITDEVICE)floppy_init;//k_fd_dos_init;
  2125                        ;    		//pfxdosDevice->pfReader = (DOSS
                    ECTORREADER)k_read_fd_sector;
  2126                        ;    		lba = 0L;
  2127                        	.line	135
  2128 08:842C: 64 27        	stz	<L16+lba_1
  2129 08:842E: 64 29        	stz	<L16+lba_1+2
  2130                        ;
  2131                        ;    		break;
  2132                        	.line	137
  2133 08:8430: 82 14 00     	brl	L10008
  2134                        ;
  2135                        ;		}
  2136                        	.line	139
  2137                        L10007:
  2138                        	xref	~~~swt
  2139 08:8433: 22 xx xx xx  	jsl	~~~swt
  2140 08:8437: 03 00        	dw	3
  2141 08:8439: 05 00        	dw	5
  2142 08:843B: 21 84        	dw	L10009-1
  2143 08:843D: 06 00        	dw	6
  2144 08:843F: 24 84        	dw	L10010-1
  2145 08:8441: 07 00        	dw	7
  2146 08:8443: 2B 84        	dw	L10011-1
  2147 08:8445: 46 84        	dw	L10008-1
  2148                        L10008:
  2149                        ;
  2150                        ;    	k_debug_integer("k_create_dos_device siz
                    e:",sizeof(FXDOSDEVICE));
  2151                        	.line	141
  Thu Dec  3 2020 22:25                                                Page 45


  2152 08:8447: F4 C2 02     	pea	#<$2c2
  2153 08:844A: F4 xx xx     	pea	#^L14+21
  2154 08:844D: F4 xx xx     	pea	#<L14+21
  2155 08:8450: 22 xx xx xx  	jsl	~~k_debug_integer
  2156                        ;
  2157                        ;    	if(!pfxdosDevice->initialized)
  2158                        	.line	143
  2159                        ;    		pfxdosDevice->pfInit((LPVOID)pfx
                    dosDevice);
  2160 08:8454: A0 01 00     	ldy	#$1
  2161 08:8457: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2162 08:8459: 29 FF 00     	and	#$ff
  2163 08:845C: F0 03        	beq	L19
  2164 08:845E: 82 13 00     	brl	L10012
  2165                        L19:
  2166                        	.line	144
  2167 08:8461: D4 21        	pei	<L16+pfxdosDevice_1+2
  2168 08:8463: D4 1F        	pei	<L16+pfxdosDevice_1
  2169 08:8465: A0 B8 02     	ldy	#$2b8
  2170 08:8468: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2171 08:846A: AA           	tax
  2172 08:846B: A0 B6 02     	ldy	#$2b6
  2173 08:846E: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2174                        	xref	~~~lcal
  2175 08:8470: 22 xx xx xx  	jsl	~~~lcal
  2176                        ;
  2177                        ;
  2178                        ;    	if(!pfxdosDevice->initialized)
  2179                        L10012:
  2180                        	.line	147
  2181                        ;    	{
  2182 08:8474: A0 01 00     	ldy	#$1
  2183 08:8477: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2184 08:8479: 29 FF 00     	and	#$ff
  2185 08:847C: F0 03        	beq	L20
  2186 08:847E: 82 21 00     	brl	L10013
  2187                        L20:
  2188                        	.line	148
  2189                        ;    		k_mem_deallocate_heap(pfxdosDevi
                    ce);
  2190                        	.line	149
  2191 08:8481: D4 21        	pei	<L16+pfxdosDevice_1+2
  2192 08:8483: D4 1F        	pei	<L16+pfxdosDevice_1
  2193 08:8485: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  2194                        ;    		return NULL;
  2195                        	.line	150
  2196 08:8489: A9 00 00     	lda	#$0
  2197 08:848C: AA           	tax
  2198 08:848D: A9 00 00     	lda	#$0
  2199                        L21:
  2200 08:8490: A8           	tay
  2201 08:8491: A5 2E        	lda	<L15+2
  2202 08:8493: 85 30        	sta	<L15+2+2
  2203 08:8495: A5 2D        	lda	<L15+1
  2204 08:8497: 85 2F        	sta	<L15+1+2
  2205 08:8499: 2B           	pld
  2206 08:849A: 3B           	tsc
  2207 08:849B: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 46


  2208 08:849C: 69 2E 00     	adc	#L15+2
  2209 08:849F: 1B           	tcs
  2210 08:84A0: 98           	tya
  2211 08:84A1: 6B           	rtl
  2212                        ;    	}
  2213                        	.line	151
  2214                        ;
  2215                        ;		//_MSTR_CTRL[0] |= GABE_CTRL_SDC_LED;
  2216                        ;
  2217                        ;		errorCode = pfxdosDevice->pfReader(lba,s
                    ectorBuffer);
  2218                        L10013:
  2219                        	.line	155
  2220 08:84A2: A9 xx xx     	lda	#<~~sectorBuffer
  2221 08:84A5: 85 01        	sta	<R0
  2222                        	xref	_BEG_DATA
  2223 08:84A7: A9 xx xx     	lda	#_BEG_DATA>>16
  2224 08:84AA: 85 03        	sta	<R0+2
  2225 08:84AC: D4 03        	pei	<R0+2
  2226 08:84AE: D4 01        	pei	<R0
  2227 08:84B0: D4 29        	pei	<L16+lba_1+2
  2228 08:84B2: D4 27        	pei	<L16+lba_1
  2229 08:84B4: A0 BC 02     	ldy	#$2bc
  2230 08:84B7: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2231 08:84B9: AA           	tax
  2232 08:84BA: A0 BA 02     	ldy	#$2ba
  2233 08:84BD: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2234                        	xref	~~~lcal
  2235 08:84BF: 22 xx xx xx  	jsl	~~~lcal
  2236 08:84C3: E2 20        	sep	#$20
  2237                        	longa	off
  2238 08:84C5: 85 13        	sta	<L16+errorCode_1
  2239 08:84C7: C2 20        	rep	#$20
  2240                        	longa	on
  2241                        ;		k_debug_byte_array("pfxdosDevice->pfRead
                    er:\r\n",sectorBuffer,512);
  2242                        	.line	156
  2243 08:84C9: F4 00 00     	pea	#^$200
  2244 08:84CC: F4 00 02     	pea	#<$200
  2245 08:84CF: A9 xx xx     	lda	#<~~sectorBuffer
  2246 08:84D2: 85 01        	sta	<R0
  2247                        	xref	_BEG_DATA
  2248 08:84D4: A9 xx xx     	lda	#_BEG_DATA>>16
  2249 08:84D7: 85 03        	sta	<R0+2
  2250 08:84D9: D4 03        	pei	<R0+2
  2251 08:84DB: D4 01        	pei	<R0
  2252 08:84DD: F4 xx xx     	pea	#^L14+47
  2253 08:84E0: F4 xx xx     	pea	#<L14+47
  2254 08:84E3: 22 xx xx xx  	jsl	~~k_debug_byte_array
  2255                        ;
  2256                        ;		pBoot =  (PFATBOOTSECTOR)sectorBuffer;;
  2257                        	.line	158
  2258 08:84E7: A9 xx xx     	lda	#<~~sectorBuffer
  2259 08:84EA: 85 17        	sta	<L16+pBoot_1
  2260                        	xref	_BEG_DATA
  2261 08:84EC: A9 xx xx     	lda	#_BEG_DATA>>16
  2262 08:84EF: 85 19        	sta	<L16+pBoot_1+2
  2263                        	.line	158
  Thu Dec  3 2020 22:25                                                Page 47


  2264                        ;
  2265                        ;		k_debug_integer("pBoot->sectors_per_clus
                    ter:",pBoot->sectors_per_cluster);
  2266                        	.line	160
  2267 08:84F1: A0 0D 00     	ldy	#$d
  2268 08:84F4: B7 17        	lda	[<L16+pBoot_1],Y
  2269 08:84F6: 29 FF 00     	and	#$ff
  2270 08:84F9: 48           	pha
  2271 08:84FA: F4 xx xx     	pea	#^L14+73
  2272 08:84FD: F4 xx xx     	pea	#<L14+73
  2273 08:8500: 22 xx xx xx  	jsl	~~k_debug_integer
  2274                        ;		k_debug_integer("pBoot->root_entry_count
                    :",pBoot->root_entry_count);
  2275                        	.line	161
  2276 08:8504: A0 11 00     	ldy	#$11
  2277 08:8507: B7 17        	lda	[<L16+pBoot_1],Y
  2278 08:8509: 48           	pha
  2279 08:850A: F4 xx xx     	pea	#^L14+101
  2280 08:850D: F4 xx xx     	pea	#<L14+101
  2281 08:8510: 22 xx xx xx  	jsl	~~k_debug_integer
  2282                        ;		k_debug_integer("pBoot->total_sectors_16
                    :",pBoot->total_sectors_16);
  2283                        	.line	162
  2284 08:8514: A0 13 00     	ldy	#$13
  2285 08:8517: B7 17        	lda	[<L16+pBoot_1],Y
  2286 08:8519: 48           	pha
  2287 08:851A: F4 xx xx     	pea	#^L14+126
  2288 08:851D: F4 xx xx     	pea	#<L14+126
  2289 08:8520: 22 xx xx xx  	jsl	~~k_debug_integer
  2290                        ;		k_debug_integer("pBoot->sectors_per_fat:
                    ",pBoot->sectors_per_fat);
  2291                        	.line	163
  2292 08:8524: A0 16 00     	ldy	#$16
  2293 08:8527: B7 17        	lda	[<L16+pBoot_1],Y
  2294 08:8529: 48           	pha
  2295 08:852A: F4 xx xx     	pea	#^L14+151
  2296 08:852D: F4 xx xx     	pea	#<L14+151
  2297 08:8530: 22 xx xx xx  	jsl	~~k_debug_integer
  2298                        ;		k_debug_integer("pBoot->sectors_per_trac
                    k:",pBoot->sectors_per_track);
  2299                        	.line	164
  2300 08:8534: A0 18 00     	ldy	#$18
  2301 08:8537: B7 17        	lda	[<L16+pBoot_1],Y
  2302 08:8539: 48           	pha
  2303 08:853A: F4 xx xx     	pea	#^L14+175
  2304 08:853D: F4 xx xx     	pea	#<L14+175
  2305 08:8540: 22 xx xx xx  	jsl	~~k_debug_integer
  2306                        ;		k_debug_nstrings("pBoot->vol_name:",pBoo
                    t->vol_name,11);
  2307                        	.line	165
  2308 08:8544: F4 0B 00     	pea	#<$b
  2309 08:8547: 18           	clc
  2310 08:8548: A9 2B 00     	lda	#$2b
  2311 08:854B: 65 17        	adc	<L16+pBoot_1
  2312 08:854D: 85 01        	sta	<R0
  2313 08:854F: A9 00 00     	lda	#$0
  2314 08:8552: 65 19        	adc	<L16+pBoot_1+2
  2315 08:8554: 85 03        	sta	<R0+2
  Thu Dec  3 2020 22:25                                                Page 48


  2316 08:8556: D4 03        	pei	<R0+2
  2317 08:8558: D4 01        	pei	<R0
  2318 08:855A: F4 xx xx     	pea	#^L14+201
  2319 08:855D: F4 xx xx     	pea	#<L14+201
  2320 08:8560: 22 xx xx xx  	jsl	~~k_debug_nstrings
  2321                        ;		k_debug_integer("pBoot->bytes_per_sector
                    :",pBoot->bytes_per_sector);
  2322                        	.line	166
  2323 08:8564: A0 0B 00     	ldy	#$b
  2324 08:8567: B7 17        	lda	[<L16+pBoot_1],Y
  2325 08:8569: 48           	pha
  2326 08:856A: F4 xx xx     	pea	#^L14+218
  2327 08:856D: F4 xx xx     	pea	#<L14+218
  2328 08:8570: 22 xx xx xx  	jsl	~~k_debug_integer
  2329                        ;		k_debug_hex("pBoot->fat_table_count:",pB
                    oot->fat_table_count);
  2330                        	.line	167
  2331 08:8574: A0 10 00     	ldy	#$10
  2332 08:8577: B7 17        	lda	[<L16+pBoot_1],Y
  2333 08:8579: 48           	pha
  2334 08:857A: F4 xx xx     	pea	#^L14+243
  2335 08:857D: F4 xx xx     	pea	#<L14+243
  2336 08:8580: 22 xx xx xx  	jsl	~~k_debug_hex
  2337                        ;		k_debug_integer("pBoot->bytes_per_sector
                    :",pBoot->hidden_sector_count);
  2338                        	.line	168
  2339 08:8584: A0 1C 00     	ldy	#$1c
  2340 08:8587: B7 17        	lda	[<L16+pBoot_1],Y
  2341 08:8589: 48           	pha
  2342 08:858A: F4 xx xx     	pea	#^L14+267
  2343 08:858D: F4 xx xx     	pea	#<L14+267
  2344 08:8590: 22 xx xx xx  	jsl	~~k_debug_integer
  2345                        ;
  2346                        ;
  2347                        ;		if(pBoot->total_sectors_16 == 2880)
  2348                        	.line	171
  2349                        ;			isFAT12 = TRUE;
  2350 08:8594: A0 13 00     	ldy	#$13
  2351 08:8597: B7 17        	lda	[<L16+pBoot_1],Y
  2352 08:8599: C9 40 0B     	cmp	#<$b40
  2353 08:859C: F0 03        	beq	L22
  2354 08:859E: 82 08 00     	brl	L10014
  2355                        L22:
  2356                        	.line	172
  2357 08:85A1: E2 20        	sep	#$20
  2358                        	longa	off
  2359 08:85A3: A9 01        	lda	#$1
  2360 08:85A5: 85 16        	sta	<L16+isFAT12_1
  2361 08:85A7: C2 20        	rep	#$20
  2362                        	longa	on
  2363                        ;
  2364                        ;
  2365                        ;		if(!isFAT12)
  2366                        L10014:
  2367                        	.line	175
  2368                        ;		{
  2369 08:85A9: A5 16        	lda	<L16+isFAT12_1
  2370 08:85AB: 29 FF 00     	and	#$ff
  Thu Dec  3 2020 22:25                                                Page 49


  2371 08:85AE: F0 03        	beq	L23
  2372 08:85B0: 82 C3 01     	brl	L10015
  2373                        L23:
  2374                        	.line	176
  2375                        ;			pfat32 =  (PFAT32EXT)(&sectorBuf
                    fer[36]);
  2376                        	.line	177
  2377 08:85B3: A9 xx xx     	lda	#<~~sectorBuffer+36
  2378 08:85B6: 85 23        	sta	<L16+pfat32_1
  2379                        	xref	_BEG_DATA
  2380 08:85B8: A9 xx xx     	lda	#_BEG_DATA>>16
  2381 08:85BB: 85 25        	sta	<L16+pfat32_1+2
  2382                        ;
  2383                        ;			k_debug_long("pfat32->table_size
                    _32:",pfat32->table_size_32);
  2384                        	.line	179
  2385 08:85BD: A0 02 00     	ldy	#$2
  2386 08:85C0: B7 23        	lda	[<L16+pfat32_1],Y
  2387 08:85C2: 48           	pha
  2388 08:85C3: A7 23        	lda	[<L16+pfat32_1]
  2389 08:85C5: 48           	pha
  2390 08:85C6: F4 xx xx     	pea	#^L14+292
  2391 08:85C9: F4 xx xx     	pea	#<L14+292
  2392 08:85CC: 22 xx xx xx  	jsl	~~k_debug_long
  2393                        ;			k_debug_nstrings("pfat32->volume
                    _label:",pfat32->volume_label,11);
  2394                        	.line	180
  2395 08:85D0: F4 0B 00     	pea	#<$b
  2396 08:85D3: 18           	clc
  2397 08:85D4: A9 21 00     	lda	#$21
  2398 08:85D7: 65 23        	adc	<L16+pfat32_1
  2399 08:85D9: 85 01        	sta	<R0
  2400 08:85DB: A9 00 00     	lda	#$0
  2401 08:85DE: 65 25        	adc	<L16+pfat32_1+2
  2402 08:85E0: 85 03        	sta	<R0+2
  2403 08:85E2: D4 03        	pei	<R0+2
  2404 08:85E4: D4 01        	pei	<R0
  2405 08:85E6: F4 xx xx     	pea	#^L14+315
  2406 08:85E9: F4 xx xx     	pea	#<L14+315
  2407 08:85EC: 22 xx xx xx  	jsl	~~k_debug_nstrings
  2408                        ;
  2409                        ;			for(x=0;x<4;x++)
  2410                        	.line	182
  2411 08:85F0: 64 11        	stz	<L16+x_1
  2412                        L10018:
  2413                        ;			{
  2414                        	.line	183
  2415                        ;				k_debug_integer("*** par
                    tition table:",x);
  2416                        	.line	184
  2417 08:85F2: D4 11        	pei	<L16+x_1
  2418 08:85F4: F4 xx xx     	pea	#^L14+337
  2419 08:85F7: F4 xx xx     	pea	#<L14+337
  2420 08:85FA: 22 xx xx xx  	jsl	~~k_debug_integer
  2421                        ;
  2422                        ;				pPartTable = (PPARTITION
                    TABLE)&sectorBuffer[FAT_PARTITION_TABLE_1 + (0x10 * x)];
  2423                        	.line	186
  Thu Dec  3 2020 22:25                                                Page 50


  2424 08:85FE: A5 11        	lda	<L16+x_1
  2425 08:8600: 0A           	asl	A
  2426 08:8601: 0A           	asl	A
  2427 08:8602: 0A           	asl	A
  2428 08:8603: 0A           	asl	A
  2429 08:8604: 85 01        	sta	<R0
  2430 08:8606: 18           	clc
  2431 08:8607: A9 BE 01     	lda	#$1be
  2432 08:860A: 65 01        	adc	<R0
  2433 08:860C: 85 05        	sta	<R1
  2434 08:860E: 18           	clc
  2435 08:860F: A9 xx xx     	lda	#<~~sectorBuffer
  2436 08:8612: 65 05        	adc	<R1
  2437 08:8614: 85 01        	sta	<R0
  2438 08:8616: A5 01        	lda	<R0
  2439 08:8618: 85 1B        	sta	<L16+pPartTable_1
  2440                        	xref	_BEG_DATA
  2441 08:861A: A9 xx xx     	lda	#_BEG_DATA>>16
  2442 08:861D: 85 1D        	sta	<L16+pPartTable_1+2
  2443                        ;
  2444                        ;				if(pPartTable->partition
                    _type == FAT_PARTITION_TYPE_DOS30 ||
  2445                        	.line	188
  2446                        ;				   pPartTable->partition
                    _type == FAT_PARTITION_TYPE_DOS33 ||
  2447                        ;				   pPartTable->partition
                    _type == FAT_PARTITION_TYPE_DOS70)
  2448                        ;				{
  2449 08:861F: E2 20        	sep	#$20
  2450                        	longa	off
  2451 08:8621: A0 04 00     	ldy	#$4
  2452 08:8624: B7 1B        	lda	[<L16+pPartTable_1],Y
  2453 08:8626: C9 04        	cmp	#<$4
  2454 08:8628: C2 20        	rep	#$20
  2455                        	longa	on
  2456 08:862A: D0 03        	bne	L25
  2457 08:862C: 82 20 00     	brl	L24
  2458                        L25:
  2459 08:862F: E2 20        	sep	#$20
  2460                        	longa	off
  2461 08:8631: A0 04 00     	ldy	#$4
  2462 08:8634: B7 1B        	lda	[<L16+pPartTable_1],Y
  2463 08:8636: C9 06        	cmp	#<$6
  2464 08:8638: C2 20        	rep	#$20
  2465                        	longa	on
  2466 08:863A: D0 03        	bne	L26
  2467 08:863C: 82 10 00     	brl	L24
  2468                        L26:
  2469 08:863F: E2 20        	sep	#$20
  2470                        	longa	off
  2471 08:8641: A0 04 00     	ldy	#$4
  2472 08:8644: B7 1B        	lda	[<L16+pPartTable_1],Y
  2473 08:8646: C9 0E        	cmp	#<$e
  2474 08:8648: C2 20        	rep	#$20
  2475                        	longa	on
  2476 08:864A: F0 03        	beq	L27
  2477 08:864C: 82 17 00     	brl	L10019
  2478                        L27:
  Thu Dec  3 2020 22:25                                                Page 51


  2479                        L24:
  2480                        	.line	191
  2481                        ;					k_debug_hex("FAT
                    16 filesystem found from partition:", pPartTable->partition_
                    type);
  2482                        	.line	192
  2483 08:864F: A0 04 00     	ldy	#$4
  2484 08:8652: B7 1B        	lda	[<L16+pPartTable_1],Y
  2485 08:8654: 48           	pha
  2486 08:8655: F4 xx xx     	pea	#^L14+358
  2487 08:8658: F4 xx xx     	pea	#<L14+358
  2488 08:865B: 22 xx xx xx  	jsl	~~k_debug_hex
  2489                        ;					partitionId = x;
  2490                        	.line	193
  2491 08:865F: A5 11        	lda	<L16+x_1
  2492 08:8661: 85 2B        	sta	<L16+partitionId_1
  2493                        ;					break;
  2494                        	.line	194
  2495 08:8663: 82 1F 00     	brl	L10017
  2496                        ;				}
  2497                        	.line	195
  2498                        ;				else
  2499                        L10019:
  2500                        ;				{
  2501                        	.line	197
  2502                        ;					k_debug_hex("***
                     pPartTable->partition_type:",pPartTable->partition_type);
  2503                        	.line	198
  2504 08:8666: A0 04 00     	ldy	#$4
  2505 08:8669: B7 1B        	lda	[<L16+pPartTable_1],Y
  2506 08:866B: 48           	pha
  2507 08:866C: F4 xx xx     	pea	#^L14+397
  2508 08:866F: F4 xx xx     	pea	#<L14+397
  2509 08:8672: 22 xx xx xx  	jsl	~~k_debug_hex
  2510                        ;				}
  2511                        	.line	199
  2512                        ;			}
  2513                        	.line	200
  2514                        L10016:
  2515 08:8676: E6 11        	inc	<L16+x_1
  2516 08:8678: A5 11        	lda	<L16+x_1
  2517 08:867A: 30 06        	bmi	L28
  2518 08:867C: 3A           	dea
  2519 08:867D: 3A           	dea
  2520 08:867E: 3A           	dea
  2521 08:867F: 3A           	dea
  2522 08:8680: 10 03        	bpl	L29
  2523                        L28:
  2524 08:8682: 82 6D FF     	brl	L10018
  2525                        L29:
  2526                        L10017:
  2527                        ;
  2528                        ;
  2529                        ;			memcpy(&pfxdosDevice->partitionT
                    able,&sectorBuffer[FAT_PARTITION_TABLE_1 + (0x10 * partition
                    Id)],sizeof(PARTITIONTABLE));
  2530                        	.line	203
  2531 08:8685: F4 10 00     	pea	#<$10
  Thu Dec  3 2020 22:25                                                Page 52


  2532 08:8688: A5 2B        	lda	<L16+partitionId_1
  2533 08:868A: 0A           	asl	A
  2534 08:868B: 0A           	asl	A
  2535 08:868C: 0A           	asl	A
  2536 08:868D: 0A           	asl	A
  2537 08:868E: 85 05        	sta	<R1
  2538 08:8690: 18           	clc
  2539 08:8691: A9 BE 01     	lda	#$1be
  2540 08:8694: 65 05        	adc	<R1
  2541 08:8696: 85 09        	sta	<R2
  2542 08:8698: 18           	clc
  2543 08:8699: A9 xx xx     	lda	#<~~sectorBuffer
  2544 08:869C: 65 09        	adc	<R2
  2545 08:869E: 85 05        	sta	<R1
  2546 08:86A0: A5 05        	lda	<R1
  2547 08:86A2: 85 01        	sta	<R0
  2548                        	xref	_BEG_DATA
  2549 08:86A4: A9 xx xx     	lda	#_BEG_DATA>>16
  2550 08:86A7: 85 03        	sta	<R0+2
  2551 08:86A9: D4 03        	pei	<R0+2
  2552 08:86AB: D4 01        	pei	<R0
  2553 08:86AD: 18           	clc
  2554 08:86AE: A9 7B 00     	lda	#$7b
  2555 08:86B1: 65 1F        	adc	<L16+pfxdosDevice_1
  2556 08:86B3: 85 05        	sta	<R1
  2557 08:86B5: A9 00 00     	lda	#$0
  2558 08:86B8: 65 21        	adc	<L16+pfxdosDevice_1+2
  2559 08:86BA: 85 07        	sta	<R1+2
  2560 08:86BC: D4 07        	pei	<R1+2
  2561 08:86BE: D4 05        	pei	<R1
  2562 08:86C0: 22 xx xx xx  	jsl	~~memcpy
  2563                        ;			k_debug_hex ("***fxdosDevice fir
                    st_byte:",pfxdosDevice->partitionTable.first_byte);
  2564                        	.line	204
  2565 08:86C4: A0 7B 00     	ldy	#$7b
  2566 08:86C7: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2567 08:86C9: 48           	pha
  2568 08:86CA: F4 xx xx     	pea	#^L14+429
  2569 08:86CD: F4 xx xx     	pea	#<L14+429
  2570 08:86D0: 22 xx xx xx  	jsl	~~k_debug_hex
  2571                        ;			k_debug_hex ("***fxdosDevice sta
                    rt_chs0:",pfxdosDevice->partitionTable.start_chs[0]);
  2572                        	.line	205
  2573 08:86D4: A0 7C 00     	ldy	#$7c
  2574 08:86D7: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2575 08:86D9: 48           	pha
  2576 08:86DA: F4 xx xx     	pea	#^L14+456
  2577 08:86DD: F4 xx xx     	pea	#<L14+456
  2578 08:86E0: 22 xx xx xx  	jsl	~~k_debug_hex
  2579                        ;			k_debug_hex ("***fxdosDevice sta
                    rt_chs1:",pfxdosDevice->partitionTable.start_chs[1]);
  2580                        	.line	206
  2581 08:86E4: A0 7D 00     	ldy	#$7d
  2582 08:86E7: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2583 08:86E9: 48           	pha
  2584 08:86EA: F4 xx xx     	pea	#^L14+483
  2585 08:86ED: F4 xx xx     	pea	#<L14+483
  2586 08:86F0: 22 xx xx xx  	jsl	~~k_debug_hex
  Thu Dec  3 2020 22:25                                                Page 53


  2587                        ;			k_debug_hex ("***fxdosDevice sta
                    rt_chs2:",pfxdosDevice->partitionTable.start_chs[2]);
  2588                        	.line	207
  2589 08:86F4: A0 7E 00     	ldy	#$7e
  2590 08:86F7: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2591 08:86F9: 48           	pha
  2592 08:86FA: F4 xx xx     	pea	#^L14+510
  2593 08:86FD: F4 xx xx     	pea	#<L14+510
  2594 08:8700: 22 xx xx xx  	jsl	~~k_debug_hex
  2595                        ;			k_debug_hex ("***fxdosDevice par
                    tition_type:",(INT)pfxdosDevice->partitionTable.partition_ty
                    pe);
  2596                        	.line	208
  2597 08:8704: A0 7F 00     	ldy	#$7f
  2598 08:8707: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2599 08:8709: 29 FF 00     	and	#$ff
  2600 08:870C: 48           	pha
  2601 08:870D: F4 xx xx     	pea	#^L14+537
  2602 08:8710: F4 xx xx     	pea	#<L14+537
  2603 08:8713: 22 xx xx xx  	jsl	~~k_debug_hex
  2604                        ;			k_debug_hex ("***fxdosDevice end
                    _chs0:",pfxdosDevice->partitionTable.end_chs[0]);
  2605                        	.line	209
  2606 08:8717: A0 80 00     	ldy	#$80
  2607 08:871A: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2608 08:871C: 48           	pha
  2609 08:871D: F4 xx xx     	pea	#^L14+568
  2610 08:8720: F4 xx xx     	pea	#<L14+568
  2611 08:8723: 22 xx xx xx  	jsl	~~k_debug_hex
  2612                        ;			k_debug_hex ("***fxdosDevice end
                    _chs1:",pfxdosDevice->partitionTable.end_chs[1]);
  2613                        	.line	210
  2614 08:8727: A0 81 00     	ldy	#$81
  2615 08:872A: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2616 08:872C: 48           	pha
  2617 08:872D: F4 xx xx     	pea	#^L14+593
  2618 08:8730: F4 xx xx     	pea	#<L14+593
  2619 08:8733: 22 xx xx xx  	jsl	~~k_debug_hex
  2620                        ;			k_debug_hex ("***fxdosDevice end
                    _chs2:",pfxdosDevice->partitionTable.end_chs[2]);
  2621                        	.line	211
  2622 08:8737: A0 82 00     	ldy	#$82
  2623 08:873A: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2624 08:873C: 48           	pha
  2625 08:873D: F4 xx xx     	pea	#^L14+618
  2626 08:8740: F4 xx xx     	pea	#<L14+618
  2627 08:8743: 22 xx xx xx  	jsl	~~k_debug_hex
  2628                        ;			k_debug_long("***fxdosDevice sta
                    rt_sector:",pfxdosDevice->partitionTable.start_sector);
  2629                        	.line	212
  2630 08:8747: A0 85 00     	ldy	#$85
  2631 08:874A: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2632 08:874C: 48           	pha
  2633 08:874D: A0 83 00     	ldy	#$83
  2634 08:8750: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2635 08:8752: 48           	pha
  2636 08:8753: F4 xx xx     	pea	#^L14+643
  2637 08:8756: F4 xx xx     	pea	#<L14+643
  Thu Dec  3 2020 22:25                                                Page 54


  2638 08:8759: 22 xx xx xx  	jsl	~~k_debug_long
  2639                        ;			k_debug_long("***fxdosDevice len
                    gth_sectors:",pfxdosDevice->partitionTable.length_sectors);
  2640                        	.line	213
  2641 08:875D: A0 89 00     	ldy	#$89
  2642 08:8760: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2643 08:8762: 48           	pha
  2644 08:8763: A0 87 00     	ldy	#$87
  2645 08:8766: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2646 08:8768: 48           	pha
  2647 08:8769: F4 xx xx     	pea	#^L14+672
  2648 08:876C: F4 xx xx     	pea	#<L14+672
  2649 08:876F: 22 xx xx xx  	jsl	~~k_debug_long
  2650                        ;		}
  2651                        	.line	214
  2652                        ;		else
  2653 08:8773: 82 2D 00     	brl	L10020
  2654                        L10015:
  2655                        ;		{
  2656                        	.line	216
  2657                        ;			memset(&pfxdosDevice->partitionT
                    able,0,sizeof(PARTITIONTABLE));
  2658                        	.line	217
  2659 08:8776: F4 10 00     	pea	#<$10
  2660 08:8779: F4 00 00     	pea	#<$0
  2661 08:877C: 18           	clc
  2662 08:877D: A9 7B 00     	lda	#$7b
  2663 08:8780: 65 1F        	adc	<L16+pfxdosDevice_1
  2664 08:8782: 85 01        	sta	<R0
  2665 08:8784: A9 00 00     	lda	#$0
  2666 08:8787: 65 21        	adc	<L16+pfxdosDevice_1+2
  2667 08:8789: 85 03        	sta	<R0+2
  2668 08:878B: D4 03        	pei	<R0+2
  2669 08:878D: D4 01        	pei	<R0
  2670 08:878F: 22 xx xx xx  	jsl	~~memset
  2671                        ;			pPartTable->start_sector = 0;
  2672                        	.line	218
  2673 08:8793: A9 00 00     	lda	#$0
  2674 08:8796: A0 08 00     	ldy	#$8
  2675 08:8799: 97 1B        	sta	[<L16+pPartTable_1],Y
  2676 08:879B: A9 00 00     	lda	#$0
  2677 08:879E: A0 0A 00     	ldy	#$a
  2678 08:87A1: 97 1B        	sta	[<L16+pPartTable_1],Y
  2679                        ;		}
  2680                        	.line	219
  2681                        L10020:
  2682                        ;
  2683                        ;		pfxdosDevice->bsOffset = (pPartTable->st
                    art_sector * FAT_PAGE_SIZE);
  2684                        	.line	221
  2685 08:87A3: A0 0A 00     	ldy	#$a
  2686 08:87A6: B7 1B        	lda	[<L16+pPartTable_1],Y
  2687 08:87A8: 48           	pha
  2688 08:87A9: A0 08 00     	ldy	#$8
  2689 08:87AC: B7 1B        	lda	[<L16+pPartTable_1],Y
  2690 08:87AE: 48           	pha
  2691 08:87AF: A9 09 00     	lda	#$9
  2692                        	xref	~~~lasl
  Thu Dec  3 2020 22:25                                                Page 55


  2693 08:87B2: 22 xx xx xx  	jsl	~~~lasl
  2694 08:87B6: 85 01        	sta	<R0
  2695 08:87B8: 86 03        	stx	<R0+2
  2696 08:87BA: A5 01        	lda	<R0
  2697 08:87BC: A0 8B 02     	ldy	#$28b
  2698 08:87BF: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  2699 08:87C1: A5 03        	lda	<R0+2
  2700 08:87C3: A0 8D 02     	ldy	#$28d
  2701 08:87C6: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  2702                        ;
  2703                        ;		pfxdosDevice->errorCode = pfxdosDevice->
                    pfReader(pfxdosDevice->bsOffset,sectorBuffer);
  2704                        	.line	223
  2705 08:87C8: A9 xx xx     	lda	#<~~sectorBuffer
  2706 08:87CB: 85 01        	sta	<R0
  2707                        	xref	_BEG_DATA
  2708 08:87CD: A9 xx xx     	lda	#_BEG_DATA>>16
  2709 08:87D0: 85 03        	sta	<R0+2
  2710 08:87D2: D4 03        	pei	<R0+2
  2711 08:87D4: D4 01        	pei	<R0
  2712 08:87D6: A0 8D 02     	ldy	#$28d
  2713 08:87D9: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2714 08:87DB: 48           	pha
  2715 08:87DC: A0 8B 02     	ldy	#$28b
  2716 08:87DF: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2717 08:87E1: 48           	pha
  2718 08:87E2: A0 BC 02     	ldy	#$2bc
  2719 08:87E5: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2720 08:87E7: AA           	tax
  2721 08:87E8: A0 BA 02     	ldy	#$2ba
  2722 08:87EB: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2723                        	xref	~~~lcal
  2724 08:87ED: 22 xx xx xx  	jsl	~~~lcal
  2725 08:87F1: E2 20        	sep	#$20
  2726                        	longa	off
  2727 08:87F3: A0 B5 02     	ldy	#$2b5
  2728 08:87F6: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  2729 08:87F8: C2 20        	rep	#$20
  2730                        	longa	on
  2731                        ;		if(!pfxdosDevice->errorCode)
  2732                        	.line	224
  2733                        ;		{
  2734 08:87FA: A0 B5 02     	ldy	#$2b5
  2735 08:87FD: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2736 08:87FF: 29 FF 00     	and	#$ff
  2737 08:8802: F0 03        	beq	L30
  2738 08:8804: 82 E7 02     	brl	L10021
  2739                        L30:
  2740                        	.line	225
  2741                        ;			memcpy(&pfxdosDevice->bootSector
                    ,sectorBuffer,sizeof(FATBOOTSECTOR));
  2742                        	.line	226
  2743 08:8807: F4 74 00     	pea	#<$74
  2744 08:880A: A9 xx xx     	lda	#<~~sectorBuffer
  2745 08:880D: 85 01        	sta	<R0
  2746                        	xref	_BEG_DATA
  2747 08:880F: A9 xx xx     	lda	#_BEG_DATA>>16
  2748 08:8812: 85 03        	sta	<R0+2
  Thu Dec  3 2020 22:25                                                Page 56


  2749 08:8814: D4 03        	pei	<R0+2
  2750 08:8816: D4 01        	pei	<R0
  2751 08:8818: 18           	clc
  2752 08:8819: A9 07 00     	lda	#$7
  2753 08:881C: 65 1F        	adc	<L16+pfxdosDevice_1
  2754 08:881E: 85 05        	sta	<R1
  2755 08:8820: A9 00 00     	lda	#$0
  2756 08:8823: 65 21        	adc	<L16+pfxdosDevice_1+2
  2757 08:8825: 85 07        	sta	<R1+2
  2758 08:8827: D4 07        	pei	<R1+2
  2759 08:8829: D4 05        	pei	<R1
  2760 08:882B: 22 xx xx xx  	jsl	~~memcpy
  2761                        ;
  2762                        ;			k_debug_integer("***fxdosDevice 
                    bytes_per_sector:",(INT)pfxdosDevice->bootSector.bytes_per_s
                    ector);
  2763                        	.line	228
  2764 08:882F: A0 12 00     	ldy	#$12
  2765 08:8832: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2766 08:8834: 48           	pha
  2767 08:8835: F4 xx xx     	pea	#^L14+703
  2768 08:8838: F4 xx xx     	pea	#<L14+703
  2769 08:883B: 22 xx xx xx  	jsl	~~k_debug_integer
  2770                        ;			k_debug_integer("***fxdosDevice 
                    sectors_per_cluster:",(INT)pfxdosDevice->bootSector.sectors_
                    per_cluster);
  2771                        	.line	229
  2772 08:883F: A0 14 00     	ldy	#$14
  2773 08:8842: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2774 08:8844: 29 FF 00     	and	#$ff
  2775 08:8847: 48           	pha
  2776 08:8848: F4 xx xx     	pea	#^L14+736
  2777 08:884B: F4 xx xx     	pea	#<L14+736
  2778 08:884E: 22 xx xx xx  	jsl	~~k_debug_integer
  2779                        ;			k_debug_integer("***fxdosDevice 
                    reserved_sector_count:",(INT)pfxdosDevice->bootSector.reserv
                    ed_sector_count);
  2780                        	.line	230
  2781 08:8852: A0 15 00     	ldy	#$15
  2782 08:8855: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2783 08:8857: 48           	pha
  2784 08:8858: F4 xx xx     	pea	#^L14+772
  2785 08:885B: F4 xx xx     	pea	#<L14+772
  2786 08:885E: 22 xx xx xx  	jsl	~~k_debug_integer
  2787                        ;			k_debug_integer("***fxdosDevice 
                    table_count:",(INT)pfxdosDevice->bootSector.fat_table_count)
                    ;
  2788                        	.line	231
  2789 08:8862: A0 17 00     	ldy	#$17
  2790 08:8865: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2791 08:8867: 29 FF 00     	and	#$ff
  2792 08:886A: 48           	pha
  2793 08:886B: F4 xx xx     	pea	#^L14+810
  2794 08:886E: F4 xx xx     	pea	#<L14+810
  2795 08:8871: 22 xx xx xx  	jsl	~~k_debug_integer
  2796                        ;			k_debug_integer("***fxdosDevice 
                    root_entry_count:",(INT)pfxdosDevice->bootSector.root_entry_
                    count);
  Thu Dec  3 2020 22:25                                                Page 57


  2797                        	.line	232
  2798 08:8875: A0 18 00     	ldy	#$18
  2799 08:8878: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2800 08:887A: 48           	pha
  2801 08:887B: F4 xx xx     	pea	#^L14+838
  2802 08:887E: F4 xx xx     	pea	#<L14+838
  2803 08:8881: 22 xx xx xx  	jsl	~~k_debug_integer
  2804                        ;			k_debug_integer("***fxdosDevice 
                    total_sectors_16:",(INT)pfxdosDevice->bootSector.total_secto
                    rs_16);
  2805                        	.line	233
  2806 08:8885: A0 1A 00     	ldy	#$1a
  2807 08:8888: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2808 08:888A: 48           	pha
  2809 08:888B: F4 xx xx     	pea	#^L14+871
  2810 08:888E: F4 xx xx     	pea	#<L14+871
  2811 08:8891: 22 xx xx xx  	jsl	~~k_debug_integer
  2812                        ;			k_debug_integer("***fxdosDevice 
                    media_type:",(INT)pfxdosDevice->bootSector.media_type);
  2813                        	.line	234
  2814 08:8895: A0 1C 00     	ldy	#$1c
  2815 08:8898: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2816 08:889A: 29 FF 00     	and	#$ff
  2817 08:889D: 48           	pha
  2818 08:889E: F4 xx xx     	pea	#^L14+904
  2819 08:88A1: F4 xx xx     	pea	#<L14+904
  2820 08:88A4: 22 xx xx xx  	jsl	~~k_debug_integer
  2821                        ;			k_debug_integer("***fxdosDevice 
                    sectors_per_fat:",(INT)pfxdosDevice->bootSector.sectors_per_
                    fat);
  2822                        	.line	235
  2823 08:88A8: A0 1D 00     	ldy	#$1d
  2824 08:88AB: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2825 08:88AD: 48           	pha
  2826 08:88AE: F4 xx xx     	pea	#^L14+931
  2827 08:88B1: F4 xx xx     	pea	#<L14+931
  2828 08:88B4: 22 xx xx xx  	jsl	~~k_debug_integer
  2829                        ;			k_debug_integer("***fxdosDevice 
                    sectors_per_track:",(INT)pfxdosDevice->bootSector.sectors_pe
                    r_track);
  2830                        	.line	236
  2831 08:88B8: A0 1F 00     	ldy	#$1f
  2832 08:88BB: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2833 08:88BD: 48           	pha
  2834 08:88BE: F4 xx xx     	pea	#^L14+963
  2835 08:88C1: F4 xx xx     	pea	#<L14+963
  2836 08:88C4: 22 xx xx xx  	jsl	~~k_debug_integer
  2837                        ;			k_debug_integer("***fxdosDevice 
                    head_side_count:",(INT)pfxdosDevice->bootSector.head_side_co
                    unt);
  2838                        	.line	237
  2839 08:88C8: A0 21 00     	ldy	#$21
  2840 08:88CB: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2841 08:88CD: 48           	pha
  2842 08:88CE: F4 xx xx     	pea	#^L14+997
  2843 08:88D1: F4 xx xx     	pea	#<L14+997
  2844 08:88D4: 22 xx xx xx  	jsl	~~k_debug_integer
  2845                        ;			k_debug_integer("***fxdosDevice 
  Thu Dec  3 2020 22:25                                                Page 58


                    hidden_sector_count:",(INT)pfxdosDevice->bootSector.hidden_s
                    ector_count);
  2846                        	.line	238
  2847 08:88D8: A0 23 00     	ldy	#$23
  2848 08:88DB: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2849 08:88DD: 48           	pha
  2850 08:88DE: F4 xx xx     	pea	#^L14+1029
  2851 08:88E1: F4 xx xx     	pea	#<L14+1029
  2852 08:88E4: 22 xx xx xx  	jsl	~~k_debug_integer
  2853                        ;			k_debug_integer("***fxdosDevice 
                    total_sectors_32:",(INT)pfxdosDevice->bootSector.total_secto
                    rs_32);
  2854                        	.line	239
  2855 08:88E8: A0 27 00     	ldy	#$27
  2856 08:88EB: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2857 08:88ED: 48           	pha
  2858 08:88EE: F4 xx xx     	pea	#^L14+1065
  2859 08:88F1: F4 xx xx     	pea	#<L14+1065
  2860 08:88F4: 22 xx xx xx  	jsl	~~k_debug_integer
  2861                        ;
  2862                        ;			strncpy(pfxdosDevice->volume_nam
                    e,pfxdosDevice->bootSector.vol_name,11);
  2863                        	.line	241
  2864 08:88F8: F4 0B 00     	pea	#<$b
  2865 08:88FB: 18           	clc
  2866 08:88FC: A9 32 00     	lda	#$32
  2867 08:88FF: 65 1F        	adc	<L16+pfxdosDevice_1
  2868 08:8901: 85 01        	sta	<R0
  2869 08:8903: A9 00 00     	lda	#$0
  2870 08:8906: 65 21        	adc	<L16+pfxdosDevice_1+2
  2871 08:8908: 85 03        	sta	<R0+2
  2872 08:890A: D4 03        	pei	<R0+2
  2873 08:890C: D4 01        	pei	<R0
  2874 08:890E: 18           	clc
  2875 08:890F: A9 9D 02     	lda	#$29d
  2876 08:8912: 65 1F        	adc	<L16+pfxdosDevice_1
  2877 08:8914: 85 05        	sta	<R1
  2878 08:8916: A9 00 00     	lda	#$0
  2879 08:8919: 65 21        	adc	<L16+pfxdosDevice_1+2
  2880 08:891B: 85 07        	sta	<R1+2
  2881 08:891D: D4 07        	pei	<R1+2
  2882 08:891F: D4 05        	pei	<R1
  2883 08:8921: 22 xx xx xx  	jsl	~~strncpy
  2884                        ;			//pfxdosDevice->volume_name[11] 
                    = 0;
  2885                        ;			k_debug_nstrings("***fxdosDevice
                     Volume Name:",pfxdosDevice->volume_name,11);
  2886                        	.line	243
  2887 08:8925: F4 0B 00     	pea	#<$b
  2888 08:8928: 18           	clc
  2889 08:8929: A9 9D 02     	lda	#$29d
  2890 08:892C: 65 1F        	adc	<L16+pfxdosDevice_1
  2891 08:892E: 85 01        	sta	<R0
  2892 08:8930: A9 00 00     	lda	#$0
  2893 08:8933: 65 21        	adc	<L16+pfxdosDevice_1+2
  2894 08:8935: 85 03        	sta	<R0+2
  2895 08:8937: D4 03        	pei	<R0+2
  2896 08:8939: D4 01        	pei	<R0
  Thu Dec  3 2020 22:25                                                Page 59


  2897 08:893B: F4 xx xx     	pea	#^L14+1098
  2898 08:893E: F4 xx xx     	pea	#<L14+1098
  2899 08:8941: 22 xx xx xx  	jsl	~~k_debug_nstrings
  2900                        ;
  2901                        ;			pfxdosDevice->root_entry_count =
                     pfxdosDevice->bootSector.root_entry_count;
  2902                        	.line	245
  2903 08:8945: A0 18 00     	ldy	#$18
  2904 08:8948: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2905 08:894A: A0 93 02     	ldy	#$293
  2906 08:894D: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  2907                        ;
  2908                        ;			pfxdosDevice->fatTableOffset = p
                    fxdosDevice->bsOffset + (pfxdosDevice->bootSector.bytes_per_
                    sector * pfxdosDevice->bootSector.reserved_sector_count);
  2909                        	.line	247
  2910 08:894F: A0 15 00     	ldy	#$15
  2911 08:8952: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2912 08:8954: AA           	tax
  2913 08:8955: A0 12 00     	ldy	#$12
  2914 08:8958: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2915                        	xref	~~~mul
  2916 08:895A: 22 xx xx xx  	jsl	~~~mul
  2917 08:895E: 85 01        	sta	<R0
  2918 08:8960: A5 01        	lda	<R0
  2919 08:8962: 85 01        	sta	<R0
  2920 08:8964: 64 03        	stz	<R0+2
  2921 08:8966: 18           	clc
  2922 08:8967: A5 01        	lda	<R0
  2923 08:8969: A0 8B 02     	ldy	#$28b
  2924 08:896C: 77 1F        	adc	[<L16+pfxdosDevice_1],Y
  2925 08:896E: 85 05        	sta	<R1
  2926 08:8970: A5 03        	lda	<R0+2
  2927 08:8972: A0 8D 02     	ldy	#$28d
  2928 08:8975: 77 1F        	adc	[<L16+pfxdosDevice_1],Y
  2929 08:8977: 85 07        	sta	<R1+2
  2930 08:8979: A5 05        	lda	<R1
  2931 08:897B: A0 99 02     	ldy	#$299
  2932 08:897E: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  2933 08:8980: A5 07        	lda	<R1+2
  2934 08:8982: A0 9B 02     	ldy	#$29b
  2935 08:8985: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  2936                        ;			pfxdosDevice->rootDirSectors = p
                    fxdosDevice->bsOffset + (((ULONG)pfxdosDevice->bootSector.re
                    served_sector_count + ((ULONG)pfxdosDevice->bootSector.secto
                    rs_per_fat * (ULONG)pfxdosDevice->bootSector.fat_table_count
                    )) * (ULONG)pfxdosDevice->bootSector.bytes_per_sector);
  2937                        	.line	248
  2938 08:8987: A0 12 00     	ldy	#$12
  2939 08:898A: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2940 08:898C: 85 01        	sta	<R0
  2941 08:898E: 64 03        	stz	<R0+2
  2942 08:8990: A0 15 00     	ldy	#$15
  2943 08:8993: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2944 08:8995: 85 05        	sta	<R1
  2945 08:8997: 64 07        	stz	<R1+2
  2946 08:8999: A0 17 00     	ldy	#$17
  2947 08:899C: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  Thu Dec  3 2020 22:25                                                Page 60


  2948 08:899E: 29 FF 00     	and	#$ff
  2949 08:89A1: 85 09        	sta	<R2
  2950 08:89A3: 64 0B        	stz	<R2+2
  2951 08:89A5: A0 1D 00     	ldy	#$1d
  2952 08:89A8: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2953 08:89AA: 85 0D        	sta	<R3
  2954 08:89AC: 64 0F        	stz	<R3+2
  2955 08:89AE: D4 0B        	pei	<R2+2
  2956 08:89B0: D4 09        	pei	<R2
  2957 08:89B2: D4 0F        	pei	<R3+2
  2958 08:89B4: D4 0D        	pei	<R3
  2959                        	xref	~~~lmul
  2960 08:89B6: 22 xx xx xx  	jsl	~~~lmul
  2961 08:89BA: 85 09        	sta	<R2
  2962 08:89BC: 86 0B        	stx	<R2+2
  2963 08:89BE: 18           	clc
  2964 08:89BF: A5 09        	lda	<R2
  2965 08:89C1: 65 05        	adc	<R1
  2966 08:89C3: 85 0D        	sta	<R3
  2967 08:89C5: A5 0B        	lda	<R2+2
  2968 08:89C7: 65 07        	adc	<R1+2
  2969 08:89C9: 85 0F        	sta	<R3+2
  2970 08:89CB: D4 03        	pei	<R0+2
  2971 08:89CD: D4 01        	pei	<R0
  2972 08:89CF: D4 0F        	pei	<R3+2
  2973 08:89D1: D4 0D        	pei	<R3
  2974                        	xref	~~~lmul
  2975 08:89D3: 22 xx xx xx  	jsl	~~~lmul
  2976 08:89D7: 85 01        	sta	<R0
  2977 08:89D9: 86 03        	stx	<R0+2
  2978 08:89DB: 18           	clc
  2979 08:89DC: A5 01        	lda	<R0
  2980 08:89DE: A0 8B 02     	ldy	#$28b
  2981 08:89E1: 77 1F        	adc	[<L16+pfxdosDevice_1],Y
  2982 08:89E3: 85 05        	sta	<R1
  2983 08:89E5: A5 03        	lda	<R0+2
  2984 08:89E7: A0 8D 02     	ldy	#$28d
  2985 08:89EA: 77 1F        	adc	[<L16+pfxdosDevice_1],Y
  2986 08:89EC: 85 07        	sta	<R1+2
  2987 08:89EE: A5 05        	lda	<R1
  2988 08:89F0: A0 8F 02     	ldy	#$28f
  2989 08:89F3: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  2990 08:89F5: A5 07        	lda	<R1+2
  2991 08:89F7: A0 91 02     	ldy	#$291
  2992 08:89FA: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  2993                        ;			pfxdosDevice->sectors_per_cluste
                    r = (INT)pfxdosDevice->bootSector.sectors_per_cluster;
  2994                        	.line	249
  2995 08:89FC: A0 14 00     	ldy	#$14
  2996 08:89FF: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  2997 08:8A01: 29 FF 00     	and	#$ff
  2998 08:8A04: A0 97 02     	ldy	#$297
  2999 08:8A07: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  3000                        ;
  3001                        ;			k_debug_long("***fxdosDevice fat
                    Table:",pfxdosDevice->fatTableOffset);
  3002                        	.line	251
  3003 08:8A09: A0 9B 02     	ldy	#$29b
  Thu Dec  3 2020 22:25                                                Page 61


  3004 08:8A0C: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3005 08:8A0E: 48           	pha
  3006 08:8A0F: A0 99 02     	ldy	#$299
  3007 08:8A12: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3008 08:8A14: 48           	pha
  3009 08:8A15: F4 xx xx     	pea	#^L14+1126
  3010 08:8A18: F4 xx xx     	pea	#<L14+1126
  3011 08:8A1B: 22 xx xx xx  	jsl	~~k_debug_long
  3012                        ;
  3013                        ;
  3014                        ;
  3015                        ;			if(pfxdosDevice->pfReader(pfxdos
                    Device->fatTableOffset,sectorBuffer) == 0)
  3016                        	.line	255
  3017                        ;			{
  3018 08:8A1F: A9 xx xx     	lda	#<~~sectorBuffer
  3019 08:8A22: 85 01        	sta	<R0
  3020                        	xref	_BEG_DATA
  3021 08:8A24: A9 xx xx     	lda	#_BEG_DATA>>16
  3022 08:8A27: 85 03        	sta	<R0+2
  3023 08:8A29: D4 03        	pei	<R0+2
  3024 08:8A2B: D4 01        	pei	<R0
  3025 08:8A2D: A0 9B 02     	ldy	#$29b
  3026 08:8A30: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3027 08:8A32: 48           	pha
  3028 08:8A33: A0 99 02     	ldy	#$299
  3029 08:8A36: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3030 08:8A38: 48           	pha
  3031 08:8A39: A0 BC 02     	ldy	#$2bc
  3032 08:8A3C: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3033 08:8A3E: AA           	tax
  3034 08:8A3F: A0 BA 02     	ldy	#$2ba
  3035 08:8A42: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3036                        	xref	~~~lcal
  3037 08:8A44: 22 xx xx xx  	jsl	~~~lcal
  3038 08:8A48: 29 FF 00     	and	#$ff
  3039 08:8A4B: F0 03        	beq	L31
  3040 08:8A4D: 82 28 00     	brl	L10022
  3041                        L31:
  3042                        	.line	256
  3043                        ;				memcpy(&pfxdosDevice->fi
                    leAllocationTable,sectorBuffer,FAT_PAGE_SIZE);
  3044                        	.line	257
  3045 08:8A50: F4 00 02     	pea	#<$200
  3046 08:8A53: A9 xx xx     	lda	#<~~sectorBuffer
  3047 08:8A56: 85 01        	sta	<R0
  3048                        	xref	_BEG_DATA
  3049 08:8A58: A9 xx xx     	lda	#_BEG_DATA>>16
  3050 08:8A5B: 85 03        	sta	<R0+2
  3051 08:8A5D: D4 03        	pei	<R0+2
  3052 08:8A5F: D4 01        	pei	<R0
  3053 08:8A61: 18           	clc
  3054 08:8A62: A9 8B 00     	lda	#$8b
  3055 08:8A65: 65 1F        	adc	<L16+pfxdosDevice_1
  3056 08:8A67: 85 05        	sta	<R1
  3057 08:8A69: A9 00 00     	lda	#$0
  3058 08:8A6C: 65 21        	adc	<L16+pfxdosDevice_1+2
  3059 08:8A6E: 85 07        	sta	<R1+2
  Thu Dec  3 2020 22:25                                                Page 62


  3060 08:8A70: D4 07        	pei	<R1+2
  3061 08:8A72: D4 05        	pei	<R1
  3062 08:8A74: 22 xx xx xx  	jsl	~~memcpy
  3063                        ;			}
  3064                        	.line	258
  3065                        ;
  3066                        ;			k_debug_long("***fxdosDevice roo
                    t offset:",pfxdosDevice->rootDirSectors);
  3067                        L10022:
  3068                        	.line	260
  3069 08:8A78: A0 91 02     	ldy	#$291
  3070 08:8A7B: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3071 08:8A7D: 48           	pha
  3072 08:8A7E: A0 8F 02     	ldy	#$28f
  3073 08:8A81: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3074 08:8A83: 48           	pha
  3075 08:8A84: F4 xx xx     	pea	#^L14+1151
  3076 08:8A87: F4 xx xx     	pea	#<L14+1151
  3077 08:8A8A: 22 xx xx xx  	jsl	~~k_debug_long
  3078                        ;			k_debug_long("***fxdosDevice roo
                    t sizeof(FAT16ENTRY):",sizeof(FAT16ENTRY));
  3079                        	.line	261
  3080 08:8A8E: F4 00 00     	pea	#^$20
  3081 08:8A91: F4 20 00     	pea	#<$20
  3082 08:8A94: F4 xx xx     	pea	#^L14+1179
  3083 08:8A97: F4 xx xx     	pea	#<L14+1179
  3084 08:8A9A: 22 xx xx xx  	jsl	~~k_debug_long
  3085                        ;			k_debug_long("***fxdosDevice roo
                    t root_entry_count:",pfxdosDevice->root_entry_count);
  3086                        	.line	262
  3087 08:8A9E: A0 00 00     	ldy	#$0
  3088 08:8AA1: 5A           	phy
  3089 08:8AA2: A0 93 02     	ldy	#$293
  3090 08:8AA5: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3091 08:8AA7: 7A           	ply
  3092 08:8AA8: 2A           	rol	A
  3093 08:8AA9: 6A           	ror	A
  3094 08:8AAA: 10 01        	bpl	L32
  3095 08:8AAC: 88           	dey
  3096                        L32:
  3097 08:8AAD: 85 01        	sta	<R0
  3098 08:8AAF: 84 03        	sty	<R0+2
  3099 08:8AB1: D4 03        	pei	<R0+2
  3100 08:8AB3: D4 01        	pei	<R0
  3101 08:8AB5: F4 xx xx     	pea	#^L14+1219
  3102 08:8AB8: F4 xx xx     	pea	#<L14+1219
  3103 08:8ABB: 22 xx xx xx  	jsl	~~k_debug_long
  3104                        ;			k_debug_long("***fxdosDevice roo
                    t root_entry_count/sizeof(FAT16ENTRY):",pfxdosDevice->root_e
                    ntry_count/sizeof(FAT16ENTRY));
  3105                        	.line	263
  3106 08:8ABF: A0 93 02     	ldy	#$293
  3107 08:8AC2: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3108 08:8AC4: 4A           	lsr	A
  3109 08:8AC5: 4A           	lsr	A
  3110 08:8AC6: 4A           	lsr	A
  3111 08:8AC7: 4A           	lsr	A
  3112 08:8AC8: 4A           	lsr	A
  Thu Dec  3 2020 22:25                                                Page 63


  3113 08:8AC9: 85 01        	sta	<R0
  3114 08:8ACB: A5 01        	lda	<R0
  3115 08:8ACD: 85 01        	sta	<R0
  3116 08:8ACF: 64 03        	stz	<R0+2
  3117 08:8AD1: D4 03        	pei	<R0+2
  3118 08:8AD3: D4 01        	pei	<R0
  3119 08:8AD5: F4 xx xx     	pea	#^L14+1257
  3120 08:8AD8: F4 xx xx     	pea	#<L14+1257
  3121 08:8ADB: 22 xx xx xx  	jsl	~~k_debug_long
  3122                        ;
  3123                        ;
  3124                        ;			pfxdosDevice->rootEntriesPerPage
                     = pfxdosDevice->root_entry_count/sizeof(FAT16ENTRY);
  3125                        	.line	266
  3126 08:8ADF: A0 93 02     	ldy	#$293
  3127 08:8AE2: B7 1F        	lda	[<L16+pfxdosDevice_1],Y
  3128 08:8AE4: 4A           	lsr	A
  3129 08:8AE5: 4A           	lsr	A
  3130 08:8AE6: 4A           	lsr	A
  3131 08:8AE7: 4A           	lsr	A
  3132 08:8AE8: 4A           	lsr	A
  3133 08:8AE9: A0 95 02     	ldy	#$295
  3134 08:8AEC: 97 1F        	sta	[<L16+pfxdosDevice_1],Y
  3135                        ;
  3136                        ;			/*
  3137                        ;			if(pfxdosDevice->pfReader(pfxdos
                    Device->rootDirSectors,sectorBuffer) == 0)
  3138                        ;			{
  3139                        ;				k_read_volume_name((PFAT
                    16ENTRY)&sectorBuffer[0],pfxdosDevice);
  3140                        ;				k_debug_strings("k_creat
                    e_dos_device::ROOT VOLUME NAME:",pfxdosDevice->root_volume_n
                    ame);
  3141                        ;			}
  3142                        ;			*/
  3143                        ;		}
  3144                        	.line	275
  3145                        ;
  3146                        ;    }
  3147                        L10021:
  3148                        	.line	277
  3149                        ;
  3150                        ;    //GABE_MSTR_CTRL[0] = GABE_MSTR_CTRL[0] & (~G
                    ABE_CTRL_SDC_LED);
  3151                        ;
  3152                        ;	return pfxdosDevice;
  3153                        L10006:
  3154                        	.line	281
  3155 08:8AEE: A6 21        	ldx	<L16+pfxdosDevice_1+2
  3156 08:8AF0: A5 1F        	lda	<L16+pfxdosDevice_1
  3157 08:8AF2: 82 9B F9     	brl	L21
  3158                        ;}
  3159                        	.line	282
  3160                        	.endblock	282
  3161             0000002C   L15	equ	44
  3162             00000011   L16	equ	17
  3163 08:8AF5:              	ends
  3164                        	efunc
  Thu Dec  3 2020 22:25                                                Page 64


  3165                        	.endfunc	282,17,44
  3166                        	.line	282
  3167                        	data
  3168                        L14:
  3169 00:0354: 6B 5F 63 72  	db	$6B,$5F,$63,$72,$65,$61,$74,$65,$5F,$64,
                    $6F,$73,$5F,$64,$65
       00:0358: 65 61 74 65 
       00:035C: 5F 64 6F 73 
       00:0360: 5F 64 65 
  3170 00:0363: 76 69 63 65  	db	$76,$69,$63,$65,$3A,$00,$6B,$5F,$63,$72,
                    $65,$61,$74,$65,$5F
       00:0367: 3A 00 6B 5F 
       00:036B: 63 72 65 61 
       00:036F: 74 65 5F 
  3171 00:0372: 64 6F 73 5F  	db	$64,$6F,$73,$5F,$64,$65,$76,$69,$63,$65,
                    $20,$73,$69,$7A,$65
       00:0376: 64 65 76 69 
       00:037A: 63 65 20 73 
       00:037E: 69 7A 65 
  3172 00:0381: 3A 00 70 66  	db	$3A,$00,$70,$66,$78,$64,$6F,$73,$44,$65,
                    $76,$69,$63,$65,$2D
       00:0385: 78 64 6F 73 
       00:0389: 44 65 76 69 
       00:038D: 63 65 2D 
  3173 00:0390: 3E 70 66 52  	db	$3E,$70,$66,$52,$65,$61,$64,$65,$72,$3A,
                    $0D,$0A,$00,$70,$42
       00:0394: 65 61 64 65 
       00:0398: 72 3A 0D 0A 
       00:039C: 00 70 42 
  3174 00:039F: 6F 6F 74 2D  	db	$6F,$6F,$74,$2D,$3E,$73,$65,$63,$74,$6F,
                    $72,$73,$5F,$70,$65
       00:03A3: 3E 73 65 63 
       00:03A7: 74 6F 72 73 
       00:03AB: 5F 70 65 
  3175 00:03AE: 72 5F 63 6C  	db	$72,$5F,$63,$6C,$75,$73,$74,$65,$72,$3A,
                    $00,$70,$42,$6F,$6F
       00:03B2: 75 73 74 65 
       00:03B6: 72 3A 00 70 
       00:03BA: 42 6F 6F 
  3176 00:03BD: 74 2D 3E 72  	db	$74,$2D,$3E,$72,$6F,$6F,$74,$5F,$65,$6E,
                    $74,$72,$79,$5F,$63
       00:03C1: 6F 6F 74 5F 
       00:03C5: 65 6E 74 72 
       00:03C9: 79 5F 63 
  3177 00:03CC: 6F 75 6E 74  	db	$6F,$75,$6E,$74,$3A,$00,$70,$42,$6F,$6F,
                    $74,$2D,$3E,$74,$6F
       00:03D0: 3A 00 70 42 
       00:03D4: 6F 6F 74 2D 
       00:03D8: 3E 74 6F 
  3178 00:03DB: 74 61 6C 5F  	db	$74,$61,$6C,$5F,$73,$65,$63,$74,$6F,$72,
                    $73,$5F,$31,$36,$3A
       00:03DF: 73 65 63 74 
       00:03E3: 6F 72 73 5F 
       00:03E7: 31 36 3A 
  3179 00:03EA: 00 70 42 6F  	db	$00,$70,$42,$6F,$6F,$74,$2D,$3E,$73,$65,
                    $63,$74,$6F,$72,$73
       00:03EE: 6F 74 2D 3E 
       00:03F2: 73 65 63 74 
  Thu Dec  3 2020 22:25                                                Page 65


       00:03F6: 6F 72 73 
  3180 00:03F9: 5F 70 65 72  	db	$5F,$70,$65,$72,$5F,$66,$61,$74,$3A,$00,
                    $70,$42,$6F,$6F,$74
       00:03FD: 5F 66 61 74 
       00:0401: 3A 00 70 42 
       00:0405: 6F 6F 74 
  3181 00:0408: 2D 3E 73 65  	db	$2D,$3E,$73,$65,$63,$74,$6F,$72,$73,$5F,
                    $70,$65,$72,$5F,$74
       00:040C: 63 74 6F 72 
       00:0410: 73 5F 70 65 
       00:0414: 72 5F 74 
  3182 00:0417: 72 61 63 6B  	db	$72,$61,$63,$6B,$3A,$00,$70,$42,$6F,$6F,
                    $74,$2D,$3E,$76,$6F
       00:041B: 3A 00 70 42 
       00:041F: 6F 6F 74 2D 
       00:0423: 3E 76 6F 
  3183 00:0426: 6C 5F 6E 61  	db	$6C,$5F,$6E,$61,$6D,$65,$3A,$00,$70,$42,
                    $6F,$6F,$74,$2D,$3E
       00:042A: 6D 65 3A 00 
       00:042E: 70 42 6F 6F 
       00:0432: 74 2D 3E 
  3184 00:0435: 62 79 74 65  	db	$62,$79,$74,$65,$73,$5F,$70,$65,$72,$5F,
                    $73,$65,$63,$74,$6F
       00:0439: 73 5F 70 65 
       00:043D: 72 5F 73 65 
       00:0441: 63 74 6F 
  3185 00:0444: 72 3A 00 70  	db	$72,$3A,$00,$70,$42,$6F,$6F,$74,$2D,$3E,
                    $66,$61,$74,$5F,$74
       00:0448: 42 6F 6F 74 
       00:044C: 2D 3E 66 61 
       00:0450: 74 5F 74 
  3186 00:0453: 61 62 6C 65  	db	$61,$62,$6C,$65,$5F,$63,$6F,$75,$6E,$74,
                    $3A,$00,$70,$42,$6F
       00:0457: 5F 63 6F 75 
       00:045B: 6E 74 3A 00 
       00:045F: 70 42 6F 
  3187 00:0462: 6F 74 2D 3E  	db	$6F,$74,$2D,$3E,$62,$79,$74,$65,$73,$5F,
                    $70,$65,$72,$5F,$73
       00:0466: 62 79 74 65 
       00:046A: 73 5F 70 65 
       00:046E: 72 5F 73 
  3188 00:0471: 65 63 74 6F  	db	$65,$63,$74,$6F,$72,$3A,$00,$70,$66,$61,
                    $74,$33,$32,$2D,$3E
       00:0475: 72 3A 00 70 
       00:0479: 66 61 74 33 
       00:047D: 32 2D 3E 
  3189 00:0480: 74 61 62 6C  	db	$74,$61,$62,$6C,$65,$5F,$73,$69,$7A,$65,
                    $5F,$33,$32,$3A,$00
       00:0484: 65 5F 73 69 
       00:0488: 7A 65 5F 33 
       00:048C: 32 3A 00 
  3190 00:048F: 70 66 61 74  	db	$70,$66,$61,$74,$33,$32,$2D,$3E,$76,$6F,
                    $6C,$75,$6D,$65,$5F
       00:0493: 33 32 2D 3E 
       00:0497: 76 6F 6C 75 
       00:049B: 6D 65 5F 
  3191 00:049E: 6C 61 62 65  	db	$6C,$61,$62,$65,$6C,$3A,$00,$2A,$2A,$2A,
                    $20,$70,$61,$72,$74
  Thu Dec  3 2020 22:25                                                Page 66


       00:04A2: 6C 3A 00 2A 
       00:04A6: 2A 2A 20 70 
       00:04AA: 61 72 74 
  3192 00:04AD: 69 74 69 6F  	db	$69,$74,$69,$6F,$6E,$20,$74,$61,$62,$6C,
                    $65,$3A,$00,$46,$41
       00:04B1: 6E 20 74 61 
       00:04B5: 62 6C 65 3A 
       00:04B9: 00 46 41 
  3193 00:04BC: 54 31 36 20  	db	$54,$31,$36,$20,$66,$69,$6C,$65,$73,$79,
                    $73,$74,$65,$6D,$20
       00:04C0: 66 69 6C 65 
       00:04C4: 73 79 73 74 
       00:04C8: 65 6D 20 
  3194 00:04CB: 66 6F 75 6E  	db	$66,$6F,$75,$6E,$64,$20,$66,$72,$6F,$6D,
                    $20,$70,$61,$72,$74
       00:04CF: 64 20 66 72 
       00:04D3: 6F 6D 20 70 
       00:04D7: 61 72 74 
  3195 00:04DA: 69 74 69 6F  	db	$69,$74,$69,$6F,$6E,$3A,$00,$2A,$2A,$2A,
                    $20,$70,$50,$61,$72
       00:04DE: 6E 3A 00 2A 
       00:04E2: 2A 2A 20 70 
       00:04E6: 50 61 72 
  3196 00:04E9: 74 54 61 62  	db	$74,$54,$61,$62,$6C,$65,$2D,$3E,$70,$61,
                    $72,$74,$69,$74,$69
       00:04ED: 6C 65 2D 3E 
       00:04F1: 70 61 72 74 
       00:04F5: 69 74 69 
  3197 00:04F8: 6F 6E 5F 74  	db	$6F,$6E,$5F,$74,$79,$70,$65,$3A,$00,$2A,
                    $2A,$2A,$66,$78,$64
       00:04FC: 79 70 65 3A 
       00:0500: 00 2A 2A 2A 
       00:0504: 66 78 64 
  3198 00:0507: 6F 73 44 65  	db	$6F,$73,$44,$65,$76,$69,$63,$65,$20,$66,
                    $69,$72,$73,$74,$5F
       00:050B: 76 69 63 65 
       00:050F: 20 66 69 72 
       00:0513: 73 74 5F 
  3199 00:0516: 62 79 74 65  	db	$62,$79,$74,$65,$3A,$00,$2A,$2A,$2A,$66,
                    $78,$64,$6F,$73,$44
       00:051A: 3A 00 2A 2A 
       00:051E: 2A 66 78 64 
       00:0522: 6F 73 44 
  3200 00:0525: 65 76 69 63  	db	$65,$76,$69,$63,$65,$20,$73,$74,$61,$72,
                    $74,$5F,$63,$68,$73
       00:0529: 65 20 73 74 
       00:052D: 61 72 74 5F 
       00:0531: 63 68 73 
  3201 00:0534: 30 3A 00 2A  	db	$30,$3A,$00,$2A,$2A,$2A,$66,$78,$64,$6F,
                    $73,$44,$65,$76,$69
       00:0538: 2A 2A 66 78 
       00:053C: 64 6F 73 44 
       00:0540: 65 76 69 
  3202 00:0543: 63 65 20 73  	db	$63,$65,$20,$73,$74,$61,$72,$74,$5F,$63,
                    $68,$73,$31,$3A,$00
       00:0547: 74 61 72 74 
       00:054B: 5F 63 68 73 
       00:054F: 31 3A 00 
  Thu Dec  3 2020 22:25                                                Page 67


  3203 00:0552: 2A 2A 2A 66  	db	$2A,$2A,$2A,$66,$78,$64,$6F,$73,$44,$65,
                    $76,$69,$63,$65,$20
       00:0556: 78 64 6F 73 
       00:055A: 44 65 76 69 
       00:055E: 63 65 20 
  3204 00:0561: 73 74 61 72  	db	$73,$74,$61,$72,$74,$5F,$63,$68,$73,$32,
                    $3A,$00,$2A,$2A,$2A
       00:0565: 74 5F 63 68 
       00:0569: 73 32 3A 00 
       00:056D: 2A 2A 2A 
  3205 00:0570: 66 78 64 6F  	db	$66,$78,$64,$6F,$73,$44,$65,$76,$69,$63,
                    $65,$20,$70,$61,$72
       00:0574: 73 44 65 76 
       00:0578: 69 63 65 20 
       00:057C: 70 61 72 
  3206 00:057F: 74 69 74 69  	db	$74,$69,$74,$69,$6F,$6E,$5F,$74,$79,$70,
                    $65,$3A,$00,$2A,$2A
       00:0583: 6F 6E 5F 74 
       00:0587: 79 70 65 3A 
       00:058B: 00 2A 2A 
  3207 00:058E: 2A 66 78 64  	db	$2A,$66,$78,$64,$6F,$73,$44,$65,$76,$69,
                    $63,$65,$20,$65,$6E
       00:0592: 6F 73 44 65 
       00:0596: 76 69 63 65 
       00:059A: 20 65 6E 
  3208 00:059D: 64 5F 63 68  	db	$64,$5F,$63,$68,$73,$30,$3A,$00,$2A,$2A,
                    $2A,$66,$78,$64,$6F
       00:05A1: 73 30 3A 00 
       00:05A5: 2A 2A 2A 66 
       00:05A9: 78 64 6F 
  3209 00:05AC: 73 44 65 76  	db	$73,$44,$65,$76,$69,$63,$65,$20,$65,$6E,
                    $64,$5F,$63,$68,$73
       00:05B0: 69 63 65 20 
       00:05B4: 65 6E 64 5F 
       00:05B8: 63 68 73 
  3210 00:05BB: 31 3A 00 2A  	db	$31,$3A,$00,$2A,$2A,$2A,$66,$78,$64,$6F,
                    $73,$44,$65,$76,$69
       00:05BF: 2A 2A 66 78 
       00:05C3: 64 6F 73 44 
       00:05C7: 65 76 69 
  3211 00:05CA: 63 65 20 65  	db	$63,$65,$20,$65,$6E,$64,$5F,$63,$68,$73,
                    $32,$3A,$00,$2A,$2A
       00:05CE: 6E 64 5F 63 
       00:05D2: 68 73 32 3A 
       00:05D6: 00 2A 2A 
  3212 00:05D9: 2A 66 78 64  	db	$2A,$66,$78,$64,$6F,$73,$44,$65,$76,$69,
                    $63,$65,$20,$73,$74
       00:05DD: 6F 73 44 65 
       00:05E1: 76 69 63 65 
       00:05E5: 20 73 74 
  3213 00:05E8: 61 72 74 5F  	db	$61,$72,$74,$5F,$73,$65,$63,$74,$6F,$72,
                    $3A,$00,$2A,$2A,$2A
       00:05EC: 73 65 63 74 
       00:05F0: 6F 72 3A 00 
       00:05F4: 2A 2A 2A 
  3214 00:05F7: 66 78 64 6F  	db	$66,$78,$64,$6F,$73,$44,$65,$76,$69,$63,
                    $65,$20,$6C,$65,$6E
       00:05FB: 73 44 65 76 
  Thu Dec  3 2020 22:25                                                Page 68


       00:05FF: 69 63 65 20 
       00:0603: 6C 65 6E 
  3215 00:0606: 67 74 68 5F  	db	$67,$74,$68,$5F,$73,$65,$63,$74,$6F,$72,
                    $73,$3A,$00,$2A,$2A
       00:060A: 73 65 63 74 
       00:060E: 6F 72 73 3A 
       00:0612: 00 2A 2A 
  3216 00:0615: 2A 66 78 64  	db	$2A,$66,$78,$64,$6F,$73,$44,$65,$76,$69,
                    $63,$65,$20,$62,$79
       00:0619: 6F 73 44 65 
       00:061D: 76 69 63 65 
       00:0621: 20 62 79 
  3217 00:0624: 74 65 73 5F  	db	$74,$65,$73,$5F,$70,$65,$72,$5F,$73,$65,
                    $63,$74,$6F,$72,$3A
       00:0628: 70 65 72 5F 
       00:062C: 73 65 63 74 
       00:0630: 6F 72 3A 
  3218 00:0633: 00 2A 2A 2A  	db	$00,$2A,$2A,$2A,$66,$78,$64,$6F,$73,$44,
                    $65,$76,$69,$63,$65
       00:0637: 66 78 64 6F 
       00:063B: 73 44 65 76 
       00:063F: 69 63 65 
  3219 00:0642: 20 73 65 63  	db	$20,$73,$65,$63,$74,$6F,$72,$73,$5F,$70,
                    $65,$72,$5F,$63,$6C
       00:0646: 74 6F 72 73 
       00:064A: 5F 70 65 72 
       00:064E: 5F 63 6C 
  3220 00:0651: 75 73 74 65  	db	$75,$73,$74,$65,$72,$3A,$00,$2A,$2A,$2A,
                    $66,$78,$64,$6F,$73
       00:0655: 72 3A 00 2A 
       00:0659: 2A 2A 66 78 
       00:065D: 64 6F 73 
  3221 00:0660: 44 65 76 69  	db	$44,$65,$76,$69,$63,$65,$20,$72,$65,$73,
                    $65,$72,$76,$65,$64
       00:0664: 63 65 20 72 
       00:0668: 65 73 65 72 
       00:066C: 76 65 64 
  3222 00:066F: 5F 73 65 63  	db	$5F,$73,$65,$63,$74,$6F,$72,$5F,$63,$6F,
                    $75,$6E,$74,$3A,$00
       00:0673: 74 6F 72 5F 
       00:0677: 63 6F 75 6E 
       00:067B: 74 3A 00 
  3223 00:067E: 2A 2A 2A 66  	db	$2A,$2A,$2A,$66,$78,$64,$6F,$73,$44,$65,
                    $76,$69,$63,$65,$20
       00:0682: 78 64 6F 73 
       00:0686: 44 65 76 69 
       00:068A: 63 65 20 
  3224 00:068D: 74 61 62 6C  	db	$74,$61,$62,$6C,$65,$5F,$63,$6F,$75,$6E,
                    $74,$3A,$00,$2A,$2A
       00:0691: 65 5F 63 6F 
       00:0695: 75 6E 74 3A 
       00:0699: 00 2A 2A 
  3225 00:069C: 2A 66 78 64  	db	$2A,$66,$78,$64,$6F,$73,$44,$65,$76,$69,
                    $63,$65,$20,$72,$6F
       00:06A0: 6F 73 44 65 
       00:06A4: 76 69 63 65 
       00:06A8: 20 72 6F 
  3226 00:06AB: 6F 74 5F 65  	db	$6F,$74,$5F,$65,$6E,$74,$72,$79,$5F,$63,
  Thu Dec  3 2020 22:25                                                Page 69


                    $6F,$75,$6E,$74,$3A
       00:06AF: 6E 74 72 79 
       00:06B3: 5F 63 6F 75 
       00:06B7: 6E 74 3A 
  3227 00:06BA: 00 2A 2A 2A  	db	$00,$2A,$2A,$2A,$66,$78,$64,$6F,$73,$44,
                    $65,$76,$69,$63,$65
       00:06BE: 66 78 64 6F 
       00:06C2: 73 44 65 76 
       00:06C6: 69 63 65 
  3228 00:06C9: 20 74 6F 74  	db	$20,$74,$6F,$74,$61,$6C,$5F,$73,$65,$63,
                    $74,$6F,$72,$73,$5F
       00:06CD: 61 6C 5F 73 
       00:06D1: 65 63 74 6F 
       00:06D5: 72 73 5F 
  3229 00:06D8: 31 36 3A 00  	db	$31,$36,$3A,$00,$2A,$2A,$2A,$66,$78,$64,
                    $6F,$73,$44,$65,$76
       00:06DC: 2A 2A 2A 66 
       00:06E0: 78 64 6F 73 
       00:06E4: 44 65 76 
  3230 00:06E7: 69 63 65 20  	db	$69,$63,$65,$20,$6D,$65,$64,$69,$61,$5F,
                    $74,$79,$70,$65,$3A
       00:06EB: 6D 65 64 69 
       00:06EF: 61 5F 74 79 
       00:06F3: 70 65 3A 
  3231 00:06F6: 00 2A 2A 2A  	db	$00,$2A,$2A,$2A,$66,$78,$64,$6F,$73,$44,
                    $65,$76,$69,$63,$65
       00:06FA: 66 78 64 6F 
       00:06FE: 73 44 65 76 
       00:0702: 69 63 65 
  3232 00:0705: 20 73 65 63  	db	$20,$73,$65,$63,$74,$6F,$72,$73,$5F,$70,
                    $65,$72,$5F,$66,$61
       00:0709: 74 6F 72 73 
       00:070D: 5F 70 65 72 
       00:0711: 5F 66 61 
  3233 00:0714: 74 3A 00 2A  	db	$74,$3A,$00,$2A,$2A,$2A,$66,$78,$64,$6F,
                    $73,$44,$65,$76,$69
       00:0718: 2A 2A 66 78 
       00:071C: 64 6F 73 44 
       00:0720: 65 76 69 
  3234 00:0723: 63 65 20 73  	db	$63,$65,$20,$73,$65,$63,$74,$6F,$72,$73,
                    $5F,$70,$65,$72,$5F
       00:0727: 65 63 74 6F 
       00:072B: 72 73 5F 70 
       00:072F: 65 72 5F 
  3235 00:0732: 74 72 61 63  	db	$74,$72,$61,$63,$6B,$3A,$00,$2A,$2A,$2A,
                    $66,$78,$64,$6F,$73
       00:0736: 6B 3A 00 2A 
       00:073A: 2A 2A 66 78 
       00:073E: 64 6F 73 
  3236 00:0741: 44 65 76 69  	db	$44,$65,$76,$69,$63,$65,$20,$68,$65,$61,
                    $64,$5F,$73,$69,$64
       00:0745: 63 65 20 68 
       00:0749: 65 61 64 5F 
       00:074D: 73 69 64 
  3237 00:0750: 65 5F 63 6F  	db	$65,$5F,$63,$6F,$75,$6E,$74,$3A,$00,$2A,
                    $2A,$2A,$66,$78,$64
       00:0754: 75 6E 74 3A 
       00:0758: 00 2A 2A 2A 
  Thu Dec  3 2020 22:25                                                Page 70


       00:075C: 66 78 64 
  3238 00:075F: 6F 73 44 65  	db	$6F,$73,$44,$65,$76,$69,$63,$65,$20,$68,
                    $69,$64,$64,$65,$6E
       00:0763: 76 69 63 65 
       00:0767: 20 68 69 64 
       00:076B: 64 65 6E 
  3239 00:076E: 5F 73 65 63  	db	$5F,$73,$65,$63,$74,$6F,$72,$5F,$63,$6F,
                    $75,$6E,$74,$3A,$00
       00:0772: 74 6F 72 5F 
       00:0776: 63 6F 75 6E 
       00:077A: 74 3A 00 
  3240 00:077D: 2A 2A 2A 66  	db	$2A,$2A,$2A,$66,$78,$64,$6F,$73,$44,$65,
                    $76,$69,$63,$65,$20
       00:0781: 78 64 6F 73 
       00:0785: 44 65 76 69 
       00:0789: 63 65 20 
  3241 00:078C: 74 6F 74 61  	db	$74,$6F,$74,$61,$6C,$5F,$73,$65,$63,$74,
                    $6F,$72,$73,$5F,$33
       00:0790: 6C 5F 73 65 
       00:0794: 63 74 6F 72 
       00:0798: 73 5F 33 
  3242 00:079B: 32 3A 00 2A  	db	$32,$3A,$00,$2A,$2A,$2A,$66,$78,$64,$6F,
                    $73,$44,$65,$76,$69
       00:079F: 2A 2A 66 78 
       00:07A3: 64 6F 73 44 
       00:07A7: 65 76 69 
  3243 00:07AA: 63 65 20 56  	db	$63,$65,$20,$56,$6F,$6C,$75,$6D,$65,$20,
                    $4E,$61,$6D,$65,$3A
       00:07AE: 6F 6C 75 6D 
       00:07B2: 65 20 4E 61 
       00:07B6: 6D 65 3A 
  3244 00:07B9: 00 2A 2A 2A  	db	$00,$2A,$2A,$2A,$66,$78,$64,$6F,$73,$44,
                    $65,$76,$69,$63,$65
       00:07BD: 66 78 64 6F 
       00:07C1: 73 44 65 76 
       00:07C5: 69 63 65 
  3245 00:07C8: 20 66 61 74  	db	$20,$66,$61,$74,$54,$61,$62,$6C,$65,$3A,
                    $00,$2A,$2A,$2A,$66
       00:07CC: 54 61 62 6C 
       00:07D0: 65 3A 00 2A 
       00:07D4: 2A 2A 66 
  3246 00:07D7: 78 64 6F 73  	db	$78,$64,$6F,$73,$44,$65,$76,$69,$63,$65,
                    $20,$72,$6F,$6F,$74
       00:07DB: 44 65 76 69 
       00:07DF: 63 65 20 72 
       00:07E3: 6F 6F 74 
  3247 00:07E6: 20 6F 66 66  	db	$20,$6F,$66,$66,$73,$65,$74,$3A,$00,$2A,
                    $2A,$2A,$66,$78,$64
       00:07EA: 73 65 74 3A 
       00:07EE: 00 2A 2A 2A 
       00:07F2: 66 78 64 
  3248 00:07F5: 6F 73 44 65  	db	$6F,$73,$44,$65,$76,$69,$63,$65,$20,$72,
                    $6F,$6F,$74,$20,$73
       00:07F9: 76 69 63 65 
       00:07FD: 20 72 6F 6F 
       00:0801: 74 20 73 
  3249 00:0804: 69 7A 65 6F  	db	$69,$7A,$65,$6F,$66,$28,$46,$41,$54,$31,
                    $36,$45,$4E,$54,$52
  Thu Dec  3 2020 22:25                                                Page 71


       00:0808: 66 28 46 41 
       00:080C: 54 31 36 45 
       00:0810: 4E 54 52 
  3250 00:0813: 59 29 3A 00  	db	$59,$29,$3A,$00,$2A,$2A,$2A,$66,$78,$64,
                    $6F,$73,$44,$65,$76
       00:0817: 2A 2A 2A 66 
       00:081B: 78 64 6F 73 
       00:081F: 44 65 76 
  3251 00:0822: 69 63 65 20  	db	$69,$63,$65,$20,$72,$6F,$6F,$74,$20,$72,
                    $6F,$6F,$74,$5F,$65
       00:0826: 72 6F 6F 74 
       00:082A: 20 72 6F 6F 
       00:082E: 74 5F 65 
  3252 00:0831: 6E 74 72 79  	db	$6E,$74,$72,$79,$5F,$63,$6F,$75,$6E,$74,
                    $3A,$00,$2A,$2A,$2A
       00:0835: 5F 63 6F 75 
       00:0839: 6E 74 3A 00 
       00:083D: 2A 2A 2A 
  3253 00:0840: 66 78 64 6F  	db	$66,$78,$64,$6F,$73,$44,$65,$76,$69,$63,
                    $65,$20,$72,$6F,$6F
       00:0844: 73 44 65 76 
       00:0848: 69 63 65 20 
       00:084C: 72 6F 6F 
  3254 00:084F: 74 20 72 6F  	db	$74,$20,$72,$6F,$6F,$74,$5F,$65,$6E,$74,
                    $72,$79,$5F,$63,$6F
       00:0853: 6F 74 5F 65 
       00:0857: 6E 74 72 79 
       00:085B: 5F 63 6F 
  3255 00:085E: 75 6E 74 2F  	db	$75,$6E,$74,$2F,$73,$69,$7A,$65,$6F,$66,
                    $28,$46,$41,$54,$31
       00:0862: 73 69 7A 65 
       00:0866: 6F 66 28 46 
       00:086A: 41 54 31 
  3256 00:086D: 36 45 4E 54  	db	$36,$45,$4E,$54,$52,$59,$29,$3A,$00
       00:0871: 52 59 29 3A 
       00:0875: 00 
  3257 00:0876:              	ends
  3258                        ;
  3259                        ;
  3260                        ;
  3261                        ;LPCHAR _k_dos_alloc_filename(LPCHAR filename11)
  3262                        ;{
  3263                        	.line	286
  3264                        	.line	287
  3265                        	FXDOS
  3266                        	xdef	~~_k_dos_alloc_filename
  3267                        	func
  3268                        	.function	287
  3269                        ~~_k_dos_alloc_filename:
  3270                        	longa	on
  3271                        	longi	on
  3272 08:8AF5: 3B           	tsc
  3273 08:8AF6: 38           	sec
  3274 08:8AF7: E9 0E 00     	sbc	#L34
  3275 08:8AFA: 1B           	tcs
  3276 08:8AFB: 0B           	phd
  3277 08:8AFC: 5B           	tcd
  3278             00000004   filename11_0	set	4
  Thu Dec  3 2020 22:25                                                Page 72


  3279                        	.block	287
  3280                        ;	UINT index = 0;
  3281                        ;	//UINT p = 0;
  3282                        ;	//UINT dot = 0;
  3283                        ;	LPCHAR lpName = NULL;
  3284                        ;	CHAR ftmp[4] = {0,0,0,0};
  3285                        	data
  3286                        L37:
  3287 00:0876: 00 00 00 00  	db	$0,$0,$0,$0
  3288 00:087A:              	ends
  3289                        ;
  3290                        ;	//k_debug_string("_k_dos_alloc_filename:enter\r\
                    n");
  3291                        ;
  3292                        ;	lpName = (LPCHAR)k_mem_allocate_heap(16);
  3293             00000000   index_1	set	0
  3294             00000002   lpName_1	set	2
  3295             00000006   ftmp_1	set	6
  3296                        	.sym	index,0,16,1,16
  3297                        	.sym	lpName,2,142,1,32
  3298                        	.sym	ftmp,6,110,1,0,4
  3299                        	.sym	filename11,4,142,6,32
  3300 08:8AFD: 64 05        	stz	<L35+index_1
  3301 08:8AFF: 64 07        	stz	<L35+lpName_1
  3302 08:8B01: 64 09        	stz	<L35+lpName_1+2
  3303 08:8B03: F4 xx xx     	pea	#^L37
  3304 08:8B06: F4 xx xx     	pea	#<L37
  3305 08:8B09: 18           	clc
  3306 08:8B0A: 7B           	tdc
  3307 08:8B0B: 69 0B 00     	adc	#<L35+ftmp_1
  3308 08:8B0E: 85 01        	sta	<R0
  3309 08:8B10: A9 00 00     	lda	#$0
  3310 08:8B13: 85 03        	sta	<R0+2
  3311 08:8B15: D4 03        	pei	<R0+2
  3312 08:8B17: D4 01        	pei	<R0
  3313 08:8B19: A9 04 00     	lda	#$4
  3314                        	xref	~~~fmov
  3315 08:8B1C: 22 xx xx xx  	jsl	~~~fmov
  3316                        	.line	296
  3317 08:8B20: F4 10 00     	pea	#<$10
  3318 08:8B23: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  3319 08:8B27: 85 07        	sta	<L35+lpName_1
  3320 08:8B29: 86 09        	stx	<L35+lpName_1+2
  3321                        ;	if(lpName!=NULL)
  3322                        	.line	297
  3323                        ;	{
  3324 08:8B2B: A5 07        	lda	<L35+lpName_1
  3325 08:8B2D: 05 09        	ora	<L35+lpName_1+2
  3326 08:8B2F: D0 03        	bne	L38
  3327 08:8B31: 82 8F 00     	brl	L10023
  3328                        L38:
  3329                        	.line	298
  3330                        ;		//k_debug_string("_k_dos_alloc_filename:
                    copy\r\n");
  3331                        ;		//memset(lpName,0,16);
  3332                        ;		//memcpy(lpName,filename11,8);
  3333                        ;		for(index=0;index<16;index++)
  3334                        	.line	302
  Thu Dec  3 2020 22:25                                                Page 73


  3335 08:8B34: 64 05        	stz	<L35+index_1
  3336                        L10026:
  3337                        ;					lpName[index] = 
                    0;
  3338                        	.line	303
  3339 08:8B36: E2 20        	sep	#$20
  3340                        	longa	off
  3341 08:8B38: A9 00        	lda	#$0
  3342 08:8B3A: A4 05        	ldy	<L35+index_1
  3343 08:8B3C: 97 07        	sta	[<L35+lpName_1],Y
  3344 08:8B3E: C2 20        	rep	#$20
  3345                        	longa	on
  3346                        L10024:
  3347 08:8B40: E6 05        	inc	<L35+index_1
  3348 08:8B42: A5 05        	lda	<L35+index_1
  3349 08:8B44: C9 10 00     	cmp	#<$10
  3350 08:8B47: B0 03        	bcs	L39
  3351 08:8B49: 82 EA FF     	brl	L10026
  3352                        L39:
  3353                        L10025:
  3354                        ;
  3355                        ;		for(index=0;index<8;index++)
  3356                        	.line	305
  3357 08:8B4C: 64 05        	stz	<L35+index_1
  3358                        L10029:
  3359                        ;			lpName[index] = filename11[index
                    ];
  3360                        	.line	306
  3361 08:8B4E: E2 20        	sep	#$20
  3362                        	longa	off
  3363 08:8B50: A4 05        	ldy	<L35+index_1
  3364 08:8B52: B7 12        	lda	[<L34+filename11_0],Y
  3365 08:8B54: A4 05        	ldy	<L35+index_1
  3366 08:8B56: 97 07        	sta	[<L35+lpName_1],Y
  3367 08:8B58: C2 20        	rep	#$20
  3368                        	longa	on
  3369                        L10027:
  3370 08:8B5A: E6 05        	inc	<L35+index_1
  3371 08:8B5C: A5 05        	lda	<L35+index_1
  3372 08:8B5E: C9 08 00     	cmp	#<$8
  3373 08:8B61: B0 03        	bcs	L40
  3374 08:8B63: 82 E8 FF     	brl	L10029
  3375                        L40:
  3376                        L10028:
  3377                        ;
  3378                        ;
  3379                        ;		lpName = k_string_rtrim(lpName);
  3380                        	.line	309
  3381 08:8B66: D4 09        	pei	<L35+lpName_1+2
  3382 08:8B68: D4 07        	pei	<L35+lpName_1
  3383 08:8B6A: 22 xx xx xx  	jsl	~~k_string_rtrim
  3384 08:8B6E: 85 07        	sta	<L35+lpName_1
  3385 08:8B70: 86 09        	stx	<L35+lpName_1+2
  3386                        ;		if(filename11[8]!=' ')
  3387                        	.line	310
  3388                        ;		{
  3389 08:8B72: E2 20        	sep	#$20
  3390                        	longa	off
  Thu Dec  3 2020 22:25                                                Page 74


  3391 08:8B74: A0 08 00     	ldy	#$8
  3392 08:8B77: B7 12        	lda	[<L34+filename11_0],Y
  3393 08:8B79: C9 20        	cmp	#<$20
  3394 08:8B7B: C2 20        	rep	#$20
  3395                        	longa	on
  3396 08:8B7D: D0 03        	bne	L41
  3397 08:8B7F: 82 41 00     	brl	L10030
  3398                        L41:
  3399                        	.line	311
  3400                        ;			strcat(lpName,".");
  3401                        	.line	312
  3402 08:8B82: F4 xx xx     	pea	#^L33
  3403 08:8B85: F4 xx xx     	pea	#<L33
  3404 08:8B88: D4 09        	pei	<L35+lpName_1+2
  3405 08:8B8A: D4 07        	pei	<L35+lpName_1
  3406 08:8B8C: 22 xx xx xx  	jsl	~~strcat
  3407                        ;
  3408                        ;			for(index=0;index<3;index++)
  3409                        	.line	314
  3410 08:8B90: 64 05        	stz	<L35+index_1
  3411                        L10033:
  3412                        ;				ftmp[index] = filename11
                    [index + 8];
  3413                        	.line	315
  3414 08:8B92: 18           	clc
  3415 08:8B93: A9 08 00     	lda	#$8
  3416 08:8B96: 65 05        	adc	<L35+index_1
  3417 08:8B98: 85 01        	sta	<R0
  3418 08:8B9A: E2 20        	sep	#$20
  3419                        	longa	off
  3420 08:8B9C: A4 01        	ldy	<R0
  3421 08:8B9E: B7 12        	lda	[<L34+filename11_0],Y
  3422 08:8BA0: A6 05        	ldx	<L35+index_1
  3423 08:8BA2: 95 0B        	sta	<L35+ftmp_1,X
  3424 08:8BA4: C2 20        	rep	#$20
  3425                        	longa	on
  3426                        L10031:
  3427 08:8BA6: E6 05        	inc	<L35+index_1
  3428 08:8BA8: A5 05        	lda	<L35+index_1
  3429 08:8BAA: C9 03 00     	cmp	#<$3
  3430 08:8BAD: B0 03        	bcs	L42
  3431 08:8BAF: 82 E0 FF     	brl	L10033
  3432                        L42:
  3433                        L10032:
  3434                        ;
  3435                        ;			strcat(lpName,ftmp);
  3436                        	.line	317
  3437 08:8BB2: F4 00 00     	pea	#0
  3438 08:8BB5: 18           	clc
  3439 08:8BB6: 7B           	tdc
  3440 08:8BB7: 69 0B 00     	adc	#<L35+ftmp_1
  3441 08:8BBA: 48           	pha
  3442 08:8BBB: D4 09        	pei	<L35+lpName_1+2
  3443 08:8BBD: D4 07        	pei	<L35+lpName_1
  3444 08:8BBF: 22 xx xx xx  	jsl	~~strcat
  3445                        ;		}
  3446                        	.line	318
  3447                        ;
  Thu Dec  3 2020 22:25                                                Page 75


  3448                        ;		//k_debug_string("_k_ds_alloc_filename:"
                    );
  3449                        ;		//k_debug_string(lpName);
  3450                        ;		//k_debug_string("\r\n");
  3451                        ;	}
  3452                        L10030:
  3453                        	.line	323
  3454                        ;
  3455                        ;	return lpName;
  3456                        L10023:
  3457                        	.line	325
  3458 08:8BC3: A6 09        	ldx	<L35+lpName_1+2
  3459 08:8BC5: A5 07        	lda	<L35+lpName_1
  3460                        L43:
  3461 08:8BC7: A8           	tay
  3462 08:8BC8: A5 10        	lda	<L34+2
  3463 08:8BCA: 85 14        	sta	<L34+2+4
  3464 08:8BCC: A5 0F        	lda	<L34+1
  3465 08:8BCE: 85 13        	sta	<L34+1+4
  3466 08:8BD0: 2B           	pld
  3467 08:8BD1: 3B           	tsc
  3468 08:8BD2: 18           	clc
  3469 08:8BD3: 69 12 00     	adc	#L34+4
  3470 08:8BD6: 1B           	tcs
  3471 08:8BD7: 98           	tya
  3472 08:8BD8: 6B           	rtl
  3473                        ;}
  3474                        	.line	326
  3475                        	.endblock	326
  3476             0000000E   L34	equ	14
  3477             00000005   L35	equ	5
  3478 08:8BD9:              	ends
  3479                        	efunc
  3480                        	.endfunc	326,5,14
  3481                        	.line	326
  3482                        	data
  3483                        L33:
  3484 00:087A: 2E 00        	db	$2E,$00
  3485 00:087C:              	ends
  3486                        ;
  3487                        ;
  3488                        ;
  3489                        ;VOID  k_dos_dealloc_filelist(PFXNODE plist)
  3490                        ;{
  3491                        	.line	330
  3492                        	.line	331
  3493                        	FXDOS
  3494                        	xdef	~~k_dos_dealloc_filelist
  3495                        	func
  3496                        	.function	331
  3497                        ~~k_dos_dealloc_filelist:
  3498                        	longa	on
  3499                        	longi	on
  3500 08:8BD9: 3B           	tsc
  3501 08:8BDA: 38           	sec
  3502 08:8BDB: E9 0C 00     	sbc	#L45
  3503 08:8BDE: 1B           	tcs
  3504 08:8BDF: 0B           	phd
  Thu Dec  3 2020 22:25                                                Page 76


  3505 08:8BE0: 5B           	tcd
  3506             00000004   plist_0	set	4
  3507                        	.block	331
  3508                        ;	PFXNODE p   = plist;
  3509                        ;	PFXNODE tmp = NULL;
  3510                        ;
  3511                        ;	while(p)
  3512             00000000   p_1	set	0
  3513             00000004   tmp_1	set	4
  3514                        	.sym	p,0,138,1,32,5
  3515                        	.sym	tmp,4,138,1,32,5
  3516                        	.sym	plist,4,138,6,32,5
  3517 08:8BE1: A5 10        	lda	<L45+plist_0
  3518 08:8BE3: 85 05        	sta	<L46+p_1
  3519 08:8BE5: A5 12        	lda	<L45+plist_0+2
  3520 08:8BE7: 85 07        	sta	<L46+p_1+2
  3521 08:8BE9: 64 09        	stz	<L46+tmp_1
  3522 08:8BEB: 64 0B        	stz	<L46+tmp_1+2
  3523                        	.line	335
  3524                        L10034:
  3525 08:8BED: A5 05        	lda	<L46+p_1
  3526 08:8BEF: 05 07        	ora	<L46+p_1+2
  3527 08:8BF1: D0 03        	bne	L48
  3528 08:8BF3: 82 4F 00     	brl	L10035
  3529                        L48:
  3530                        ;	{
  3531                        	.line	336
  3532                        ;		tmp = p->next;
  3533                        	.line	337
  3534 08:8BF6: A0 0A 00     	ldy	#$a
  3535 08:8BF9: B7 05        	lda	[<L46+p_1],Y
  3536 08:8BFB: 85 09        	sta	<L46+tmp_1
  3537 08:8BFD: A0 0C 00     	ldy	#$c
  3538 08:8C00: B7 05        	lda	[<L46+p_1],Y
  3539 08:8C02: 85 0B        	sta	<L46+tmp_1+2
  3540                        ;
  3541                        ;		k_mem_deallocate_heap(((PFILEINFO)p->dat
                    a)->pFilename);
  3542                        	.line	339
  3543 08:8C04: A0 02 00     	ldy	#$2
  3544 08:8C07: B7 05        	lda	[<L46+p_1],Y
  3545 08:8C09: 85 01        	sta	<R0
  3546 08:8C0B: A0 04 00     	ldy	#$4
  3547 08:8C0E: B7 05        	lda	[<L46+p_1],Y
  3548 08:8C10: 85 03        	sta	<R0+2
  3549 08:8C12: A0 03 00     	ldy	#$3
  3550 08:8C15: B7 01        	lda	[<R0],Y
  3551 08:8C17: 48           	pha
  3552 08:8C18: A0 01 00     	ldy	#$1
  3553 08:8C1B: B7 01        	lda	[<R0],Y
  3554 08:8C1D: 48           	pha
  3555 08:8C1E: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  3556                        ;		k_mem_deallocate_heap(p->data);
  3557                        	.line	340
  3558 08:8C22: A0 04 00     	ldy	#$4
  3559 08:8C25: B7 05        	lda	[<L46+p_1],Y
  3560 08:8C27: 48           	pha
  3561 08:8C28: A0 02 00     	ldy	#$2
  Thu Dec  3 2020 22:25                                                Page 77


  3562 08:8C2B: B7 05        	lda	[<L46+p_1],Y
  3563 08:8C2D: 48           	pha
  3564 08:8C2E: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  3565                        ;		k_mem_deallocate_heap(p);
  3566                        	.line	341
  3567 08:8C32: D4 07        	pei	<L46+p_1+2
  3568 08:8C34: D4 05        	pei	<L46+p_1
  3569 08:8C36: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  3570                        ;
  3571                        ;		p = tmp;
  3572                        	.line	343
  3573 08:8C3A: A5 09        	lda	<L46+tmp_1
  3574 08:8C3C: 85 05        	sta	<L46+p_1
  3575 08:8C3E: A5 0B        	lda	<L46+tmp_1+2
  3576 08:8C40: 85 07        	sta	<L46+p_1+2
  3577                        ;	}
  3578                        	.line	344
  3579 08:8C42: 82 A8 FF     	brl	L10034
  3580                        L10035:
  3581                        ;}
  3582                        	.line	345
  3583                        L49:
  3584 08:8C45: A5 0E        	lda	<L45+2
  3585 08:8C47: 85 12        	sta	<L45+2+4
  3586 08:8C49: A5 0D        	lda	<L45+1
  3587 08:8C4B: 85 11        	sta	<L45+1+4
  3588 08:8C4D: 2B           	pld
  3589 08:8C4E: 3B           	tsc
  3590 08:8C4F: 18           	clc
  3591 08:8C50: 69 10 00     	adc	#L45+4
  3592 08:8C53: 1B           	tcs
  3593 08:8C54: 6B           	rtl
  3594                        	.endblock	345
  3595             0000000C   L45	equ	12
  3596             00000005   L46	equ	5
  3597 08:8C55:              	ends
  3598                        	efunc
  3599                        	.endfunc	345,5,12
  3600                        	.line	345
  3601                        ;
  3602                        ;PFILEINFO _k_dos_alloc_fileinfo(FX_FAT_DIR_INFO F
                    AR *direntry)
  3603                        ;{
  3604                        	.line	347
  3605                        	.line	348
  3606                        	FXDOS
  3607                        	xdef	~~_k_dos_alloc_fileinfo
  3608                        	func
  3609                        	.function	348
  3610                        ~~_k_dos_alloc_fileinfo:
  3611                        	longa	on
  3612                        	longi	on
  3613 08:8C55: 3B           	tsc
  3614 08:8C56: 38           	sec
  3615 08:8C57: E9 08 00     	sbc	#L50
  3616 08:8C5A: 1B           	tcs
  3617 08:8C5B: 0B           	phd
  3618 08:8C5C: 5B           	tcd
  Thu Dec  3 2020 22:25                                                Page 78


  3619             00000004   direntry_0	set	4
  3620                        	.block	348
  3621                        ;	PFILEINFO pfi = NULL;
  3622                        ;
  3623                        ;	//k_debug_string("_k_dos_alloc_fileinfo:enter\r\
                    n");
  3624                        ;
  3625                        ;	pfi = k_mem_allocate_heap(sizeof(FILEINFO));
  3626             00000000   pfi_1	set	0
  3627                        	.sym	pfi,0,138,1,32,66
  3628                        	.sym	direntry,4,138,6,32,67
  3629 08:8C5D: 64 05        	stz	<L51+pfi_1
  3630 08:8C5F: 64 07        	stz	<L51+pfi_1+2
  3631                        	.line	353
  3632 08:8C61: F4 11 00     	pea	#<$11
  3633 08:8C64: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  3634 08:8C68: 85 05        	sta	<L51+pfi_1
  3635 08:8C6A: 86 07        	stx	<L51+pfi_1+2
  3636                        ;	if(pfi!=NULL)
  3637                        	.line	354
  3638                        ;	{
  3639 08:8C6C: A5 05        	lda	<L51+pfi_1
  3640 08:8C6E: 05 07        	ora	<L51+pfi_1+2
  3641 08:8C70: D0 03        	bne	L53
  3642 08:8C72: 82 67 00     	brl	L10036
  3643                        L53:
  3644                        	.line	355
  3645                        ;		pfi->type  		 = direntry->DIR
                    _Attr;
  3646                        	.line	356
  3647 08:8C75: E2 20        	sep	#$20
  3648                        	longa	off
  3649 08:8C77: A0 0B 00     	ldy	#$b
  3650 08:8C7A: B7 0C        	lda	[<L50+direntry_0],Y
  3651 08:8C7C: 87 05        	sta	[<L51+pfi_1]
  3652 08:8C7E: C2 20        	rep	#$20
  3653                        	longa	on
  3654                        ;		pfi->lSize 		 = direntry->DIR
                    _FileSize;
  3655                        	.line	357
  3656 08:8C80: A0 1C 00     	ldy	#$1c
  3657 08:8C83: B7 0C        	lda	[<L50+direntry_0],Y
  3658 08:8C85: A0 05 00     	ldy	#$5
  3659 08:8C88: 97 05        	sta	[<L51+pfi_1],Y
  3660 08:8C8A: A0 1E 00     	ldy	#$1e
  3661 08:8C8D: B7 0C        	lda	[<L50+direntry_0],Y
  3662 08:8C8F: A0 07 00     	ldy	#$7
  3663 08:8C92: 97 05        	sta	[<L51+pfi_1],Y
  3664                        ;		pfi->lchangeDate = direntry->DIR_LstAccD
                    ate;
  3665                        	.line	358
  3666 08:8C94: A0 12 00     	ldy	#$12
  3667 08:8C97: B7 0C        	lda	[<L50+direntry_0],Y
  3668 08:8C99: 85 01        	sta	<R0
  3669 08:8C9B: 64 03        	stz	<R0+2
  3670 08:8C9D: A5 01        	lda	<R0
  3671 08:8C9F: A0 0D 00     	ldy	#$d
  3672 08:8CA2: 97 05        	sta	[<L51+pfi_1],Y
  Thu Dec  3 2020 22:25                                                Page 79


  3673 08:8CA4: A5 03        	lda	<R0+2
  3674 08:8CA6: A0 0F 00     	ldy	#$f
  3675 08:8CA9: 97 05        	sta	[<L51+pfi_1],Y
  3676                        ;		pfi->lcreateDate = direntry->DIR_CrtDate
                    ;
  3677                        	.line	359
  3678 08:8CAB: A0 10 00     	ldy	#$10
  3679 08:8CAE: B7 0C        	lda	[<L50+direntry_0],Y
  3680 08:8CB0: 85 01        	sta	<R0
  3681 08:8CB2: 64 03        	stz	<R0+2
  3682 08:8CB4: A5 01        	lda	<R0
  3683 08:8CB6: A0 09 00     	ldy	#$9
  3684 08:8CB9: 97 05        	sta	[<L51+pfi_1],Y
  3685 08:8CBB: A5 03        	lda	<R0+2
  3686 08:8CBD: A0 0B 00     	ldy	#$b
  3687 08:8CC0: 97 05        	sta	[<L51+pfi_1],Y
  3688                        ;		pfi->pFilename   = _k_dos_alloc_filename
                    (direntry->DIR_Name);
  3689                        	.line	360
  3690 08:8CC2: D4 0E        	pei	<L50+direntry_0+2
  3691 08:8CC4: D4 0C        	pei	<L50+direntry_0
  3692 08:8CC6: 22 F5 8A 08  	jsl	~~_k_dos_alloc_filename
  3693 08:8CCA: 85 01        	sta	<R0
  3694 08:8CCC: 86 03        	stx	<R0+2
  3695 08:8CCE: A5 01        	lda	<R0
  3696 08:8CD0: A0 01 00     	ldy	#$1
  3697 08:8CD3: 97 05        	sta	[<L51+pfi_1],Y
  3698 08:8CD5: A5 03        	lda	<R0+2
  3699 08:8CD7: A0 03 00     	ldy	#$3
  3700 08:8CDA: 97 05        	sta	[<L51+pfi_1],Y
  3701                        ;	}
  3702                        	.line	361
  3703                        ;
  3704                        ;	return pfi;
  3705                        L10036:
  3706                        	.line	363
  3707 08:8CDC: A6 07        	ldx	<L51+pfi_1+2
  3708 08:8CDE: A5 05        	lda	<L51+pfi_1
  3709                        L54:
  3710 08:8CE0: A8           	tay
  3711 08:8CE1: A5 0A        	lda	<L50+2
  3712 08:8CE3: 85 0E        	sta	<L50+2+4
  3713 08:8CE5: A5 09        	lda	<L50+1
  3714 08:8CE7: 85 0D        	sta	<L50+1+4
  3715 08:8CE9: 2B           	pld
  3716 08:8CEA: 3B           	tsc
  3717 08:8CEB: 18           	clc
  3718 08:8CEC: 69 0C 00     	adc	#L50+4
  3719 08:8CEF: 1B           	tcs
  3720 08:8CF0: 98           	tya
  3721 08:8CF1: 6B           	rtl
  3722                        ;}
  3723                        	.line	364
  3724                        	.endblock	364
  3725             00000008   L50	equ	8
  3726             00000005   L51	equ	5
  3727 08:8CF2:              	ends
  3728                        	efunc
  Thu Dec  3 2020 22:25                                                Page 80


  3729                        	.endfunc	364,5,8
  3730                        	.line	364
  3731                        ;
  3732                        ;
  3733                        ;BOOL k_dos_foreach_file(LPVOID ctx,LPVOID pdata)
  3734                        ;{
  3735                        	.line	367
  3736                        	.line	368
  3737                        	FXDOS
  3738                        	xdef	~~k_dos_foreach_file
  3739                        	func
  3740                        	.function	368
  3741                        ~~k_dos_foreach_file:
  3742                        	longa	on
  3743                        	longi	on
  3744 08:8CF2: 3B           	tsc
  3745 08:8CF3: 38           	sec
  3746 08:8CF4: E9 09 00     	sbc	#L55
  3747 08:8CF7: 1B           	tcs
  3748 08:8CF8: 0B           	phd
  3749 08:8CF9: 5B           	tcd
  3750             00000004   ctx_0	set	4
  3751             00000008   pdata_0	set	8
  3752                        	.block	368
  3753                        ;	BOOL bBreak = FALSE;
  3754                        ;
  3755                        ;	PFAT16ENTRYLONG entry = (PFAT16ENTRYLONG)pdata;
  3756                        ;	if(pdata)
  3757             00000000   bBreak_1	set	0
  3758             00000001   entry_1	set	1
  3759                        	.sym	bBreak,0,14,1,8
  3760                        	.sym	entry,1,138,1,32,75
  3761                        	.sym	ctx,4,129,6,32
  3762                        	.sym	pdata,8,129,6,32
  3763 08:8CFA: E2 20        	sep	#$20
  3764                        	longa	off
  3765 08:8CFC: 64 05        	stz	<L56+bBreak_1
  3766 08:8CFE: C2 20        	rep	#$20
  3767                        	longa	on
  3768 08:8D00: A5 11        	lda	<L55+pdata_0
  3769 08:8D02: 85 06        	sta	<L56+entry_1
  3770 08:8D04: A5 13        	lda	<L55+pdata_0+2
  3771 08:8D06: 85 08        	sta	<L56+entry_1+2
  3772                        	.line	372
  3773                        ;	{
  3774 08:8D08: A5 11        	lda	<L55+pdata_0
  3775 08:8D0A: 05 13        	ora	<L55+pdata_0+2
  3776 08:8D0C: D0 03        	bne	L58
  3777 08:8D0E: 82 3E 00     	brl	L10037
  3778                        L58:
  3779                        	.line	373
  3780                        ;		if(entry->plongfileName && ctx)
  3781                        	.line	374
  3782                        ;		{
  3783 08:8D11: A0 20 00     	ldy	#$20
  3784 08:8D14: B7 06        	lda	[<L56+entry_1],Y
  3785 08:8D16: A0 22 00     	ldy	#$22
  3786 08:8D19: 17 06        	ora	[<L56+entry_1],Y
  Thu Dec  3 2020 22:25                                                Page 81


  3787 08:8D1B: D0 03        	bne	L59
  3788 08:8D1D: 82 2F 00     	brl	L10038
  3789                        L59:
  3790 08:8D20: A5 0D        	lda	<L55+ctx_0
  3791 08:8D22: 05 0F        	ora	<L55+ctx_0+2
  3792 08:8D24: D0 03        	bne	L60
  3793 08:8D26: 82 26 00     	brl	L10038
  3794                        L60:
  3795                        	.line	375
  3796                        ;			//k_debug_strings("k_dos_foreach
                    _file:",entry->plongfileName);
  3797                        ;			//k_debug_strings("k_dos_foreach
                    _file compare:",(LPSTR)ctx);
  3798                        ;
  3799                        ;			bBreak = (strcmp(ctx,entry->plon
                    gfileName) == 0);
  3800                        	.line	379
  3801 08:8D29: 64 01        	stz	<R0
  3802 08:8D2B: A0 22 00     	ldy	#$22
  3803 08:8D2E: B7 06        	lda	[<L56+entry_1],Y
  3804 08:8D30: 48           	pha
  3805 08:8D31: A0 20 00     	ldy	#$20
  3806 08:8D34: B7 06        	lda	[<L56+entry_1],Y
  3807 08:8D36: 48           	pha
  3808 08:8D37: D4 0F        	pei	<L55+ctx_0+2
  3809 08:8D39: D4 0D        	pei	<L55+ctx_0
  3810 08:8D3B: 22 xx xx xx  	jsl	~~strcmp
  3811 08:8D3F: AA           	tax
  3812 08:8D40: F0 03        	beq	L62
  3813 08:8D42: 82 02 00     	brl	L61
  3814                        L62:
  3815 08:8D45: E6 01        	inc	<R0
  3816                        L61:
  3817 08:8D47: E2 20        	sep	#$20
  3818                        	longa	off
  3819 08:8D49: A5 01        	lda	<R0
  3820 08:8D4B: 85 05        	sta	<L56+bBreak_1
  3821 08:8D4D: C2 20        	rep	#$20
  3822                        	longa	on
  3823                        ;
  3824                        ;			//k_debug_integer("k_dos_foreach
                    _file compare:",bBreak);
  3825                        ;		}
  3826                        	.line	382
  3827                        ;	}
  3828                        L10038:
  3829                        	.line	383
  3830                        ;
  3831                        ;	return bBreak;
  3832                        L10037:
  3833                        	.line	385
  3834 08:8D4F: A5 05        	lda	<L56+bBreak_1
  3835 08:8D51: 29 FF 00     	and	#$ff
  3836                        L63:
  3837 08:8D54: A8           	tay
  3838 08:8D55: A5 0B        	lda	<L55+2
  3839 08:8D57: 85 13        	sta	<L55+2+8
  3840 08:8D59: A5 0A        	lda	<L55+1
  Thu Dec  3 2020 22:25                                                Page 82


  3841 08:8D5B: 85 12        	sta	<L55+1+8
  3842 08:8D5D: 2B           	pld
  3843 08:8D5E: 3B           	tsc
  3844 08:8D5F: 18           	clc
  3845 08:8D60: 69 11 00     	adc	#L55+8
  3846 08:8D63: 1B           	tcs
  3847 08:8D64: 98           	tya
  3848 08:8D65: 6B           	rtl
  3849                        ;}
  3850                        	.line	386
  3851                        	.endblock	386
  3852             00000009   L55	equ	9
  3853             00000005   L56	equ	5
  3854 08:8D66:              	ends
  3855                        	efunc
  3856                        	.endfunc	386,5,9
  3857                        	.line	386
  3858                        ;
  3859                        ;LPSTR k_dos_alloc_short_name(PFAT16ENTRYLONG entr
                    y)
  3860                        ;{
  3861                        	.line	388
  3862                        	.line	389
  3863                        	FXDOS
  3864                        	xdef	~~k_dos_alloc_short_name
  3865                        	func
  3866                        	.function	389
  3867                        ~~k_dos_alloc_short_name:
  3868                        	longa	on
  3869                        	longi	on
  3870 08:8D66: 3B           	tsc
  3871 08:8D67: 38           	sec
  3872 08:8D68: E9 0E 00     	sbc	#L64
  3873 08:8D6B: 1B           	tcs
  3874 08:8D6C: 0B           	phd
  3875 08:8D6D: 5B           	tcd
  3876             00000004   entry_0	set	4
  3877                        	.block	389
  3878                        ;	int i = 0;
  3879                        ;	// 01234567.901N
  3880                        ;	entry->plongfileName = k_mem_allocate_heap(14);
  3881             00000000   i_1	set	0
  3882                        	.sym	i,0,5,1,16
  3883                        	.sym	entry,4,138,6,32,75
  3884 08:8D6E: 64 0D        	stz	<L65+i_1
  3885                        	.line	392
  3886 08:8D70: F4 0E 00     	pea	#<$e
  3887 08:8D73: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  3888 08:8D77: 85 01        	sta	<R0
  3889 08:8D79: 86 03        	stx	<R0+2
  3890 08:8D7B: A5 01        	lda	<R0
  3891 08:8D7D: A0 20 00     	ldy	#$20
  3892 08:8D80: 97 12        	sta	[<L64+entry_0],Y
  3893 08:8D82: A5 03        	lda	<R0+2
  3894 08:8D84: A0 22 00     	ldy	#$22
  3895 08:8D87: 97 12        	sta	[<L64+entry_0],Y
  3896                        ;	memset(entry->plongfileName,0,14);
  3897                        	.line	393
  Thu Dec  3 2020 22:25                                                Page 83


  3898 08:8D89: F4 0E 00     	pea	#<$e
  3899 08:8D8C: F4 00 00     	pea	#<$0
  3900 08:8D8F: A0 22 00     	ldy	#$22
  3901 08:8D92: B7 12        	lda	[<L64+entry_0],Y
  3902 08:8D94: 48           	pha
  3903 08:8D95: A0 20 00     	ldy	#$20
  3904 08:8D98: B7 12        	lda	[<L64+entry_0],Y
  3905 08:8D9A: 48           	pha
  3906 08:8D9B: 22 xx xx xx  	jsl	~~memset
  3907                        ;	/*
  3908                        ;	memcpy(entry->plongfileName,entry->filename,8);
  3909                        ;	memcpy(&(entry->plongfileName[9]),entry->ext,3);
  3910                        ;
  3911                        ;	entry->plongfileName[8] = '.';
  3912                        ;	entry->plongfileName[12] = 0;
  3913                        ;	*/
  3914                        ;
  3915                        ;	memcpy(entry->plongfileName,entry->filename,8);
  3916                        	.line	402
  3917 08:8D9F: F4 08 00     	pea	#<$8
  3918 08:8DA2: D4 14        	pei	<L64+entry_0+2
  3919 08:8DA4: D4 12        	pei	<L64+entry_0
  3920 08:8DA6: A0 22 00     	ldy	#$22
  3921 08:8DA9: B7 12        	lda	[<L64+entry_0],Y
  3922 08:8DAB: 48           	pha
  3923 08:8DAC: A0 20 00     	ldy	#$20
  3924 08:8DAF: B7 12        	lda	[<L64+entry_0],Y
  3925 08:8DB1: 48           	pha
  3926 08:8DB2: 22 xx xx xx  	jsl	~~memcpy
  3927                        ;	for(i=0;i<8;i++)
  3928                        	.line	403
  3929 08:8DB6: 64 0D        	stz	<L65+i_1
  3930                        L10041:
  3931                        ;	{
  3932                        	.line	404
  3933                        ;		if(entry->plongfileName[i] == ' ')
  3934                        	.line	405
  3935                        ;			break;
  3936 08:8DB8: A0 20 00     	ldy	#$20
  3937 08:8DBB: B7 12        	lda	[<L64+entry_0],Y
  3938 08:8DBD: 85 01        	sta	<R0
  3939 08:8DBF: A0 22 00     	ldy	#$22
  3940 08:8DC2: B7 12        	lda	[<L64+entry_0],Y
  3941 08:8DC4: 85 03        	sta	<R0+2
  3942 08:8DC6: E2 20        	sep	#$20
  3943                        	longa	off
  3944 08:8DC8: A4 0D        	ldy	<L65+i_1
  3945 08:8DCA: B7 01        	lda	[<R0],Y
  3946 08:8DCC: C9 20        	cmp	#<$20
  3947 08:8DCE: C2 20        	rep	#$20
  3948                        	longa	on
  3949 08:8DD0: D0 03        	bne	L67
  3950 08:8DD2: 82 12 00     	brl	L10040
  3951                        L67:
  3952                        ;	}
  3953                        	.line	407
  3954                        L10039:
  3955 08:8DD5: E6 0D        	inc	<L65+i_1
  Thu Dec  3 2020 22:25                                                Page 84


  3956 08:8DD7: 38           	sec
  3957 08:8DD8: A5 0D        	lda	<L65+i_1
  3958 08:8DDA: E9 08 00     	sbc	#<$8
  3959 08:8DDD: 70 03        	bvs	L68
  3960 08:8DDF: 49 00 80     	eor	#$8000
  3961                        L68:
  3962 08:8DE2: 30 03        	bmi	L69
  3963 08:8DE4: 82 D1 FF     	brl	L10041
  3964                        L69:
  3965                        L10040:
  3966                        ;	//k_debug_strings("k_dos_alloc_short_name:filena
                    me:",entry->plongfileName);
  3967                        ;	//k_debug_integer("k_dos_alloc_short_name:i:",i)
                    ;
  3968                        ;
  3969                        ;	if(entry->ext[0]!=' ')
  3970                        	.line	411
  3971                        ;	{
  3972 08:8DE7: E2 20        	sep	#$20
  3973                        	longa	off
  3974 08:8DE9: A0 08 00     	ldy	#$8
  3975 08:8DEC: B7 12        	lda	[<L64+entry_0],Y
  3976 08:8DEE: C9 20        	cmp	#<$20
  3977 08:8DF0: C2 20        	rep	#$20
  3978                        	longa	on
  3979 08:8DF2: D0 03        	bne	L70
  3980 08:8DF4: 82 A3 00     	brl	L10042
  3981                        L70:
  3982                        	.line	412
  3983                        ;		entry->plongfileName[i] = '.';
  3984                        	.line	413
  3985 08:8DF7: A0 20 00     	ldy	#$20
  3986 08:8DFA: B7 12        	lda	[<L64+entry_0],Y
  3987 08:8DFC: 85 01        	sta	<R0
  3988 08:8DFE: A0 22 00     	ldy	#$22
  3989 08:8E01: B7 12        	lda	[<L64+entry_0],Y
  3990 08:8E03: 85 03        	sta	<R0+2
  3991 08:8E05: E2 20        	sep	#$20
  3992                        	longa	off
  3993 08:8E07: A9 2E        	lda	#$2e
  3994 08:8E09: A4 0D        	ldy	<L65+i_1
  3995 08:8E0B: 97 01        	sta	[<R0],Y
  3996 08:8E0D: C2 20        	rep	#$20
  3997                        	longa	on
  3998                        ;		memcpy(&(entry->plongfileName[i+1]),entr
                    y->ext,3);
  3999                        	.line	414
  4000 08:8E0F: F4 03 00     	pea	#<$3
  4001 08:8E12: 18           	clc
  4002 08:8E13: A9 08 00     	lda	#$8
  4003 08:8E16: 65 12        	adc	<L64+entry_0
  4004 08:8E18: 85 01        	sta	<R0
  4005 08:8E1A: A9 00 00     	lda	#$0
  4006 08:8E1D: 65 14        	adc	<L64+entry_0+2
  4007 08:8E1F: 85 03        	sta	<R0+2
  4008 08:8E21: D4 03        	pei	<R0+2
  4009 08:8E23: D4 01        	pei	<R0
  4010 08:8E25: A5 0D        	lda	<L65+i_1
  Thu Dec  3 2020 22:25                                                Page 85


  4011 08:8E27: 1A           	ina
  4012 08:8E28: 85 05        	sta	<R1
  4013 08:8E2A: A0 00 00     	ldy	#$0
  4014 08:8E2D: A5 05        	lda	<R1
  4015 08:8E2F: 10 01        	bpl	L71
  4016 08:8E31: 88           	dey
  4017                        L71:
  4018 08:8E32: 85 05        	sta	<R1
  4019 08:8E34: 84 07        	sty	<R1+2
  4020 08:8E36: 18           	clc
  4021 08:8E37: A0 20 00     	ldy	#$20
  4022 08:8E3A: B7 12        	lda	[<L64+entry_0],Y
  4023 08:8E3C: 65 05        	adc	<R1
  4024 08:8E3E: 85 09        	sta	<R2
  4025 08:8E40: A0 22 00     	ldy	#$22
  4026 08:8E43: B7 12        	lda	[<L64+entry_0],Y
  4027 08:8E45: 65 07        	adc	<R1+2
  4028 08:8E47: 85 0B        	sta	<R2+2
  4029 08:8E49: D4 0B        	pei	<R2+2
  4030 08:8E4B: D4 09        	pei	<R2
  4031 08:8E4D: 22 xx xx xx  	jsl	~~memcpy
  4032                        ;		for(i=0;i<14;i++)
  4033                        	.line	415
  4034 08:8E51: 64 0D        	stz	<L65+i_1
  4035                        L10045:
  4036                        ;		{
  4037                        	.line	416
  4038                        ;			if(entry->plongfileName[i] == ' 
                    ')
  4039                        	.line	417
  4040                        ;				entry->plongfileName[i] 
                    = 0;
  4041 08:8E53: A0 20 00     	ldy	#$20
  4042 08:8E56: B7 12        	lda	[<L64+entry_0],Y
  4043 08:8E58: 85 01        	sta	<R0
  4044 08:8E5A: A0 22 00     	ldy	#$22
  4045 08:8E5D: B7 12        	lda	[<L64+entry_0],Y
  4046 08:8E5F: 85 03        	sta	<R0+2
  4047 08:8E61: E2 20        	sep	#$20
  4048                        	longa	off
  4049 08:8E63: A4 0D        	ldy	<L65+i_1
  4050 08:8E65: B7 01        	lda	[<R0],Y
  4051 08:8E67: C9 20        	cmp	#<$20
  4052 08:8E69: C2 20        	rep	#$20
  4053                        	longa	on
  4054 08:8E6B: F0 03        	beq	L72
  4055 08:8E6D: 82 18 00     	brl	L10046
  4056                        L72:
  4057                        	.line	418
  4058 08:8E70: A0 20 00     	ldy	#$20
  4059 08:8E73: B7 12        	lda	[<L64+entry_0],Y
  4060 08:8E75: 85 01        	sta	<R0
  4061 08:8E77: A0 22 00     	ldy	#$22
  4062 08:8E7A: B7 12        	lda	[<L64+entry_0],Y
  4063 08:8E7C: 85 03        	sta	<R0+2
  4064 08:8E7E: E2 20        	sep	#$20
  4065                        	longa	off
  4066 08:8E80: A9 00        	lda	#$0
  Thu Dec  3 2020 22:25                                                Page 86


  4067 08:8E82: A4 0D        	ldy	<L65+i_1
  4068 08:8E84: 97 01        	sta	[<R0],Y
  4069 08:8E86: C2 20        	rep	#$20
  4070                        	longa	on
  4071                        ;		}
  4072                        L10046:
  4073                        	.line	419
  4074                        L10043:
  4075 08:8E88: E6 0D        	inc	<L65+i_1
  4076 08:8E8A: 38           	sec
  4077 08:8E8B: A5 0D        	lda	<L65+i_1
  4078 08:8E8D: E9 0E 00     	sbc	#<$e
  4079 08:8E90: 70 03        	bvs	L73
  4080 08:8E92: 49 00 80     	eor	#$8000
  4081                        L73:
  4082 08:8E95: 30 03        	bmi	L74
  4083 08:8E97: 82 B9 FF     	brl	L10045
  4084                        L74:
  4085                        L10044:
  4086                        ;	}
  4087                        	.line	420
  4088                        ;	//entry->plongfileName[8] = '.';
  4089                        ;	//entry->plongfileName[12] = 0;
  4090                        ;
  4091                        ;	//k_debug_strings("k_dos_alloc_short_name:",entr
                    y->plongfileName);
  4092                        ;
  4093                        ;	return entry->plongfileName;
  4094                        L10042:
  4095                        	.line	426
  4096 08:8E9A: A0 22 00     	ldy	#$22
  4097 08:8E9D: B7 12        	lda	[<L64+entry_0],Y
  4098 08:8E9F: AA           	tax
  4099 08:8EA0: A0 20 00     	ldy	#$20
  4100 08:8EA3: B7 12        	lda	[<L64+entry_0],Y
  4101                        L75:
  4102 08:8EA5: A8           	tay
  4103 08:8EA6: A5 10        	lda	<L64+2
  4104 08:8EA8: 85 14        	sta	<L64+2+4
  4105 08:8EAA: A5 0F        	lda	<L64+1
  4106 08:8EAC: 85 13        	sta	<L64+1+4
  4107 08:8EAE: 2B           	pld
  4108 08:8EAF: 3B           	tsc
  4109 08:8EB0: 18           	clc
  4110 08:8EB1: 69 12 00     	adc	#L64+4
  4111 08:8EB4: 1B           	tcs
  4112 08:8EB5: 98           	tya
  4113 08:8EB6: 6B           	rtl
  4114                        ;}
  4115                        	.line	427
  4116                        	.endblock	427
  4117             0000000E   L64	equ	14
  4118             0000000D   L65	equ	13
  4119 08:8EB7:              	ends
  4120                        	efunc
  4121                        	.endfunc	427,13,14
  4122                        	.line	427
  4123                        ;
  Thu Dec  3 2020 22:25                                                Page 87


  4124                        ;ULONG k_dos_get_name(PFAT16ENTRYLONG entry,LPCHAR
                     pbuffer)
  4125                        ;{
  4126                        	.line	429
  4127                        	.line	430
  4128                        	FXDOS
  4129                        	xdef	~~k_dos_get_name
  4130                        	func
  4131                        	.function	430
  4132                        ~~k_dos_get_name:
  4133                        	longa	on
  4134                        	longi	on
  4135 08:8EB7: 3B           	tsc
  4136 08:8EB8: 38           	sec
  4137 08:8EB9: E9 3B 00     	sbc	#L76
  4138 08:8EBC: 1B           	tcs
  4139 08:8EBD: 0B           	phd
  4140 08:8EBE: 5B           	tcd
  4141             00000004   entry_0	set	4
  4142             00000008   pbuffer_0	set	8
  4143                        	.block	430
  4144                        ;	ULONG fileOffset = 0L;
  4145                        ;
  4146                        ;	ULONG RootDirSectors;
  4147                        ;	ULONG Cluster2SectorNumber;
  4148                        ;	ULONG ClusterSectorNumber;
  4149                        ;	ULONG ClusterByteNumber = 0;
  4150                        ;
  4151                        ;
  4152                        ;	LFN* plfn = NULL;
  4153                        ;
  4154                        ;	CHAR mbsBuffer[15];
  4155                        ;
  4156                        ;
  4157                        ;	if(!pbuffer)
  4158             00000000   fileOffset_1	set	0
  4159             00000004   RootDirSectors_1	set	4
  4160             00000008   Cluster2SectorNumber_1	set	8
  4161             0000000C   ClusterSectorNumber_1	set	12
  4162             00000010   ClusterByteNumber_1	set	16
  4163             00000014   plfn_1	set	20
  4164             00000018   mbsBuffer_1	set	24
  4165                        	.sym	fileOffset,0,18,1,32
  4166                        	.sym	RootDirSectors,4,18,1,32
  4167                        	.sym	Cluster2SectorNumber,8,18,1,32
  4168                        	.sym	ClusterSectorNumber,12,18,1,32
  4169                        	.sym	ClusterByteNumber,16,18,1,32
  4170                        	.sym	plfn,20,138,1,32,76
  4171                        	.sym	mbsBuffer,24,110,1,0,15
  4172                        	.sym	entry,4,138,6,32,75
  4173                        	.sym	pbuffer,8,142,6,32
  4174 08:8EBF: 64 15        	stz	<L77+fileOffset_1
  4175 08:8EC1: 64 17        	stz	<L77+fileOffset_1+2
  4176 08:8EC3: 64 25        	stz	<L77+ClusterByteNumber_1
  4177 08:8EC5: 64 27        	stz	<L77+ClusterByteNumber_1+2
  4178 08:8EC7: 64 29        	stz	<L77+plfn_1
  4179 08:8EC9: 64 2B        	stz	<L77+plfn_1+2
  4180                        	.line	444
  Thu Dec  3 2020 22:25                                                Page 88


  4181                        ;		pbuffer = mbsBuffer;
  4182 08:8ECB: A5 43        	lda	<L76+pbuffer_0
  4183 08:8ECD: 05 45        	ora	<L76+pbuffer_0+2
  4184 08:8ECF: F0 03        	beq	L79
  4185 08:8ED1: 82 0C 00     	brl	L10047
  4186                        L79:
  4187                        	.line	445
  4188 08:8ED4: 18           	clc
  4189 08:8ED5: 7B           	tdc
  4190 08:8ED6: 69 2D 00     	adc	#<L77+mbsBuffer_1
  4191 08:8ED9: 85 43        	sta	<L76+pbuffer_0
  4192 08:8EDB: A9 00 00     	lda	#$0
  4193 08:8EDE: 85 45        	sta	<L76+pbuffer_0+2
  4194                        ;
  4195                        ;    switch(entry->filename[0])
  4196                        L10047:
  4197                        	.line	447
  4198 08:8EE0: A7 3F        	lda	[<L76+entry_0]
  4199 08:8EE2: 29 FF 00     	and	#$ff
  4200 08:8EE5: 82 C1 03     	brl	L10048
  4201                        ;	{
  4202                        	.line	448
  4203                        ;    case 0x00:
  4204                        	.line	449
  4205                        L10050:
  4206                        ;    	//k_debug_string("Unused\r\n");
  4207                        ;        return 0; // unused entry
  4208                        	.line	451
  4209 08:8EE8: A9 00 00     	lda	#$0
  4210 08:8EEB: AA           	tax
  4211 08:8EEC: A9 00 00     	lda	#$0
  4212                        L80:
  4213 08:8EEF: A8           	tay
  4214 08:8EF0: A5 3D        	lda	<L76+2
  4215 08:8EF2: 85 45        	sta	<L76+2+8
  4216 08:8EF4: A5 3C        	lda	<L76+1
  4217 08:8EF6: 85 44        	sta	<L76+1+8
  4218 08:8EF8: 2B           	pld
  4219 08:8EF9: 3B           	tsc
  4220 08:8EFA: 18           	clc
  4221 08:8EFB: 69 43 00     	adc	#L76+8
  4222 08:8EFE: 1B           	tcs
  4223 08:8EFF: 98           	tya
  4224 08:8F00: 6B           	rtl
  4225                        ;    case 0xE5:
  4226                        	.line	452
  4227                        L10051:
  4228                        ;    	/*
  4229                        ;    	k_debug_string("Deleted file:");
  4230                        ;    	k_debug_nstring(entry->filename+1,7);
  4231                        ;    	k_debug_nstring(entry->ext,3);
  4232                        ;    	k_debug_string("\r\n");
  4233                        ;        //printf("Deleted file: [?%.7s.%.3s]\n", 
                    entry->filename+1, entry->ext);
  4234                        ;
  4235                        ;         */
  4236                        ;        return 0;
  4237                        	.line	461
  Thu Dec  3 2020 22:25                                                Page 89


  4238 08:8F01: A9 00 00     	lda	#$0
  4239 08:8F04: AA           	tax
  4240 08:8F05: A9 00 00     	lda	#$0
  4241 08:8F08: 82 E4 FF     	brl	L80
  4242                        ;    case 0x05:
  4243                        	.line	462
  4244                        L10052:
  4245                        ;    	//k_debug_string("File 0x05:");
  4246                        ;    	//k_debug_nstring(entry->filename+1,7);
  4247                        ;    	//k_debug_nstring(entry->ext,3);
  4248                        ;    	//k_debug_string("\r\n");
  4249                        ;        //printf("File starting with 0xE5: [%c%.7
                    s.%.3s]\n", 0xE5, entry->filename+1, entry->ext);
  4250                        ;        break;
  4251                        	.line	468
  4252 08:8F0B: 82 B3 03     	brl	L10049
  4253                        ;    case 0x2E:
  4254                        	.line	469
  4255                        L10053:
  4256                        ;    	//k_debug_string("DIR:");
  4257                        ;    	//k_debug_nstring(entry->filename+1,8);
  4258                        ;    	//k_debug_nstring(entry->ext,3);
  4259                        ;    	//k_debug_string("\r\n");
  4260                        ;        //printf("Directory: [%.8s.%.3s]\n", entr
                    y->filename, entry->ext);
  4261                        ;    	k_dos_alloc_short_name(entry);
  4262                        	.line	475
  4263 08:8F0E: D4 41        	pei	<L76+entry_0+2
  4264 08:8F10: D4 3F        	pei	<L76+entry_0
  4265 08:8F12: 22 66 8D 08  	jsl	~~k_dos_alloc_short_name
  4266                        ;        break;
  4267                        	.line	476
  4268 08:8F16: 82 A8 03     	brl	L10049
  4269                        ;    default:
  4270                        	.line	477
  4271                        L10054:
  4272                        ;    	if(entry->attributes == 0x10)
  4273                        	.line	478
  4274                        ;    	{
  4275 08:8F19: E2 20        	sep	#$20
  4276                        	longa	off
  4277 08:8F1B: A0 0B 00     	ldy	#$b
  4278 08:8F1E: B7 3F        	lda	[<L76+entry_0],Y
  4279 08:8F20: C9 10        	cmp	#<$10
  4280 08:8F22: C2 20        	rep	#$20
  4281                        	longa	on
  4282 08:8F24: F0 03        	beq	L81
  4283 08:8F26: 82 0B 00     	brl	L10055
  4284                        L81:
  4285                        	.line	479
  4286                        ;			//k_debug_string("DIRECTORY:");
  4287                        ;			//k_debug_nstring(entry->filenam
                    e,8);
  4288                        ;			//k_debug_nstring(entry->ext,3);
  4289                        ;			//k_debug_string("\r\n");
  4290                        ;
  4291                        ;			k_dos_alloc_short_name(entry);
  4292                        	.line	485
  Thu Dec  3 2020 22:25                                                Page 90


  4293 08:8F29: D4 41        	pei	<L76+entry_0+2
  4294 08:8F2B: D4 3F        	pei	<L76+entry_0
  4295 08:8F2D: 22 66 8D 08  	jsl	~~k_dos_alloc_short_name
  4296                        ;
  4297                        ;			//k_debug_strings("plongfileName
                    :",entry->plongfileName);
  4298                        ;
  4299                        ;    	}
  4300                        	.line	489
  4301                        ;    	else if(entry->attributes == 0x08)
  4302 08:8F31: 82 72 03     	brl	L10056
  4303                        L10055:
  4304                        	.line	490
  4305                        ;		{
  4306 08:8F34: E2 20        	sep	#$20
  4307                        	longa	off
  4308 08:8F36: A0 0B 00     	ldy	#$b
  4309 08:8F39: B7 3F        	lda	[<L76+entry_0],Y
  4310 08:8F3B: C9 08        	cmp	#<$8
  4311 08:8F3D: C2 20        	rep	#$20
  4312                        	longa	on
  4313 08:8F3F: F0 03        	beq	L82
  4314 08:8F41: 82 0B 00     	brl	L10057
  4315                        L82:
  4316                        	.line	491
  4317                        ;			//k_debug_string("VOLUME NAME:")
                    ;
  4318                        ;			//k_debug_nstring(entry->filenam
                    e,8);
  4319                        ;			//k_debug_nstring(entry->ext,3);
  4320                        ;			//k_debug_string("\r\n");
  4321                        ;
  4322                        ;			k_dos_alloc_short_name(entry);
  4323                        	.line	497
  4324 08:8F44: D4 41        	pei	<L76+entry_0+2
  4325 08:8F46: D4 3F        	pei	<L76+entry_0
  4326 08:8F48: 22 66 8D 08  	jsl	~~k_dos_alloc_short_name
  4327                        ;
  4328                        ;			//k_debug_strings("plongfileName
                    :",entry->plongfileName);
  4329                        ;
  4330                        ;		}
  4331                        	.line	501
  4332                        ;    	else if(entry->attributes == 0x0F)
  4333 08:8F4C: 82 57 03     	brl	L10058
  4334                        L10057:
  4335                        	.line	502
  4336                        ;		{
  4337 08:8F4F: E2 20        	sep	#$20
  4338                        	longa	off
  4339 08:8F51: A0 0B 00     	ldy	#$b
  4340 08:8F54: B7 3F        	lda	[<L76+entry_0],Y
  4341 08:8F56: C9 0F        	cmp	#<$f
  4342 08:8F58: C2 20        	rep	#$20
  4343                        	longa	on
  4344 08:8F5A: F0 03        	beq	L83
  4345 08:8F5C: 82 2A 03     	brl	L10059
  4346                        L83:
  Thu Dec  3 2020 22:25                                                Page 91


  4347                        	.line	503
  4348                        ;			k_debug_string("LONG NAME:");
  4349                        	.line	504
  4350 08:8F5F: F4 xx xx     	pea	#^L44
  4351 08:8F62: F4 xx xx     	pea	#<L44
  4352 08:8F65: 22 xx xx xx  	jsl	~~k_debug_string
  4353                        ;			//k_debug_nstring(entry->filenam
                    e,8);
  4354                        ;			//k_debug_nstring(entry->ext,3);
  4355                        ;
  4356                        ;			plfn = (LFN*)entry;
  4357                        	.line	508
  4358 08:8F69: A5 3F        	lda	<L76+entry_0
  4359 08:8F6B: 85 29        	sta	<L77+plfn_1
  4360 08:8F6D: A5 41        	lda	<L76+entry_0+2
  4361 08:8F6F: 85 2B        	sta	<L77+plfn_1+2
  4362                        ;
  4363                        ;			/*
  4364                        ;			k_debug_integer("SEQ:",plfn->seq
                    uenceNo);
  4365                        ;			k_debug_string("10:[");
  4366                        ;			k_debug_nstring(k_wcstombs(plfn-
                    >fileName_Part1,mbsBuffer,5),5);
  4367                        ;			k_debug_string("]\r\n");
  4368                        ;			k_debug_string("12:[");
  4369                        ;			k_debug_nstring(k_wcstombs(plfn-
                    >fileName_Part2,mbsBuffer,6),6);
  4370                        ;			k_debug_string("]\r\n");
  4371                        ;			k_debug_string("4:[");
  4372                        ;			k_debug_nstring(k_wcstombs(plfn-
                    >fileName_Part3,mbsBuffer,2),2);
  4373                        ;			k_debug_string("]\r\n");
  4374                        ;			*/
  4375                        ;			//k_debug_byte_array("LONG BYTES
                    :",(BYTE FAR *)plfn,32);
  4376                        ;
  4377                        ;
  4378                        ;			if(plfn->sequenceNo & 0x40)
  4379                        	.line	525
  4380                        ;			{
  4381 08:8F71: E2 20        	sep	#$20
  4382                        	longa	off
  4383 08:8F73: A7 29        	lda	[<L77+plfn_1]
  4384 08:8F75: 29 40        	and	#<$40
  4385 08:8F77: C2 20        	rep	#$20
  4386                        	longa	on
  4387 08:8F79: D0 03        	bne	L84
  4388 08:8F7B: 82 65 01     	brl	L10060
  4389                        L84:
  4390                        	.line	526
  4391                        ;				entry->plongfileName = (
                    LPVOID)0xffffffff;
  4392                        	.line	527
  4393 08:8F7E: A9 FF FF     	lda	#$ffff
  4394 08:8F81: A0 20 00     	ldy	#$20
  4395 08:8F84: 97 3F        	sta	[<L76+entry_0],Y
  4396 08:8F86: A9 FF FF     	lda	#$ffff
  4397 08:8F89: A0 22 00     	ldy	#$22
  Thu Dec  3 2020 22:25                                                Page 92


  4398 08:8F8C: 97 3F        	sta	[<L76+entry_0],Y
  4399                        ;				longnamecount = (plfn->s
                    equenceNo - 0x41);
  4400                        	.line	528
  4401 08:8F8E: A7 29        	lda	[<L77+plfn_1]
  4402 08:8F90: 29 FF 00     	and	#$ff
  4403 08:8F93: 85 01        	sta	<R0
  4404 08:8F95: 18           	clc
  4405 08:8F96: A9 BF FF     	lda	#$ffbf
  4406 08:8F99: 65 01        	adc	<R0
  4407 08:8F9B: 85 05        	sta	<R1
  4408 08:8F9D: E2 20        	sep	#$20
  4409                        	longa	off
  4410 08:8F9F: A5 05        	lda	<R1
  4411 08:8FA1: 8D xx xx     	sta	|~~longnamecount
  4412 08:8FA4: C2 20        	rep	#$20
  4413                        	longa	on
  4414                        ;				//k_debug_integer("longn
                    amecount:",longnamecount);
  4415                        ;				k_debug_string("SEQ:0x40
                    ");
  4416                        	.line	530
  4417 08:8FA6: F4 xx xx     	pea	#^L44+11
  4418 08:8FA9: F4 xx xx     	pea	#<L44+11
  4419 08:8FAC: 22 xx xx xx  	jsl	~~k_debug_string
  4420                        ;
  4421                        ;				memset(longnameBuffer,0,
                    255);
  4422                        	.line	532
  4423 08:8FB0: F4 FF 00     	pea	#<$ff
  4424 08:8FB3: F4 00 00     	pea	#<$0
  4425 08:8FB6: A9 xx xx     	lda	#<~~longnameBuffer
  4426 08:8FB9: 85 01        	sta	<R0
  4427                        	xref	_BEG_DATA
  4428 08:8FBB: A9 xx xx     	lda	#_BEG_DATA>>16
  4429 08:8FBE: 85 03        	sta	<R0+2
  4430 08:8FC0: D4 03        	pei	<R0+2
  4431 08:8FC2: D4 01        	pei	<R0
  4432 08:8FC4: 22 xx xx xx  	jsl	~~memset
  4433                        ;				memcpy(&longnameBuffer[l
                    ongnamecount * 13]     ,k_wcstombs(plfn->fileName_Part1,mbsB
                    uffer,5),5);
  4434                        	.line	533
  4435 08:8FC8: F4 05 00     	pea	#<$5
  4436 08:8FCB: F4 05 00     	pea	#<$5
  4437 08:8FCE: F4 00 00     	pea	#0
  4438 08:8FD1: 18           	clc
  4439 08:8FD2: 7B           	tdc
  4440 08:8FD3: 69 2D 00     	adc	#<L77+mbsBuffer_1
  4441 08:8FD6: 48           	pha
  4442 08:8FD7: 18           	clc
  4443 08:8FD8: A9 01 00     	lda	#$1
  4444 08:8FDB: 65 29        	adc	<L77+plfn_1
  4445 08:8FDD: 85 01        	sta	<R0
  4446 08:8FDF: A9 00 00     	lda	#$0
  4447 08:8FE2: 65 2B        	adc	<L77+plfn_1+2
  4448 08:8FE4: 85 03        	sta	<R0+2
  4449 08:8FE6: D4 03        	pei	<R0+2
  Thu Dec  3 2020 22:25                                                Page 93


  4450 08:8FE8: D4 01        	pei	<R0
  4451 08:8FEA: 22 xx xx xx  	jsl	~~k_wcstombs
  4452 08:8FEE: 85 05        	sta	<R1
  4453 08:8FF0: 86 07        	stx	<R1+2
  4454 08:8FF2: DA           	phx
  4455 08:8FF3: 48           	pha
  4456 08:8FF4: AD xx xx     	lda	|~~longnamecount
  4457 08:8FF7: 29 FF 00     	and	#$ff
  4458 08:8FFA: 85 0D        	sta	<R3
  4459 08:8FFC: A5 0D        	lda	<R3
  4460 08:8FFE: A2 0D 00     	ldx	#<$d
  4461                        	xref	~~~mul
  4462 08:9001: 22 xx xx xx  	jsl	~~~mul
  4463 08:9005: 85 0D        	sta	<R3
  4464 08:9007: 18           	clc
  4465 08:9008: A9 xx xx     	lda	#<~~longnameBuffer
  4466 08:900B: 65 0D        	adc	<R3
  4467 08:900D: 85 11        	sta	<17
  4468 08:900F: A5 11        	lda	<17
  4469 08:9011: 85 09        	sta	<R2
  4470                        	xref	_BEG_DATA
  4471 08:9013: A9 xx xx     	lda	#_BEG_DATA>>16
  4472 08:9016: 85 0B        	sta	<R2+2
  4473 08:9018: D4 0B        	pei	<R2+2
  4474 08:901A: D4 09        	pei	<R2
  4475 08:901C: 22 xx xx xx  	jsl	~~memcpy
  4476                        ;				memcpy(&longnameBuffer[l
                    ongnamecount * 13 + 5] ,k_wcstombs(plfn->fileName_Part2,mbsB
                    uffer,6),6);
  4477                        	.line	534
  4478 08:9020: F4 06 00     	pea	#<$6
  4479 08:9023: F4 06 00     	pea	#<$6
  4480 08:9026: F4 00 00     	pea	#0
  4481 08:9029: 18           	clc
  4482 08:902A: 7B           	tdc
  4483 08:902B: 69 2D 00     	adc	#<L77+mbsBuffer_1
  4484 08:902E: 48           	pha
  4485 08:902F: 18           	clc
  4486 08:9030: A9 0E 00     	lda	#$e
  4487 08:9033: 65 29        	adc	<L77+plfn_1
  4488 08:9035: 85 01        	sta	<R0
  4489 08:9037: A9 00 00     	lda	#$0
  4490 08:903A: 65 2B        	adc	<L77+plfn_1+2
  4491 08:903C: 85 03        	sta	<R0+2
  4492 08:903E: D4 03        	pei	<R0+2
  4493 08:9040: D4 01        	pei	<R0
  4494 08:9042: 22 xx xx xx  	jsl	~~k_wcstombs
  4495 08:9046: 85 05        	sta	<R1
  4496 08:9048: 86 07        	stx	<R1+2
  4497 08:904A: DA           	phx
  4498 08:904B: 48           	pha
  4499 08:904C: AD xx xx     	lda	|~~longnamecount
  4500 08:904F: 29 FF 00     	and	#$ff
  4501 08:9052: 85 0D        	sta	<R3
  4502 08:9054: A5 0D        	lda	<R3
  4503 08:9056: A2 0D 00     	ldx	#<$d
  4504                        	xref	~~~mul
  4505 08:9059: 22 xx xx xx  	jsl	~~~mul
  Thu Dec  3 2020 22:25                                                Page 94


  4506 08:905D: 85 0D        	sta	<R3
  4507 08:905F: 18           	clc
  4508 08:9060: A9 05 00     	lda	#$5
  4509 08:9063: 65 0D        	adc	<R3
  4510 08:9065: 85 11        	sta	<17
  4511 08:9067: 18           	clc
  4512 08:9068: A9 xx xx     	lda	#<~~longnameBuffer
  4513 08:906B: 65 11        	adc	<17
  4514 08:906D: 85 0D        	sta	<R3
  4515 08:906F: A5 0D        	lda	<R3
  4516 08:9071: 85 09        	sta	<R2
  4517                        	xref	_BEG_DATA
  4518 08:9073: A9 xx xx     	lda	#_BEG_DATA>>16
  4519 08:9076: 85 0B        	sta	<R2+2
  4520 08:9078: D4 0B        	pei	<R2+2
  4521 08:907A: D4 09        	pei	<R2
  4522 08:907C: 22 xx xx xx  	jsl	~~memcpy
  4523                        ;				memcpy(&longnameBuffer[l
                    ongnamecount * 13 + 11],k_wcstombs(plfn->fileName_Part3,mbsB
                    uffer,2),2);
  4524                        	.line	535
  4525 08:9080: F4 02 00     	pea	#<$2
  4526 08:9083: F4 02 00     	pea	#<$2
  4527 08:9086: F4 00 00     	pea	#0
  4528 08:9089: 18           	clc
  4529 08:908A: 7B           	tdc
  4530 08:908B: 69 2D 00     	adc	#<L77+mbsBuffer_1
  4531 08:908E: 48           	pha
  4532 08:908F: 18           	clc
  4533 08:9090: A9 1C 00     	lda	#$1c
  4534 08:9093: 65 29        	adc	<L77+plfn_1
  4535 08:9095: 85 01        	sta	<R0
  4536 08:9097: A9 00 00     	lda	#$0
  4537 08:909A: 65 2B        	adc	<L77+plfn_1+2
  4538 08:909C: 85 03        	sta	<R0+2
  4539 08:909E: D4 03        	pei	<R0+2
  4540 08:90A0: D4 01        	pei	<R0
  4541 08:90A2: 22 xx xx xx  	jsl	~~k_wcstombs
  4542 08:90A6: 85 05        	sta	<R1
  4543 08:90A8: 86 07        	stx	<R1+2
  4544 08:90AA: DA           	phx
  4545 08:90AB: 48           	pha
  4546 08:90AC: AD xx xx     	lda	|~~longnamecount
  4547 08:90AF: 29 FF 00     	and	#$ff
  4548 08:90B2: 85 0D        	sta	<R3
  4549 08:90B4: A5 0D        	lda	<R3
  4550 08:90B6: A2 0D 00     	ldx	#<$d
  4551                        	xref	~~~mul
  4552 08:90B9: 22 xx xx xx  	jsl	~~~mul
  4553 08:90BD: 85 0D        	sta	<R3
  4554 08:90BF: 18           	clc
  4555 08:90C0: A9 0B 00     	lda	#$b
  4556 08:90C3: 65 0D        	adc	<R3
  4557 08:90C5: 85 11        	sta	<17
  4558 08:90C7: 18           	clc
  4559 08:90C8: A9 xx xx     	lda	#<~~longnameBuffer
  4560 08:90CB: 65 11        	adc	<17
  4561 08:90CD: 85 0D        	sta	<R3
  Thu Dec  3 2020 22:25                                                Page 95


  4562 08:90CF: A5 0D        	lda	<R3
  4563 08:90D1: 85 09        	sta	<R2
  4564                        	xref	_BEG_DATA
  4565 08:90D3: A9 xx xx     	lda	#_BEG_DATA>>16
  4566 08:90D6: 85 0B        	sta	<R2+2
  4567 08:90D8: D4 0B        	pei	<R2+2
  4568 08:90DA: D4 09        	pei	<R2
  4569 08:90DC: 22 xx xx xx  	jsl	~~memcpy
  4570                        ;			}
  4571                        	.line	536
  4572                        ;			else
  4573 08:90E0: 82 99 01     	brl	L10061
  4574                        L10060:
  4575                        ;			{
  4576                        	.line	538
  4577                        ;				longnamecount = plfn->se
                    quenceNo - 1 ;
  4578                        	.line	539
  4579 08:90E3: A7 29        	lda	[<L77+plfn_1]
  4580 08:90E5: 29 FF 00     	and	#$ff
  4581 08:90E8: 85 01        	sta	<R0
  4582 08:90EA: 18           	clc
  4583 08:90EB: A9 FF FF     	lda	#$ffff
  4584 08:90EE: 65 01        	adc	<R0
  4585 08:90F0: 85 05        	sta	<R1
  4586 08:90F2: E2 20        	sep	#$20
  4587                        	longa	off
  4588 08:90F4: A5 05        	lda	<R1
  4589 08:90F6: 8D xx xx     	sta	|~~longnamecount
  4590 08:90F9: C2 20        	rep	#$20
  4591                        	longa	on
  4592                        ;				//k_debug_integer("longn
                    amecount:",longnamecount);
  4593                        ;				memcpy(&longnameBuffer[l
                    ongnamecount * 13]     ,k_wcstombs(plfn->fileName_Part1,mbsB
                    uffer,5),5);
  4594                        	.line	541
  4595 08:90FB: F4 05 00     	pea	#<$5
  4596 08:90FE: F4 05 00     	pea	#<$5
  4597 08:9101: F4 00 00     	pea	#0
  4598 08:9104: 18           	clc
  4599 08:9105: 7B           	tdc
  4600 08:9106: 69 2D 00     	adc	#<L77+mbsBuffer_1
  4601 08:9109: 48           	pha
  4602 08:910A: 18           	clc
  4603 08:910B: A9 01 00     	lda	#$1
  4604 08:910E: 65 29        	adc	<L77+plfn_1
  4605 08:9110: 85 01        	sta	<R0
  4606 08:9112: A9 00 00     	lda	#$0
  4607 08:9115: 65 2B        	adc	<L77+plfn_1+2
  4608 08:9117: 85 03        	sta	<R0+2
  4609 08:9119: D4 03        	pei	<R0+2
  4610 08:911B: D4 01        	pei	<R0
  4611 08:911D: 22 xx xx xx  	jsl	~~k_wcstombs
  4612 08:9121: 85 05        	sta	<R1
  4613 08:9123: 86 07        	stx	<R1+2
  4614 08:9125: DA           	phx
  4615 08:9126: 48           	pha
  Thu Dec  3 2020 22:25                                                Page 96


  4616 08:9127: AD xx xx     	lda	|~~longnamecount
  4617 08:912A: 29 FF 00     	and	#$ff
  4618 08:912D: 85 0D        	sta	<R3
  4619 08:912F: A5 0D        	lda	<R3
  4620 08:9131: A2 0D 00     	ldx	#<$d
  4621                        	xref	~~~mul
  4622 08:9134: 22 xx xx xx  	jsl	~~~mul
  4623 08:9138: 85 0D        	sta	<R3
  4624 08:913A: 18           	clc
  4625 08:913B: A9 xx xx     	lda	#<~~longnameBuffer
  4626 08:913E: 65 0D        	adc	<R3
  4627 08:9140: 85 11        	sta	<17
  4628 08:9142: A5 11        	lda	<17
  4629 08:9144: 85 09        	sta	<R2
  4630                        	xref	_BEG_DATA
  4631 08:9146: A9 xx xx     	lda	#_BEG_DATA>>16
  4632 08:9149: 85 0B        	sta	<R2+2
  4633 08:914B: D4 0B        	pei	<R2+2
  4634 08:914D: D4 09        	pei	<R2
  4635 08:914F: 22 xx xx xx  	jsl	~~memcpy
  4636                        ;				memcpy(&longnameBuffer[l
                    ongnamecount * 13 + 5] ,k_wcstombs(plfn->fileName_Part2,mbsB
                    uffer,6),6);
  4637                        	.line	542
  4638 08:9153: F4 06 00     	pea	#<$6
  4639 08:9156: F4 06 00     	pea	#<$6
  4640 08:9159: F4 00 00     	pea	#0
  4641 08:915C: 18           	clc
  4642 08:915D: 7B           	tdc
  4643 08:915E: 69 2D 00     	adc	#<L77+mbsBuffer_1
  4644 08:9161: 48           	pha
  4645 08:9162: 18           	clc
  4646 08:9163: A9 0E 00     	lda	#$e
  4647 08:9166: 65 29        	adc	<L77+plfn_1
  4648 08:9168: 85 01        	sta	<R0
  4649 08:916A: A9 00 00     	lda	#$0
  4650 08:916D: 65 2B        	adc	<L77+plfn_1+2
  4651 08:916F: 85 03        	sta	<R0+2
  4652 08:9171: D4 03        	pei	<R0+2
  4653 08:9173: D4 01        	pei	<R0
  4654 08:9175: 22 xx xx xx  	jsl	~~k_wcstombs
  4655 08:9179: 85 05        	sta	<R1
  4656 08:917B: 86 07        	stx	<R1+2
  4657 08:917D: DA           	phx
  4658 08:917E: 48           	pha
  4659 08:917F: AD xx xx     	lda	|~~longnamecount
  4660 08:9182: 29 FF 00     	and	#$ff
  4661 08:9185: 85 0D        	sta	<R3
  4662 08:9187: A5 0D        	lda	<R3
  4663 08:9189: A2 0D 00     	ldx	#<$d
  4664                        	xref	~~~mul
  4665 08:918C: 22 xx xx xx  	jsl	~~~mul
  4666 08:9190: 85 0D        	sta	<R3
  4667 08:9192: 18           	clc
  4668 08:9193: A9 05 00     	lda	#$5
  4669 08:9196: 65 0D        	adc	<R3
  4670 08:9198: 85 11        	sta	<17
  4671 08:919A: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 97


  4672 08:919B: A9 xx xx     	lda	#<~~longnameBuffer
  4673 08:919E: 65 11        	adc	<17
  4674 08:91A0: 85 0D        	sta	<R3
  4675 08:91A2: A5 0D        	lda	<R3
  4676 08:91A4: 85 09        	sta	<R2
  4677                        	xref	_BEG_DATA
  4678 08:91A6: A9 xx xx     	lda	#_BEG_DATA>>16
  4679 08:91A9: 85 0B        	sta	<R2+2
  4680 08:91AB: D4 0B        	pei	<R2+2
  4681 08:91AD: D4 09        	pei	<R2
  4682 08:91AF: 22 xx xx xx  	jsl	~~memcpy
  4683                        ;				memcpy(&longnameBuffer[l
                    ongnamecount * 13 + 11],k_wcstombs(plfn->fileName_Part3,mbsB
                    uffer,2),2);
  4684                        	.line	543
  4685 08:91B3: F4 02 00     	pea	#<$2
  4686 08:91B6: F4 02 00     	pea	#<$2
  4687 08:91B9: F4 00 00     	pea	#0
  4688 08:91BC: 18           	clc
  4689 08:91BD: 7B           	tdc
  4690 08:91BE: 69 2D 00     	adc	#<L77+mbsBuffer_1
  4691 08:91C1: 48           	pha
  4692 08:91C2: 18           	clc
  4693 08:91C3: A9 1C 00     	lda	#$1c
  4694 08:91C6: 65 29        	adc	<L77+plfn_1
  4695 08:91C8: 85 01        	sta	<R0
  4696 08:91CA: A9 00 00     	lda	#$0
  4697 08:91CD: 65 2B        	adc	<L77+plfn_1+2
  4698 08:91CF: 85 03        	sta	<R0+2
  4699 08:91D1: D4 03        	pei	<R0+2
  4700 08:91D3: D4 01        	pei	<R0
  4701 08:91D5: 22 xx xx xx  	jsl	~~k_wcstombs
  4702 08:91D9: 85 05        	sta	<R1
  4703 08:91DB: 86 07        	stx	<R1+2
  4704 08:91DD: DA           	phx
  4705 08:91DE: 48           	pha
  4706 08:91DF: AD xx xx     	lda	|~~longnamecount
  4707 08:91E2: 29 FF 00     	and	#$ff
  4708 08:91E5: 85 0D        	sta	<R3
  4709 08:91E7: A5 0D        	lda	<R3
  4710 08:91E9: A2 0D 00     	ldx	#<$d
  4711                        	xref	~~~mul
  4712 08:91EC: 22 xx xx xx  	jsl	~~~mul
  4713 08:91F0: 85 0D        	sta	<R3
  4714 08:91F2: 18           	clc
  4715 08:91F3: A9 0B 00     	lda	#$b
  4716 08:91F6: 65 0D        	adc	<R3
  4717 08:91F8: 85 11        	sta	<17
  4718 08:91FA: 18           	clc
  4719 08:91FB: A9 xx xx     	lda	#<~~longnameBuffer
  4720 08:91FE: 65 11        	adc	<17
  4721 08:9200: 85 0D        	sta	<R3
  4722 08:9202: A5 0D        	lda	<R3
  4723 08:9204: 85 09        	sta	<R2
  4724                        	xref	_BEG_DATA
  4725 08:9206: A9 xx xx     	lda	#_BEG_DATA>>16
  4726 08:9209: 85 0B        	sta	<R2+2
  4727 08:920B: D4 0B        	pei	<R2+2
  Thu Dec  3 2020 22:25                                                Page 98


  4728 08:920D: D4 09        	pei	<R2
  4729 08:920F: 22 xx xx xx  	jsl	~~memcpy
  4730                        ;
  4731                        ;				if(plfn->sequenceNo == 1
                    )
  4732                        	.line	545
  4733                        ;				{
  4734 08:9213: E2 20        	sep	#$20
  4735                        	longa	off
  4736 08:9215: A7 29        	lda	[<L77+plfn_1]
  4737 08:9217: C9 01        	cmp	#<$1
  4738 08:9219: C2 20        	rep	#$20
  4739                        	longa	on
  4740 08:921B: F0 03        	beq	L85
  4741 08:921D: 82 5C 00     	brl	L10062
  4742                        L85:
  4743                        	.line	546
  4744                        ;					//k_debug_string
                    ("Unicodename:");
  4745                        ;
  4746                        ;					entry->plongfile
                    Name = k_mem_allocate_heap(strlen(longnameBuffer) + 1);
  4747                        	.line	549
  4748 08:9220: A9 xx xx     	lda	#<~~longnameBuffer
  4749 08:9223: 85 01        	sta	<R0
  4750                        	xref	_BEG_DATA
  4751 08:9225: A9 xx xx     	lda	#_BEG_DATA>>16
  4752 08:9228: 85 03        	sta	<R0+2
  4753 08:922A: D4 03        	pei	<R0+2
  4754 08:922C: D4 01        	pei	<R0
  4755 08:922E: 22 xx xx xx  	jsl	~~strlen
  4756 08:9232: 85 05        	sta	<R1
  4757 08:9234: A5 05        	lda	<R1
  4758 08:9236: 1A           	ina
  4759 08:9237: 48           	pha
  4760 08:9238: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  4761 08:923C: 85 05        	sta	<R1
  4762 08:923E: 86 07        	stx	<R1+2
  4763 08:9240: A5 05        	lda	<R1
  4764 08:9242: A0 20 00     	ldy	#$20
  4765 08:9245: 97 3F        	sta	[<L76+entry_0],Y
  4766 08:9247: A5 07        	lda	<R1+2
  4767 08:9249: A0 22 00     	ldy	#$22
  4768 08:924C: 97 3F        	sta	[<L76+entry_0],Y
  4769                        ;					strcpy(entry->pl
                    ongfileName,(LPCSTR)longnameBuffer);
  4770                        	.line	550
  4771 08:924E: A9 xx xx     	lda	#<~~longnameBuffer
  4772 08:9251: 85 01        	sta	<R0
  4773                        	xref	_BEG_DATA
  4774 08:9253: A9 xx xx     	lda	#_BEG_DATA>>16
  4775 08:9256: 85 03        	sta	<R0+2
  4776 08:9258: D4 03        	pei	<R0+2
  4777 08:925A: D4 01        	pei	<R0
  4778 08:925C: A0 22 00     	ldy	#$22
  4779 08:925F: B7 3F        	lda	[<L76+entry_0],Y
  4780 08:9261: 48           	pha
  4781 08:9262: A0 20 00     	ldy	#$20
  Thu Dec  3 2020 22:25                                                Page 99


  4782 08:9265: B7 3F        	lda	[<L76+entry_0],Y
  4783 08:9267: 48           	pha
  4784 08:9268: 22 xx xx xx  	jsl	~~strcpy
  4785                        ;
  4786                        ;					k_debug_string(e
                    ntry->plongfileName);
  4787                        	.line	552
  4788 08:926C: A0 22 00     	ldy	#$22
  4789 08:926F: B7 3F        	lda	[<L76+entry_0],Y
  4790 08:9271: 48           	pha
  4791 08:9272: A0 20 00     	ldy	#$20
  4792 08:9275: B7 3F        	lda	[<L76+entry_0],Y
  4793 08:9277: 48           	pha
  4794 08:9278: 22 xx xx xx  	jsl	~~k_debug_string
  4795                        ;				}
  4796                        	.line	553
  4797                        ;			}
  4798                        L10062:
  4799                        	.line	554
  4800                        L10061:
  4801                        ;
  4802                        ;			k_debug_string("\r\n");
  4803                        	.line	556
  4804 08:927C: F4 xx xx     	pea	#^L44+20
  4805 08:927F: F4 xx xx     	pea	#<L44+20
  4806 08:9282: 22 xx xx xx  	jsl	~~k_debug_string
  4807                        ;		}
  4808                        	.line	557
  4809                        ;    	else
  4810 08:9286: 82 1D 00     	brl	L10063
  4811                        L10059:
  4812                        ;    	{
  4813                        	.line	559
  4814                        ;			//k_debug_string("SHORT NAME:");
  4815                        ;			//k_debug_nstring(entry->filenam
                    e,8);
  4816                        ;			//k_debug_nstring(entry->ext,3);
  4817                        ;			//k_debug_long(" SIZE:",entry->f
                    ile_size);
  4818                        ;			//k_debug_hex("\tAttributes:",en
                    try->attributes);
  4819                        ;			//k_debug_integer("\tStart Clust
                    er:",entry->starting_cluster);
  4820                        ;			k_dos_alloc_short_name(entry);
  4821                        	.line	566
  4822 08:9289: D4 41        	pei	<L76+entry_0+2
  4823 08:928B: D4 3F        	pei	<L76+entry_0
  4824 08:928D: 22 66 8D 08  	jsl	~~k_dos_alloc_short_name
  4825                        ;
  4826                        ;			//k_debug_strings("plongfileName
                    :",entry->plongfileName);
  4827                        ;
  4828                        ;			ClusterByteNumber = getClusterLo
                    cationByIndex(entry->starting_cluster);
  4829                        	.line	570
  4830 08:9291: A0 1A 00     	ldy	#$1a
  4831 08:9294: B7 3F        	lda	[<L76+entry_0],Y
  4832 08:9296: 85 01        	sta	<R0
  Thu Dec  3 2020 22:25                                                Page 100


  4833 08:9298: 64 03        	stz	<R0+2
  4834 08:929A: D4 03        	pei	<R0+2
  4835 08:929C: D4 01        	pei	<R0
  4836 08:929E: 22 FD 98 08  	jsl	~~getClusterLocationByIndex
  4837 08:92A2: 85 25        	sta	<L77+ClusterByteNumber_1
  4838 08:92A4: 86 27        	stx	<L77+ClusterByteNumber_1+2
  4839                        ;    	}
  4840                        	.line	571
  4841                        L10063:
  4842                        L10058:
  4843                        L10056:
  4844                        ;    }
  4845                        	.line	572
  4846 08:92A6: 82 18 00     	brl	L10049
  4847                        L10048:
  4848                        	xref	~~~swt
  4849 08:92A9: 22 xx xx xx  	jsl	~~~swt
  4850 08:92AD: 04 00        	dw	4
  4851 08:92AF: 00 00        	dw	0
  4852 08:92B1: E7 8E        	dw	L10050-1
  4853 08:92B3: 05 00        	dw	5
  4854 08:92B5: 0A 8F        	dw	L10052-1
  4855 08:92B7: 2E 00        	dw	46
  4856 08:92B9: 0D 8F        	dw	L10053-1
  4857 08:92BB: E5 00        	dw	229
  4858 08:92BD: 00 8F        	dw	L10051-1
  4859 08:92BF: 18 8F        	dw	L10054-1
  4860                        L10049:
  4861                        ;
  4862                        ;    return ClusterByteNumber;
  4863                        	.line	574
  4864 08:92C1: A6 27        	ldx	<L77+ClusterByteNumber_1+2
  4865 08:92C3: A5 25        	lda	<L77+ClusterByteNumber_1
  4866 08:92C5: 82 27 FC     	brl	L80
  4867                        ;}
  4868                        	.line	575
  4869                        	.endblock	575
  4870             0000003B   L76	equ	59
  4871             00000015   L77	equ	21
  4872 08:92C8:              	ends
  4873                        	efunc
  4874                        	.endfunc	575,21,59
  4875                        	.line	575
  4876                        	data
  4877                        L44:
  4878 00:087C: 4C 4F 4E 47  	db	$4C,$4F,$4E,$47,$20,$4E,$41,$4D,$45,$3A,
                    $00,$53,$45,$51,$3A
       00:0880: 20 4E 41 4D 
       00:0884: 45 3A 00 53 
       00:0888: 45 51 3A 
  4879 00:088B: 30 78 34 30  	db	$30,$78,$34,$30,$00,$0D,$0A,$00
       00:088F: 00 0D 0A 00 
  4880 00:0893:              	ends
  4881                        ;
  4882                        ;void k_dos_deallocate_long_entry(LPCSTR name,LPVO
                    ID pdata)
  4883                        ;{
  4884                        	.line	577
  Thu Dec  3 2020 22:25                                                Page 101


  4885                        	.line	578
  4886                        	FXDOS
  4887                        	xdef	~~k_dos_deallocate_long_entry
  4888                        	func
  4889                        	.function	578
  4890                        ~~k_dos_deallocate_long_entry:
  4891                        	longa	on
  4892                        	longi	on
  4893 08:92C8: 3B           	tsc
  4894 08:92C9: 38           	sec
  4895 08:92CA: E9 04 00     	sbc	#L87
  4896 08:92CD: 1B           	tcs
  4897 08:92CE: 0B           	phd
  4898 08:92CF: 5B           	tcd
  4899             00000004   name_0	set	4
  4900             00000008   pdata_0	set	8
  4901                        	.block	578
  4902                        ;	PFAT16ENTRYLONG entry = (PFAT16ENTRYLONG)pdata;
  4903                        ;
  4904                        ;	//k_debug_strings("k_dos_deallocate_long_entry n
                    ame:",(LPSTR)name);
  4905                        ;
  4906                        ;	if(entry)
  4907             00000000   entry_1	set	0
  4908                        	.sym	entry,0,138,1,32,75
  4909                        	.sym	name,4,142,6,32
  4910                        	.sym	pdata,8,129,6,32
  4911 08:92D0: A5 0C        	lda	<L87+pdata_0
  4912 08:92D2: 85 01        	sta	<L88+entry_1
  4913 08:92D4: A5 0E        	lda	<L87+pdata_0+2
  4914 08:92D6: 85 03        	sta	<L88+entry_1+2
  4915                        	.line	583
  4916                        ;	{
  4917 08:92D8: A5 01        	lda	<L88+entry_1
  4918 08:92DA: 05 03        	ora	<L88+entry_1+2
  4919 08:92DC: D0 03        	bne	L90
  4920 08:92DE: 82 27 00     	brl	L10064
  4921                        L90:
  4922                        	.line	584
  4923                        ;		//k_debug_pointer("k_dos_deallocate_long
                    _entry ptr:",(LPSTR)entry->plongfileName);
  4924                        ;		if(entry->plongfileName)
  4925                        	.line	586
  4926                        ;			k_mem_deallocate_heap(entry->plo
                    ngfileName);
  4927 08:92E1: A0 20 00     	ldy	#$20
  4928 08:92E4: B7 01        	lda	[<L88+entry_1],Y
  4929 08:92E6: A0 22 00     	ldy	#$22
  4930 08:92E9: 17 01        	ora	[<L88+entry_1],Y
  4931 08:92EB: D0 03        	bne	L91
  4932 08:92ED: 82 10 00     	brl	L10065
  4933                        L91:
  4934                        	.line	587
  4935 08:92F0: A0 22 00     	ldy	#$22
  4936 08:92F3: B7 01        	lda	[<L88+entry_1],Y
  4937 08:92F5: 48           	pha
  4938 08:92F6: A0 20 00     	ldy	#$20
  4939 08:92F9: B7 01        	lda	[<L88+entry_1],Y
  Thu Dec  3 2020 22:25                                                Page 102


  4940 08:92FB: 48           	pha
  4941 08:92FC: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  4942                        ;
  4943                        ;		k_mem_deallocate_heap(entry);
  4944                        L10065:
  4945                        	.line	589
  4946 08:9300: D4 03        	pei	<L88+entry_1+2
  4947 08:9302: D4 01        	pei	<L88+entry_1
  4948 08:9304: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  4949                        ;	}
  4950                        	.line	590
  4951                        ;
  4952                        ;	//k_debug_string("k_dos_deallocate_long_exit\r\n
                    ");
  4953                        ;}
  4954                        L10064:
  4955                        	.line	593
  4956                        L92:
  4957 08:9308: A5 06        	lda	<L87+2
  4958 08:930A: 85 0E        	sta	<L87+2+8
  4959 08:930C: A5 05        	lda	<L87+1
  4960 08:930E: 85 0D        	sta	<L87+1+8
  4961 08:9310: 2B           	pld
  4962 08:9311: 3B           	tsc
  4963 08:9312: 18           	clc
  4964 08:9313: 69 0C 00     	adc	#L87+8
  4965 08:9316: 1B           	tcs
  4966 08:9317: 6B           	rtl
  4967                        	.endblock	593
  4968             00000004   L87	equ	4
  4969             00000001   L88	equ	1
  4970 08:9318:              	ends
  4971                        	efunc
  4972                        	.endfunc	593,1,4
  4973                        	.line	593
  4974                        ;
  4975                        ;UINT k_dos_read_file(PFXDOSDEVICE pfxdosDevice,LP
                    CSTR fileName)
  4976                        ;{
  4977                        	.line	595
  4978                        	.line	596
  4979                        	FXDOS
  4980                        	xdef	~~k_dos_read_file
  4981                        	func
  4982                        	.function	596
  4983                        ~~k_dos_read_file:
  4984                        	longa	on
  4985                        	longi	on
  4986 08:9318: 3B           	tsc
  4987 08:9319: 38           	sec
  4988 08:931A: E9 22 00     	sbc	#L93
  4989 08:931D: 1B           	tcs
  4990 08:931E: 0B           	phd
  4991 08:931F: 5B           	tcd
  4992             00000004   pfxdosDevice_0	set	4
  4993             00000008   fileName_0	set	8
  4994                        	.block	596
  4995                        ;	UINT fileSize = 0;
  Thu Dec  3 2020 22:25                                                Page 103


  4996                        ;	UINT next = 0;
  4997                        ;	UINT pageSize = 0;
  4998                        ;	PFXNODELIST fileList = NULL;
  4999                        ;	PFXNODE file = NULL;
  5000                        ;	PBYTE buffer = NULL;
  5001                        ;
  5002                        ;
  5003                        ;	fileList = k_read_dos_directory(pfxdosDevice);
  5004             00000000   fileSize_1	set	0
  5005             00000002   next_1	set	2
  5006             00000004   pageSize_1	set	4
  5007             00000006   fileList_1	set	6
  5008             0000000A   file_1	set	10
  5009             0000000E   buffer_1	set	14
  5010                        	.sym	fileSize,0,16,1,16
  5011                        	.sym	next,2,16,1,16
  5012                        	.sym	pageSize,4,16,1,16
  5013                        	.sym	fileList,6,138,1,32,6
  5014                        	.sym	file,10,138,1,32,5
  5015                        	.sym	buffer,14,142,1,32
  5016                        	.sym	pfxdosDevice,4,138,6,32,101
  5017                        	.sym	fileName,8,142,6,32
  5018 08:9320: 64 0D        	stz	<L94+fileSize_1
  5019 08:9322: 64 0F        	stz	<L94+next_1
  5020 08:9324: 64 11        	stz	<L94+pageSize_1
  5021 08:9326: 64 13        	stz	<L94+fileList_1
  5022 08:9328: 64 15        	stz	<L94+fileList_1+2
  5023 08:932A: 64 17        	stz	<L94+file_1
  5024 08:932C: 64 19        	stz	<L94+file_1+2
  5025 08:932E: 64 1B        	stz	<L94+buffer_1
  5026 08:9330: 64 1D        	stz	<L94+buffer_1+2
  5027                        	.line	605
  5028 08:9332: D4 28        	pei	<L93+pfxdosDevice_0+2
  5029 08:9334: D4 26        	pei	<L93+pfxdosDevice_0
  5030 08:9336: 22 86 95 08  	jsl	~~k_read_dos_directory
  5031 08:933A: 85 13        	sta	<L94+fileList_1
  5032 08:933C: 86 15        	stx	<L94+fileList_1+2
  5033                        ;	if(fileList)
  5034                        	.line	606
  5035                        ;	{
  5036 08:933E: A5 13        	lda	<L94+fileList_1
  5037 08:9340: 05 15        	ora	<L94+fileList_1+2
  5038 08:9342: D0 03        	bne	L96
  5039 08:9344: 82 1F 02     	brl	L10066
  5040                        L96:
  5041                        	.line	607
  5042                        ;
  5043                        ;		file = k_nodelist_foreach_until_listdata
                    (fileList,(LPVOID)fileName,k_dos_foreach_file);
  5044                        	.line	609
  5045 08:9347: F4 08 00     	pea	#^~~k_dos_foreach_file
  5046 08:934A: F4 F2 8C     	pea	#<~~k_dos_foreach_file
  5047 08:934D: D4 2C        	pei	<L93+fileName_0+2
  5048 08:934F: D4 2A        	pei	<L93+fileName_0
  5049 08:9351: D4 15        	pei	<L94+fileList_1+2
  5050 08:9353: D4 13        	pei	<L94+fileList_1
  5051 08:9355: 22 xx xx xx  	jsl	~~k_nodelist_foreach_until_listdata
  5052 08:9359: 85 17        	sta	<L94+file_1
  Thu Dec  3 2020 22:25                                                Page 104


  5053 08:935B: 86 19        	stx	<L94+file_1+2
  5054                        ;		if(file)
  5055                        	.line	610
  5056                        ;		{
  5057 08:935D: A5 17        	lda	<L94+file_1
  5058 08:935F: 05 19        	ora	<L94+file_1+2
  5059 08:9361: D0 03        	bne	L97
  5060 08:9363: 82 F8 01     	brl	L10067
  5061                        L97:
  5062                        	.line	611
  5063                        ;			PFAT16ENTRYLONG pentry = ((PFAT1
                    6ENTRYLONG)file->data);
  5064                        ;
  5065                        ;			k_debug_strings("k_dos_read_file
                     MATCH:file:",pentry->plongfileName);
  5066                        	.block	614
  5067             00000012   pentry_2	set	18
  5068                        	.sym	pentry,18,138,1,32,75
  5069 08:9366: A0 02 00     	ldy	#$2
  5070 08:9369: B7 17        	lda	[<L94+file_1],Y
  5071 08:936B: 85 1F        	sta	<L94+pentry_2
  5072 08:936D: A0 04 00     	ldy	#$4
  5073 08:9370: B7 17        	lda	[<L94+file_1],Y
  5074 08:9372: 85 21        	sta	<L94+pentry_2+2
  5075                        	.line	614
  5076 08:9374: A0 22 00     	ldy	#$22
  5077 08:9377: B7 1F        	lda	[<L94+pentry_2],Y
  5078 08:9379: 48           	pha
  5079 08:937A: A0 20 00     	ldy	#$20
  5080 08:937D: B7 1F        	lda	[<L94+pentry_2],Y
  5081 08:937F: 48           	pha
  5082 08:9380: F4 xx xx     	pea	#^L86
  5083 08:9383: F4 xx xx     	pea	#<L86
  5084 08:9386: 22 xx xx xx  	jsl	~~k_debug_strings
  5085                        ;			fileSize = pentry->file_size;
  5086                        	.line	615
  5087 08:938A: A0 1C 00     	ldy	#$1c
  5088 08:938D: B7 1F        	lda	[<L94+pentry_2],Y
  5089 08:938F: 85 0D        	sta	<L94+fileSize_1
  5090                        ;
  5091                        ;			pageSize = 512 * (fileSize/512 +
                     1);
  5092                        	.line	617
  5093 08:9391: A5 0D        	lda	<L94+fileSize_1
  5094 08:9393: A2 09 00     	ldx	#<$9
  5095                        	xref	~~~lsr
  5096 08:9396: 22 xx xx xx  	jsl	~~~lsr
  5097 08:939A: A2 09 00     	ldx	#<$9
  5098                        	xref	~~~asl
  5099 08:939D: 22 xx xx xx  	jsl	~~~asl
  5100 08:93A1: 85 01        	sta	<R0
  5101 08:93A3: 18           	clc
  5102 08:93A4: A9 00 02     	lda	#$200
  5103 08:93A7: 65 01        	adc	<R0
  5104 08:93A9: 85 11        	sta	<L94+pageSize_1
  5105                        ;			buffer = k_mem_allocate_heap(pag
                    eSize);
  5106                        	.line	618
  Thu Dec  3 2020 22:25                                                Page 105


  5107 08:93AB: D4 11        	pei	<L94+pageSize_1
  5108 08:93AD: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  5109 08:93B1: 85 1B        	sta	<L94+buffer_1
  5110 08:93B3: 86 1D        	stx	<L94+buffer_1+2
  5111                        ;
  5112                        ;			k_debug_integer("pentry->startin
                    g_cluster:",pentry->starting_cluster);
  5113                        	.line	620
  5114 08:93B5: A0 1A 00     	ldy	#$1a
  5115 08:93B8: B7 1F        	lda	[<L94+pentry_2],Y
  5116 08:93BA: 48           	pha
  5117 08:93BB: F4 xx xx     	pea	#^L86+28
  5118 08:93BE: F4 xx xx     	pea	#<L86+28
  5119 08:93C1: 22 xx xx xx  	jsl	~~k_debug_integer
  5120                        ;
  5121                        ;			next = pentry->starting_cluster;
  5122                        	.line	622
  5123 08:93C5: A0 1A 00     	ldy	#$1a
  5124 08:93C8: B7 1F        	lda	[<L94+pentry_2],Y
  5125 08:93CA: 85 0F        	sta	<L94+next_1
  5126                        ;			while(next!=65528L && next!=0L &
                    & next!=65535L)
  5127                        	.line	623
  5128                        L10068:
  5129 08:93CC: A5 0F        	lda	<L94+next_1
  5130 08:93CE: 85 01        	sta	<R0
  5131 08:93D0: 64 03        	stz	<R0+2
  5132 08:93D2: A5 01        	lda	<R0
  5133 08:93D4: C9 F8 FF     	cmp	#<$fff8
  5134 08:93D7: D0 05        	bne	L99
  5135 08:93D9: A5 03        	lda	<R0+2
  5136 08:93DB: C9 00 00     	cmp	#^$fff8
  5137                        L99:
  5138 08:93DE: D0 03        	bne	L100
  5139 08:93E0: 82 73 01     	brl	L10069
  5140                        L100:
  5141 08:93E3: A5 0F        	lda	<L94+next_1
  5142 08:93E5: D0 03        	bne	L101
  5143 08:93E7: 82 6C 01     	brl	L10069
  5144                        L101:
  5145 08:93EA: A5 0F        	lda	<L94+next_1
  5146 08:93EC: 85 01        	sta	<R0
  5147 08:93EE: 64 03        	stz	<R0+2
  5148 08:93F0: A5 01        	lda	<R0
  5149 08:93F2: C9 FF FF     	cmp	#<$ffff
  5150 08:93F5: D0 05        	bne	L102
  5151 08:93F7: A5 03        	lda	<R0+2
  5152 08:93F9: C9 00 00     	cmp	#^$ffff
  5153                        L102:
  5154 08:93FC: D0 03        	bne	L103
  5155 08:93FE: 82 55 01     	brl	L10069
  5156                        L103:
  5157                        ;			{
  5158                        	.line	624
  5159                        ;				k_debug_integer("k_dos_r
                    ead_file:next1:",next);
  5160                        	.line	625
  5161 08:9401: D4 0F        	pei	<L94+next_1
  Thu Dec  3 2020 22:25                                                Page 106


  5162 08:9403: F4 xx xx     	pea	#^L86+54
  5163 08:9406: F4 xx xx     	pea	#<L86+54
  5164 08:9409: 22 xx xx xx  	jsl	~~k_debug_integer
  5165                        ;
  5166                        ;				if(next!=65528L && next!
                    =0L && next!=65535L)
  5167                        	.line	627
  5168                        ;				{
  5169 08:940D: A5 0F        	lda	<L94+next_1
  5170 08:940F: 85 01        	sta	<R0
  5171 08:9411: 64 03        	stz	<R0+2
  5172 08:9413: A5 01        	lda	<R0
  5173 08:9415: C9 F8 FF     	cmp	#<$fff8
  5174 08:9418: D0 05        	bne	L104
  5175 08:941A: A5 03        	lda	<R0+2
  5176 08:941C: C9 00 00     	cmp	#^$fff8
  5177                        L104:
  5178 08:941F: D0 03        	bne	L105
  5179 08:9421: 82 2F 01     	brl	L10070
  5180                        L105:
  5181 08:9424: A5 0F        	lda	<L94+next_1
  5182 08:9426: D0 03        	bne	L106
  5183 08:9428: 82 28 01     	brl	L10070
  5184                        L106:
  5185 08:942B: A5 0F        	lda	<L94+next_1
  5186 08:942D: 85 01        	sta	<R0
  5187 08:942F: 64 03        	stz	<R0+2
  5188 08:9431: A5 01        	lda	<R0
  5189 08:9433: C9 FF FF     	cmp	#<$ffff
  5190 08:9436: D0 05        	bne	L107
  5191 08:9438: A5 03        	lda	<R0+2
  5192 08:943A: C9 00 00     	cmp	#^$ffff
  5193                        L107:
  5194 08:943D: D0 03        	bne	L108
  5195 08:943F: 82 11 01     	brl	L10070
  5196                        L108:
  5197                        	.line	628
  5198                        ;
  5199                        ;
  5200                        ;
  5201                        ;					k_debug_integer(
                    "k_dos_read_file:pageSize:",pageSize);
  5202                        	.line	632
  5203 08:9442: D4 11        	pei	<L94+pageSize_1
  5204 08:9444: F4 xx xx     	pea	#^L86+77
  5205 08:9447: F4 xx xx     	pea	#<L86+77
  5206 08:944A: 22 xx xx xx  	jsl	~~k_debug_integer
  5207                        ;
  5208                        ;
  5209                        ;					//readClusterToM
                    emory(getClusterLocationByIndex(next) + pfxdosDevice->bsOffs
                    et,pfxdosDevice->sectors_per_cluster,buffer,pentry->file_siz
                    e);
  5210                        ;					//readSDSector(o
                    ffset + (pfxdosDevice->sectors_per_cluster * 1) + read,buffe
                    r);
  5211                        ;
  5212                        ;					k_debug_long("k_
  Thu Dec  3 2020 22:25                                                Page 107


                    dos_read_file:getClusterLocationByIndex:0x210000:",0x210000)
                    ;
  5213                        	.line	638
  5214 08:944E: F4 21 00     	pea	#^$210000
  5215 08:9451: F4 00 00     	pea	#<$210000
  5216 08:9454: F4 xx xx     	pea	#^L86+103
  5217 08:9457: F4 xx xx     	pea	#<L86+103
  5218 08:945A: 22 xx xx xx  	jsl	~~k_debug_long
  5219                        ;
  5220                        ;
  5221                        ;					k_debug_long("k_
                    dos_read_file:getDeviceClusterLocationByIndex:",getDeviceClu
                    sterLocationByIndex(pfxdosDevice,next));
  5222                        	.line	641
  5223 08:945E: A5 0F        	lda	<L94+next_1
  5224 08:9460: 85 01        	sta	<R0
  5225 08:9462: 64 03        	stz	<R0+2
  5226 08:9464: D4 03        	pei	<R0+2
  5227 08:9466: D4 01        	pei	<R0
  5228 08:9468: D4 28        	pei	<L93+pfxdosDevice_0+2
  5229 08:946A: D4 26        	pei	<L93+pfxdosDevice_0
  5230 08:946C: 22 7B 97 08  	jsl	~~getDeviceClusterLocationByIndex
  5231 08:9470: 85 05        	sta	<R1
  5232 08:9472: 86 07        	stx	<R1+2
  5233 08:9474: DA           	phx
  5234 08:9475: 48           	pha
  5235 08:9476: F4 xx xx     	pea	#^L86+155
  5236 08:9479: F4 xx xx     	pea	#<L86+155
  5237 08:947C: 22 xx xx xx  	jsl	~~k_debug_long
  5238                        ;					k_debug_long("k_
                    dos_read_file:getDeviceClusterLocationByIndex:",getDeviceClu
                    sterLocationByIndex(pfxdosDevice,next) + pfxdosDevice->bsOff
                    set);
  5239                        	.line	642
  5240 08:9480: A5 0F        	lda	<L94+next_1
  5241 08:9482: 85 01        	sta	<R0
  5242 08:9484: 64 03        	stz	<R0+2
  5243 08:9486: D4 03        	pei	<R0+2
  5244 08:9488: D4 01        	pei	<R0
  5245 08:948A: D4 28        	pei	<L93+pfxdosDevice_0+2
  5246 08:948C: D4 26        	pei	<L93+pfxdosDevice_0
  5247 08:948E: 22 7B 97 08  	jsl	~~getDeviceClusterLocationByIndex
  5248 08:9492: 85 05        	sta	<R1
  5249 08:9494: 86 07        	stx	<R1+2
  5250 08:9496: 18           	clc
  5251 08:9497: A5 05        	lda	<R1
  5252 08:9499: A0 8B 02     	ldy	#$28b
  5253 08:949C: 77 26        	adc	[<L93+pfxdosDevice_0],Y
  5254 08:949E: 85 09        	sta	<R2
  5255 08:94A0: A5 07        	lda	<R1+2
  5256 08:94A2: A0 8D 02     	ldy	#$28d
  5257 08:94A5: 77 26        	adc	[<L93+pfxdosDevice_0],Y
  5258 08:94A7: 85 0B        	sta	<R2+2
  5259 08:94A9: D4 0B        	pei	<R2+2
  5260 08:94AB: D4 09        	pei	<R2
  5261 08:94AD: F4 xx xx     	pea	#^L86+204
  5262 08:94B0: F4 xx xx     	pea	#<L86+204
  5263 08:94B3: 22 xx xx xx  	jsl	~~k_debug_long
  Thu Dec  3 2020 22:25                                                Page 108


  5264                        ;
  5265                        ;					k_debug_long("k_
                    dos_read_file:getClusterLocationByIndex:",getClusterLocation
                    ByIndex(next) + pfxdosDevice->bsOffset);
  5266                        	.line	644
  5267 08:94B7: A5 0F        	lda	<L94+next_1
  5268 08:94B9: 85 01        	sta	<R0
  5269 08:94BB: 64 03        	stz	<R0+2
  5270 08:94BD: D4 03        	pei	<R0+2
  5271 08:94BF: D4 01        	pei	<R0
  5272 08:94C1: 22 FD 98 08  	jsl	~~getClusterLocationByIndex
  5273 08:94C5: 85 05        	sta	<R1
  5274 08:94C7: 86 07        	stx	<R1+2
  5275 08:94C9: 18           	clc
  5276 08:94CA: A5 05        	lda	<R1
  5277 08:94CC: A0 8B 02     	ldy	#$28b
  5278 08:94CF: 77 26        	adc	[<L93+pfxdosDevice_0],Y
  5279 08:94D1: 85 09        	sta	<R2
  5280 08:94D3: A5 07        	lda	<R1+2
  5281 08:94D5: A0 8D 02     	ldy	#$28d
  5282 08:94D8: 77 26        	adc	[<L93+pfxdosDevice_0],Y
  5283 08:94DA: 85 0B        	sta	<R2+2
  5284 08:94DC: D4 0B        	pei	<R2+2
  5285 08:94DE: D4 09        	pei	<R2
  5286 08:94E0: F4 xx xx     	pea	#^L86+253
  5287 08:94E3: F4 xx xx     	pea	#<L86+253
  5288 08:94E6: 22 xx xx xx  	jsl	~~k_debug_long
  5289                        ;
  5290                        ;
  5291                        ;					//pfxdosDevice->
                    pfReader((getClusterLocationByIndex(next)+ pfxdosDevice->bsO
                    ffset) * 512,buffer);
  5292                        ;					pfxdosDevice->pf
                    Reader(0x210000,buffer);
  5293                        	.line	648
  5294 08:94EA: D4 1D        	pei	<L94+buffer_1+2
  5295 08:94EC: D4 1B        	pei	<L94+buffer_1
  5296 08:94EE: F4 21 00     	pea	#^$210000
  5297 08:94F1: F4 00 00     	pea	#<$210000
  5298 08:94F4: A0 BC 02     	ldy	#$2bc
  5299 08:94F7: B7 26        	lda	[<L93+pfxdosDevice_0],Y
  5300 08:94F9: AA           	tax
  5301 08:94FA: A0 BA 02     	ldy	#$2ba
  5302 08:94FD: B7 26        	lda	[<L93+pfxdosDevice_0],Y
  5303                        	xref	~~~lcal
  5304 08:94FF: 22 xx xx xx  	jsl	~~~lcal
  5305                        ;
  5306                        ;					/*
  5307                        ;					buffer = readClu
                    sterToMemory(getClusterLocationByIndex(next) + pfxdosDevice-
                    >bsOffset,
  5308                        ;							
                                         pfxdosDevice->sectors_per_cluster,
  5309                        ;							
                    					 buffer,
  5310                        ;							
                    					 fileSize);*/
  5311                        ;					k_debug_byte_arr
  Thu Dec  3 2020 22:25                                                Page 109


                    ay("k_dos_read_file:buffer:\r\n",buffer,512);
  5312                        	.line	655
  5313 08:9503: F4 00 00     	pea	#^$200
  5314 08:9506: F4 00 02     	pea	#<$200
  5315 08:9509: D4 1D        	pei	<L94+buffer_1+2
  5316 08:950B: D4 1B        	pei	<L94+buffer_1
  5317 08:950D: F4 xx xx     	pea	#^L86+296
  5318 08:9510: F4 xx xx     	pea	#<L86+296
  5319 08:9513: 22 xx xx xx  	jsl	~~k_debug_byte_array
  5320                        ;
  5321                        ;					next = pfxdosDev
                    ice->fileAllocationTable[next];
  5322                        	.line	657
  5323 08:9517: 18           	clc
  5324 08:9518: A9 8B 00     	lda	#$8b
  5325 08:951B: 65 0F        	adc	<L94+next_1
  5326 08:951D: 85 01        	sta	<R0
  5327 08:951F: A4 01        	ldy	<R0
  5328 08:9521: B7 26        	lda	[<L93+pfxdosDevice_0],Y
  5329 08:9523: 29 FF 00     	and	#$ff
  5330 08:9526: 85 0F        	sta	<L94+next_1
  5331                        ;
  5332                        ;					k_debug_integer(
                    "k_dos_read_file:next2:",next);
  5333                        	.line	659
  5334 08:9528: D4 0F        	pei	<L94+next_1
  5335 08:952A: F4 xx xx     	pea	#^L86+322
  5336 08:952D: F4 xx xx     	pea	#<L86+322
  5337 08:9530: 22 xx xx xx  	jsl	~~k_debug_integer
  5338                        ;					k_debug_long("k_
                    dos_read_file:next512:",next * 512);
  5339                        	.line	660
  5340 08:9534: A5 0F        	lda	<L94+next_1
  5341 08:9536: A2 09 00     	ldx	#<$9
  5342                        	xref	~~~asl
  5343 08:9539: 22 xx xx xx  	jsl	~~~asl
  5344 08:953D: 85 01        	sta	<R0
  5345 08:953F: A5 01        	lda	<R0
  5346 08:9541: 85 01        	sta	<R0
  5347 08:9543: 64 03        	stz	<R0+2
  5348 08:9545: D4 03        	pei	<R0+2
  5349 08:9547: D4 01        	pei	<R0
  5350 08:9549: F4 xx xx     	pea	#^L86+345
  5351 08:954C: F4 xx xx     	pea	#<L86+345
  5352 08:954F: 22 xx xx xx  	jsl	~~k_debug_long
  5353                        ;				}
  5354                        	.line	661
  5355                        ;			}
  5356                        L10070:
  5357                        	.line	662
  5358 08:9553: 82 76 FE     	brl	L10068
  5359                        L10069:
  5360                        ;
  5361                        ;			k_mem_deallocate_heap(buffer);
  5362                        	.line	664
  5363 08:9556: D4 1D        	pei	<L94+buffer_1+2
  5364 08:9558: D4 1B        	pei	<L94+buffer_1
  5365 08:955A: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  Thu Dec  3 2020 22:25                                                Page 110


  5366                        ;		}
  5367                        	.endblock	665
  5368                        	.line	665
  5369                        ;
  5370                        ;		k_nodelist_deallocate_list(fileList);
  5371                        L10067:
  5372                        	.line	667
  5373 08:955E: D4 15        	pei	<L94+fileList_1+2
  5374 08:9560: D4 13        	pei	<L94+fileList_1
  5375 08:9562: 22 xx xx xx  	jsl	~~k_nodelist_deallocate_list
  5376                        ;	}
  5377                        	.line	668
  5378                        ;
  5379                        ;
  5380                        ;	k_debug_integer("k_dos_read_file exit:fileSize:"
                    ,fileSize);
  5381                        L10066:
  5382                        	.line	671
  5383 08:9566: D4 0D        	pei	<L94+fileSize_1
  5384 08:9568: F4 xx xx     	pea	#^L86+370
  5385 08:956B: F4 xx xx     	pea	#<L86+370
  5386 08:956E: 22 xx xx xx  	jsl	~~k_debug_integer
  5387                        ;
  5388                        ;	return fileSize;
  5389                        	.line	673
  5390 08:9572: A5 0D        	lda	<L94+fileSize_1
  5391                        L109:
  5392 08:9574: A8           	tay
  5393 08:9575: A5 24        	lda	<L93+2
  5394 08:9577: 85 2C        	sta	<L93+2+8
  5395 08:9579: A5 23        	lda	<L93+1
  5396 08:957B: 85 2B        	sta	<L93+1+8
  5397 08:957D: 2B           	pld
  5398 08:957E: 3B           	tsc
  5399 08:957F: 18           	clc
  5400 08:9580: 69 2A 00     	adc	#L93+8
  5401 08:9583: 1B           	tcs
  5402 08:9584: 98           	tya
  5403 08:9585: 6B           	rtl
  5404                        ;}
  5405                        	.line	674
  5406                        	.endblock	674
  5407             00000022   L93	equ	34
  5408             0000000D   L94	equ	13
  5409 08:9586:              	ends
  5410                        	efunc
  5411                        	.endfunc	674,13,34
  5412                        	.line	674
  5413                        	data
  5414                        L86:
  5415 00:0893: 6B 5F 64 6F  	db	$6B,$5F,$64,$6F,$73,$5F,$72,$65,$61,$64,
                    $5F,$66,$69,$6C,$65
       00:0897: 73 5F 72 65 
       00:089B: 61 64 5F 66 
       00:089F: 69 6C 65 
  5416 00:08A2: 20 4D 41 54  	db	$20,$4D,$41,$54,$43,$48,$3A,$66,$69,$6C,
                    $65,$3A,$00,$70,$65
       00:08A6: 43 48 3A 66 
  Thu Dec  3 2020 22:25                                                Page 111


       00:08AA: 69 6C 65 3A 
       00:08AE: 00 70 65 
  5417 00:08B1: 6E 74 72 79  	db	$6E,$74,$72,$79,$2D,$3E,$73,$74,$61,$72,
                    $74,$69,$6E,$67,$5F
       00:08B5: 2D 3E 73 74 
       00:08B9: 61 72 74 69 
       00:08BD: 6E 67 5F 
  5418 00:08C0: 63 6C 75 73  	db	$63,$6C,$75,$73,$74,$65,$72,$3A,$00,$6B,
                    $5F,$64,$6F,$73,$5F
       00:08C4: 74 65 72 3A 
       00:08C8: 00 6B 5F 64 
       00:08CC: 6F 73 5F 
  5419 00:08CF: 72 65 61 64  	db	$72,$65,$61,$64,$5F,$66,$69,$6C,$65,$3A,
                    $6E,$65,$78,$74,$31
       00:08D3: 5F 66 69 6C 
       00:08D7: 65 3A 6E 65 
       00:08DB: 78 74 31 
  5420 00:08DE: 3A 00 6B 5F  	db	$3A,$00,$6B,$5F,$64,$6F,$73,$5F,$72,$65,
                    $61,$64,$5F,$66,$69
       00:08E2: 64 6F 73 5F 
       00:08E6: 72 65 61 64 
       00:08EA: 5F 66 69 
  5421 00:08ED: 6C 65 3A 70  	db	$6C,$65,$3A,$70,$61,$67,$65,$53,$69,$7A,
                    $65,$3A,$00,$6B,$5F
       00:08F1: 61 67 65 53 
       00:08F5: 69 7A 65 3A 
       00:08F9: 00 6B 5F 
  5422 00:08FC: 64 6F 73 5F  	db	$64,$6F,$73,$5F,$72,$65,$61,$64,$5F,$66,
                    $69,$6C,$65,$3A,$67
       00:0900: 72 65 61 64 
       00:0904: 5F 66 69 6C 
       00:0908: 65 3A 67 
  5423 00:090B: 65 74 43 6C  	db	$65,$74,$43,$6C,$75,$73,$74,$65,$72,$4C,
                    $6F,$63,$61,$74,$69
       00:090F: 75 73 74 65 
       00:0913: 72 4C 6F 63 
       00:0917: 61 74 69 
  5424 00:091A: 6F 6E 42 79  	db	$6F,$6E,$42,$79,$49,$6E,$64,$65,$78,$3A,
                    $30,$78,$32,$31,$30
       00:091E: 49 6E 64 65 
       00:0922: 78 3A 30 78 
       00:0926: 32 31 30 
  5425 00:0929: 30 30 30 3A  	db	$30,$30,$30,$3A,$00,$6B,$5F,$64,$6F,$73,
                    $5F,$72,$65,$61,$64
       00:092D: 00 6B 5F 64 
       00:0931: 6F 73 5F 72 
       00:0935: 65 61 64 
  5426 00:0938: 5F 66 69 6C  	db	$5F,$66,$69,$6C,$65,$3A,$67,$65,$74,$44,
                    $65,$76,$69,$63,$65
       00:093C: 65 3A 67 65 
       00:0940: 74 44 65 76 
       00:0944: 69 63 65 
  5427 00:0947: 43 6C 75 73  	db	$43,$6C,$75,$73,$74,$65,$72,$4C,$6F,$63,
                    $61,$74,$69,$6F,$6E
       00:094B: 74 65 72 4C 
       00:094F: 6F 63 61 74 
       00:0953: 69 6F 6E 
  5428 00:0956: 42 79 49 6E  	db	$42,$79,$49,$6E,$64,$65,$78,$3A,$00,$6B,
  Thu Dec  3 2020 22:25                                                Page 112


                    $5F,$64,$6F,$73,$5F
       00:095A: 64 65 78 3A 
       00:095E: 00 6B 5F 64 
       00:0962: 6F 73 5F 
  5429 00:0965: 72 65 61 64  	db	$72,$65,$61,$64,$5F,$66,$69,$6C,$65,$3A,
                    $67,$65,$74,$44,$65
       00:0969: 5F 66 69 6C 
       00:096D: 65 3A 67 65 
       00:0971: 74 44 65 
  5430 00:0974: 76 69 63 65  	db	$76,$69,$63,$65,$43,$6C,$75,$73,$74,$65,
                    $72,$4C,$6F,$63,$61
       00:0978: 43 6C 75 73 
       00:097C: 74 65 72 4C 
       00:0980: 6F 63 61 
  5431 00:0983: 74 69 6F 6E  	db	$74,$69,$6F,$6E,$42,$79,$49,$6E,$64,$65,
                    $78,$3A,$00,$6B,$5F
       00:0987: 42 79 49 6E 
       00:098B: 64 65 78 3A 
       00:098F: 00 6B 5F 
  5432 00:0992: 64 6F 73 5F  	db	$64,$6F,$73,$5F,$72,$65,$61,$64,$5F,$66,
                    $69,$6C,$65,$3A,$67
       00:0996: 72 65 61 64 
       00:099A: 5F 66 69 6C 
       00:099E: 65 3A 67 
  5433 00:09A1: 65 74 43 6C  	db	$65,$74,$43,$6C,$75,$73,$74,$65,$72,$4C,
                    $6F,$63,$61,$74,$69
       00:09A5: 75 73 74 65 
       00:09A9: 72 4C 6F 63 
       00:09AD: 61 74 69 
  5434 00:09B0: 6F 6E 42 79  	db	$6F,$6E,$42,$79,$49,$6E,$64,$65,$78,$3A,
                    $00,$6B,$5F,$64,$6F
       00:09B4: 49 6E 64 65 
       00:09B8: 78 3A 00 6B 
       00:09BC: 5F 64 6F 
  5435 00:09BF: 73 5F 72 65  	db	$73,$5F,$72,$65,$61,$64,$5F,$66,$69,$6C,
                    $65,$3A,$62,$75,$66
       00:09C3: 61 64 5F 66 
       00:09C7: 69 6C 65 3A 
       00:09CB: 62 75 66 
  5436 00:09CE: 66 65 72 3A  	db	$66,$65,$72,$3A,$0D,$0A,$00,$6B,$5F,$64,
                    $6F,$73,$5F,$72,$65
       00:09D2: 0D 0A 00 6B 
       00:09D6: 5F 64 6F 73 
       00:09DA: 5F 72 65 
  5437 00:09DD: 61 64 5F 66  	db	$61,$64,$5F,$66,$69,$6C,$65,$3A,$6E,$65,
                    $78,$74,$32,$3A,$00
       00:09E1: 69 6C 65 3A 
       00:09E5: 6E 65 78 74 
       00:09E9: 32 3A 00 
  5438 00:09EC: 6B 5F 64 6F  	db	$6B,$5F,$64,$6F,$73,$5F,$72,$65,$61,$64,
                    $5F,$66,$69,$6C,$65
       00:09F0: 73 5F 72 65 
       00:09F4: 61 64 5F 66 
       00:09F8: 69 6C 65 
  5439 00:09FB: 3A 6E 65 78  	db	$3A,$6E,$65,$78,$74,$35,$31,$32,$3A,$00,
                    $6B,$5F,$64,$6F,$73
       00:09FF: 74 35 31 32 
       00:0A03: 3A 00 6B 5F 
  Thu Dec  3 2020 22:25                                                Page 113


       00:0A07: 64 6F 73 
  5440 00:0A0A: 5F 72 65 61  	db	$5F,$72,$65,$61,$64,$5F,$66,$69,$6C,$65,
                    $20,$65,$78,$69,$74
       00:0A0E: 64 5F 66 69 
       00:0A12: 6C 65 20 65 
       00:0A16: 78 69 74 
  5441 00:0A19: 3A 66 69 6C  	db	$3A,$66,$69,$6C,$65,$53,$69,$7A,$65,$3A,
                    $00
       00:0A1D: 65 53 69 7A 
       00:0A21: 65 3A 00 
  5442 00:0A24:              	ends
  5443                        ;
  5444                        ;PFXNODELIST k_read_dos_directory(PFXDOSDEVICE pfx
                    dosDevice)
  5445                        ;{
  5446                        	.line	676
  5447                        	.line	677
  5448                        	FXDOS
  5449                        	xdef	~~k_read_dos_directory
  5450                        	func
  5451                        	.function	677
  5452                        ~~k_read_dos_directory:
  5453                        	longa	on
  5454                        	longi	on
  5455 08:9586: 3B           	tsc
  5456 08:9587: 38           	sec
  5457 08:9588: E9 28 00     	sbc	#L111
  5458 08:958B: 1B           	tcs
  5459 08:958C: 0B           	phd
  5460 08:958D: 5B           	tcd
  5461             00000004   pfxdosDevice_0	set	4
  5462                        	.block	677
  5463                        ;	ULONG x = 0;
  5464                        ;	ULONG i = 0;
  5465                        ;	ULONG check = 0L;
  5466                        ;	ULONG fileOffset;
  5467                        ;	//PFAT16ENTRY     pentry     = NULL;
  5468                        ;	PFAT16ENTRYLONG  pentrylong = NULL;
  5469                        ;
  5470                        ;	PFXNODELIST plist   = NULL;
  5471                        ;
  5472                        ;	unsigned long rootDirSectors = pfxdosDevice->roo
                    tDirSectors;
  5473                        ;
  5474                        ;	k_debug_nstrings("k_read_dos_directory volume:",
                    pfxdosDevice->root_volume_name,11);
  5475             00000000   x_1	set	0
  5476             00000004   i_1	set	4
  5477             00000008   check_1	set	8
  5478             0000000C   fileOffset_1	set	12
  5479             00000010   pentrylong_1	set	16
  5480             00000014   plist_1	set	20
  5481             00000018   rootDirSectors_1	set	24
  5482                        	.sym	x,0,18,1,32
  5483                        	.sym	i,4,18,1,32
  5484                        	.sym	check,8,18,1,32
  5485                        	.sym	fileOffset,12,18,1,32
  5486                        	.sym	pentrylong,16,138,1,32,75
  Thu Dec  3 2020 22:25                                                Page 114


  5487                        	.sym	plist,20,138,1,32,6
  5488                        	.sym	rootDirSectors,24,18,1,32
  5489                        	.sym	pfxdosDevice,4,138,6,32,101
  5490 08:958E: 64 0D        	stz	<L112+x_1
  5491 08:9590: 64 0F        	stz	<L112+x_1+2
  5492 08:9592: 64 11        	stz	<L112+i_1
  5493 08:9594: 64 13        	stz	<L112+i_1+2
  5494 08:9596: 64 15        	stz	<L112+check_1
  5495 08:9598: 64 17        	stz	<L112+check_1+2
  5496 08:959A: 64 1D        	stz	<L112+pentrylong_1
  5497 08:959C: 64 1F        	stz	<L112+pentrylong_1+2
  5498 08:959E: 64 21        	stz	<L112+plist_1
  5499 08:95A0: 64 23        	stz	<L112+plist_1+2
  5500 08:95A2: A0 8F 02     	ldy	#$28f
  5501 08:95A5: B7 2C        	lda	[<L111+pfxdosDevice_0],Y
  5502 08:95A7: 85 25        	sta	<L112+rootDirSectors_1
  5503 08:95A9: A0 91 02     	ldy	#$291
  5504 08:95AC: B7 2C        	lda	[<L111+pfxdosDevice_0],Y
  5505 08:95AE: 85 27        	sta	<L112+rootDirSectors_1+2
  5506                        	.line	689
  5507 08:95B0: F4 0B 00     	pea	#<$b
  5508 08:95B3: 18           	clc
  5509 08:95B4: A9 A9 02     	lda	#$2a9
  5510 08:95B7: 65 2C        	adc	<L111+pfxdosDevice_0
  5511 08:95B9: 85 01        	sta	<R0
  5512 08:95BB: A9 00 00     	lda	#$0
  5513 08:95BE: 65 2E        	adc	<L111+pfxdosDevice_0+2
  5514 08:95C0: 85 03        	sta	<R0+2
  5515 08:95C2: D4 03        	pei	<R0+2
  5516 08:95C4: D4 01        	pei	<R0
  5517 08:95C6: F4 xx xx     	pea	#^L110
  5518 08:95C9: F4 xx xx     	pea	#<L110
  5519 08:95CC: 22 xx xx xx  	jsl	~~k_debug_nstrings
  5520                        ;
  5521                        ;	if(pfxdosDevice->initialized)
  5522                        	.line	691
  5523                        ;	{
  5524 08:95D0: A0 01 00     	ldy	#$1
  5525 08:95D3: B7 2C        	lda	[<L111+pfxdosDevice_0],Y
  5526 08:95D5: 29 FF 00     	and	#$ff
  5527 08:95D8: D0 03        	bne	L114
  5528 08:95DA: 82 88 01     	brl	L10071
  5529                        L114:
  5530                        	.line	692
  5531                        ;		plist = k_nodelist_allocate_list("curren
                    tDirectory",k_dos_deallocate_long_entry);
  5532                        	.line	693
  5533 08:95DD: F4 08 00     	pea	#^~~k_dos_deallocate_long_entry
  5534 08:95E0: F4 C8 92     	pea	#<~~k_dos_deallocate_long_entry
  5535 08:95E3: F4 xx xx     	pea	#^L110+29
  5536 08:95E6: F4 xx xx     	pea	#<L110+29
  5537 08:95E9: 22 xx xx xx  	jsl	~~k_nodelist_allocate_list
  5538 08:95ED: 85 21        	sta	<L112+plist_1
  5539 08:95EF: 86 23        	stx	<L112+plist_1+2
  5540                        ;		if(plist)
  5541                        	.line	694
  5542                        ;		{
  5543 08:95F1: A5 21        	lda	<L112+plist_1
  Thu Dec  3 2020 22:25                                                Page 115


  5544 08:95F3: 05 23        	ora	<L112+plist_1+2
  5545 08:95F5: D0 03        	bne	L115
  5546 08:95F7: 82 6B 01     	brl	L10072
  5547                        L115:
  5548                        	.line	695
  5549                        ;			for(i=0; i<pfxdosDevice->rootEnt
                    riesPerPage; i++)
  5550                        	.line	696
  5551 08:95FA: 64 11        	stz	<L112+i_1
  5552 08:95FC: 64 13        	stz	<L112+i_1+2
  5553 08:95FE: 82 44 01     	brl	L10076
  5554                        L10075:
  5555                        ;			{
  5556                        	.line	697
  5557                        ;				if(pfxdosDevice->pfReade
                    r(rootDirSectors,sectorBuffer) == 0)
  5558                        	.line	698
  5559                        ;				{
  5560 08:9601: A9 xx xx     	lda	#<~~sectorBuffer
  5561 08:9604: 85 01        	sta	<R0
  5562                        	xref	_BEG_DATA
  5563 08:9606: A9 xx xx     	lda	#_BEG_DATA>>16
  5564 08:9609: 85 03        	sta	<R0+2
  5565 08:960B: D4 03        	pei	<R0+2
  5566 08:960D: D4 01        	pei	<R0
  5567 08:960F: D4 27        	pei	<L112+rootDirSectors_1+2
  5568 08:9611: D4 25        	pei	<L112+rootDirSectors_1
  5569 08:9613: A0 BC 02     	ldy	#$2bc
  5570 08:9616: B7 2C        	lda	[<L111+pfxdosDevice_0],Y
  5571 08:9618: AA           	tax
  5572 08:9619: A0 BA 02     	ldy	#$2ba
  5573 08:961C: B7 2C        	lda	[<L111+pfxdosDevice_0],Y
  5574                        	xref	~~~lcal
  5575 08:961E: 22 xx xx xx  	jsl	~~~lcal
  5576 08:9622: 29 FF 00     	and	#$ff
  5577 08:9625: F0 03        	beq	L116
  5578 08:9627: 82 09 01     	brl	L10077
  5579                        L116:
  5580                        	.line	699
  5581                        ;					for(x=0; x<pfxdo
                    sDevice->rootEntriesPerPage; x++)
  5582                        	.line	700
  5583 08:962A: 64 0D        	stz	<L112+x_1
  5584 08:962C: 64 0F        	stz	<L112+x_1+2
  5585 08:962E: 82 E2 00     	brl	L10081
  5586                        L10080:
  5587                        ;					{
  5588                        	.line	701
  5589                        ;						pentrylo
                    ng = (PFAT16ENTRYLONG)k_mem_allocate_heap(sizeof(FAT16ENTRYL
                    ONG));
  5590                        	.line	702
  5591 08:9631: F4 24 00     	pea	#<$24
  5592 08:9634: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  5593 08:9638: 85 1D        	sta	<L112+pentrylong_1
  5594 08:963A: 86 1F        	stx	<L112+pentrylong_1+2
  5595                        ;						if(pentr
                    ylong)
  Thu Dec  3 2020 22:25                                                Page 116


  5596                        	.line	703
  5597                        ;						{
  5598 08:963C: A5 1D        	lda	<L112+pentrylong_1
  5599 08:963E: 05 1F        	ora	<L112+pentrylong_1+2
  5600 08:9640: D0 03        	bne	L117
  5601 08:9642: 82 C8 00     	brl	L10082
  5602                        L117:
  5603                        	.line	704
  5604                        ;							
                    memset(pentrylong,0,sizeof(FAT16ENTRYLONG));
  5605                        	.line	705
  5606 08:9645: F4 24 00     	pea	#<$24
  5607 08:9648: F4 00 00     	pea	#<$0
  5608 08:964B: D4 1F        	pei	<L112+pentrylong_1+2
  5609 08:964D: D4 1D        	pei	<L112+pentrylong_1
  5610 08:964F: 22 xx xx xx  	jsl	~~memset
  5611                        ;							
                    memcpy(pentrylong,(PFAT16ENTRY)&sectorBuffer[x * sizeof(FAT1
                    6ENTRY)],sizeof(FAT16ENTRY));
  5612                        	.line	706
  5613 08:9653: F4 20 00     	pea	#<$20
  5614 08:9656: D4 0F        	pei	<L112+x_1+2
  5615 08:9658: D4 0D        	pei	<L112+x_1
  5616 08:965A: A9 05 00     	lda	#$5
  5617                        	xref	~~~lasl
  5618 08:965D: 22 xx xx xx  	jsl	~~~lasl
  5619 08:9661: 85 05        	sta	<R1
  5620 08:9663: 86 07        	stx	<R1+2
  5621 08:9665: 18           	clc
  5622 08:9666: A9 xx xx     	lda	#<~~sectorBuffer
  5623 08:9669: 65 05        	adc	<R1
  5624 08:966B: 85 09        	sta	<R2
  5625 08:966D: A5 09        	lda	<R2
  5626 08:966F: 85 01        	sta	<R0
  5627                        	xref	_BEG_DATA
  5628 08:9671: A9 xx xx     	lda	#_BEG_DATA>>16
  5629 08:9674: 85 03        	sta	<R0+2
  5630 08:9676: D4 03        	pei	<R0+2
  5631 08:9678: D4 01        	pei	<R0
  5632 08:967A: D4 1F        	pei	<L112+pentrylong_1+2
  5633 08:967C: D4 1D        	pei	<L112+pentrylong_1
  5634 08:967E: 22 xx xx xx  	jsl	~~memcpy
  5635                        ;							
                    pentrylong->plongfileName = NULL;
  5636                        	.line	707
  5637 08:9682: A9 00 00     	lda	#$0
  5638 08:9685: A0 20 00     	ldy	#$20
  5639 08:9688: 97 1D        	sta	[<L112+pentrylong_1],Y
  5640 08:968A: A9 00 00     	lda	#$0
  5641 08:968D: A0 22 00     	ldy	#$22
  5642 08:9690: 97 1D        	sta	[<L112+pentrylong_1],Y
  5643                        ;
  5644                        ;							
                    check = k_dos_get_name(pentrylong,NULL);
  5645                        	.line	709
  5646 08:9692: F4 00 00     	pea	#^$0
  5647 08:9695: F4 00 00     	pea	#<$0
  5648 08:9698: D4 1F        	pei	<L112+pentrylong_1+2
  Thu Dec  3 2020 22:25                                                Page 117


  5649 08:969A: D4 1D        	pei	<L112+pentrylong_1
  5650 08:969C: 22 B7 8E 08  	jsl	~~k_dos_get_name
  5651 08:96A0: 85 15        	sta	<L112+check_1
  5652 08:96A2: 86 17        	stx	<L112+check_1+2
  5653                        ;
  5654                        ;							
                    if(check > 0)
  5655                        	.line	711
  5656                        ;							
                    {
  5657 08:96A4: A9 00 00     	lda	#$0
  5658 08:96A7: C5 15        	cmp	<L112+check_1
  5659 08:96A9: A9 00 00     	lda	#$0
  5660 08:96AC: E5 17        	sbc	<L112+check_1+2
  5661 08:96AE: 90 03        	bcc	L118
  5662 08:96B0: 82 0E 00     	brl	L10083
  5663                        L118:
  5664                        	.line	712
  5665                        ;							
                    	k_debug_long("k_dos_get_name check:",check);
  5666                        	.line	713
  5667 08:96B3: D4 17        	pei	<L112+check_1+2
  5668 08:96B5: D4 15        	pei	<L112+check_1
  5669 08:96B7: F4 xx xx     	pea	#^L110+46
  5670 08:96BA: F4 xx xx     	pea	#<L110+46
  5671 08:96BD: 22 xx xx xx  	jsl	~~k_debug_long
  5672                        ;							
                    	//fileOffset = ((pentrylong->starting_cluster - 2) * 16)
                     + (8 + (2 * 240)  + ( ((512 * 32) + (512 - 1)) / 512 ));
  5673                        ;							
                    	//k_debug_long("fileOffset:",fileOffset);
  5674                        ;							
                    }
  5675                        	.line	716
  5676                        ;							
                    //print_file_info((PFAT16ENTRY)pentrylong);
  5677                        ;
  5678                        ;							
                    if(pentrylong->plongfileName && pentrylong->plongfileName!=(
                    LPSTR)0xffffffff)
  5679                        L10083:
  5680                        	.line	719
  5681                        ;							
                    {
  5682 08:96C1: A0 20 00     	ldy	#$20
  5683 08:96C4: B7 1D        	lda	[<L112+pentrylong_1],Y
  5684 08:96C6: A0 22 00     	ldy	#$22
  5685 08:96C9: 17 1D        	ora	[<L112+pentrylong_1],Y
  5686 08:96CB: D0 03        	bne	L119
  5687 08:96CD: 82 35 00     	brl	L10084
  5688                        L119:
  5689 08:96D0: A0 20 00     	ldy	#$20
  5690 08:96D3: B7 1D        	lda	[<L112+pentrylong_1],Y
  5691 08:96D5: C9 FF FF     	cmp	#<$ffffffff
  5692 08:96D8: D0 08        	bne	L120
  5693 08:96DA: A0 22 00     	ldy	#$22
  5694 08:96DD: B7 1D        	lda	[<L112+pentrylong_1],Y
  5695 08:96DF: C9 FF FF     	cmp	#^$ffffffff
  Thu Dec  3 2020 22:25                                                Page 118


  5696                        L120:
  5697 08:96E2: D0 03        	bne	L121
  5698 08:96E4: 82 1E 00     	brl	L10084
  5699                        L121:
  5700                        	.line	720
  5701                        ;							
                    	k_nodelist_addtolist(plist,PFXNODE_FILE_PATH_TYPE,pentry
                    long->plongfileName,pentrylong);
  5702                        	.line	721
  5703 08:96E7: D4 1F        	pei	<L112+pentrylong_1+2
  5704 08:96E9: D4 1D        	pei	<L112+pentrylong_1
  5705 08:96EB: A0 22 00     	ldy	#$22
  5706 08:96EE: B7 1D        	lda	[<L112+pentrylong_1],Y
  5707 08:96F0: 48           	pha
  5708 08:96F1: A0 20 00     	ldy	#$20
  5709 08:96F4: B7 1D        	lda	[<L112+pentrylong_1],Y
  5710 08:96F6: 48           	pha
  5711 08:96F7: F4 A1 00     	pea	#<$a1
  5712 08:96FA: D4 23        	pei	<L112+plist_1+2
  5713 08:96FC: D4 21        	pei	<L112+plist_1
  5714 08:96FE: 22 xx xx xx  	jsl	~~k_nodelist_addtolist
  5715                        ;							
                    	//k_debug_pointer("k_read_dos_directory dealloc pentrylo
                    ng1:",pentrylong);
  5716                        ;							
                    	//k_mem_deallocate_heap(pentrylong->plongfileName);
  5717                        ;							
                    	//pentrylong->plongfileName = NULL;
  5718                        ;							
                    	//k_mem_deallocate_heap(pentrylong);
  5719                        ;							
                    }
  5720                        	.line	726
  5721                        ;							
                    else
  5722 08:9702: 82 08 00     	brl	L10085
  5723                        L10084:
  5724                        ;							
                    {
  5725                        	.line	728
  5726                        ;							
                    	//k_debug_pointer("k_read_dos_directory dealloc pentrylo
                    ng2:",pentrylong);
  5727                        ;							
                    	k_mem_deallocate_heap(pentrylong);
  5728                        	.line	730
  5729 08:9705: D4 1F        	pei	<L112+pentrylong_1+2
  5730 08:9707: D4 1D        	pei	<L112+pentrylong_1
  5731 08:9709: 22 xx xx xx  	jsl	~~k_mem_deallocate_heap
  5732                        ;							
                    }
  5733                        	.line	731
  5734                        L10085:
  5735                        ;						}
  5736                        	.line	732
  5737                        ;					}
  5738                        L10082:
  5739                        	.line	733
  Thu Dec  3 2020 22:25                                                Page 119


  5740                        L10078:
  5741 08:970D: E6 0D        	inc	<L112+x_1
  5742 08:970F: D0 02        	bne	L122
  5743 08:9711: E6 0F        	inc	<L112+x_1+2
  5744                        L122:
  5745                        L10081:
  5746 08:9713: A0 00 00     	ldy	#$0
  5747 08:9716: 5A           	phy
  5748 08:9717: A0 95 02     	ldy	#$295
  5749 08:971A: B7 2C        	lda	[<L111+pfxdosDevice_0],Y
  5750 08:971C: 7A           	ply
  5751 08:971D: 2A           	rol	A
  5752 08:971E: 6A           	ror	A
  5753 08:971F: 10 01        	bpl	L123
  5754 08:9721: 88           	dey
  5755                        L123:
  5756 08:9722: 85 01        	sta	<R0
  5757 08:9724: 84 03        	sty	<R0+2
  5758 08:9726: A5 0D        	lda	<L112+x_1
  5759 08:9728: C5 01        	cmp	<R0
  5760 08:972A: A5 0F        	lda	<L112+x_1+2
  5761 08:972C: E5 03        	sbc	<R0+2
  5762 08:972E: B0 03        	bcs	L124
  5763 08:9730: 82 FE FE     	brl	L10080
  5764                        L124:
  5765                        L10079:
  5766                        ;				}
  5767                        	.line	734
  5768                        ;				rootDirSectors+=512;
  5769                        L10077:
  5770                        	.line	735
  5771 08:9733: 18           	clc
  5772 08:9734: A9 00 02     	lda	#$200
  5773 08:9737: 65 25        	adc	<L112+rootDirSectors_1
  5774 08:9739: 85 25        	sta	<L112+rootDirSectors_1
  5775 08:973B: 90 02        	bcc	L125
  5776 08:973D: E6 27        	inc	<L112+rootDirSectors_1+2
  5777                        L125:
  5778                        ;			}
  5779                        	.line	736
  5780                        L10073:
  5781 08:973F: E6 11        	inc	<L112+i_1
  5782 08:9741: D0 02        	bne	L126
  5783 08:9743: E6 13        	inc	<L112+i_1+2
  5784                        L126:
  5785                        L10076:
  5786 08:9745: A0 00 00     	ldy	#$0
  5787 08:9748: 5A           	phy
  5788 08:9749: A0 95 02     	ldy	#$295
  5789 08:974C: B7 2C        	lda	[<L111+pfxdosDevice_0],Y
  5790 08:974E: 7A           	ply
  5791 08:974F: 2A           	rol	A
  5792 08:9750: 6A           	ror	A
  5793 08:9751: 10 01        	bpl	L127
  5794 08:9753: 88           	dey
  5795                        L127:
  5796 08:9754: 85 01        	sta	<R0
  5797 08:9756: 84 03        	sty	<R0+2
  Thu Dec  3 2020 22:25                                                Page 120


  5798 08:9758: A5 11        	lda	<L112+i_1
  5799 08:975A: C5 01        	cmp	<R0
  5800 08:975C: A5 13        	lda	<L112+i_1+2
  5801 08:975E: E5 03        	sbc	<R0+2
  5802 08:9760: B0 03        	bcs	L128
  5803 08:9762: 82 9C FE     	brl	L10075
  5804                        L128:
  5805                        L10074:
  5806                        ;		}
  5807                        	.line	737
  5808                        ;	}
  5809                        L10072:
  5810                        	.line	738
  5811                        ;
  5812                        ;
  5813                        ;
  5814                        ;	return plist;
  5815                        L10071:
  5816                        	.line	742
  5817 08:9765: A6 23        	ldx	<L112+plist_1+2
  5818 08:9767: A5 21        	lda	<L112+plist_1
  5819                        L129:
  5820 08:9769: A8           	tay
  5821 08:976A: A5 2A        	lda	<L111+2
  5822 08:976C: 85 2E        	sta	<L111+2+4
  5823 08:976E: A5 29        	lda	<L111+1
  5824 08:9770: 85 2D        	sta	<L111+1+4
  5825 08:9772: 2B           	pld
  5826 08:9773: 3B           	tsc
  5827 08:9774: 18           	clc
  5828 08:9775: 69 2C 00     	adc	#L111+4
  5829 08:9778: 1B           	tcs
  5830 08:9779: 98           	tya
  5831 08:977A: 6B           	rtl
  5832                        ;}
  5833                        	.line	743
  5834                        	.endblock	743
  5835             00000028   L111	equ	40
  5836             0000000D   L112	equ	13
  5837 08:977B:              	ends
  5838                        	efunc
  5839                        	.endfunc	743,13,40
  5840                        	.line	743
  5841                        	data
  5842                        L110:
  5843 00:0A24: 6B 5F 72 65  	db	$6B,$5F,$72,$65,$61,$64,$5F,$64,$6F,$73,
                    $5F,$64,$69,$72,$65
       00:0A28: 61 64 5F 64 
       00:0A2C: 6F 73 5F 64 
       00:0A30: 69 72 65 
  5844 00:0A33: 63 74 6F 72  	db	$63,$74,$6F,$72,$79,$20,$76,$6F,$6C,$75,
                    $6D,$65,$3A,$00,$63
       00:0A37: 79 20 76 6F 
       00:0A3B: 6C 75 6D 65 
       00:0A3F: 3A 00 63 
  5845 00:0A42: 75 72 72 65  	db	$75,$72,$72,$65,$6E,$74,$44,$69,$72,$65,
                    $63,$74,$6F,$72,$79
       00:0A46: 6E 74 44 69 
  Thu Dec  3 2020 22:25                                                Page 121


       00:0A4A: 72 65 63 74 
       00:0A4E: 6F 72 79 
  5846 00:0A51: 00 6B 5F 64  	db	$00,$6B,$5F,$64,$6F,$73,$5F,$67,$65,$74,
                    $5F,$6E,$61,$6D,$65
       00:0A55: 6F 73 5F 67 
       00:0A59: 65 74 5F 6E 
       00:0A5D: 61 6D 65 
  5847 00:0A60: 20 63 68 65  	db	$20,$63,$68,$65,$63,$6B,$3A,$00
       00:0A64: 63 6B 3A 00 
  5848 00:0A68:              	ends
  5849                        ;
  5850                        ;ULONG getDeviceClusterLocationByIndex(PFXDOSDEVIC
                    E pfxdosDevice,ULONG starting_cluster)
  5851                        ;{
  5852                        	.line	745
  5853                        	.line	746
  5854                        	FXDOS
  5855                        	xdef	~~getDeviceClusterLocationByIndex
  5856                        	func
  5857                        	.function	746
  5858                        ~~getDeviceClusterLocationByIndex:
  5859                        	longa	on
  5860                        	longi	on
  5861 08:977B: 3B           	tsc
  5862 08:977C: 38           	sec
  5863 08:977D: E9 20 00     	sbc	#L131
  5864 08:9780: 1B           	tcs
  5865 08:9781: 0B           	phd
  5866 08:9782: 5B           	tcd
  5867             00000004   pfxdosDevice_0	set	4
  5868             00000008   starting_cluster_0	set	8
  5869                        	.block	746
  5870                        ;	ULONG rootDirSectors = 0L;
  5871                        ;	ULONG cluster2SectorNumber = 0L;
  5872                        ;	ULONG clusterSectorNumber = 0L;
  5873                        ;	ULONG clusterByteNumber = 0L;
  5874                        ;
  5875                        ;	ULONG firstDataSector = 0L;
  5876                        ;
  5877                        ;	/*
  5878                        ;			k_debug_integer("***fxdosDevice 
                    bytes_per_sector:",(INT)pfxdosDevice->bootSector.bytes_per_s
                    ector);
  5879                        ;			k_debug_integer("***fxdosDevice 
                    sectors_per_cluster:",(INT)pfxdosDevice->bootSector.sectors_
                    per_cluster);
  5880                        ;			k_debug_integer("***fxdosDevice 
                    reserved_sector_count:",(INT)pfxdosDevice->bootSector.reserv
                    ed_sector_count);
  5881                        ;			k_debug_integer("***fxdosDevice 
                    table_count:",(INT)pfxdosDevice->bootSector.fat_table_count)
                    ;
  5882                        ;			k_debug_integer("***fxdosDevice 
                    root_entry_count:",(INT)pfxdosDevice->bootSector.root_entry_
                    count);
  5883                        ;			k_debug_integer("***fxdosDevice 
                    total_sectors_16:",(INT)pfxdosDevice->bootSector.total_secto
                    rs_16);
  Thu Dec  3 2020 22:25                                                Page 122


  5884                        ;			k_debug_integer("***fxdosDevice 
                    media_type:",(INT)pfxdosDevice->bootSector.media_type);
  5885                        ;			k_debug_integer("***fxdosDevice 
                    sectors_per_fat:",(INT)pfxdosDevice->bootSector.sectors_per_
                    fat);
  5886                        ;			k_debug_integer("***fxdosDevice 
                    sectors_per_track:",(INT)pfxdosDevice->bootSector.sectors_pe
                    r_track);
  5887                        ;			k_debug_integer("***fxdosDevice 
                    head_side_count:",(INT)pfxdosDevice->bootSector.head_side_co
                    unt);
  5888                        ;			k_debug_integer("***fxdosDevice 
                    hidden_sector_count:",(INT)pfxdosDevice->bootSector.hidden_s
                    ector_count);
  5889                        ;			k_debug_integer("***fxdosDevice 
                    total_sectors_32:",(INT)pfxdosDevice->bootSector.total_secto
                    rs_32);
  5890                        ;	 */
  5891                        ;
  5892                        ;
  5893                        ;
  5894                        ;	firstDataSector = pfxdosDevice->bootSector.reser
                    ved_sector_count + (pfxdosDevice->bootSector.fat_table_count
                     * 512) + pfxdosDevice->rootDirSectors;
  5895             00000000   rootDirSectors_1	set	0
  5896             00000004   cluster2SectorNumber_1	set	4
  5897             00000008   clusterSectorNumber_1	set	8
  5898             0000000C   clusterByteNumber_1	set	12
  5899             00000010   firstDataSector_1	set	16
  5900                        	.sym	rootDirSectors,0,18,1,32
  5901                        	.sym	cluster2SectorNumber,4,18,1,32
  5902                        	.sym	clusterSectorNumber,8,18,1,32
  5903                        	.sym	clusterByteNumber,12,18,1,32
  5904                        	.sym	firstDataSector,16,18,1,32
  5905                        	.sym	pfxdosDevice,4,138,6,32,101
  5906                        	.sym	starting_cluster,8,18,6,32
  5907 08:9783: 64 0D        	stz	<L132+rootDirSectors_1
  5908 08:9785: 64 0F        	stz	<L132+rootDirSectors_1+2
  5909 08:9787: 64 11        	stz	<L132+cluster2SectorNumber_1
  5910 08:9789: 64 13        	stz	<L132+cluster2SectorNumber_1+2
  5911 08:978B: 64 15        	stz	<L132+clusterSectorNumber_1
  5912 08:978D: 64 17        	stz	<L132+clusterSectorNumber_1+2
  5913 08:978F: 64 19        	stz	<L132+clusterByteNumber_1
  5914 08:9791: 64 1B        	stz	<L132+clusterByteNumber_1+2
  5915 08:9793: 64 1D        	stz	<L132+firstDataSector_1
  5916 08:9795: 64 1F        	stz	<L132+firstDataSector_1+2
  5917                        	.line	771
  5918 08:9797: A0 17 00     	ldy	#$17
  5919 08:979A: B7 24        	lda	[<L131+pfxdosDevice_0],Y
  5920 08:979C: 29 FF 00     	and	#$ff
  5921 08:979F: A2 09 00     	ldx	#<$9
  5922                        	xref	~~~asl
  5923 08:97A2: 22 xx xx xx  	jsl	~~~asl
  5924 08:97A6: 85 01        	sta	<R0
  5925 08:97A8: 18           	clc
  5926 08:97A9: A5 01        	lda	<R0
  5927 08:97AB: A0 15 00     	ldy	#$15
  5928 08:97AE: 77 24        	adc	[<L131+pfxdosDevice_0],Y
  Thu Dec  3 2020 22:25                                                Page 123


  5929 08:97B0: 85 05        	sta	<R1
  5930 08:97B2: A5 05        	lda	<R1
  5931 08:97B4: 85 01        	sta	<R0
  5932 08:97B6: 64 03        	stz	<R0+2
  5933 08:97B8: 18           	clc
  5934 08:97B9: A5 01        	lda	<R0
  5935 08:97BB: A0 8F 02     	ldy	#$28f
  5936 08:97BE: 77 24        	adc	[<L131+pfxdosDevice_0],Y
  5937 08:97C0: 85 1D        	sta	<L132+firstDataSector_1
  5938 08:97C2: A5 03        	lda	<R0+2
  5939 08:97C4: A0 91 02     	ldy	#$291
  5940 08:97C7: 77 24        	adc	[<L131+pfxdosDevice_0],Y
  5941 08:97C9: 85 1F        	sta	<L132+firstDataSector_1+2
  5942                        ;
  5943                        ;	k_debug_long("firstDataSector:",firstDataSector)
                    ;
  5944                        	.line	773
  5945 08:97CB: D4 1F        	pei	<L132+firstDataSector_1+2
  5946 08:97CD: D4 1D        	pei	<L132+firstDataSector_1
  5947 08:97CF: F4 xx xx     	pea	#^L130
  5948 08:97D2: F4 xx xx     	pea	#<L130
  5949 08:97D5: 22 xx xx xx  	jsl	~~k_debug_long
  5950                        ;
  5951                        ;	clusterSectorNumber = ((starting_cluster - 2) * 
                    pfxdosDevice->sectors_per_cluster) + firstDataSector;
  5952                        	.line	775
  5953 08:97D9: A0 00 00     	ldy	#$0
  5954 08:97DC: 5A           	phy
  5955 08:97DD: A0 97 02     	ldy	#$297
  5956 08:97E0: B7 24        	lda	[<L131+pfxdosDevice_0],Y
  5957 08:97E2: 7A           	ply
  5958 08:97E3: 2A           	rol	A
  5959 08:97E4: 6A           	ror	A
  5960 08:97E5: 10 01        	bpl	L134
  5961 08:97E7: 88           	dey
  5962                        L134:
  5963 08:97E8: 85 01        	sta	<R0
  5964 08:97EA: 84 03        	sty	<R0+2
  5965 08:97EC: 18           	clc
  5966 08:97ED: A9 FE FF     	lda	#$fffe
  5967 08:97F0: 65 28        	adc	<L131+starting_cluster_0
  5968 08:97F2: 85 05        	sta	<R1
  5969 08:97F4: A9 FF FF     	lda	#$ffff
  5970 08:97F7: 65 2A        	adc	<L131+starting_cluster_0+2
  5971 08:97F9: 85 07        	sta	<R1+2
  5972 08:97FB: D4 03        	pei	<R0+2
  5973 08:97FD: D4 01        	pei	<R0
  5974 08:97FF: D4 07        	pei	<R1+2
  5975 08:9801: D4 05        	pei	<R1
  5976                        	xref	~~~lmul
  5977 08:9803: 22 xx xx xx  	jsl	~~~lmul
  5978 08:9807: 85 01        	sta	<R0
  5979 08:9809: 86 03        	stx	<R0+2
  5980 08:980B: 18           	clc
  5981 08:980C: A5 01        	lda	<R0
  5982 08:980E: 65 1D        	adc	<L132+firstDataSector_1
  5983 08:9810: 85 15        	sta	<L132+clusterSectorNumber_1
  5984 08:9812: A5 03        	lda	<R0+2
  Thu Dec  3 2020 22:25                                                Page 124


  5985 08:9814: 65 1F        	adc	<L132+firstDataSector_1+2
  5986 08:9816: 85 17        	sta	<L132+clusterSectorNumber_1+2
  5987                        ;
  5988                        ;	k_debug_long("Cluster Offset Calculated:",cluste
                    rSectorNumber);
  5989                        	.line	777
  5990 08:9818: D4 17        	pei	<L132+clusterSectorNumber_1+2
  5991 08:981A: D4 15        	pei	<L132+clusterSectorNumber_1
  5992 08:981C: F4 xx xx     	pea	#^L130+17
  5993 08:981F: F4 xx xx     	pea	#<L130+17
  5994 08:9822: 22 xx xx xx  	jsl	~~k_debug_long
  5995                        ;
  5996                        ;	k_debug_long("FAT Entry:",((UINT*)(&pfxdosDevice
                    ->fileAllocationTable))[starting_cluster]);
  5997                        	.line	779
  5998 08:9826: A5 28        	lda	<L131+starting_cluster_0
  5999 08:9828: 85 01        	sta	<R0
  6000 08:982A: A5 2A        	lda	<L131+starting_cluster_0+2
  6001 08:982C: 85 03        	sta	<R0+2
  6002 08:982E: 06 01        	asl	<R0
  6003 08:9830: 26 03        	rol	<R0+2
  6004 08:9832: 18           	clc
  6005 08:9833: A9 8B 00     	lda	#$8b
  6006 08:9836: 65 24        	adc	<L131+pfxdosDevice_0
  6007 08:9838: 85 05        	sta	<R1
  6008 08:983A: A9 00 00     	lda	#$0
  6009 08:983D: 65 26        	adc	<L131+pfxdosDevice_0+2
  6010 08:983F: 85 07        	sta	<R1+2
  6011 08:9841: 18           	clc
  6012 08:9842: A5 05        	lda	<R1
  6013 08:9844: 65 01        	adc	<R0
  6014 08:9846: 85 09        	sta	<R2
  6015 08:9848: A5 07        	lda	<R1+2
  6016 08:984A: 65 03        	adc	<R0+2
  6017 08:984C: 85 0B        	sta	<R2+2
  6018 08:984E: A7 09        	lda	[<R2]
  6019 08:9850: 85 01        	sta	<R0
  6020 08:9852: 64 03        	stz	<R0+2
  6021 08:9854: D4 03        	pei	<R0+2
  6022 08:9856: D4 01        	pei	<R0
  6023 08:9858: F4 xx xx     	pea	#^L130+44
  6024 08:985B: F4 xx xx     	pea	#<L130+44
  6025 08:985E: 22 xx xx xx  	jsl	~~k_debug_long
  6026                        ;
  6027                        ;	rootDirSectors = (pfxdosDevice->bootSector.reser
                    ved_sector_count * pfxdosDevice->root_entry_count)  / pfxdos
                    Device->bootSector.bytes_per_sector;
  6028                        	.line	781
  6029 08:9862: A0 93 02     	ldy	#$293
  6030 08:9865: B7 24        	lda	[<L131+pfxdosDevice_0],Y
  6031 08:9867: AA           	tax
  6032 08:9868: A0 15 00     	ldy	#$15
  6033 08:986B: B7 24        	lda	[<L131+pfxdosDevice_0],Y
  6034                        	xref	~~~mul
  6035 08:986D: 22 xx xx xx  	jsl	~~~mul
  6036 08:9871: 85 01        	sta	<R0
  6037 08:9873: A0 12 00     	ldy	#$12
  6038 08:9876: B7 24        	lda	[<L131+pfxdosDevice_0],Y
  Thu Dec  3 2020 22:25                                                Page 125


  6039 08:9878: AA           	tax
  6040 08:9879: A5 01        	lda	<R0
  6041                        	xref	~~~udv
  6042 08:987B: 22 xx xx xx  	jsl	~~~udv
  6043 08:987F: 85 01        	sta	<R0
  6044 08:9881: A5 01        	lda	<R0
  6045 08:9883: 85 0D        	sta	<L132+rootDirSectors_1
  6046 08:9885: 64 0F        	stz	<L132+rootDirSectors_1+2
  6047                        ;
  6048                        ;
  6049                        ;	cluster2SectorNumber =  8 + (2 * 240) + rootDirS
                    ectors;
  6050                        	.line	784
  6051 08:9887: 18           	clc
  6052 08:9888: A9 E8 01     	lda	#$1e8
  6053 08:988B: 65 0D        	adc	<L132+rootDirSectors_1
  6054 08:988D: 85 11        	sta	<L132+cluster2SectorNumber_1
  6055 08:988F: A9 00 00     	lda	#$0
  6056 08:9892: 65 0F        	adc	<L132+rootDirSectors_1+2
  6057 08:9894: 85 13        	sta	<L132+cluster2SectorNumber_1+2
  6058                        ;	clusterSectorNumber =  ((starting_cluster - 2) *
                     16) + cluster2SectorNumber;
  6059                        	.line	785
  6060 08:9896: A5 28        	lda	<L131+starting_cluster_0
  6061 08:9898: 85 01        	sta	<R0
  6062 08:989A: A5 2A        	lda	<L131+starting_cluster_0+2
  6063 08:989C: 85 03        	sta	<R0+2
  6064 08:989E: 06 01        	asl	<R0
  6065 08:98A0: 26 03        	rol	<R0+2
  6066 08:98A2: 06 01        	asl	<R0
  6067 08:98A4: 26 03        	rol	<R0+2
  6068 08:98A6: 06 01        	asl	<R0
  6069 08:98A8: 26 03        	rol	<R0+2
  6070 08:98AA: 06 01        	asl	<R0
  6071 08:98AC: 26 03        	rol	<R0+2
  6072 08:98AE: 18           	clc
  6073 08:98AF: A5 01        	lda	<R0
  6074 08:98B1: 65 11        	adc	<L132+cluster2SectorNumber_1
  6075 08:98B3: 85 05        	sta	<R1
  6076 08:98B5: A5 03        	lda	<R0+2
  6077 08:98B7: 65 13        	adc	<L132+cluster2SectorNumber_1+2
  6078 08:98B9: 85 07        	sta	<R1+2
  6079 08:98BB: 18           	clc
  6080 08:98BC: A9 E0 FF     	lda	#$ffe0
  6081 08:98BF: 65 05        	adc	<R1
  6082 08:98C1: 85 15        	sta	<L132+clusterSectorNumber_1
  6083 08:98C3: A9 FF FF     	lda	#$ffff
  6084 08:98C6: 65 07        	adc	<R1+2
  6085 08:98C8: 85 17        	sta	<L132+clusterSectorNumber_1+2
  6086                        ;	k_debug_long("clusterSectorNumber:",clusterSecto
                    rNumber);
  6087                        	.line	786
  6088 08:98CA: D4 17        	pei	<L132+clusterSectorNumber_1+2
  6089 08:98CC: D4 15        	pei	<L132+clusterSectorNumber_1
  6090 08:98CE: F4 xx xx     	pea	#^L130+55
  6091 08:98D1: F4 xx xx     	pea	#<L130+55
  6092 08:98D4: 22 xx xx xx  	jsl	~~k_debug_long
  6093                        ;
  Thu Dec  3 2020 22:25                                                Page 126


  6094                        ;	clusterByteNumber = clusterSectorNumber * 512;
  6095                        	.line	788
  6096 08:98D8: D4 17        	pei	<L132+clusterSectorNumber_1+2
  6097 08:98DA: D4 15        	pei	<L132+clusterSectorNumber_1
  6098 08:98DC: A9 09 00     	lda	#$9
  6099                        	xref	~~~lasl
  6100 08:98DF: 22 xx xx xx  	jsl	~~~lasl
  6101 08:98E3: 85 19        	sta	<L132+clusterByteNumber_1
  6102 08:98E5: 86 1B        	stx	<L132+clusterByteNumber_1+2
  6103                        ;
  6104                        ;	return clusterByteNumber;
  6105                        	.line	790
  6106 08:98E7: A6 1B        	ldx	<L132+clusterByteNumber_1+2
  6107 08:98E9: A5 19        	lda	<L132+clusterByteNumber_1
  6108                        L135:
  6109 08:98EB: A8           	tay
  6110 08:98EC: A5 22        	lda	<L131+2
  6111 08:98EE: 85 2A        	sta	<L131+2+8
  6112 08:98F0: A5 21        	lda	<L131+1
  6113 08:98F2: 85 29        	sta	<L131+1+8
  6114 08:98F4: 2B           	pld
  6115 08:98F5: 3B           	tsc
  6116 08:98F6: 18           	clc
  6117 08:98F7: 69 28 00     	adc	#L131+8
  6118 08:98FA: 1B           	tcs
  6119 08:98FB: 98           	tya
  6120 08:98FC: 6B           	rtl
  6121                        ;}
  6122                        	.line	791
  6123                        	.endblock	791
  6124             00000020   L131	equ	32
  6125             0000000D   L132	equ	13
  6126 08:98FD:              	ends
  6127                        	efunc
  6128                        	.endfunc	791,13,32
  6129                        	.line	791
  6130                        	data
  6131                        L130:
  6132 00:0A68: 66 69 72 73  	db	$66,$69,$72,$73,$74,$44,$61,$74,$61,$53,
                    $65,$63,$74,$6F,$72
       00:0A6C: 74 44 61 74 
       00:0A70: 61 53 65 63 
       00:0A74: 74 6F 72 
  6133 00:0A77: 3A 00 43 6C  	db	$3A,$00,$43,$6C,$75,$73,$74,$65,$72,$20,
                    $4F,$66,$66,$73,$65
       00:0A7B: 75 73 74 65 
       00:0A7F: 72 20 4F 66 
       00:0A83: 66 73 65 
  6134 00:0A86: 74 20 43 61  	db	$74,$20,$43,$61,$6C,$63,$75,$6C,$61,$74,
                    $65,$64,$3A,$00,$46
       00:0A8A: 6C 63 75 6C 
       00:0A8E: 61 74 65 64 
       00:0A92: 3A 00 46 
  6135 00:0A95: 41 54 20 45  	db	$41,$54,$20,$45,$6E,$74,$72,$79,$3A,$00,
                    $63,$6C,$75,$73,$74
       00:0A99: 6E 74 72 79 
       00:0A9D: 3A 00 63 6C 
       00:0AA1: 75 73 74 
  Thu Dec  3 2020 22:25                                                Page 127


  6136 00:0AA4: 65 72 53 65  	db	$65,$72,$53,$65,$63,$74,$6F,$72,$4E,$75,
                    $6D,$62,$65,$72,$3A
       00:0AA8: 63 74 6F 72 
       00:0AAC: 4E 75 6D 62 
       00:0AB0: 65 72 3A 
  6137 00:0AB3: 00           	db	$00
  6138 00:0AB4:              	ends
  6139                        ;
  6140                        ;
  6141                        ;ULONG getClusterLocationByIndex(ULONG starting_cl
                    uster)
  6142                        ;{
  6143                        	.line	794
  6144                        	.line	795
  6145                        	FXDOS
  6146                        	xdef	~~getClusterLocationByIndex
  6147                        	func
  6148                        	.function	795
  6149                        ~~getClusterLocationByIndex:
  6150                        	longa	on
  6151                        	longi	on
  6152 08:98FD: 3B           	tsc
  6153 08:98FE: 38           	sec
  6154 08:98FF: E9 18 00     	sbc	#L137
  6155 08:9902: 1B           	tcs
  6156 08:9903: 0B           	phd
  6157 08:9904: 5B           	tcd
  6158             00000004   starting_cluster_0	set	4
  6159                        	.block	795
  6160                        ;	ULONG rootDirSectors;
  6161                        ;	ULONG cluster2SectorNumber;
  6162                        ;	ULONG clusterSectorNumber;
  6163                        ;	ULONG clusterByteNumber = 0;
  6164                        ;
  6165                        ;	rootDirSectors = (32 * 512)  / 512;
  6166             00000000   rootDirSectors_1	set	0
  6167             00000004   cluster2SectorNumber_1	set	4
  6168             00000008   clusterSectorNumber_1	set	8
  6169             0000000C   clusterByteNumber_1	set	12
  6170                        	.sym	rootDirSectors,0,18,1,32
  6171                        	.sym	cluster2SectorNumber,4,18,1,32
  6172                        	.sym	clusterSectorNumber,8,18,1,32
  6173                        	.sym	clusterByteNumber,12,18,1,32
  6174                        	.sym	starting_cluster,4,18,6,32
  6175 08:9905: 64 15        	stz	<L138+clusterByteNumber_1
  6176 08:9907: 64 17        	stz	<L138+clusterByteNumber_1+2
  6177                        	.line	801
  6178 08:9909: A9 20 00     	lda	#$20
  6179 08:990C: 85 09        	sta	<L138+rootDirSectors_1
  6180 08:990E: A9 00 00     	lda	#$0
  6181 08:9911: 85 0B        	sta	<L138+rootDirSectors_1+2
  6182                        ;
  6183                        ;	cluster2SectorNumber = 8 + (2 * 240) + rootDirSe
                    ctors;
  6184                        	.line	803
  6185 08:9913: 18           	clc
  6186 08:9914: A9 E8 01     	lda	#$1e8
  6187 08:9917: 65 09        	adc	<L138+rootDirSectors_1
  Thu Dec  3 2020 22:25                                                Page 128


  6188 08:9919: 85 0D        	sta	<L138+cluster2SectorNumber_1
  6189 08:991B: A9 00 00     	lda	#$0
  6190 08:991E: 65 0B        	adc	<L138+rootDirSectors_1+2
  6191 08:9920: 85 0F        	sta	<L138+cluster2SectorNumber_1+2
  6192                        ;	clusterSectorNumber =  ((starting_cluster - 2) *
                     16) + cluster2SectorNumber;
  6193                        	.line	804
  6194 08:9922: A5 1C        	lda	<L137+starting_cluster_0
  6195 08:9924: 85 01        	sta	<R0
  6196 08:9926: A5 1E        	lda	<L137+starting_cluster_0+2
  6197 08:9928: 85 03        	sta	<R0+2
  6198 08:992A: 06 01        	asl	<R0
  6199 08:992C: 26 03        	rol	<R0+2
  6200 08:992E: 06 01        	asl	<R0
  6201 08:9930: 26 03        	rol	<R0+2
  6202 08:9932: 06 01        	asl	<R0
  6203 08:9934: 26 03        	rol	<R0+2
  6204 08:9936: 06 01        	asl	<R0
  6205 08:9938: 26 03        	rol	<R0+2
  6206 08:993A: 18           	clc
  6207 08:993B: A5 01        	lda	<R0
  6208 08:993D: 65 0D        	adc	<L138+cluster2SectorNumber_1
  6209 08:993F: 85 05        	sta	<R1
  6210 08:9941: A5 03        	lda	<R0+2
  6211 08:9943: 65 0F        	adc	<L138+cluster2SectorNumber_1+2
  6212 08:9945: 85 07        	sta	<R1+2
  6213 08:9947: 18           	clc
  6214 08:9948: A9 E0 FF     	lda	#$ffe0
  6215 08:994B: 65 05        	adc	<R1
  6216 08:994D: 85 11        	sta	<L138+clusterSectorNumber_1
  6217 08:994F: A9 FF FF     	lda	#$ffff
  6218 08:9952: 65 07        	adc	<R1+2
  6219 08:9954: 85 13        	sta	<L138+clusterSectorNumber_1+2
  6220                        ;	clusterByteNumber = clusterSectorNumber * 512;
  6221                        	.line	805
  6222 08:9956: D4 13        	pei	<L138+clusterSectorNumber_1+2
  6223 08:9958: D4 11        	pei	<L138+clusterSectorNumber_1
  6224 08:995A: A9 09 00     	lda	#$9
  6225                        	xref	~~~lasl
  6226 08:995D: 22 xx xx xx  	jsl	~~~lasl
  6227 08:9961: 85 15        	sta	<L138+clusterByteNumber_1
  6228 08:9963: 86 17        	stx	<L138+clusterByteNumber_1+2
  6229                        ;
  6230                        ;	return clusterByteNumber;
  6231                        	.line	807
  6232 08:9965: A6 17        	ldx	<L138+clusterByteNumber_1+2
  6233 08:9967: A5 15        	lda	<L138+clusterByteNumber_1
  6234                        L140:
  6235 08:9969: A8           	tay
  6236 08:996A: A5 1A        	lda	<L137+2
  6237 08:996C: 85 1E        	sta	<L137+2+4
  6238 08:996E: A5 19        	lda	<L137+1
  6239 08:9970: 85 1D        	sta	<L137+1+4
  6240 08:9972: 2B           	pld
  6241 08:9973: 3B           	tsc
  6242 08:9974: 18           	clc
  6243 08:9975: 69 1C 00     	adc	#L137+4
  6244 08:9978: 1B           	tcs
  Thu Dec  3 2020 22:25                                                Page 129


  6245 08:9979: 98           	tya
  6246 08:997A: 6B           	rtl
  6247                        ;}
  6248                        	.line	808
  6249                        	.endblock	808
  6250             00000018   L137	equ	24
  6251             00000009   L138	equ	9
  6252 08:997B:              	ends
  6253                        	efunc
  6254                        	.endfunc	808,9,24
  6255                        	.line	808
  6256                        ;
  6257                        ;
  6258                        ;VOID k_GetDirectory(VOID)
  6259                        ;{
  6260                        	.line	811
  6261                        	.line	812
  6262                        	FXDOS
  6263                        	xdef	~~k_GetDirectory
  6264                        	func
  6265                        	.function	812
  6266                        ~~k_GetDirectory:
  6267                        	longa	on
  6268                        	longi	on
  6269 08:997B: 3B           	tsc
  6270 08:997C: 38           	sec
  6271 08:997D: E9 08 00     	sbc	#L141
  6272 08:9980: 1B           	tcs
  6273 08:9981: 0B           	phd
  6274 08:9982: 5B           	tcd
  6275                        	.block	812
  6276                        ;	PFXZERPOPAGE zp = k_getZeroPage();
  6277                        ;
  6278                        ;	k_debug_integer("k_GetDirectory:Id:",zp->kernelF
                    unctionCallId);
  6279             00000000   zp_1	set	0
  6280                        	.sym	zp,0,138,1,32,45
  6281 08:9983: 22 xx xx xx  	jsl	~~k_getZeroPage
  6282 08:9987: 85 05        	sta	<L142+zp_1
  6283 08:9989: 86 07        	stx	<L142+zp_1+2
  6284                        	.line	815
  6285 08:998B: A0 2C 00     	ldy	#$2c
  6286 08:998E: B7 05        	lda	[<L142+zp_1],Y
  6287 08:9990: 48           	pha
  6288 08:9991: F4 xx xx     	pea	#^L136
  6289 08:9994: F4 xx xx     	pea	#<L136
  6290 08:9997: 22 xx xx xx  	jsl	~~k_debug_integer
  6291                        ;	k_debug_integer("k_GetDirectory:Index:",zp->kern
                    elFunctionCallBank);
  6292                        	.line	816
  6293 08:999B: A0 2E 00     	ldy	#$2e
  6294 08:999E: B7 05        	lda	[<L142+zp_1],Y
  6295 08:99A0: 29 FF 00     	and	#$ff
  6296 08:99A3: 48           	pha
  6297 08:99A4: F4 xx xx     	pea	#^L136+19
  6298 08:99A7: F4 xx xx     	pea	#<L136+19
  6299 08:99AA: 22 xx xx xx  	jsl	~~k_debug_integer
  6300                        ;	k_debug_strings("k_GetDirectory:Parameter:",(LPS
  Thu Dec  3 2020 22:25                                                Page 130


                    TR)zp->kernelFunctionCallParameter);
  6301                        	.line	817
  6302 08:99AE: A0 32 00     	ldy	#$32
  6303 08:99B1: B7 05        	lda	[<L142+zp_1],Y
  6304 08:99B3: 48           	pha
  6305 08:99B4: A0 30 00     	ldy	#$30
  6306 08:99B7: B7 05        	lda	[<L142+zp_1],Y
  6307 08:99B9: 48           	pha
  6308 08:99BA: F4 xx xx     	pea	#^L136+41
  6309 08:99BD: F4 xx xx     	pea	#<L136+41
  6310 08:99C0: 22 xx xx xx  	jsl	~~k_debug_strings
  6311                        ;
  6312                        ;	zp->kernelFunctionCallReturn = k_mem_allocate_he
                    ap(16);
  6313                        	.line	819
  6314 08:99C4: F4 10 00     	pea	#<$10
  6315 08:99C7: 22 xx xx xx  	jsl	~~k_mem_allocate_heap
  6316 08:99CB: 85 01        	sta	<R0
  6317 08:99CD: 86 03        	stx	<R0+2
  6318 08:99CF: A5 01        	lda	<R0
  6319 08:99D1: A0 34 00     	ldy	#$34
  6320 08:99D4: 97 05        	sta	[<L142+zp_1],Y
  6321 08:99D6: A5 03        	lda	<R0+2
  6322 08:99D8: A0 36 00     	ldy	#$36
  6323 08:99DB: 97 05        	sta	[<L142+zp_1],Y
  6324                        ;
  6325                        ;	strcpy((LPSTR)zp->kernelFunctionCallReturn,"Hell
                    o!");
  6326                        	.line	821
  6327 08:99DD: F4 xx xx     	pea	#^L136+67
  6328 08:99E0: F4 xx xx     	pea	#<L136+67
  6329 08:99E3: A0 36 00     	ldy	#$36
  6330 08:99E6: B7 05        	lda	[<L142+zp_1],Y
  6331 08:99E8: 48           	pha
  6332 08:99E9: A0 34 00     	ldy	#$34
  6333 08:99EC: B7 05        	lda	[<L142+zp_1],Y
  6334 08:99EE: 48           	pha
  6335 08:99EF: 22 xx xx xx  	jsl	~~strcpy
  6336                        ;}
  6337                        	.line	822
  6338                        L144:
  6339 08:99F3: 2B           	pld
  6340 08:99F4: 3B           	tsc
  6341 08:99F5: 18           	clc
  6342 08:99F6: 69 08 00     	adc	#L141
  6343 08:99F9: 1B           	tcs
  6344 08:99FA: 6B           	rtl
  6345                        	.endblock	822
  6346             00000008   L141	equ	8
  6347             00000005   L142	equ	5
  6348 08:99FB:              	ends
  6349                        	efunc
  6350                        	.endfunc	822,5,8
  6351                        	.line	822
  6352                        	data
  6353                        L136:
  6354 00:0AB4: 6B 5F 47 65  	db	$6B,$5F,$47,$65,$74,$44,$69,$72,$65,$63,
                    $74,$6F,$72,$79,$3A
  Thu Dec  3 2020 22:25                                                Page 131


       00:0AB8: 74 44 69 72 
       00:0ABC: 65 63 74 6F 
       00:0AC0: 72 79 3A 
  6355 00:0AC3: 49 64 3A 00  	db	$49,$64,$3A,$00,$6B,$5F,$47,$65,$74,$44,
                    $69,$72,$65,$63,$74
       00:0AC7: 6B 5F 47 65 
       00:0ACB: 74 44 69 72 
       00:0ACF: 65 63 74 
  6356 00:0AD2: 6F 72 79 3A  	db	$6F,$72,$79,$3A,$49,$6E,$64,$65,$78,$3A,
                    $00,$6B,$5F,$47,$65
       00:0AD6: 49 6E 64 65 
       00:0ADA: 78 3A 00 6B 
       00:0ADE: 5F 47 65 
  6357 00:0AE1: 74 44 69 72  	db	$74,$44,$69,$72,$65,$63,$74,$6F,$72,$79,
                    $3A,$50,$61,$72,$61
       00:0AE5: 65 63 74 6F 
       00:0AE9: 72 79 3A 50 
       00:0AED: 61 72 61 
  6358 00:0AF0: 6D 65 74 65  	db	$6D,$65,$74,$65,$72,$3A,$00,$48,$65,$6C,
                    $6C,$6F,$21,$00
       00:0AF4: 72 3A 00 48 
       00:0AF8: 65 6C 6C 6F 
       00:0AFC: 21 00 
  6359 00:0AFE:              	ends
  6360                        ;
  6361                        ;
  6362                        	.line	823
  6363                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.c",811
  6364                        	xref	~~k_mem_deallocate_heap
  6365                        	xref	~~k_mem_allocate_heap
  6366                        	xref	~~k_string_rtrim
  6367                        	xref	~~k_wcstombs
  6368                        	xref	~~k_get_c256_minor_version
  6369                        	xref	~~k_get_c256_major_version
  6370                        	xref	~~k_debug_nstrings
  6371                        	xref	~~k_debug_strings
  6372                        	xref	~~k_debug_byte_array
  6373                        	xref	~~k_debug_hex
  6374                        	xref	~~k_debug_long
  6375                        	xref	~~k_debug_integer
  6376                        	xref	~~k_debug_pointer
  6377                        	xref	~~k_debug_string
  6378                        	xref	~~k_getZeroPage
  6379                        	xref	~~k_nodelist_foreach_until_listdata
  6380                        	xref	~~k_nodelist_addtolist
  6381                        	xref	~~k_nodelist_deallocate_list
  6382                        	xref	~~k_nodelist_allocate_list
  6383                        	xref	~~strncpy
  6384                        	xref	~~strlen
  6385                        	xref	~~strcpy
  6386                        	xref	~~strcmp
  6387                        	xref	~~strcat
  6388                        	xref	~~memset
  6389                        	xref	~~memcpy
  6390                        	xref	~~DRIVER_FMXSDCard
  6391                        	xref	~~DRIVER_B2SDCard
  6392                        	xref	~~DRIVER_B2Console
  Thu Dec  3 2020 22:25                                                Page 132


  6393                        	udata
  6394                        	xdef	~~fxdosDevice
  6395                        ~~fxdosDevice
  6396 00:0000:              	ds	706
  6397 00:02C2:              	ends
  6398                        	udata
  6399                        ~~longnameBuffer
  6400 00:02C2:              	ds	255
  6401 00:03C1:              	ends
  6402                        	udata
  6403                        ~~longnamecount
  6404 00:03C1:              	ds	1
  6405 00:03C2:              	ends
  6406                        	udata
  6407                        ~~sectorBuffer
  6408 00:03C2:              	ds	512
  6409 00:05C2:              	ends
  6410                        	.sym	~~k_GetDirectory,~~k_GetDirectory,65,2,0
  6411                        	.sym	~~k_dos_deallocate_long_entry,~~k_dos_de
                    allocate_long_entry,65,2,0
  6412                        	.sym	~~k_dos_foreach_file,~~k_dos_foreach_fil
                    e,78,2,0
  6413                        	.sym	~~k_dos_load_drivers,~~k_dos_load_driver
                    s,65,2,0
  6414                        	.sym	~~DRIVER_FMXSDCard,~~DRIVER_FMXSDCard,10
                    ,18,1416,48
  6415                        	.sym	~~DRIVER_B2SDCard,~~DRIVER_B2SDCard,10,1
                    8,1416,48
  6416                        	.sym	~~DRIVER_B2Console,~~DRIVER_B2Console,10
                    ,18,1416,48
  6417                        	.sym	~~_k_dos_devicedrivers,~~_k_dos_devicedr
                    ivers,138,3,32,6
  6418                        	.sym	~~fxdosDevice,~~fxdosDevice,10,2,5648,10
                    1
  6419                        	.sym	~~longnameBuffer,~~longnameBuffer,110,3,
                    0,255
  6420                        	.sym	~~longnamecount,~~longnamecount,14,3,8
  6421                        	.sym	~~sectorBuffer,~~sectorBuffer,110,3,0,51
                    2
  6422                        	.sym	~~getClusterLocationByIndex,~~getCluster
                    LocationByIndex,82,2,0
  6423                        	.sym	~~getDeviceClusterLocationByIndex,~~getD
                    eviceClusterLocationByIndex,82,2,0
  6424                        	.sym	~~k_dos_read_file,~~k_dos_read_file,80,2
                    ,0
  6425                        	.sym	~~k_dos_get_name,~~k_dos_get_name,82,2,0
  6426                        	.sym	~~k_dos_alloc_short_name,~~k_dos_alloc_s
                    hort_name,1102,2,32
  6427                        	.sym	~~k_read_dos_directory,~~k_read_dos_dire
                    ctory,1098,2,32,6
  6428                        	.sym	~~k_create_dos_device,~~k_create_dos_dev
                    ice,1098,2,32,101
  6429                        	.sym	PFXDOSDEVICE,0,138,14,32,101
  6430                        	.sym	FXDOSDEVICE,0,10,14,5648,101
  6431                        	.sym	DOSINITDEVICE,0,641,14,32
  6432                        	.sym	DOSSECTORWRITER,0,654,14,32
  6433                        	.sym	DOSSECTORREADER,0,654,14,32
  6434                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,100
  Thu Dec  3 2020 22:25                                                Page 133


  6435                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,100
  6436                        	.sym	PIDSECTOR,0,138,14,32,77
  6437                        	.sym	IDSECTOR,0,10,14,2048,77
  6438                        	.sym	~~k_dos_dealloc_filelist,~~k_dos_dealloc
                    _filelist,65,2,0
  6439                        	.sym	~~_k_dos_alloc_filename,~~_k_dos_alloc_f
                    ilename,1102,2,32
  6440                        	.sym	~~_k_dos_alloc_fileinfo,~~_k_dos_alloc_f
                    ileinfo,1098,2,32,66
  6441                        	.sym	PLFN,0,138,14,32,76
  6442                        	.sym	LFN,0,10,14,256,76
  6443                        	.sym	PFAT16ENTRYLONG,0,138,14,32,75
  6444                        	.sym	FAT16ENTRYLONG,0,10,14,288,75
  6445                        	.sym	PFAT16ENTRY,0,138,14,32,74
  6446                        	.sym	FAT16ENTRY,0,10,14,256,74
  6447                        	.sym	Fat16BootSector,0,10,14,4096,73
  6448                        	.sym	PPARTITIONTABLE,0,138,14,32,72
  6449                        	.sym	PARTITIONTABLE,0,10,14,128,72
  6450                        	.sym	PFATBOOTSECTOR,0,138,14,32,71
  6451                        	.sym	FATBOOTSECTOR,0,10,14,928,71
  6452                        	.sym	fat_BS_t,0,10,14,688,70
  6453                        	.sym	fat_extBS_16_t,0,10,14,192,69
  6454                        	.sym	PFAT32EXT,0,138,14,32,68
  6455                        	.sym	fat_extBS_32_t,0,10,14,416,68
  6456                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,67
  6457                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,67
  6458                        	.sym	PFILEINFO,0,138,14,32,66
  6459                        	.sym	FILEINFO,0,10,14,136,66
  6460                        	.sym	PDISKINFO,0,138,14,32,65
  6461                        	.sym	DISKINFO,0,10,14,416,65
  6462                        	.sym	PDIRENTRY,0,138,14,32,64
  6463                        	.sym	DIRENTRY,0,10,14,256,64
  6464                        	.sym	PCOMMANDARGS,0,138,14,32,63
  6465                        	.sym	COMMANDARGS,0,10,14,64,63
  6466                        	.sym	PTOKENIZESTATE,0,133,14,32
  6467                        	.sym	TOKENIZESTATE,0,5,14,16
  6468                        	.sym	PTOKEN,0,138,14,32,62
  6469                        	.sym	TOKEN,0,10,14,64,62
  6470                        	.sym	PTOKENTYPE,0,133,14,32
  6471                        	.sym	TOKENTYPE,0,5,14,16
  6472                        	.sym	FXCommandHandler,0,656,14,32
  6473                        	.sym	PCONSOLECTX,0,138,14,32,61
  6474                        	.sym	CONSOLECTX,0,10,14,1144,61
  6475                        	.sym	PSPINNERCTX,0,138,14,32,60
  6476                        	.sym	SPINNERCTX,0,10,14,48,60
  6477                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,59
  6478                        	.sym	MOUSE_MSG_STATE,0,10,14,184,59
  6479                        	.sym	PFXEVENTPROCESS,0,138,14,32,58
  6480                        	.sym	FXEVENTPROCESS,0,10,14,64,58
  6481                        	.sym	FXEventProc,0,641,14,32
  6482                        	.sym	PMOUSEMSGDATA,0,138,14,32,57
  6483                        	.sym	MOUSEMSGDATA,0,10,14,64,57
  6484                        	.sym	MSGIRQ,0,5,14,16
  6485                        	.sym	MAINLOOPARGS,0,10,14,16,56
  6486                        	.sym	PEACHCHILD_MSG,0,138,14,32,55
  6487                        	.sym	EACHCHILD_MSG,0,10,14,64,55
  6488                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,54
  6489                        	.sym	CUR_PALETTE_MAP,0,10,14,400,54
  Thu Dec  3 2020 22:25                                                Page 134


  6490                        	.sym	PCLICKDETECTED,0,138,14,32,53
  6491                        	.sym	CLICKDETECTED,0,10,14,64,53
  6492                        	.sym	OBJECTCLICKED,0,641,14,32
  6493                        	.sym	~~k_mem_deallocate_heap,~~k_mem_dealloca
                    te_heap,65,18,0
  6494                        	.sym	~~k_mem_allocate_heap,~~k_mem_allocate_h
                    eap,1089,18,32
  6495                        	.sym	MemoryCallback,0,641,14,32
  6496                        	.sym	PFXMEMORYMAP,0,138,14,32,52
  6497                        	.sym	FXMEMORYMAP,0,10,14,2072,52
  6498                        	.sym	UMM_HEAP_INFO,0,10,14,256,51
  6499                        	.sym	~~k_string_rtrim,~~k_string_rtrim,1102,1
                    8,32
  6500                        	.sym	~~k_wcstombs,~~k_wcstombs,1102,18,32
  6501                        	.sym	PFXSTRING,0,138,14,32,50
  6502                        	.sym	FXSTRING,0,10,14,64,50
  6503                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  6504                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  6505                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  6506                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  6507                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  6508                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,49
  6509                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,1448,49
  6510                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,48
  6511                        	.sym	FX_DEVICE_DRIVER,0,10,14,1416,48
  6512                        	.sym	~~k_get_c256_minor_version,~~k_get_c256_
                    minor_version,65,18,0
  6513                        	.sym	~~k_get_c256_major_version,~~k_get_c256_
                    major_version,65,18,0
  6514                        	.sym	~~k_debug_nstrings,~~k_debug_nstrings,65
                    ,18,0
  6515                        	.sym	~~k_debug_strings,~~k_debug_strings,65,1
                    8,0
  6516                        	.sym	~~k_debug_byte_array,~~k_debug_byte_arra
                    y,65,18,0
  6517                        	.sym	~~k_debug_hex,~~k_debug_hex,65,18,0
  6518                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  6519                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  6520                        	.sym	~~k_debug_pointer,~~k_debug_pointer,65,1
                    8,0
  6521                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  6522                        	.sym	~~k_getZeroPage,~~k_getZeroPage,1098,18,
                    32,45
  6523                        	.sym	PDEBUGBYTEBITS,0,138,14,32,47
  6524                        	.sym	DEBUGBYTEBITS,0,10,14,8,47
  6525                        	.sym	PFXENVIRONMENT,0,138,14,32,46
  6526                        	.sym	FXENVIRONMENT,0,10,14,96,46
  6527                        	.sym	PFXZERPOPAGE,0,138,14,32,45
  6528                        	.sym	FXZERPOPAGE,0,10,14,448,45
  6529                        	.sym	KERNELTRAPCALL,0,641,14,32
  6530                        	.sym	~~k_nodelist_foreach_until_listdata,~~k_
                    nodelist_foreach_until_listdata,1098,18,32,5
  6531                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  6532                        	.sym	FOREACHNODE,0,641,14,32
  6533                        	.sym	~~k_nodelist_addtolist,~~k_nodelist_addt
                    olist,1098,18,32,5
  Thu Dec  3 2020 22:25                                                Page 135


  6534                        	.sym	~~k_nodelist_deallocate_list,~~k_nodelis
                    t_deallocate_list,65,18,0
  6535                        	.sym	~~k_nodelist_allocate_list,~~k_nodelist_
                    allocate_list,1098,18,32,6
  6536                        	.sym	PFXCOMBUFFER,0,138,14,32,44
  6537                        	.sym	FXCOMBUFFER,0,10,14,2080,44
  6538                        	.sym	PSUBMENULIST,0,138,14,32,43
  6539                        	.sym	SUBMENULIST,0,10,14,40,43
  6540                        	.sym	HSUBMENU,0,7,14,32
  6541                        	.sym	PSUBMENU,0,138,14,32,42
  6542                        	.sym	SUBMENU,0,10,14,64,42
  6543                        	.sym	MenuAction,0,641,14,32
  6544                        	.sym	PMENUANCHOR,0,138,14,32,41
  6545                        	.sym	MENUANCHOR,0,10,14,144,41
  6546                        	.sym	PTEXTBOX,0,138,14,32,40
  6547                        	.sym	TEXTBOX,0,10,14,144,40
  6548                        	.sym	PLISTBOX,0,138,14,32,39
  6549                        	.sym	LISTBOX,0,10,14,240,39
  6550                        	.sym	PSCROLLBAR,0,138,14,32,38
  6551                        	.sym	SCROLLBAR,0,10,14,192,38
  6552                        	.sym	PBUTTON,0,138,14,32,37
  6553                        	.sym	BUTTON,0,10,14,80,37
  6554                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,36
  6555                        	.sym	MENUDROPDOWNDATA,0,10,14,3568,36
  6556                        	.sym	PMENUTAG,0,138,14,32,35
  6557                        	.sym	MENUTAG,0,10,14,112,35
  6558                        	.sym	PMENU,0,138,14,32,34
  6559                        	.sym	MENU,0,10,14,248,34
  6560                        	.sym	HMENURESOURCE,0,129,14,32
  6561                        	.sym	HTEXTBOX,0,7,14,32
  6562                        	.sym	PTEXTBOXX,0,138,14,32,33
  6563                        	.sym	TEXTBOXX,0,10,14,112,33
  6564                        	.sym	FONTMETRIC,0,10,14,32,32
  6565                        	.sym	TITLE,0,142,14,32
  6566                        	.sym	PHANDLE,0,1153,14,32
  6567                        	.sym	HANDLE,0,129,14,32
  6568                        	.sym	PWINDOWEX,0,138,14,32,31
  6569                        	.sym	WINDOWEX,0,10,14,2704,31
  6570                        	.sym	PWINDOW,0,138,14,32,30
  6571                        	.sym	WINDOW,0,10,14,2808,30
  6572                        	.sym	PDRAGDATA,0,138,14,32,29
  6573                        	.sym	DRAGDATA,0,10,14,136,29
  6574                        	.sym	PNCCLICKABLE,0,138,14,32,28
  6575                        	.sym	NCCLICKABLE,0,10,14,88,28
  6576                        	.sym	HCLICKABLE,0,7,14,32
  6577                        	.sym	PCLICKABLE,0,138,14,32,27
  6578                        	.sym	CLICKABLE,0,10,14,88,27
  6579                        	.sym	PWNDCLASS,0,138,14,32,26
  6580                        	.sym	WNDCLASS,0,10,14,256,26
  6581                        	.sym	HBRUSH,0,129,14,32
  6582                        	.sym	HCURSOR,0,129,14,32
  6583                        	.sym	HICON,0,129,14,32
  6584                        	.sym	HINSTANCE,0,129,14,32
  6585                        	.sym	FXWndProc,0,654,14,32
  6586                        	.sym	PRECT,0,138,14,32,25
  6587                        	.sym	RECT,0,10,14,64,25
  6588                        	.sym	PPOINT,0,138,14,32,24
  6589                        	.sym	POINT,0,10,14,32,24
  Thu Dec  3 2020 22:25                                                Page 136


  6590                        	.sym	PFXPROPERTY,0,138,14,32,22
  6591                        	.sym	FXPROPERTY,0,10,14,384,22
  6592                        	.sym	SCANCODE,0,14,14,8
  6593                        	.sym	KEYCODE,0,14,14,8
  6594                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  6595                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  6596                        	.sym	PFXPROCESS,0,138,14,32,20
  6597                        	.sym	FXPROCESS,0,10,14,800,20
  6598                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  6599                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  6600                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  6601                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  6602                        	.sym	FXProcessProc,0,641,14,32
  6603                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  6604                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  6605                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  6606                        	.sym	FXOSMESSAGE,0,10,14,304,16
  6607                        	.sym	PINT_REGS,0,138,14,32,15
  6608                        	.sym	INT_REGS,0,10,14,104,15
  6609                        	.sym	TASK_STACK,0,10,14,32,14
  6610                        	.sym	TASK,0,10,14,48,13
  6611                        	.sym	PIRQDATA,0,138,14,32,12
  6612                        	.sym	IRQDATA,0,10,14,48,12
  6613                        	.sym	HMENU,0,129,14,32
  6614                        	.sym	HWND,0,129,14,32
  6615                        	.sym	MSGDATA,0,14,14,8
  6616                        	.sym	MSGDEST,0,18,14,32
  6617                        	.sym	MSGSRC,0,18,14,32
  6618                        	.sym	MSGTYPE,0,16,14,16
  6619                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  6620                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  6621                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  6622                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  6623                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  6624                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  6625                        	.sym	FILE_HANDLE,0,138,14,32,11
  6626                        	.sym	FILE_BLOCK,0,10,14,552,11
  6627                        	.sym	SEMAPHORE,0,10,14,16,10
  6628                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  6629                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  6630                        	.sym	KRESULT,0,18,14,32
  6631                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  6632                        	.sym	KERNEL_ERROR,0,10,14,32,8
  6633                        	.sym	PROCESS_STATUS,0,16,14,16
  6634                        	.sym	FILE_PATH_NAME,0,142,14,32
  6635                        	.sym	PROCESS_RESOURCE,0,129,14,32
  6636                        	.sym	PROCESS_TLS,0,129,14,32
  6637                        	.sym	PROCESS_CTX,0,129,14,32
  6638                        	.sym	USERID,0,16,14,16
  6639                        	.sym	PROCESS_ID,0,18,14,32
  6640                        	.sym	PROCESS_BANK,0,14,14,8
  6641                        	.sym	PFXQUEUE,0,138,14,32,7
  6642                        	.sym	FXQUEUE,0,10,14,80,7
  6643                        	.sym	PFXNODELIST,0,138,14,32,6
  6644                        	.sym	FXNODELIST,0,10,14,96,6
  6645                        	.sym	NodeListDeallocator,0,641,14,32
  6646                        	.sym	PFXNODE,0,138,14,32,5
  6647                        	.sym	FXNODE,0,10,14,384,5
  Thu Dec  3 2020 22:25                                                Page 137


  6648                        	.sym	PBYTEBITS,0,138,14,32,4
  6649                        	.sym	BYTEBITS,0,10,14,8,4
  6650                        	.sym	HCOLOR,0,129,14,32
  6651                        	.sym	HFONT,0,129,14,32
  6652                        	.sym	HDC,0,129,14,32
  6653                        	.sym	HPOINTER,0,129,14,32
  6654                        	.sym	uint32_t,0,18,14,32
  6655                        	.sym	uint8_t,0,14,14,8
  6656                        	.sym	PFAR,0,142,14,32
  6657                        	.sym	LPBOOL,0,142,14,32
  6658                        	.sym	BOOL,0,14,14,8
  6659                        	.sym	DWORD,0,18,14,32
  6660                        	.sym	ULONG,0,18,14,32
  6661                        	.sym	LPLONG,0,135,14,32
  6662                        	.sym	LONG,0,7,14,32
  6663                        	.sym	PUINT,0,144,14,32
  6664                        	.sym	USHORT,0,16,14,16
  6665                        	.sym	UINT,0,16,14,16
  6666                        	.sym	INT,0,5,14,16
  6667                        	.sym	WORD,0,5,14,16
  6668                        	.sym	PBYTE,0,142,14,32
  6669                        	.sym	BYTE,0,14,14,8
  6670                        	.sym	UCHAR,0,14,14,8
  6671                        	.sym	LPWCSTR,0,142,14,32
  6672                        	.sym	LPCSTR,0,142,14,32
  6673                        	.sym	LPSTR,0,142,14,32
  6674                        	.sym	LPCHAR,0,142,14,32
  6675                        	.sym	CHAR,0,14,14,8
  6676                        	.sym	LPVOID,0,129,14,32
  6677                        	.sym	VOID,0,1,14,32
  6678                        	.sym	~~strncpy,~~strncpy,1102,18,32
  6679                        	.sym	~~strlen,~~strlen,80,18,0
  6680                        	.sym	~~strcpy,~~strcpy,1102,18,32
  6681                        	.sym	~~strcmp,~~strcmp,69,18,0
  6682                        	.sym	~~strcat,~~strcat,1102,18,32
  6683                        	.sym	~~memset,~~memset,1089,18,32
  6684                        	.sym	~~memcpy,~~memcpy,1089,18,32
  6685                        	.sym	Boolean_T,0,5,14,16
  6686                        	.sym	ldiv_t,0,10,14,64,2
  6687                        	.sym	div_t,0,10,14,32,1
  6688                        	.sym	wctype_t,0,16,14,16
  6689                        	.sym	wint_t,0,16,14,16
  6690                        	.sym	wchar_t,0,14,14,8
  6691                        	.sym	ptrdiff_t,0,7,14,32
  6692                        	.sym	size_t,0,16,14,16
  6693                        	end


      Lines assembled: 6693
      Errors: 0
