  Thu Dec  3 2020 22:25                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",0
     7                        ;/************************************************
                    ************************/
     8                        ;/*                                               
                                           */
     9                        ;/*  OMF_Record.c : Module pour le décodage des Re
                    cord des Segments OMF. */
    10                        ;/*                                               
                                           */
    11                        ;/************************************************
                    ************************/
    12                        ;/*  Auteur : Olivier ZARDINI  *  Brutal Deluxe So
                    ftware  *  Avril 2013  */
    13                        ;/************************************************
                    ************************/
    14                        ;
    15                        ;#include "fxos.h"
    16                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    17                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    18                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    19                        	.line	88
    20                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    21                        	.stag	fake1_,32,1
    22                        	.member	quot,0,5,8,16
    23                        	.member	rem,16,5,8,16
    24                        	.eos
    25                        	.stag	fake2_,64,2
    26                        	.member	quot,0,7,8,32
    27                        	.member	rem,32,7,8,32
    28                        	.eos
    29                        	.stag	int_sqrt,32,3
    30                        	.member	sqrt,0,16,8,16
    31                        	.member	frac,16,16,8,16
    32                        	.eos
    33                        	.line	205
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    35                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    36                        	.line	134
    37                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
  Thu Dec  3 2020 22:25                                                Page 2


    38                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    39                        	.line	103
    40                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    41                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    42                        	.stag	_fx_bytebits,8,4
    43                        	.member	b7,0,14,17,1
    44                        	.member	b6,1,14,17,1
    45                        	.member	b5,2,14,17,1
    46                        	.member	b4,3,14,17,1
    47                        	.member	b3,4,14,17,1
    48                        	.member	b2,5,14,17,1
    49                        	.member	b1,6,14,17,1
    50                        	.member	b0,7,14,17,1
    51                        	.eos
    52                        	.stag	_fx_node,384,5
    53                        	.member	type,0,14,8,8
    54                        	.member	Reserved0,8,14,8,8
    55                        	.member	data,16,129,8,32
    56                        	.member	last,48,138,8,32,5
    57                        	.member	next,80,138,8,32,5
    58                        	.member	name,112,110,8,0,32
    59                        	.member	Reserved1,368,16,8,16
    60                        	.eos
    61                        	.stag	_fx_nodelist,96,6
    62                        	.member	listhead,0,138,8,32,5
    63                        	.member	listData,32,129,8,32
    64                        	.member	deallocator,64,641,8,32
    65                        	.eos
    66                        	.stag	_fx_queue,80,7
    67                        	.member	count,0,5,8,16
    68                        	.member	front,16,138,8,32,5
    69                        	.member	rear,48,138,8,32,5
    70                        	.eos
    71                        	.stag	fake8_,32,8
    72                        	.member	subsystem,0,14,8,8
    73                        	.member	level,8,14,8,8
    74                        	.member	error,16,16,8,16
    75                        	.eos
    76                        	.stag	_fx_process_signal,16,9
    77                        	.member	cbSize,0,16,8,16
    78                        	.eos
    79                        	.stag	_fx_semaphore,16,10
    80                        	.member	reserved,0,5,8,16
    81                        	.eos
    82                        	.stag	_fx_fileBlock,552,11
    83                        	.member	openCount,0,16,8,16
    84                        	.member	lockCount,16,16,8,16
    85                        	.member	dirty,32,14,8,8
    86                        	.member	fileBuffer,40,110,8,0,64
    87                        	.eos
    88                        	.stag	_fx_irq_data,48,12
    89                        	.member	line,0,5,8,16
    90                        	.member	keycode,16,142,8,32
    91                        	.eos
    92                        	.stag	_task,48,13
  Thu Dec  3 2020 22:25                                                Page 3


    93                        	.member	SPL,0,14,8,8
    94                        	.member	SPH,8,14,8,8
    95                        	.member	pstack,16,142,8,32
    96                        	.eos
    97                        	.stag	_task_stack,32,14
    98                        	.member	SS,0,142,8,32
    99                        	.eos
   100                        	.stag	int_regs,104,15
   101                        	.member	PB,0,14,8,8
   102                        	.member	PH,8,14,8,8
   103                        	.member	PL,16,14,8,8
   104                        	.member	PP,24,14,8,8
   105                        	.member	DB,32,14,8,8
   106                        	.member	DH,40,14,8,8
   107                        	.member	DL,48,14,8,8
   108                        	.member	AH,56,14,8,8
   109                        	.member	AL,64,14,8,8
   110                        	.member	XH,72,14,8,8
   111                        	.member	XL,80,14,8,8
   112                        	.member	YH,88,14,8,8
   113                        	.member	YL,96,14,8,8
   114                        	.eos
   115                        	.stag	_fx_eventMessage,304,16
   116                        	.member	src,0,18,8,32
   117                        	.member	dest,32,18,8,32
   118                        	.member	type,64,16,8,16
   119                        	.member	hwnd,80,129,8,32
   120                        	.member	pheap,112,129,8,32
   121                        	.member	msgTime,144,18,8,32
   122                        	.member	data,176,110,8,0,16
   123                        	.eos
   124                        	.stag	_fx_cmdMessage,304,17
   125                        	.member	src,0,18,8,32
   126                        	.member	dest,32,18,8,32
   127                        	.member	type,64,16,8,16
   128                        	.member	hwnd,80,129,8,32
   129                        	.member	pheap,112,129,8,32
   130                        	.member	msgTime,144,18,8,32
   131                        	.member	cmdCId,176,16,8,16
   132                        	.member	cmdMId,192,16,8,16
   133                        	.member	parameter1,208,18,8,32
   134                        	.member	parameter2,240,18,8,32
   135                        	.member	parameter3,272,18,8,32
   136                        	.eos
   137                        	.stag	_fx_console_ctl,448,18
   138                        	.member	maxCols,0,5,8,16
   139                        	.member	maxRows,16,5,8,16
   140                        	.member	curX,32,5,8,16
   141                        	.member	curY,48,5,8,16
   142                        	.member	fgColor,64,5,8,16
   143                        	.member	bgColor,80,5,8,16
   144                        	.member	mode,96,14,8,8
   145                        	.member	kbBuffer,104,101,8,0,16
   146                        	.member	screenBuffer,360,142,8,32
   147                        	.member	desktopMode,392,14,8,8
   148                        	.member	lastMouseButton,400,5,8,16
   149                        	.member	lastMouseX,416,5,8,16
   150                        	.member	lastMouseY,432,5,8,16
  Thu Dec  3 2020 22:25                                                Page 4


   151                        	.eos
   152                        	.stag	_fx_desktop_ctl,392,19
   153                        	.member	desktopMode,0,14,8,8
   154                        	.member	cursorCtl,8,5,8,16
   155                        	.member	cursorState,24,5,8,16
   156                        	.member	backgroundColor,40,5,8,16
   157                        	.member	foregroundColor,56,5,8,16
   158                        	.member	menuMode,72,5,8,16
   159                        	.member	lastMouseButton,88,5,8,16
   160                        	.member	lastMouseX,104,5,8,16
   161                        	.member	lastMouseY,120,5,8,16
   162                        	.member	currentDiskName,136,142,8,32
   163                        	.member	diskNodes,168,129,8,32
   164                        	.member	titleNodes,200,129,8,32
   165                        	.member	menuNodes,232,129,8,32
   166                        	.member	iconNodes,264,129,8,32
   167                        	.member	windowNodes,296,129,8,32
   168                        	.member	fontNodes,328,129,8,32
   169                        	.member	wndProc,360,138,8,32,6
   170                        	.eos
   171                        	.stag	_fx_process,800,20
   172                        	.member	cbSize,0,5,8,16
   173                        	.member	procId,16,18,8,32
   174                        	.member	parentId,48,18,8,32
   175                        	.member	ctx,80,129,8,32
   176                        	.member	userId,112,16,8,16
   177                        	.member	status,128,16,8,16
   178                        	.member	foregroundActive,144,14,8,8
   179                        	.member	tls,152,1121,8,32,8
   180                        	.member	commandLine,408,142,8,32
   181                        	.member	semaphores,440,138,8,32,6
   182                        	.member	fileHandles,472,138,8,32,6
   183                        	.member	pathList,504,138,8,32,6
   184                        	.member	resources,536,138,8,32,6
   185                        	.member	timerAware,568,14,8,8
   186                        	.member	timerTicks,576,112,8,0,2
   187                        	.member	timerTickCount,608,112,8,0,2
   188                        	.member	kernelError,640,10,8,32,8
   189                        	.member	consoleCtl,672,138,8,32,18
   190                        	.member	desktopCtl,704,138,8,32,19
   191                        	.member	execProc,736,641,8,32
   192                        	.member	startupArgs,768,129,8,32
   193                        	.eos
   194                        	.stag	_fxProcessMessage,112,21
   195                        	.member	src,0,18,8,32
   196                        	.member	dest,32,18,8,32
   197                        	.member	type,64,16,8,16
   198                        	.member	processInfo,80,138,8,32,20
   199                        	.eos
   200                        	.stag	_fx_property,384,22
   201                        	.member	name,0,110,8,0,16
   202                        	.member	value,128,110,8,0,32
   203                        	.eos
   204                        	.utag	_24bitPointer,32,23
   205                        	.member	address,0,142,11,32
   206                        	.member	bytes,0,110,11,0,4
   207                        	.eos
   208                        	.stag	_PointStruct,32,24
  Thu Dec  3 2020 22:25                                                Page 5


   209                        	.member	x,0,5,8,16
   210                        	.member	y,16,5,8,16
   211                        	.eos
   212                        	.stag	_RectStruct,64,25
   213                        	.member	x,0,5,8,16
   214                        	.member	y,16,5,8,16
   215                        	.member	width,32,5,8,16
   216                        	.member	height,48,5,8,16
   217                        	.eos
   218                        	.stag	_k_WindowClass,256,26
   219                        	.member	cbSize,0,16,8,16
   220                        	.member	style,16,16,8,16
   221                        	.member	pWndProc,32,654,8,32
   222                        	.member	hInstance,64,129,8,32
   223                        	.member	hIcon,96,129,8,32
   224                        	.member	hCursor,128,129,8,32
   225                        	.member	hbrBackground,160,129,8,32
   226                        	.member	lpszMenuName,192,142,8,32
   227                        	.member	lpszClassName,224,142,8,32
   228                        	.eos
   229                        	.stag	_ClickableRect,88,27
   230                        	.member	area,0,10,8,64,25
   231                        	.member	z,64,5,8,16
   232                        	.member	enabled,80,14,8,8
   233                        	.eos
   234                        	.stag	_NCClickableRect,88,28
   235                        	.member	area,0,10,8,64,25
   236                        	.member	msgType,64,16,8,16
   237                        	.member	enabled,80,14,8,8
   238                        	.eos
   239                        	.stag	_DragData,136,29
   240                        	.member	area,0,10,8,64,25
   241                        	.member	xoffset,64,5,8,16
   242                        	.member	yoffset,80,5,8,16
   243                        	.member	msgType,96,16,8,16
   244                        	.member	isDrag,112,14,8,8
   245                        	.member	canDrag,120,14,8,8
   246                        	.member	canDrop,128,14,8,8
   247                        	.eos
   248                        	.stag	_k_WindowStruct,2808,30
   249                        	.member	cbSize,0,16,8,16
   250                        	.member	style,16,18,8,32
   251                        	.member	win_id,48,5,8,16
   252                        	.member	win_x,64,5,8,16
   253                        	.member	win_y,80,5,8,16
   254                        	.member	win_width,96,5,8,16
   255                        	.member	win_height,112,5,8,16
   256                        	.member	wndRect,128,10,8,64,25
   257                        	.member	clientRect,192,10,8,64,25
   258                        	.member	nonclientGadgets,256,106,8,0,28,16
   259                        	.member	clickable,1664,129,8,32
   260                        	.member	win_title,1696,110,8,0,32
   261                        	.member	Reserved0,1952,16,8,16
   262                        	.member	win_class,1968,110,8,0,16
   263                        	.member	win_class_name,2096,110,8,0,32
   264                        	.member	nBitmapLayer,2352,16,8,16
   265                        	.member	procid,2368,18,8,32
   266                        	.member	pWndClass,2400,138,8,32,26
  Thu Dec  3 2020 22:25                                                Page 6


   267                        	.member	pParentWindow,2432,129,8,32
   268                        	.member	hMenu,2464,129,8,32
   269                        	.member	pChildWindows,2496,138,8,32,6
   270                        	.member	pChildHitList,2528,138,8,32,6
   271                        	.member	isVisible,2560,14,8,8
   272                        	.member	windowData,2568,129,8,32
   273                        	.member	clientData,2600,1121,8,32,6
   274                        	.member	isClosed,2792,14,8,8
   275                        	.member	isClosing,2800,14,8,8
   276                        	.eos
   277                        	.stag	_k_WindowStructEx,2704,31
   278                        	.member	cbSize,0,16,8,16
   279                        	.member	style,16,18,8,32
   280                        	.member	win_id,48,5,8,16
   281                        	.member	win_x,64,5,8,16
   282                        	.member	win_y,80,5,8,16
   283                        	.member	win_width,96,5,8,16
   284                        	.member	win_height,112,5,8,16
   285                        	.member	wndRect,128,10,8,64,25
   286                        	.member	clientRect,192,10,8,64,25
   287                        	.member	nonclientGadgets,256,106,8,0,28,16
   288                        	.member	clickable,1664,129,8,32
   289                        	.member	win_title,1696,110,8,0,32
   290                        	.member	Reserved0,1952,16,8,16
   291                        	.member	win_class,1968,110,8,0,16
   292                        	.member	nBitmapLayer,2096,16,8,16
   293                        	.member	procid,2112,18,8,32
   294                        	.member	pWndClass,2144,138,8,32,26
   295                        	.member	pParentWindow,2176,129,8,32
   296                        	.member	hMenu,2208,129,8,32
   297                        	.member	pChildWindows,2240,138,8,32,6
   298                        	.member	pChildHitList,2272,138,8,32,6
   299                        	.member	isVisible,2304,14,8,8
   300                        	.member	windowData,2312,129,8,32
   301                        	.member	clientData,2344,1121,8,32,4
   302                        	.member	isClosed,2472,14,8,8
   303                        	.member	hWnd,2480,129,8,32
   304                        	.member	localRect,2512,10,8,64,25
   305                        	.member	globalRect,2576,10,8,64,25
   306                        	.member	clientOffsetRect,2640,10,8,64,25
   307                        	.eos
   308                        	.stag	_FontMetric,32,32
   309                        	.member	width,0,5,8,16
   310                        	.member	height,16,5,8,16
   311                        	.eos
   312                        	.stag	_ctl_Textbox,112,33
   313                        	.member	win_id,0,5,8,16
   314                        	.member	win_x,16,5,8,16
   315                        	.member	win_y,32,5,8,16
   316                        	.member	win_width,48,5,8,16
   317                        	.member	win_height,64,5,8,16
   318                        	.member	content,80,1166,8,32
   319                        	.eos
   320                        	.stag	_MenuStruct,248,34
   321                        	.member	cx,0,5,8,16
   322                        	.member	cy,16,5,8,16
   323                        	.member	width,32,5,8,16
   324                        	.member	height,48,5,8,16
  Thu Dec  3 2020 22:25                                                Page 7


   325                        	.member	fcolor,64,14,8,8
   326                        	.member	bcolor,72,14,8,8
   327                        	.member	chromeLeft,80,14,8,8
   328                        	.member	chromeRight1,88,14,8,8
   329                        	.member	chromeRight2,96,14,8,8
   330                        	.member	itemId,104,16,8,16
   331                        	.member	pCaption,120,142,8,32
   332                        	.member	subMenus,152,138,8,32,6
   333                        	.member	pBackground,184,129,8,32
   334                        	.member	hWndOwner,216,129,8,32
   335                        	.eos
   336                        	.stag	fake35_,112,35
   337                        	.member	menuId,0,16,8,16
   338                        	.member	caption,16,142,8,32
   339                        	.member	rect,48,10,8,64,25
   340                        	.eos
   341                        	.stag	fake36_,3568,36
   342                        	.member	pParent,0,138,8,32,30
   343                        	.member	rect,32,10,8,64,25
   344                        	.member	captions,96,1134,8,32,24
   345                        	.member	chrome,864,110,8,0,24
   346                        	.member	ids,1056,112,8,0,24
   347                        	.member	clickable,1440,106,8,0,27,24
   348                        	.member	selected,3552,16,8,16
   349                        	.eos
   350                        	.stag	_fx_button_t,80,37
   351                        	.member	pCaption,0,142,8,32
   352                        	.member	data,32,129,8,32
   353                        	.member	captionPixelWidth,64,16,8,16
   354                        	.eos
   355                        	.stag	_fx_scrollbar_t,192,38
   356                        	.member	min,0,16,8,16
   357                        	.member	max,16,16,8,16
   358                        	.member	increment,32,16,8,16
   359                        	.member	stopsize,48,16,8,16
   360                        	.member	location,64,5,8,16
   361                        	.member	state,80,5,8,16
   362                        	.member	rectThumb,96,10,8,64,25
   363                        	.member	data,160,129,8,32
   364                        	.eos
   365                        	.stag	_fx_listbox_t,240,39
   366                        	.member	pos,0,5,8,16
   367                        	.member	selected,16,16,8,16
   368                        	.member	offsetX,32,5,8,16
   369                        	.member	offsetY,48,5,8,16
   370                        	.member	inc,64,5,8,16
   371                        	.member	direction,80,5,8,16
   372                        	.member	top,96,5,8,16
   373                        	.member	bottom,112,5,8,16
   374                        	.member	indexTop,128,5,8,16
   375                        	.member	indexBottom,144,5,8,16
   376                        	.member	maxItems,160,16,8,16
   377                        	.member	fontSet,176,142,8,32
   378                        	.member	data,208,129,8,32
   379                        	.eos
   380                        	.stag	_fx_textbox_t,144,40
   381                        	.member	pos,0,5,8,16
   382                        	.member	selected,16,16,8,16
  Thu Dec  3 2020 22:25                                                Page 8


   383                        	.member	offsetX,32,5,8,16
   384                        	.member	offsetY,48,5,8,16
   385                        	.member	isShifted,64,14,8,8
   386                        	.member	cursorState,72,14,8,8
   387                        	.member	fontSet,80,142,8,32
   388                        	.member	data,112,129,8,32
   389                        	.eos
   390                        	.stag	_fx_menuAnchor_t,144,41
   391                        	.member	pCaption,0,142,8,32
   392                        	.member	renderLayoutX,32,16,8,16
   393                        	.member	renderLayoutY,48,16,8,16
   394                        	.member	captionPixelWidth,64,16,8,16
   395                        	.member	data,80,129,8,32
   396                        	.member	droppedWindow,112,138,8,32,30
   397                        	.eos
   398                        	.stag	_SubMenuStruct,64,42
   399                        	.member	caption,0,142,8,32
   400                        	.member	action,32,641,8,32
   401                        	.eos
   402                        	.stag	_SubMenuListStruct,40,43
   403                        	.member	cMenus,0,14,8,8
   404                        	.member	psubmenus,8,9354,8,32,42
   405                        	.eos
   406                        	.stag	_fx_ComBuffer,2080,44
   407                        	.member	cbSize,0,16,8,16
   408                        	.member	cbBuffer,16,16,8,16
   409                        	.member	buffer,32,110,8,0,256
   410                        	.eos
   411                        	.line	708
   412                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   413                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   414                        	.line	89
   415                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   416                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",0
   417                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   418                        	.line	708
   419                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",5
   420                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   421                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   422                        	.line	708
   423                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   424                        	.line	72
   425                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",6
   426                        	.line	1325
   427                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",13
   428                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
  Thu Dec  3 2020 22:25                                                Page 9


   429                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   430                        	.line	25
   431                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   432                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   433                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   434                        	.line	708
   435                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",5
   436                        	.line	61
   437                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   438                        	.stag	_fx_zero_page,448,45
   439                        	.member	fxos_mouse_byte_0,0,14,8,8
   440                        	.member	fxos_mouse_byte_1,8,14,8,8
   441                        	.member	fxos_mouse_byte_2,16,14,8,8
   442                        	.member	fxos_mouse_byte_t,24,14,8,8
   443                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   444                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   445                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   446                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   447                        	.member	fxos_key_byte_0,64,14,8,8
   448                        	.member	fxos_key_byte_1,72,14,8,8
   449                        	.member	fxos_key_byte_2,80,14,8,8
   450                        	.member	fxos_mouse_ctl,88,14,8,8
   451                        	.member	fxos_mouse_index,96,14,8,8
   452                        	.member	fxos_mouse_status,104,14,8,8
   453                        	.member	VersionMajor,112,16,8,16
   454                        	.member	VersionMinor,128,16,8,16
   455                        	.member	VersionRelease,144,16,8,16
   456                        	.member	topMemory,160,18,8,32
   457                        	.member	bottomMemory,192,18,8,32
   458                        	.member	availableMemory,224,18,8,32
   459                        	.member	availableMemoryK,256,18,8,32
   460                        	.member	availableHeapMemory,288,18,8,32
   461                        	.member	availableHeapMemoryK,320,18,8,32
   462                        	.member	kernelFunctionCallId,352,16,8,16
   463                        	.member	kernelFunctionCallBank,368,14,8,8
   464                        	.member	kernelFunctionCallReserved,376,14,8,8
   465                        	.member	kernelFunctionCallParameter,384,129,8,32
   466                        	.member	kernelFunctionCallReturn,416,129,8,32
   467                        	.eos
   468                        	.stag	_fx_environment,96,46
   469                        	.member	variables,0,142,8,32
   470                        	.member	reserved1,32,5,8,16
   471                        	.member	reserved2,48,5,8,16
   472                        	.member	reserved3,64,5,8,16
   473                        	.member	reserved4,80,5,8,16
   474                        	.eos
   475                        	.stag	_debug_byte_bits,8,47
   476                        	.member	bit7,0,14,17,1
   477                        	.member	bit6,1,14,17,1
   478                        	.member	bit5,2,14,17,1
   479                        	.member	bit4,3,14,17,1
   480                        	.member	bit3,4,14,17,1
  Thu Dec  3 2020 22:25                                                Page 10


   481                        	.member	bit2,5,14,17,1
   482                        	.member	bit1,6,14,17,1
   483                        	.member	bit0,7,14,17,1
   484                        	.eos
   485                        	.stag	_fx_device_driver,1416,48
   486                        	.member	name,0,110,8,0,64
   487                        	.member	version,512,110,8,0,64
   488                        	.member	hmajor,1024,110,8,0,16
   489                        	.member	hminor,1152,110,8,0,16
   490                        	.member	type,1280,14,8,8
   491                        	.member	f_driver_load,1288,129,8,32
   492                        	.member	f_driver_read,1320,129,8,32
   493                        	.member	f_driver_write,1352,129,8,32
   494                        	.member	f_driver_unload,1384,129,8,32
   495                        	.eos
   496                        	.stag	_fx_block_device_driver,1448,49
   497                        	.member	name,0,110,8,0,64
   498                        	.member	version,512,110,8,0,64
   499                        	.member	hmajor,1024,110,8,0,16
   500                        	.member	hminor,1152,110,8,0,16
   501                        	.member	type,1280,14,8,8
   502                        	.member	f_driver_load,1288,129,8,32
   503                        	.member	f_driver_read,1320,129,8,32
   504                        	.member	f_driver_write,1352,129,8,32
   505                        	.member	f_driver_unload,1384,129,8,32
   506                        	.member	f_driver_command,1416,129,8,32
   507                        	.eos
   508                        	.line	270
   509                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",19
   510                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   511                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   512                        	.line	134
   513                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   514                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   515                        	.line	205
   516                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   517                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   518                        	.line	708
   519                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   520                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",0
   521                        	.line	1325
   522                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",10
   523                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   524                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   525                        	.line	205
   526                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Dec  3 2020 22:25                                                Page 11


                    space\FXOSv1\src\fxstring.h",5
   527                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   528                        	.line	134
   529                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   530                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   531                        	.line	708
   532                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   533                        	.stag	_fx_string,64,50
   534                        	.member	size,0,16,8,16
   535                        	.member	pos,16,5,8,16
   536                        	.member	buffer,32,142,8,32
   537                        	.eos
   538                        	.line	71
   539                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",15
   540                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   541                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   542                        	.line	25
   543                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   544                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   545                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   546                        	.line	708
   547                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   548                        	.line	52
   549                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   550                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   551                        	.line	61
   552                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   553                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   554                        	.line	171
   555                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   556                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   557                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   558                        	.line	708
   559                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   560                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   561                        	.line	25
   562                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
  Thu Dec  3 2020 22:25                                                Page 12


   563                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   564                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   565                        	.line	25
   566                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   567                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   568                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   569                        	.line	32
   570                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   571                        	.stag	UMM_HEAP_INFO_t,256,51
   572                        	.member	totalEntries,0,18,8,32
   573                        	.member	usedEntries,32,18,8,32
   574                        	.member	freeEntries,64,18,8,32
   575                        	.member	totalBlocks,96,18,8,32
   576                        	.member	usedBlocks,128,18,8,32
   577                        	.member	freeBlocks,160,18,8,32
   578                        	.member	maxFreeContiguousBlocks,192,18,8,32
   579                        	.member	blockSize,224,18,8,32
   580                        	.eos
   581                        	.line	199
   582                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   583                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   584                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   585                        	.line	708
   586                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   587                        	.line	24
   588                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   589                        	.stag	_fx_memory_map,2072,52
   590                        	.member	availableMemory,0,18,8,32
   591                        	.member	valid_segments,32,110,8,0,255
   592                        	.eos
   593                        	.line	39
   594                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   595                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   596                        	.line	743
   597                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   598                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   599                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   600                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   601                        	.line	708
   602                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
  Thu Dec  3 2020 22:25                                                Page 13


   603                        	.line	64
   604                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",4
   605                        	.stag	_click_detected,64,53
   606                        	.member	window,0,138,8,32,30
   607                        	.member	handler,32,641,8,32
   608                        	.eos
   609                        	.stag	_current_palette_map,400,54
   610                        	.member	CUR_DESKTOP,0,5,8,16
   611                        	.member	CUR_BACKGROUND,16,5,8,16
   612                        	.member	CUR_FONT,32,5,8,16
   613                        	.member	CUR_SELECTED_FONT,48,5,8,16
   614                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   615                        	.member	CUR_WINDOWFRAME,80,5,8,16
   616                        	.member	CUR_WINDOWBORDER,96,5,8,16
   617                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   618                        	.member	CUR_MENU,128,5,8,16
   619                        	.member	CUR_GADGET,144,5,8,16
   620                        	.member	CUR_COLOR,160,101,8,0,15
   621                        	.eos
   622                        	.line	264
   623                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",9
   624                        	.stag	_childMessage_t,64,55
   625                        	.member	msgType,0,16,8,16
   626                        	.member	msgData,16,129,8,32
   627                        	.member	dataSize,48,16,8,16
   628                        	.eos
   629                        	.line	362
   630                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   631                        	.stag	_fx_main_loopvars,16,56
   632                        	.member	dummy,0,5,8,16
   633                        	.eos
   634                        	.stag	_fxMouseMessageData,64,57
   635                        	.member	button1,0,14,8,8
   636                        	.member	button2,8,14,8,8
   637                        	.member	button3,16,14,8,8
   638                        	.member	button4,24,14,8,8
   639                        	.member	x,32,16,8,16
   640                        	.member	y,48,16,8,16
   641                        	.eos
   642                        	.stag	_fx_eventProcess,64,58
   643                        	.member	process,0,138,8,32,20
   644                        	.member	eventProc,32,641,8,32
   645                        	.eos
   646                        	.stag	_mouse_msg_state,184,59
   647                        	.member	lastEvent,0,18,8,32
   648                        	.member	buttonLeftDown,32,14,8,8
   649                        	.member	lastLeftDown,40,18,8,32
   650                        	.member	buttonRightDown,72,14,8,8
   651                        	.member	lastRightDown,80,18,8,32
   652                        	.member	buttonMiddleDown,112,14,8,8
   653                        	.member	lastMiddleDown,120,18,8,32
   654                        	.member	lastX,152,16,8,16
   655                        	.member	lastY,168,16,8,16
   656                        	.eos
   657                        	.line	743
  Thu Dec  3 2020 22:25                                                Page 14


   658                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",16
   659                        	.stag	_fx_spinner_ctx,48,60
   660                        	.member	index,0,5,8,16
   661                        	.member	spinner,16,142,8,32
   662                        	.eos
   663                        	.stag	_fx_console_ctx,1144,61
   664                        	.member	lineBufferIndex,0,5,8,16
   665                        	.member	lineBuffer,16,110,8,0,128
   666                        	.member	isShifted,1040,14,8,8
   667                        	.member	userData,1048,129,8,32
   668                        	.member	screenBuffer,1080,129,8,32
   669                        	.member	Reserved1,1112,129,8,32
   670                        	.eos
   671                        	.stag	_token,64,62
   672                        	.member	type,0,5,8,16
   673                        	.member	depth,16,16,8,16
   674                        	.member	text,32,142,8,32
   675                        	.eos
   676                        	.stag	_command_args,64,63
   677                        	.member	proc,0,656,8,32
   678                        	.member	tokens,32,138,8,32,5
   679                        	.eos
   680                        	.line	171
   681                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",20
   682                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   683                        	.line	71
   684                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",21
   685                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   686                        	.line	61
   687                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   688                        	.line	25
   689                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",9
   690                        ;//#include <stdlib.h>
   691                        ;//#include <string.h>
   692                        ;
   693                        ;#include "OMF_Dc_Memory.h"
   694                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Dc_Memory.h",0
   695                        	.line	24
   696                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",13
   697                        ;#include "OMF_Dc_Shared.h"
   698                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Dc_Shared.h",0
   699                        	.line	18
   700                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",14
   701                        ;#include "OMF_Load.h"
   702                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Load.h",0
   703                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Dec  3 2020 22:25                                                Page 15


                    space\FXOSv1\src\fxtypes.h",0
   704                        	.line	708
   705                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Load.h",9
   706                        	.stag	omf_segment_header,20984,64
   707                        	.member	FileOffset,0,18,8,32
   708                        	.member	SegmentOffset,32,18,8,32
   709                        	.member	BlockCnt,64,18,8,32
   710                        	.member	ByteCnt,96,18,8,32
   711                        	.member	ResSpc,128,18,8,32
   712                        	.member	Length,160,18,8,32
   713                        	.member	Type,192,14,8,8
   714                        	.member	undefine_1,200,14,8,8
   715                        	.member	LabLen,208,14,8,8
   716                        	.member	NumLen,216,14,8,8
   717                        	.member	Version,224,14,8,8
   718                        	.member	BankSize,232,18,8,32
   719                        	.member	Kind,264,5,8,16
   720                        	.member	undefine_2,280,14,8,8
   721                        	.member	undefine_3,288,14,8,8
   722                        	.member	Org,296,18,8,32
   723                        	.member	Align,328,18,8,32
   724                        	.member	NumSEx,360,14,8,8
   725                        	.member	LCBank,368,14,8,8
   726                        	.member	undefine_4,376,14,8,8
   727                        	.member	SegNum,384,5,8,16
   728                        	.member	EntryPointOffset,400,18,8,32
   729                        	.member	DispNameOffset,432,5,8,16
   730                        	.member	DispDataOffset,448,5,8,16
   731                        	.member	TempOrgLength,464,5,8,16
   732                        	.member	TempOrg,480,110,8,0,2048
   733                        	.member	LoadName,16864,110,8,0,256
   734                        	.member	SegName,18912,110,8,0,256
   735                        	.member	undefine_5,20960,14,8,8
   736                        	.member	undefine_6,20968,14,8,8
   737                        	.member	undefine_7,20976,14,8,8
   738                        	.eos
   739                        	.stag	omf_segment,21288,65
   740                        	.member	header,0,10,8,20984,64
   741                        	.member	nb_record,20984,5,8,16
   742                        	.member	first_record,21000,138,8,32,0
   743                        	.member	last_record,21032,138,8,32,0
   744                        	.member	data_offset,21064,5,8,16
   745                        	.member	data_length,21080,5,8,16
   746                        	.member	data,21096,142,8,32
   747                        	.member	reloc_offset,21128,5,8,16
   748                        	.member	reloc_length,21144,5,8,16
   749                        	.member	nb_reloc,21160,5,8,16
   750                        	.member	tab_reloc,21176,1162,8,32,0
   751                        	.member	nb_interseg,21208,5,8,16
   752                        	.member	tab_interseg,21224,1162,8,32,0
   753                        	.member	next,21256,138,8,32,65
   754                        	.eos
   755                        	.stag	omf_file,192,66
   756                        	.member	file_path,0,142,8,32
   757                        	.member	file_name,32,142,8,32
   758                        	.member	data_length,64,5,8,16
   759                        	.member	data,80,142,8,32
  Thu Dec  3 2020 22:25                                                Page 16


   760                        	.member	nb_segment,112,5,8,16
   761                        	.member	first_segment,128,138,8,32,65
   762                        	.member	last_segment,160,138,8,32,65
   763                        	.eos
   764                        	.line	113
   765                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",15
   766                        ;#include "OMF_Record.h"
   767                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.h",0
   768                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   769                        	.line	708
   770                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.h",8
   771                        	.stag	omf_body_record,168,67
   772                        	.member	FileOffset,0,18,8,32
   773                        	.member	SegmentOffset,32,18,8,32
   774                        	.member	operation_code,64,14,8,8
   775                        	.member	length,72,5,8,16
   776                        	.member	record_data,88,129,8,32
   777                        	.member	processed,120,5,8,16
   778                        	.member	next,136,138,8,32,67
   779                        	.eos
   780                        	.stag	subrecord_SuperReloc2,16520,68
   781                        	.member	FileOffset,0,18,8,32
   782                        	.member	SegmentOffset,32,18,8,32
   783                        	.member	Count,64,14,8,8
   784                        	.member	ByteCnt,72,14,8,8
   785                        	.member	BitShiftCnt,80,14,8,8
   786                        	.member	nb_address,88,5,8,16
   787                        	.member	OffsetPatch,104,114,8,0,256
   788                        	.member	OffsetReference,8296,114,8,0,256
   789                        	.member	next,16488,138,8,32,68
   790                        	.eos
   791                        	.stag	subrecord_SuperReloc3,16520,69
   792                        	.member	FileOffset,0,18,8,32
   793                        	.member	SegmentOffset,32,18,8,32
   794                        	.member	Count,64,14,8,8
   795                        	.member	ByteCnt,72,14,8,8
   796                        	.member	BitShiftCnt,80,14,8,8
   797                        	.member	nb_address,88,5,8,16
   798                        	.member	OffsetPatch,104,114,8,0,256
   799                        	.member	OffsetReference,8296,114,8,0,256
   800                        	.member	next,16488,138,8,32,69
   801                        	.eos
   802                        	.stag	subrecord_SuperInterseg1,20632,70
   803                        	.member	FileOffset,0,18,8,32
   804                        	.member	SegmentOffset,32,18,8,32
   805                        	.member	Count,64,14,8,8
   806                        	.member	ByteCnt,72,14,8,8
   807                        	.member	BitShiftCnt,80,14,8,8
   808                        	.member	FileNum,88,5,8,16
   809                        	.member	nb_address,104,5,8,16
   810                        	.member	OffsetPatch,120,114,8,0,256
   811                        	.member	OffsetReference,8312,114,8,0,256
   812                        	.member	SegNum,16504,101,8,0,256
   813                        	.member	next,20600,138,8,32,70
  Thu Dec  3 2020 22:25                                                Page 17


   814                        	.eos
   815                        	.stag	subrecord_SuperInterseg212,20632,71
   816                        	.member	FileOffset,0,18,8,32
   817                        	.member	SegmentOffset,32,18,8,32
   818                        	.member	Count,64,14,8,8
   819                        	.member	ByteCnt,72,14,8,8
   820                        	.member	BitShiftCnt,80,14,8,8
   821                        	.member	FileNum,88,5,8,16
   822                        	.member	nb_address,104,5,8,16
   823                        	.member	OffsetPatch,120,114,8,0,256
   824                        	.member	OffsetReference,8312,114,8,0,256
   825                        	.member	SegNum,16504,101,8,0,256
   826                        	.member	next,20600,138,8,32,71
   827                        	.eos
   828                        	.stag	subrecord_SuperInterseg1324,16544,72
   829                        	.member	FileOffset,0,18,8,32
   830                        	.member	SegmentOffset,32,18,8,32
   831                        	.member	Count,64,14,8,8
   832                        	.member	ByteCnt,72,14,8,8
   833                        	.member	BitShiftCnt,80,14,8,8
   834                        	.member	SegNum,88,14,8,8
   835                        	.member	FileNum,96,5,8,16
   836                        	.member	nb_address,112,5,8,16
   837                        	.member	OffsetPatch,128,114,8,0,256
   838                        	.member	OffsetReference,8320,114,8,0,256
   839                        	.member	next,16512,138,8,32,72
   840                        	.eos
   841                        	.stag	subrecord_SuperInterseg2536,16544,73
   842                        	.member	FileOffset,0,18,8,32
   843                        	.member	SegmentOffset,32,18,8,32
   844                        	.member	Count,64,14,8,8
   845                        	.member	ByteCnt,72,14,8,8
   846                        	.member	BitShiftCnt,80,14,8,8
   847                        	.member	SegNum,88,14,8,8
   848                        	.member	FileNum,96,5,8,16
   849                        	.member	nb_address,112,5,8,16
   850                        	.member	OffsetPatch,128,114,8,0,256
   851                        	.member	OffsetReference,8320,114,8,0,256
   852                        	.member	next,16512,138,8,32,73
   853                        	.eos
   854                        	.stag	record_END,72,74
   855                        	.member	FileOffset,0,18,8,32
   856                        	.member	SegmentOffset,32,18,8,32
   857                        	.member	operation_code,64,14,8,8
   858                        	.eos
   859                        	.stag	record_CONST,112,75
   860                        	.member	FileOffset,0,18,8,32
   861                        	.member	SegmentOffset,32,18,8,32
   862                        	.member	operation_code,64,14,8,8
   863                        	.member	ByteCnt,72,14,8,8
   864                        	.member	data,80,142,8,32
   865                        	.eos
   866                        	.stag	record_ALIGN,72,76
   867                        	.member	FileOffset,0,18,8,32
   868                        	.member	SegmentOffset,32,18,8,32
   869                        	.member	operation_code,64,14,8,8
   870                        	.eos
   871                        	.stag	record_ORG,72,77
  Thu Dec  3 2020 22:25                                                Page 18


   872                        	.member	FileOffset,0,18,8,32
   873                        	.member	SegmentOffset,32,18,8,32
   874                        	.member	operation_code,64,14,8,8
   875                        	.eos
   876                        	.stag	record_RELOC,152,78
   877                        	.member	FileOffset,0,18,8,32
   878                        	.member	SegmentOffset,32,18,8,32
   879                        	.member	operation_code,64,14,8,8
   880                        	.member	ByteCnt,72,14,8,8
   881                        	.member	BitShiftCnt,80,14,8,8
   882                        	.member	OffsetPatch,88,18,8,32
   883                        	.member	OffsetReference,120,18,8,32
   884                        	.eos
   885                        	.stag	record_INTERSEG,184,79
   886                        	.member	FileOffset,0,18,8,32
   887                        	.member	SegmentOffset,32,18,8,32
   888                        	.member	operation_code,64,14,8,8
   889                        	.member	ByteCnt,72,14,8,8
   890                        	.member	BitShiftCnt,80,14,8,8
   891                        	.member	OffsetPatch,88,18,8,32
   892                        	.member	FileNum,120,5,8,16
   893                        	.member	SegNum,136,5,8,16
   894                        	.member	OffsetReference,152,18,8,32
   895                        	.eos
   896                        	.stag	record_USING,72,80
   897                        	.member	FileOffset,0,18,8,32
   898                        	.member	SegmentOffset,32,18,8,32
   899                        	.member	operation_code,64,14,8,8
   900                        	.eos
   901                        	.stag	record_STRONG,72,81
   902                        	.member	FileOffset,0,18,8,32
   903                        	.member	SegmentOffset,32,18,8,32
   904                        	.member	operation_code,64,14,8,8
   905                        	.eos
   906                        	.stag	record_GLOBAL,72,82
   907                        	.member	FileOffset,0,18,8,32
   908                        	.member	SegmentOffset,32,18,8,32
   909                        	.member	operation_code,64,14,8,8
   910                        	.eos
   911                        	.stag	record_GEQU,72,83
   912                        	.member	FileOffset,0,18,8,32
   913                        	.member	SegmentOffset,32,18,8,32
   914                        	.member	operation_code,64,14,8,8
   915                        	.eos
   916                        	.stag	record_MEM,72,84
   917                        	.member	FileOffset,0,18,8,32
   918                        	.member	SegmentOffset,32,18,8,32
   919                        	.member	operation_code,64,14,8,8
   920                        	.eos
   921                        	.stag	record_EXPR,72,85
   922                        	.member	FileOffset,0,18,8,32
   923                        	.member	SegmentOffset,32,18,8,32
   924                        	.member	operation_code,64,14,8,8
   925                        	.eos
   926                        	.stag	record_ZEXPR,72,86
   927                        	.member	FileOffset,0,18,8,32
   928                        	.member	SegmentOffset,32,18,8,32
   929                        	.member	operation_code,64,14,8,8
  Thu Dec  3 2020 22:25                                                Page 19


   930                        	.eos
   931                        	.stag	record_BEXPR,72,87
   932                        	.member	FileOffset,0,18,8,32
   933                        	.member	SegmentOffset,32,18,8,32
   934                        	.member	operation_code,64,14,8,8
   935                        	.eos
   936                        	.stag	record_RELEXPR,72,88
   937                        	.member	FileOffset,0,18,8,32
   938                        	.member	SegmentOffset,32,18,8,32
   939                        	.member	operation_code,64,14,8,8
   940                        	.eos
   941                        	.stag	record_LOCAL,72,89
   942                        	.member	FileOffset,0,18,8,32
   943                        	.member	SegmentOffset,32,18,8,32
   944                        	.member	operation_code,64,14,8,8
   945                        	.eos
   946                        	.stag	record_EQU,72,90
   947                        	.member	FileOffset,0,18,8,32
   948                        	.member	SegmentOffset,32,18,8,32
   949                        	.member	operation_code,64,14,8,8
   950                        	.eos
   951                        	.stag	record_DS,104,91
   952                        	.member	FileOffset,0,18,8,32
   953                        	.member	SegmentOffset,32,18,8,32
   954                        	.member	operation_code,64,14,8,8
   955                        	.member	nb_zero_byte,72,18,8,32
   956                        	.eos
   957                        	.stag	record_LCONST,136,92
   958                        	.member	FileOffset,0,18,8,32
   959                        	.member	SegmentOffset,32,18,8,32
   960                        	.member	operation_code,64,14,8,8
   961                        	.member	ByteCnt,72,18,8,32
   962                        	.member	data,104,142,8,32
   963                        	.eos
   964                        	.stag	record_LEXPR,72,93
   965                        	.member	FileOffset,0,18,8,32
   966                        	.member	SegmentOffset,32,18,8,32
   967                        	.member	operation_code,64,14,8,8
   968                        	.eos
   969                        	.stag	record_ENTRY,72,94
   970                        	.member	FileOffset,0,18,8,32
   971                        	.member	SegmentOffset,32,18,8,32
   972                        	.member	operation_code,64,14,8,8
   973                        	.eos
   974                        	.stag	record_cRELOC,152,95
   975                        	.member	FileOffset,0,18,8,32
   976                        	.member	SegmentOffset,32,18,8,32
   977                        	.member	operation_code,64,14,8,8
   978                        	.member	ByteCnt,72,14,8,8
   979                        	.member	BitShiftCnt,80,14,8,8
   980                        	.member	OffsetPatch,88,18,8,32
   981                        	.member	OffsetReference,120,18,8,32
   982                        	.eos
   983                        	.stag	record_cINTERSEG,176,96
   984                        	.member	FileOffset,0,18,8,32
   985                        	.member	SegmentOffset,32,18,8,32
   986                        	.member	operation_code,64,14,8,8
   987                        	.member	ByteCnt,72,14,8,8
  Thu Dec  3 2020 22:25                                                Page 20


   988                        	.member	BitShiftCnt,80,14,8,8
   989                        	.member	OffsetPatch,88,18,8,32
   990                        	.member	FileNum,120,5,8,16
   991                        	.member	SegNum,136,14,8,8
   992                        	.member	OffsetReference,144,18,8,32
   993                        	.eos
   994                        	.stag	record_SUPER,592,97
   995                        	.member	FileOffset,0,18,8,32
   996                        	.member	SegmentOffset,32,18,8,32
   997                        	.member	operation_code,64,14,8,8
   998                        	.member	ByteCnt,72,18,8,32
   999                        	.member	RecordType,104,14,8,8
  1000                        	.member	nb_SuperReloc2,112,5,8,16
  1001                        	.member	first_SuperReloc2,128,138,8,32,68
  1002                        	.member	last_SuperReloc2,160,138,8,32,68
  1003                        	.member	nb_SuperReloc3,192,5,8,16
  1004                        	.member	first_SuperReloc3,208,138,8,32,69
  1005                        	.member	last_SuperReloc3,240,138,8,32,69
  1006                        	.member	nb_SuperInterseg1,272,5,8,16
  1007                        	.member	first_SuperInterseg1,288,138,8,32,70
  1008                        	.member	last_SuperInterseg1,320,138,8,32,70
  1009                        	.member	nb_SuperInterseg212,352,5,8,16
  1010                        	.member	first_SuperInterseg212,368,138,8,32,71
  1011                        	.member	last_SuperInterseg212,400,138,8,32,71
  1012                        	.member	nb_SuperInterseg1324,432,5,8,16
  1013                        	.member	first_SuperInterseg1324,448,138,8,32,72
  1014                        	.member	last_SuperInterseg1324,480,138,8,32,72
  1015                        	.member	nb_SuperInterseg2536,512,5,8,16
  1016                        	.member	first_SuperInterseg2536,528,138,8,32,73
  1017                        	.member	last_SuperInterseg2536,560,138,8,32,73
  1018                        	.eos
  1019                        	.stag	record_General,72,98
  1020                        	.member	FileOffset,0,18,8,32
  1021                        	.member	SegmentOffset,32,18,8,32
  1022                        	.member	operation_code,64,14,8,8
  1023                        	.eos
  1024                        	.stag	record_Experimental,72,99
  1025                        	.member	FileOffset,0,18,8,32
  1026                        	.member	SegmentOffset,32,18,8,32
  1027                        	.member	operation_code,64,14,8,8
  1028                        	.eos
  1029                        	.stag	omf_reloc,128,100
  1030                        	.member	ByteCnt,0,14,8,8
  1031                        	.member	BitShiftCnt,8,14,8,8
  1032                        	.member	OffsetPatch,16,18,8,32
  1033                        	.member	OffsetReference,48,18,8,32
  1034                        	.member	origin,80,5,8,16
  1035                        	.member	next,96,138,8,32,100
  1036                        	.eos
  1037                        	.stag	omf_interseg,160,101
  1038                        	.member	ByteCnt,0,14,8,8
  1039                        	.member	BitShiftCnt,8,14,8,8
  1040                        	.member	OffsetPatch,16,18,8,32
  1041                        	.member	OffsetReference,48,18,8,32
  1042                        	.member	FileNum,80,5,8,16
  1043                        	.member	SegNum,96,5,8,16
  1044                        	.member	origin,112,5,8,16
  1045                        	.member	next,128,138,8,32,101
  Thu Dec  3 2020 22:25                                                Page 21


  1046                        	.eos
  1047                        	.line	458
  1048                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",16
  1049                        ;
  1050                        ;static void *DecodeRecordEND(unsigned char *,int,
                    int,int *);
  1051                        ;static void *DecodeRecordCONST(unsigned char *,in
                    t,int,int *);
  1052                        ;static void *DecodeRecordALIGN(unsigned char *,in
                    t,int,int *);
  1053                        ;static void *DecodeRecordORG(unsigned char *,int,
                    int,int *);
  1054                        ;static void *DecodeRecordRELOC(unsigned char *,in
                    t,int,int *);
  1055                        ;static void *DecodeRecordINTERSEG(unsigned char *
                    ,int,int,int *);
  1056                        ;static void *DecodeRecordUSING(unsigned char *,in
                    t,int,int *);
  1057                        ;static void *DecodeRecordSTRONG(unsigned char *,i
                    nt,int,int *);
  1058                        ;static void *DecodeRecordGLOBAL(unsigned char *,i
                    nt,int,int *);
  1059                        ;static void *DecodeRecordGEQU(unsigned char *,int
                    ,int,int *);
  1060                        ;static void *DecodeRecordMEM(unsigned char *,int,
                    int,int *);
  1061                        ;static void *DecodeRecordEXPR(unsigned char *,int
                    ,int,int *);
  1062                        ;static void *DecodeRecordZEXPR(unsigned char *,in
                    t,int,int *);
  1063                        ;static void *DecodeRecordBEXPR(unsigned char *,in
                    t,int,int *);
  1064                        ;static void *DecodeRecordRELEXPR(unsigned char *,
                    int,int,int *);
  1065                        ;static void *DecodeRecordLOCAL(unsigned char *,in
                    t,int,int *);
  1066                        ;static void *DecodeRecordEQU(unsigned char *,int,
                    int,int *);
  1067                        ;static void *DecodeRecordDS(unsigned char *,int,i
                    nt,int *);
  1068                        ;static void *DecodeRecordLCONST(unsigned char *,i
                    nt,int,int *);
  1069                        ;static void *DecodeRecordLEXPR(unsigned char *,in
                    t,int,int *);
  1070                        ;static void *DecodeRecordENTRY(unsigned char *,in
                    t,int,int *);
  1071                        ;static void *DecodeRecordcRELOC(unsigned char *,i
                    nt,int,int *);
  1072                        ;static void *DecodeRecordcINTERSEG(unsigned char 
                    *,int,int,int *);
  1073                        ;static void *DecodeRecordSUPER(unsigned char *,in
                    t,int,unsigned char *,int,int *,struct omf_segment *);
  1074                        ;static void *DecodeRecordGeneral(unsigned char *,
                    int,int,int *);
  1075                        ;static void *DecodeRecordExperimental(unsigned ch
                    ar *,int,int,int *);
  1076                        ;
  Thu Dec  3 2020 22:25                                                Page 22


  1077                        ;static struct subrecord_SuperReloc2 *DecodeSuperR
                    eloc2(unsigned char *,unsigned char *,int,BYTE *,int *,struc
                    t omf_segment *);
  1078                        ;static struct subrecord_SuperReloc3 *DecodeSuperR
                    eloc3(unsigned char *,unsigned char *,int,BYTE *,int *,struc
                    t omf_segment *);
  1079                        ;static struct subrecord_SuperInterseg1 *DecodeSup
                    erInterseg1(unsigned char *,unsigned char *,int,BYTE *,int *
                    ,struct omf_segment *);
  1080                        ;static struct subrecord_SuperInterseg212 *DecodeS
                    uperInterseg212(unsigned char *,BYTE,unsigned char *,int,BYT
                    E *,int *,struct omf_segment *);
  1081                        ;static struct subrecord_SuperInterseg1324 *Decode
                    SuperInterseg1324(unsigned char *,BYTE,unsigned char *,int,B
                    YTE *,int *,struct omf_segment *);
  1082                        ;static struct subrecord_SuperInterseg2536 *Decode
                    SuperInterseg2536(unsigned char *,BYTE,unsigned char *,int,B
                    YTE *,int *,struct omf_segment *);
  1083                        ;
  1084                        ;static void AddReloc(BYTE,BYTE,DWORD,DWORD,int);
  1085                        ;static void AddInterseg(BYTE,BYTE,DWORD,DWORD,WOR
                    D,WORD,int);
  1086                        ;
  1087                        ;static void mem_free_END(struct record_END *);
  1088                        ;static void mem_free_CONST(struct record_CONST *)
                    ;
  1089                        ;static void mem_free_ALIGN(struct record_ALIGN *)
                    ;
  1090                        ;static void mem_free_ORG(struct record_ORG *);
  1091                        ;static void mem_free_RELOC(struct record_RELOC *)
                    ;
  1092                        ;static void mem_free_INTERSEG(struct record_INTER
                    SEG *);
  1093                        ;static void mem_free_USING(struct record_USING *)
                    ;
  1094                        ;static void mem_free_STRONG(struct record_STRONG 
                    *);
  1095                        ;static void mem_free_GLOBAL(struct record_GLOBAL 
                    *);
  1096                        ;static void mem_free_GEQU(struct record_GEQU *);
  1097                        ;static void mem_free_MEM(struct record_MEM *);
  1098                        ;static void mem_free_EXPR(struct record_EXPR *);
  1099                        ;static void mem_free_ZEXPR(struct record_ZEXPR *)
                    ;
  1100                        ;static void mem_free_BEXPR(struct record_BEXPR *)
                    ;
  1101                        ;static void mem_free_RELEXPR(struct record_RELEXP
                    R *);
  1102                        ;static void mem_free_LOCAL(struct record_LOCAL *)
                    ;
  1103                        ;static void mem_free_EQU(struct record_EQU *);
  1104                        ;static void mem_free_DS(struct record_DS *);
  1105                        ;static void mem_free_LCONST(struct record_LCONST 
                    *);
  1106                        ;static void mem_free_LEXPR(struct record_LEXPR *)
                    ;
  1107                        ;static void mem_free_ENTRY(struct record_ENTRY *)
                    ;
  Thu Dec  3 2020 22:25                                                Page 23


  1108                        ;static void mem_free_cRELOC(struct record_cRELOC 
                    *);
  1109                        ;static void mem_free_cINTERSEG(struct record_cINT
                    ERSEG *);
  1110                        ;static void mem_free_SUPER(struct record_SUPER *)
                    ;
  1111                        ;static void mem_free_General(struct record_Genera
                    l *);
  1112                        ;static void mem_free_Experimental(struct record_E
                    xperimental *);
  1113                        ;
  1114                        ;#pragma section CODE=LOADER,offset $9:7000
  1115                        LOADER	section	offset $9:7000
  1116 09:7000:              	ends
  1117                        ;
  1118                        ;/************************************************
                    ****************/
  1119                        ;/*  DecodeOneRecord() :  Décode un Record du Body
                     d'un Segment. */
  1120                        ;/************************************************
                    ****************/
  1121                        ;struct omf_body_record *DecodeOneRecord(unsigned 
                    char *data, int segment_num, int file_offset, int segment_of
                    fset, unsigned char *lconst, int lconst_length, int *record_
                    length_rtn, struct omf_segment *current_segment)
  1122                        ;{
  1123                        	.line	87
  1124                        	.line	88
  1125                        	LOADER
  1126                        	xdef	~~DecodeOneRecord
  1127                        	func
  1128                        	.function	88
  1129                        ~~DecodeOneRecord:
  1130                        	longa	on
  1131                        	longi	on
  1132 09:7000: 3B           	tsc
  1133 09:7001: 38           	sec
  1134 09:7002: E9 08 00     	sbc	#L2
  1135 09:7005: 1B           	tcs
  1136 09:7006: 0B           	phd
  1137 09:7007: 5B           	tcd
  1138             00000004   data_0	set	4
  1139             00000008   segment_num_0	set	8
  1140             0000000A   file_offset_0	set	10
  1141             0000000C   segment_offset_0	set	12
  1142             0000000E   lconst_0	set	14
  1143             00000012   lconst_length_0	set	18
  1144             00000014   record_length_rtn_0	set	20
  1145             00000018   current_segment_0	set	24
  1146                        	.block	88
  1147                        ;  struct omf_body_record *current_record;
  1148                        ;
  1149                        ;  /* Allocation mémoire */
  1150                        ;  current_record = (struct omf_body_record *) k_c
                    alloc(1,sizeof(struct omf_body_record));
  1151             00000000   current_record_1	set	0
  1152                        	.sym	current_record,0,138,1,32,67
  1153                        	.sym	data,4,142,6,32
  Thu Dec  3 2020 22:25                                                Page 24


  1154                        	.sym	segment_num,8,5,6,16
  1155                        	.sym	file_offset,10,5,6,16
  1156                        	.sym	segment_offset,12,5,6,16
  1157                        	.sym	lconst,14,142,6,32
  1158                        	.sym	lconst_length,18,5,6,16
  1159                        	.sym	record_length_rtn,20,133,6,32
  1160                        	.sym	current_segment,24,138,6,32,65
  1161                        	.line	92
  1162 09:7008: F4 15 00     	pea	#<$15
  1163 09:700B: F4 01 00     	pea	#<$1
  1164 09:700E: 22 xx xx xx  	jsl	~~k_calloc
  1165 09:7012: 85 05        	sta	<L3+current_record_1
  1166 09:7014: 86 07        	stx	<L3+current_record_1+2
  1167                        ;  if(current_record == NULL)
  1168                        	.line	93
  1169                        ;    {
  1170 09:7016: A5 05        	lda	<L3+current_record_1
  1171 09:7018: 05 07        	ora	<L3+current_record_1+2
  1172 09:701A: F0 03        	beq	L5
  1173 09:701C: 82 19 00     	brl	L10001
  1174                        L5:
  1175                        	.line	94
  1176                        ;      ////printf("Error : Impossible to allocate 
                    memory to process Segment #%02X Body Record.\n",current_segm
                    ent->header.SegNum);
  1177                        ;      return(NULL);
  1178                        	.line	96
  1179 09:701F: A9 00 00     	lda	#$0
  1180 09:7022: AA           	tax
  1181 09:7023: A9 00 00     	lda	#$0
  1182                        L6:
  1183 09:7026: A8           	tay
  1184 09:7027: A5 0A        	lda	<L2+2
  1185 09:7029: 85 22        	sta	<L2+2+24
  1186 09:702B: A5 09        	lda	<L2+1
  1187 09:702D: 85 21        	sta	<L2+1+24
  1188 09:702F: 2B           	pld
  1189 09:7030: 3B           	tsc
  1190 09:7031: 18           	clc
  1191 09:7032: 69 20 00     	adc	#L2+24
  1192 09:7035: 1B           	tcs
  1193 09:7036: 98           	tya
  1194 09:7037: 6B           	rtl
  1195                        ;    }
  1196                        	.line	97
  1197                        ;
  1198                        ;  /* Operation code */
  1199                        ;  current_record->operation_code = data[0];
  1200                        L10001:
  1201                        	.line	100
  1202 09:7038: E2 20        	sep	#$20
  1203                        	longa	off
  1204 09:703A: A7 0C        	lda	[<L2+data_0]
  1205 09:703C: A0 08 00     	ldy	#$8
  1206 09:703F: 97 05        	sta	[<L3+current_record_1],Y
  1207 09:7041: C2 20        	rep	#$20
  1208                        	longa	on
  1209                        ;
  Thu Dec  3 2020 22:25                                                Page 25


  1210                        ;  /** Données du Record **/
  1211                        ;  if(current_record->operation_code == 0x00)
  1212                        	.line	103
  1213                        ;    current_record->record_data = DecodeRecordEND
                    (data,file_offset,segment_offset,record_length_rtn);
  1214 09:7043: A0 08 00     	ldy	#$8
  1215 09:7046: B7 05        	lda	[<L3+current_record_1],Y
  1216 09:7048: 29 FF 00     	and	#$ff
  1217 09:704B: F0 03        	beq	L7
  1218 09:704D: 82 25 00     	brl	L10002
  1219                        L7:
  1220                        	.line	104
  1221 09:7050: D4 1E        	pei	<L2+record_length_rtn_0+2
  1222 09:7052: D4 1C        	pei	<L2+record_length_rtn_0
  1223 09:7054: D4 14        	pei	<L2+segment_offset_0
  1224 09:7056: D4 12        	pei	<L2+file_offset_0
  1225 09:7058: D4 0E        	pei	<L2+data_0+2
  1226 09:705A: D4 0C        	pei	<L2+data_0
  1227 09:705C: 22 2B 7F 09  	jsl	~~DecodeRecordEND
  1228 09:7060: 85 01        	sta	<R0
  1229 09:7062: 86 03        	stx	<R0+2
  1230 09:7064: A5 01        	lda	<R0
  1231 09:7066: A0 0B 00     	ldy	#$b
  1232 09:7069: 97 05        	sta	[<L3+current_record_1],Y
  1233 09:706B: A5 03        	lda	<R0+2
  1234 09:706D: A0 0D 00     	ldy	#$d
  1235 09:7070: 97 05        	sta	[<L3+current_record_1],Y
  1236                        ;  else if(current_record->operation_code >= 0x01 
                    && current_record->operation_code <= 0xDF)
  1237 09:7072: 82 69 05     	brl	L10003
  1238                        L10002:
  1239                        	.line	105
  1240                        ;    current_record->record_data = DecodeRecordCON
                    ST(data,file_offset,segment_offset,record_length_rtn);
  1241 09:7075: E2 20        	sep	#$20
  1242                        	longa	off
  1243 09:7077: A0 08 00     	ldy	#$8
  1244 09:707A: B7 05        	lda	[<L3+current_record_1],Y
  1245 09:707C: C9 01        	cmp	#<$1
  1246 09:707E: C2 20        	rep	#$20
  1247                        	longa	on
  1248 09:7080: B0 03        	bcs	L8
  1249 09:7082: 82 35 00     	brl	L10004
  1250                        L8:
  1251 09:7085: E2 20        	sep	#$20
  1252                        	longa	off
  1253 09:7087: A9 DF        	lda	#$df
  1254 09:7089: A0 08 00     	ldy	#$8
  1255 09:708C: D7 05        	cmp	[<L3+current_record_1],Y
  1256 09:708E: C2 20        	rep	#$20
  1257                        	longa	on
  1258 09:7090: B0 03        	bcs	L9
  1259 09:7092: 82 25 00     	brl	L10004
  1260                        L9:
  1261                        	.line	106
  1262 09:7095: D4 1E        	pei	<L2+record_length_rtn_0+2
  1263 09:7097: D4 1C        	pei	<L2+record_length_rtn_0
  1264 09:7099: D4 14        	pei	<L2+segment_offset_0
  Thu Dec  3 2020 22:25                                                Page 26


  1265 09:709B: D4 12        	pei	<L2+file_offset_0
  1266 09:709D: D4 0E        	pei	<L2+data_0+2
  1267 09:709F: D4 0C        	pei	<L2+data_0
  1268 09:70A1: 22 AB 7F 09  	jsl	~~DecodeRecordCONST
  1269 09:70A5: 85 01        	sta	<R0
  1270 09:70A7: 86 03        	stx	<R0+2
  1271 09:70A9: A5 01        	lda	<R0
  1272 09:70AB: A0 0B 00     	ldy	#$b
  1273 09:70AE: 97 05        	sta	[<L3+current_record_1],Y
  1274 09:70B0: A5 03        	lda	<R0+2
  1275 09:70B2: A0 0D 00     	ldy	#$d
  1276 09:70B5: 97 05        	sta	[<L3+current_record_1],Y
  1277                        ;  else if(current_record->operation_code == 0xE0)
  1278 09:70B7: 82 24 05     	brl	L10005
  1279                        L10004:
  1280                        	.line	107
  1281                        ;    current_record->record_data = DecodeRecordALI
                    GN(data,file_offset,segment_offset,record_length_rtn);
  1282 09:70BA: E2 20        	sep	#$20
  1283                        	longa	off
  1284 09:70BC: A0 08 00     	ldy	#$8
  1285 09:70BF: B7 05        	lda	[<L3+current_record_1],Y
  1286 09:70C1: C9 E0        	cmp	#<$e0
  1287 09:70C3: C2 20        	rep	#$20
  1288                        	longa	on
  1289 09:70C5: F0 03        	beq	L10
  1290 09:70C7: 82 25 00     	brl	L10006
  1291                        L10:
  1292                        	.line	108
  1293 09:70CA: D4 1E        	pei	<L2+record_length_rtn_0+2
  1294 09:70CC: D4 1C        	pei	<L2+record_length_rtn_0
  1295 09:70CE: D4 14        	pei	<L2+segment_offset_0
  1296 09:70D0: D4 12        	pei	<L2+file_offset_0
  1297 09:70D2: D4 0E        	pei	<L2+data_0+2
  1298 09:70D4: D4 0C        	pei	<L2+data_0
  1299 09:70D6: 22 AF 80 09  	jsl	~~DecodeRecordALIGN
  1300 09:70DA: 85 01        	sta	<R0
  1301 09:70DC: 86 03        	stx	<R0+2
  1302 09:70DE: A5 01        	lda	<R0
  1303 09:70E0: A0 0B 00     	ldy	#$b
  1304 09:70E3: 97 05        	sta	[<L3+current_record_1],Y
  1305 09:70E5: A5 03        	lda	<R0+2
  1306 09:70E7: A0 0D 00     	ldy	#$d
  1307 09:70EA: 97 05        	sta	[<L3+current_record_1],Y
  1308                        ;  else if(current_record->operation_code == 0xE1)
  1309 09:70EC: 82 EF 04     	brl	L10007
  1310                        L10006:
  1311                        	.line	109
  1312                        ;    current_record->record_data = DecodeRecordORG
                    (data,file_offset,segment_offset,record_length_rtn);
  1313 09:70EF: E2 20        	sep	#$20
  1314                        	longa	off
  1315 09:70F1: A0 08 00     	ldy	#$8
  1316 09:70F4: B7 05        	lda	[<L3+current_record_1],Y
  1317 09:70F6: C9 E1        	cmp	#<$e1
  1318 09:70F8: C2 20        	rep	#$20
  1319                        	longa	on
  1320 09:70FA: F0 03        	beq	L11
  Thu Dec  3 2020 22:25                                                Page 27


  1321 09:70FC: 82 25 00     	brl	L10008
  1322                        L11:
  1323                        	.line	110
  1324 09:70FF: D4 1E        	pei	<L2+record_length_rtn_0+2
  1325 09:7101: D4 1C        	pei	<L2+record_length_rtn_0
  1326 09:7103: D4 14        	pei	<L2+segment_offset_0
  1327 09:7105: D4 12        	pei	<L2+file_offset_0
  1328 09:7107: D4 0E        	pei	<L2+data_0+2
  1329 09:7109: D4 0C        	pei	<L2+data_0
  1330 09:710B: 22 2A 81 09  	jsl	~~DecodeRecordORG
  1331 09:710F: 85 01        	sta	<R0
  1332 09:7111: 86 03        	stx	<R0+2
  1333 09:7113: A5 01        	lda	<R0
  1334 09:7115: A0 0B 00     	ldy	#$b
  1335 09:7118: 97 05        	sta	[<L3+current_record_1],Y
  1336 09:711A: A5 03        	lda	<R0+2
  1337 09:711C: A0 0D 00     	ldy	#$d
  1338 09:711F: 97 05        	sta	[<L3+current_record_1],Y
  1339                        ;  else if(current_record->operation_code == 0xE2)
  1340 09:7121: 82 BA 04     	brl	L10009
  1341                        L10008:
  1342                        	.line	111
  1343                        ;    current_record->record_data = DecodeRecordREL
                    OC(data,file_offset,segment_offset,record_length_rtn);
  1344 09:7124: E2 20        	sep	#$20
  1345                        	longa	off
  1346 09:7126: A0 08 00     	ldy	#$8
  1347 09:7129: B7 05        	lda	[<L3+current_record_1],Y
  1348 09:712B: C9 E2        	cmp	#<$e2
  1349 09:712D: C2 20        	rep	#$20
  1350                        	longa	on
  1351 09:712F: F0 03        	beq	L12
  1352 09:7131: 82 25 00     	brl	L10010
  1353                        L12:
  1354                        	.line	112
  1355 09:7134: D4 1E        	pei	<L2+record_length_rtn_0+2
  1356 09:7136: D4 1C        	pei	<L2+record_length_rtn_0
  1357 09:7138: D4 14        	pei	<L2+segment_offset_0
  1358 09:713A: D4 12        	pei	<L2+file_offset_0
  1359 09:713C: D4 0E        	pei	<L2+data_0+2
  1360 09:713E: D4 0C        	pei	<L2+data_0
  1361 09:7140: 22 A5 81 09  	jsl	~~DecodeRecordRELOC
  1362 09:7144: 85 01        	sta	<R0
  1363 09:7146: 86 03        	stx	<R0+2
  1364 09:7148: A5 01        	lda	<R0
  1365 09:714A: A0 0B 00     	ldy	#$b
  1366 09:714D: 97 05        	sta	[<L3+current_record_1],Y
  1367 09:714F: A5 03        	lda	<R0+2
  1368 09:7151: A0 0D 00     	ldy	#$d
  1369 09:7154: 97 05        	sta	[<L3+current_record_1],Y
  1370                        ;  else if(current_record->operation_code == 0xE3)
  1371 09:7156: 82 85 04     	brl	L10011
  1372                        L10010:
  1373                        	.line	113
  1374                        ;    current_record->record_data = DecodeRecordINT
                    ERSEG(data,file_offset,segment_offset,record_length_rtn);
  1375 09:7159: E2 20        	sep	#$20
  1376                        	longa	off
  Thu Dec  3 2020 22:25                                                Page 28


  1377 09:715B: A0 08 00     	ldy	#$8
  1378 09:715E: B7 05        	lda	[<L3+current_record_1],Y
  1379 09:7160: C9 E3        	cmp	#<$e3
  1380 09:7162: C2 20        	rep	#$20
  1381                        	longa	on
  1382 09:7164: F0 03        	beq	L13
  1383 09:7166: 82 25 00     	brl	L10012
  1384                        L13:
  1385                        	.line	114
  1386 09:7169: D4 1E        	pei	<L2+record_length_rtn_0+2
  1387 09:716B: D4 1C        	pei	<L2+record_length_rtn_0
  1388 09:716D: D4 14        	pei	<L2+segment_offset_0
  1389 09:716F: D4 12        	pei	<L2+file_offset_0
  1390 09:7171: D4 0E        	pei	<L2+data_0+2
  1391 09:7173: D4 0C        	pei	<L2+data_0
  1392 09:7175: 22 C6 82 09  	jsl	~~DecodeRecordINTERSEG
  1393 09:7179: 85 01        	sta	<R0
  1394 09:717B: 86 03        	stx	<R0+2
  1395 09:717D: A5 01        	lda	<R0
  1396 09:717F: A0 0B 00     	ldy	#$b
  1397 09:7182: 97 05        	sta	[<L3+current_record_1],Y
  1398 09:7184: A5 03        	lda	<R0+2
  1399 09:7186: A0 0D 00     	ldy	#$d
  1400 09:7189: 97 05        	sta	[<L3+current_record_1],Y
  1401                        ;  else if(current_record->operation_code == 0xE4)
  1402 09:718B: 82 50 04     	brl	L10013
  1403                        L10012:
  1404                        	.line	115
  1405                        ;    current_record->record_data = DecodeRecordUSI
                    NG(data,file_offset,segment_offset,record_length_rtn);
  1406 09:718E: E2 20        	sep	#$20
  1407                        	longa	off
  1408 09:7190: A0 08 00     	ldy	#$8
  1409 09:7193: B7 05        	lda	[<L3+current_record_1],Y
  1410 09:7195: C9 E4        	cmp	#<$e4
  1411 09:7197: C2 20        	rep	#$20
  1412                        	longa	on
  1413 09:7199: F0 03        	beq	L14
  1414 09:719B: 82 25 00     	brl	L10014
  1415                        L14:
  1416                        	.line	116
  1417 09:719E: D4 1E        	pei	<L2+record_length_rtn_0+2
  1418 09:71A0: D4 1C        	pei	<L2+record_length_rtn_0
  1419 09:71A2: D4 14        	pei	<L2+segment_offset_0
  1420 09:71A4: D4 12        	pei	<L2+file_offset_0
  1421 09:71A6: D4 0E        	pei	<L2+data_0+2
  1422 09:71A8: D4 0C        	pei	<L2+data_0
  1423 09:71AA: 22 4D 84 09  	jsl	~~DecodeRecordUSING
  1424 09:71AE: 85 01        	sta	<R0
  1425 09:71B0: 86 03        	stx	<R0+2
  1426 09:71B2: A5 01        	lda	<R0
  1427 09:71B4: A0 0B 00     	ldy	#$b
  1428 09:71B7: 97 05        	sta	[<L3+current_record_1],Y
  1429 09:71B9: A5 03        	lda	<R0+2
  1430 09:71BB: A0 0D 00     	ldy	#$d
  1431 09:71BE: 97 05        	sta	[<L3+current_record_1],Y
  1432                        ;  else if(current_record->operation_code == 0xE5)
  1433 09:71C0: 82 1B 04     	brl	L10015
  Thu Dec  3 2020 22:25                                                Page 29


  1434                        L10014:
  1435                        	.line	117
  1436                        ;    current_record->record_data = DecodeRecordSTR
                    ONG(data,file_offset,segment_offset,record_length_rtn);
  1437 09:71C3: E2 20        	sep	#$20
  1438                        	longa	off
  1439 09:71C5: A0 08 00     	ldy	#$8
  1440 09:71C8: B7 05        	lda	[<L3+current_record_1],Y
  1441 09:71CA: C9 E5        	cmp	#<$e5
  1442 09:71CC: C2 20        	rep	#$20
  1443                        	longa	on
  1444 09:71CE: F0 03        	beq	L15
  1445 09:71D0: 82 25 00     	brl	L10016
  1446                        L15:
  1447                        	.line	118
  1448 09:71D3: D4 1E        	pei	<L2+record_length_rtn_0+2
  1449 09:71D5: D4 1C        	pei	<L2+record_length_rtn_0
  1450 09:71D7: D4 14        	pei	<L2+segment_offset_0
  1451 09:71D9: D4 12        	pei	<L2+file_offset_0
  1452 09:71DB: D4 0E        	pei	<L2+data_0+2
  1453 09:71DD: D4 0C        	pei	<L2+data_0
  1454 09:71DF: 22 C8 84 09  	jsl	~~DecodeRecordSTRONG
  1455 09:71E3: 85 01        	sta	<R0
  1456 09:71E5: 86 03        	stx	<R0+2
  1457 09:71E7: A5 01        	lda	<R0
  1458 09:71E9: A0 0B 00     	ldy	#$b
  1459 09:71EC: 97 05        	sta	[<L3+current_record_1],Y
  1460 09:71EE: A5 03        	lda	<R0+2
  1461 09:71F0: A0 0D 00     	ldy	#$d
  1462 09:71F3: 97 05        	sta	[<L3+current_record_1],Y
  1463                        ;  else if(current_record->operation_code == 0xE6)
  1464 09:71F5: 82 E6 03     	brl	L10017
  1465                        L10016:
  1466                        	.line	119
  1467                        ;    current_record->record_data = DecodeRecordGLO
                    BAL(data,file_offset,segment_offset,record_length_rtn);
  1468 09:71F8: E2 20        	sep	#$20
  1469                        	longa	off
  1470 09:71FA: A0 08 00     	ldy	#$8
  1471 09:71FD: B7 05        	lda	[<L3+current_record_1],Y
  1472 09:71FF: C9 E6        	cmp	#<$e6
  1473 09:7201: C2 20        	rep	#$20
  1474                        	longa	on
  1475 09:7203: F0 03        	beq	L16
  1476 09:7205: 82 25 00     	brl	L10018
  1477                        L16:
  1478                        	.line	120
  1479 09:7208: D4 1E        	pei	<L2+record_length_rtn_0+2
  1480 09:720A: D4 1C        	pei	<L2+record_length_rtn_0
  1481 09:720C: D4 14        	pei	<L2+segment_offset_0
  1482 09:720E: D4 12        	pei	<L2+file_offset_0
  1483 09:7210: D4 0E        	pei	<L2+data_0+2
  1484 09:7212: D4 0C        	pei	<L2+data_0
  1485 09:7214: 22 43 85 09  	jsl	~~DecodeRecordGLOBAL
  1486 09:7218: 85 01        	sta	<R0
  1487 09:721A: 86 03        	stx	<R0+2
  1488 09:721C: A5 01        	lda	<R0
  1489 09:721E: A0 0B 00     	ldy	#$b
  Thu Dec  3 2020 22:25                                                Page 30


  1490 09:7221: 97 05        	sta	[<L3+current_record_1],Y
  1491 09:7223: A5 03        	lda	<R0+2
  1492 09:7225: A0 0D 00     	ldy	#$d
  1493 09:7228: 97 05        	sta	[<L3+current_record_1],Y
  1494                        ;  else if(current_record->operation_code == 0xE7)
  1495 09:722A: 82 B1 03     	brl	L10019
  1496                        L10018:
  1497                        	.line	121
  1498                        ;    current_record->record_data = DecodeRecordGEQ
                    U(data,file_offset,segment_offset,record_length_rtn);
  1499 09:722D: E2 20        	sep	#$20
  1500                        	longa	off
  1501 09:722F: A0 08 00     	ldy	#$8
  1502 09:7232: B7 05        	lda	[<L3+current_record_1],Y
  1503 09:7234: C9 E7        	cmp	#<$e7
  1504 09:7236: C2 20        	rep	#$20
  1505                        	longa	on
  1506 09:7238: F0 03        	beq	L17
  1507 09:723A: 82 25 00     	brl	L10020
  1508                        L17:
  1509                        	.line	122
  1510 09:723D: D4 1E        	pei	<L2+record_length_rtn_0+2
  1511 09:723F: D4 1C        	pei	<L2+record_length_rtn_0
  1512 09:7241: D4 14        	pei	<L2+segment_offset_0
  1513 09:7243: D4 12        	pei	<L2+file_offset_0
  1514 09:7245: D4 0E        	pei	<L2+data_0+2
  1515 09:7247: D4 0C        	pei	<L2+data_0
  1516 09:7249: 22 BE 85 09  	jsl	~~DecodeRecordGEQU
  1517 09:724D: 85 01        	sta	<R0
  1518 09:724F: 86 03        	stx	<R0+2
  1519 09:7251: A5 01        	lda	<R0
  1520 09:7253: A0 0B 00     	ldy	#$b
  1521 09:7256: 97 05        	sta	[<L3+current_record_1],Y
  1522 09:7258: A5 03        	lda	<R0+2
  1523 09:725A: A0 0D 00     	ldy	#$d
  1524 09:725D: 97 05        	sta	[<L3+current_record_1],Y
  1525                        ;  else if(current_record->operation_code == 0xE8)
  1526 09:725F: 82 7C 03     	brl	L10021
  1527                        L10020:
  1528                        	.line	123
  1529                        ;    current_record->record_data = DecodeRecordMEM
                    (data,file_offset,segment_offset,record_length_rtn);
  1530 09:7262: E2 20        	sep	#$20
  1531                        	longa	off
  1532 09:7264: A0 08 00     	ldy	#$8
  1533 09:7267: B7 05        	lda	[<L3+current_record_1],Y
  1534 09:7269: C9 E8        	cmp	#<$e8
  1535 09:726B: C2 20        	rep	#$20
  1536                        	longa	on
  1537 09:726D: F0 03        	beq	L18
  1538 09:726F: 82 25 00     	brl	L10022
  1539                        L18:
  1540                        	.line	124
  1541 09:7272: D4 1E        	pei	<L2+record_length_rtn_0+2
  1542 09:7274: D4 1C        	pei	<L2+record_length_rtn_0
  1543 09:7276: D4 14        	pei	<L2+segment_offset_0
  1544 09:7278: D4 12        	pei	<L2+file_offset_0
  1545 09:727A: D4 0E        	pei	<L2+data_0+2
  Thu Dec  3 2020 22:25                                                Page 31


  1546 09:727C: D4 0C        	pei	<L2+data_0
  1547 09:727E: 22 39 86 09  	jsl	~~DecodeRecordMEM
  1548 09:7282: 85 01        	sta	<R0
  1549 09:7284: 86 03        	stx	<R0+2
  1550 09:7286: A5 01        	lda	<R0
  1551 09:7288: A0 0B 00     	ldy	#$b
  1552 09:728B: 97 05        	sta	[<L3+current_record_1],Y
  1553 09:728D: A5 03        	lda	<R0+2
  1554 09:728F: A0 0D 00     	ldy	#$d
  1555 09:7292: 97 05        	sta	[<L3+current_record_1],Y
  1556                        ;  else if(current_record->operation_code == 0xEB)
  1557 09:7294: 82 47 03     	brl	L10023
  1558                        L10022:
  1559                        	.line	125
  1560                        ;    current_record->record_data = DecodeRecordEXP
                    R(data,file_offset,segment_offset,record_length_rtn);
  1561 09:7297: E2 20        	sep	#$20
  1562                        	longa	off
  1563 09:7299: A0 08 00     	ldy	#$8
  1564 09:729C: B7 05        	lda	[<L3+current_record_1],Y
  1565 09:729E: C9 EB        	cmp	#<$eb
  1566 09:72A0: C2 20        	rep	#$20
  1567                        	longa	on
  1568 09:72A2: F0 03        	beq	L19
  1569 09:72A4: 82 25 00     	brl	L10024
  1570                        L19:
  1571                        	.line	126
  1572 09:72A7: D4 1E        	pei	<L2+record_length_rtn_0+2
  1573 09:72A9: D4 1C        	pei	<L2+record_length_rtn_0
  1574 09:72AB: D4 14        	pei	<L2+segment_offset_0
  1575 09:72AD: D4 12        	pei	<L2+file_offset_0
  1576 09:72AF: D4 0E        	pei	<L2+data_0+2
  1577 09:72B1: D4 0C        	pei	<L2+data_0
  1578 09:72B3: 22 B4 86 09  	jsl	~~DecodeRecordEXPR
  1579 09:72B7: 85 01        	sta	<R0
  1580 09:72B9: 86 03        	stx	<R0+2
  1581 09:72BB: A5 01        	lda	<R0
  1582 09:72BD: A0 0B 00     	ldy	#$b
  1583 09:72C0: 97 05        	sta	[<L3+current_record_1],Y
  1584 09:72C2: A5 03        	lda	<R0+2
  1585 09:72C4: A0 0D 00     	ldy	#$d
  1586 09:72C7: 97 05        	sta	[<L3+current_record_1],Y
  1587                        ;  else if(current_record->operation_code == 0xEC)
  1588 09:72C9: 82 12 03     	brl	L10025
  1589                        L10024:
  1590                        	.line	127
  1591                        ;    current_record->record_data = DecodeRecordZEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  1592 09:72CC: E2 20        	sep	#$20
  1593                        	longa	off
  1594 09:72CE: A0 08 00     	ldy	#$8
  1595 09:72D1: B7 05        	lda	[<L3+current_record_1],Y
  1596 09:72D3: C9 EC        	cmp	#<$ec
  1597 09:72D5: C2 20        	rep	#$20
  1598                        	longa	on
  1599 09:72D7: F0 03        	beq	L20
  1600 09:72D9: 82 25 00     	brl	L10026
  1601                        L20:
  Thu Dec  3 2020 22:25                                                Page 32


  1602                        	.line	128
  1603 09:72DC: D4 1E        	pei	<L2+record_length_rtn_0+2
  1604 09:72DE: D4 1C        	pei	<L2+record_length_rtn_0
  1605 09:72E0: D4 14        	pei	<L2+segment_offset_0
  1606 09:72E2: D4 12        	pei	<L2+file_offset_0
  1607 09:72E4: D4 0E        	pei	<L2+data_0+2
  1608 09:72E6: D4 0C        	pei	<L2+data_0
  1609 09:72E8: 22 2F 87 09  	jsl	~~DecodeRecordZEXPR
  1610 09:72EC: 85 01        	sta	<R0
  1611 09:72EE: 86 03        	stx	<R0+2
  1612 09:72F0: A5 01        	lda	<R0
  1613 09:72F2: A0 0B 00     	ldy	#$b
  1614 09:72F5: 97 05        	sta	[<L3+current_record_1],Y
  1615 09:72F7: A5 03        	lda	<R0+2
  1616 09:72F9: A0 0D 00     	ldy	#$d
  1617 09:72FC: 97 05        	sta	[<L3+current_record_1],Y
  1618                        ;  else if(current_record->operation_code == 0xED)
  1619 09:72FE: 82 DD 02     	brl	L10027
  1620                        L10026:
  1621                        	.line	129
  1622                        ;    current_record->record_data = DecodeRecordBEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  1623 09:7301: E2 20        	sep	#$20
  1624                        	longa	off
  1625 09:7303: A0 08 00     	ldy	#$8
  1626 09:7306: B7 05        	lda	[<L3+current_record_1],Y
  1627 09:7308: C9 ED        	cmp	#<$ed
  1628 09:730A: C2 20        	rep	#$20
  1629                        	longa	on
  1630 09:730C: F0 03        	beq	L21
  1631 09:730E: 82 25 00     	brl	L10028
  1632                        L21:
  1633                        	.line	130
  1634 09:7311: D4 1E        	pei	<L2+record_length_rtn_0+2
  1635 09:7313: D4 1C        	pei	<L2+record_length_rtn_0
  1636 09:7315: D4 14        	pei	<L2+segment_offset_0
  1637 09:7317: D4 12        	pei	<L2+file_offset_0
  1638 09:7319: D4 0E        	pei	<L2+data_0+2
  1639 09:731B: D4 0C        	pei	<L2+data_0
  1640 09:731D: 22 AA 87 09  	jsl	~~DecodeRecordBEXPR
  1641 09:7321: 85 01        	sta	<R0
  1642 09:7323: 86 03        	stx	<R0+2
  1643 09:7325: A5 01        	lda	<R0
  1644 09:7327: A0 0B 00     	ldy	#$b
  1645 09:732A: 97 05        	sta	[<L3+current_record_1],Y
  1646 09:732C: A5 03        	lda	<R0+2
  1647 09:732E: A0 0D 00     	ldy	#$d
  1648 09:7331: 97 05        	sta	[<L3+current_record_1],Y
  1649                        ;  else if(current_record->operation_code == 0xEE)
  1650 09:7333: 82 A8 02     	brl	L10029
  1651                        L10028:
  1652                        	.line	131
  1653                        ;    current_record->record_data = DecodeRecordREL
                    EXPR(data,file_offset,segment_offset,record_length_rtn);
  1654 09:7336: E2 20        	sep	#$20
  1655                        	longa	off
  1656 09:7338: A0 08 00     	ldy	#$8
  1657 09:733B: B7 05        	lda	[<L3+current_record_1],Y
  Thu Dec  3 2020 22:25                                                Page 33


  1658 09:733D: C9 EE        	cmp	#<$ee
  1659 09:733F: C2 20        	rep	#$20
  1660                        	longa	on
  1661 09:7341: F0 03        	beq	L22
  1662 09:7343: 82 25 00     	brl	L10030
  1663                        L22:
  1664                        	.line	132
  1665 09:7346: D4 1E        	pei	<L2+record_length_rtn_0+2
  1666 09:7348: D4 1C        	pei	<L2+record_length_rtn_0
  1667 09:734A: D4 14        	pei	<L2+segment_offset_0
  1668 09:734C: D4 12        	pei	<L2+file_offset_0
  1669 09:734E: D4 0E        	pei	<L2+data_0+2
  1670 09:7350: D4 0C        	pei	<L2+data_0
  1671 09:7352: 22 25 88 09  	jsl	~~DecodeRecordRELEXPR
  1672 09:7356: 85 01        	sta	<R0
  1673 09:7358: 86 03        	stx	<R0+2
  1674 09:735A: A5 01        	lda	<R0
  1675 09:735C: A0 0B 00     	ldy	#$b
  1676 09:735F: 97 05        	sta	[<L3+current_record_1],Y
  1677 09:7361: A5 03        	lda	<R0+2
  1678 09:7363: A0 0D 00     	ldy	#$d
  1679 09:7366: 97 05        	sta	[<L3+current_record_1],Y
  1680                        ;  else if(current_record->operation_code == 0xEF)
  1681 09:7368: 82 73 02     	brl	L10031
  1682                        L10030:
  1683                        	.line	133
  1684                        ;    current_record->record_data = DecodeRecordLOC
                    AL(data,file_offset,segment_offset,record_length_rtn);
  1685 09:736B: E2 20        	sep	#$20
  1686                        	longa	off
  1687 09:736D: A0 08 00     	ldy	#$8
  1688 09:7370: B7 05        	lda	[<L3+current_record_1],Y
  1689 09:7372: C9 EF        	cmp	#<$ef
  1690 09:7374: C2 20        	rep	#$20
  1691                        	longa	on
  1692 09:7376: F0 03        	beq	L23
  1693 09:7378: 82 25 00     	brl	L10032
  1694                        L23:
  1695                        	.line	134
  1696 09:737B: D4 1E        	pei	<L2+record_length_rtn_0+2
  1697 09:737D: D4 1C        	pei	<L2+record_length_rtn_0
  1698 09:737F: D4 14        	pei	<L2+segment_offset_0
  1699 09:7381: D4 12        	pei	<L2+file_offset_0
  1700 09:7383: D4 0E        	pei	<L2+data_0+2
  1701 09:7385: D4 0C        	pei	<L2+data_0
  1702 09:7387: 22 A0 88 09  	jsl	~~DecodeRecordLOCAL
  1703 09:738B: 85 01        	sta	<R0
  1704 09:738D: 86 03        	stx	<R0+2
  1705 09:738F: A5 01        	lda	<R0
  1706 09:7391: A0 0B 00     	ldy	#$b
  1707 09:7394: 97 05        	sta	[<L3+current_record_1],Y
  1708 09:7396: A5 03        	lda	<R0+2
  1709 09:7398: A0 0D 00     	ldy	#$d
  1710 09:739B: 97 05        	sta	[<L3+current_record_1],Y
  1711                        ;  else if(current_record->operation_code == 0xF0)
  1712 09:739D: 82 3E 02     	brl	L10033
  1713                        L10032:
  1714                        	.line	135
  Thu Dec  3 2020 22:25                                                Page 34


  1715                        ;    current_record->record_data = DecodeRecordEQU
                    (data,file_offset,segment_offset,record_length_rtn);
  1716 09:73A0: E2 20        	sep	#$20
  1717                        	longa	off
  1718 09:73A2: A0 08 00     	ldy	#$8
  1719 09:73A5: B7 05        	lda	[<L3+current_record_1],Y
  1720 09:73A7: C9 F0        	cmp	#<$f0
  1721 09:73A9: C2 20        	rep	#$20
  1722                        	longa	on
  1723 09:73AB: F0 03        	beq	L24
  1724 09:73AD: 82 25 00     	brl	L10034
  1725                        L24:
  1726                        	.line	136
  1727 09:73B0: D4 1E        	pei	<L2+record_length_rtn_0+2
  1728 09:73B2: D4 1C        	pei	<L2+record_length_rtn_0
  1729 09:73B4: D4 14        	pei	<L2+segment_offset_0
  1730 09:73B6: D4 12        	pei	<L2+file_offset_0
  1731 09:73B8: D4 0E        	pei	<L2+data_0+2
  1732 09:73BA: D4 0C        	pei	<L2+data_0
  1733 09:73BC: 22 1B 89 09  	jsl	~~DecodeRecordEQU
  1734 09:73C0: 85 01        	sta	<R0
  1735 09:73C2: 86 03        	stx	<R0+2
  1736 09:73C4: A5 01        	lda	<R0
  1737 09:73C6: A0 0B 00     	ldy	#$b
  1738 09:73C9: 97 05        	sta	[<L3+current_record_1],Y
  1739 09:73CB: A5 03        	lda	<R0+2
  1740 09:73CD: A0 0D 00     	ldy	#$d
  1741 09:73D0: 97 05        	sta	[<L3+current_record_1],Y
  1742                        ;  else if(current_record->operation_code == 0xF1)
  1743 09:73D2: 82 09 02     	brl	L10035
  1744                        L10034:
  1745                        	.line	137
  1746                        ;    current_record->record_data = DecodeRecordDS(
                    data,file_offset,segment_offset,record_length_rtn);
  1747 09:73D5: E2 20        	sep	#$20
  1748                        	longa	off
  1749 09:73D7: A0 08 00     	ldy	#$8
  1750 09:73DA: B7 05        	lda	[<L3+current_record_1],Y
  1751 09:73DC: C9 F1        	cmp	#<$f1
  1752 09:73DE: C2 20        	rep	#$20
  1753                        	longa	on
  1754 09:73E0: F0 03        	beq	L25
  1755 09:73E2: 82 25 00     	brl	L10036
  1756                        L25:
  1757                        	.line	138
  1758 09:73E5: D4 1E        	pei	<L2+record_length_rtn_0+2
  1759 09:73E7: D4 1C        	pei	<L2+record_length_rtn_0
  1760 09:73E9: D4 14        	pei	<L2+segment_offset_0
  1761 09:73EB: D4 12        	pei	<L2+file_offset_0
  1762 09:73ED: D4 0E        	pei	<L2+data_0+2
  1763 09:73EF: D4 0C        	pei	<L2+data_0
  1764 09:73F1: 22 96 89 09  	jsl	~~DecodeRecordDS
  1765 09:73F5: 85 01        	sta	<R0
  1766 09:73F7: 86 03        	stx	<R0+2
  1767 09:73F9: A5 01        	lda	<R0
  1768 09:73FB: A0 0B 00     	ldy	#$b
  1769 09:73FE: 97 05        	sta	[<L3+current_record_1],Y
  1770 09:7400: A5 03        	lda	<R0+2
  Thu Dec  3 2020 22:25                                                Page 35


  1771 09:7402: A0 0D 00     	ldy	#$d
  1772 09:7405: 97 05        	sta	[<L3+current_record_1],Y
  1773                        ;  else if(current_record->operation_code == 0xF2)
  1774 09:7407: 82 D4 01     	brl	L10037
  1775                        L10036:
  1776                        	.line	139
  1777                        ;    current_record->record_data = DecodeRecordLCO
                    NST(data,file_offset,segment_offset,record_length_rtn);
  1778 09:740A: E2 20        	sep	#$20
  1779                        	longa	off
  1780 09:740C: A0 08 00     	ldy	#$8
  1781 09:740F: B7 05        	lda	[<L3+current_record_1],Y
  1782 09:7411: C9 F2        	cmp	#<$f2
  1783 09:7413: C2 20        	rep	#$20
  1784                        	longa	on
  1785 09:7415: F0 03        	beq	L26
  1786 09:7417: 82 25 00     	brl	L10038
  1787                        L26:
  1788                        	.line	140
  1789 09:741A: D4 1E        	pei	<L2+record_length_rtn_0+2
  1790 09:741C: D4 1C        	pei	<L2+record_length_rtn_0
  1791 09:741E: D4 14        	pei	<L2+segment_offset_0
  1792 09:7420: D4 12        	pei	<L2+file_offset_0
  1793 09:7422: D4 0E        	pei	<L2+data_0+2
  1794 09:7424: D4 0C        	pei	<L2+data_0
  1795 09:7426: 22 43 8A 09  	jsl	~~DecodeRecordLCONST
  1796 09:742A: 85 01        	sta	<R0
  1797 09:742C: 86 03        	stx	<R0+2
  1798 09:742E: A5 01        	lda	<R0
  1799 09:7430: A0 0B 00     	ldy	#$b
  1800 09:7433: 97 05        	sta	[<L3+current_record_1],Y
  1801 09:7435: A5 03        	lda	<R0+2
  1802 09:7437: A0 0D 00     	ldy	#$d
  1803 09:743A: 97 05        	sta	[<L3+current_record_1],Y
  1804                        ;  else if(current_record->operation_code == 0xF3)
  1805 09:743C: 82 9F 01     	brl	L10039
  1806                        L10038:
  1807                        	.line	141
  1808                        ;    current_record->record_data = DecodeRecordLEX
                    PR(data,file_offset,segment_offset,record_length_rtn);
  1809 09:743F: E2 20        	sep	#$20
  1810                        	longa	off
  1811 09:7441: A0 08 00     	ldy	#$8
  1812 09:7444: B7 05        	lda	[<L3+current_record_1],Y
  1813 09:7446: C9 F3        	cmp	#<$f3
  1814 09:7448: C2 20        	rep	#$20
  1815                        	longa	on
  1816 09:744A: F0 03        	beq	L27
  1817 09:744C: 82 25 00     	brl	L10040
  1818                        L27:
  1819                        	.line	142
  1820 09:744F: D4 1E        	pei	<L2+record_length_rtn_0+2
  1821 09:7451: D4 1C        	pei	<L2+record_length_rtn_0
  1822 09:7453: D4 14        	pei	<L2+segment_offset_0
  1823 09:7455: D4 12        	pei	<L2+file_offset_0
  1824 09:7457: D4 0E        	pei	<L2+data_0+2
  1825 09:7459: D4 0C        	pei	<L2+data_0
  1826 09:745B: 22 6D 8B 09  	jsl	~~DecodeRecordLEXPR
  Thu Dec  3 2020 22:25                                                Page 36


  1827 09:745F: 85 01        	sta	<R0
  1828 09:7461: 86 03        	stx	<R0+2
  1829 09:7463: A5 01        	lda	<R0
  1830 09:7465: A0 0B 00     	ldy	#$b
  1831 09:7468: 97 05        	sta	[<L3+current_record_1],Y
  1832 09:746A: A5 03        	lda	<R0+2
  1833 09:746C: A0 0D 00     	ldy	#$d
  1834 09:746F: 97 05        	sta	[<L3+current_record_1],Y
  1835                        ;  else if(current_record->operation_code == 0xF4)
  1836 09:7471: 82 6A 01     	brl	L10041
  1837                        L10040:
  1838                        	.line	143
  1839                        ;    current_record->record_data = DecodeRecordENT
                    RY(data,file_offset,segment_offset,record_length_rtn);
  1840 09:7474: E2 20        	sep	#$20
  1841                        	longa	off
  1842 09:7476: A0 08 00     	ldy	#$8
  1843 09:7479: B7 05        	lda	[<L3+current_record_1],Y
  1844 09:747B: C9 F4        	cmp	#<$f4
  1845 09:747D: C2 20        	rep	#$20
  1846                        	longa	on
  1847 09:747F: F0 03        	beq	L28
  1848 09:7481: 82 25 00     	brl	L10042
  1849                        L28:
  1850                        	.line	144
  1851 09:7484: D4 1E        	pei	<L2+record_length_rtn_0+2
  1852 09:7486: D4 1C        	pei	<L2+record_length_rtn_0
  1853 09:7488: D4 14        	pei	<L2+segment_offset_0
  1854 09:748A: D4 12        	pei	<L2+file_offset_0
  1855 09:748C: D4 0E        	pei	<L2+data_0+2
  1856 09:748E: D4 0C        	pei	<L2+data_0
  1857 09:7490: 22 E8 8B 09  	jsl	~~DecodeRecordENTRY
  1858 09:7494: 85 01        	sta	<R0
  1859 09:7496: 86 03        	stx	<R0+2
  1860 09:7498: A5 01        	lda	<R0
  1861 09:749A: A0 0B 00     	ldy	#$b
  1862 09:749D: 97 05        	sta	[<L3+current_record_1],Y
  1863 09:749F: A5 03        	lda	<R0+2
  1864 09:74A1: A0 0D 00     	ldy	#$d
  1865 09:74A4: 97 05        	sta	[<L3+current_record_1],Y
  1866                        ;  else if(current_record->operation_code == 0xF5)
  1867 09:74A6: 82 35 01     	brl	L10043
  1868                        L10042:
  1869                        	.line	145
  1870                        ;    current_record->record_data = DecodeRecordcRE
                    LOC(data,file_offset,segment_offset,record_length_rtn);
  1871 09:74A9: E2 20        	sep	#$20
  1872                        	longa	off
  1873 09:74AB: A0 08 00     	ldy	#$8
  1874 09:74AE: B7 05        	lda	[<L3+current_record_1],Y
  1875 09:74B0: C9 F5        	cmp	#<$f5
  1876 09:74B2: C2 20        	rep	#$20
  1877                        	longa	on
  1878 09:74B4: F0 03        	beq	L29
  1879 09:74B6: 82 25 00     	brl	L10044
  1880                        L29:
  1881                        	.line	146
  1882 09:74B9: D4 1E        	pei	<L2+record_length_rtn_0+2
  Thu Dec  3 2020 22:25                                                Page 37


  1883 09:74BB: D4 1C        	pei	<L2+record_length_rtn_0
  1884 09:74BD: D4 14        	pei	<L2+segment_offset_0
  1885 09:74BF: D4 12        	pei	<L2+file_offset_0
  1886 09:74C1: D4 0E        	pei	<L2+data_0+2
  1887 09:74C3: D4 0C        	pei	<L2+data_0
  1888 09:74C5: 22 63 8C 09  	jsl	~~DecodeRecordcRELOC
  1889 09:74C9: 85 01        	sta	<R0
  1890 09:74CB: 86 03        	stx	<R0+2
  1891 09:74CD: A5 01        	lda	<R0
  1892 09:74CF: A0 0B 00     	ldy	#$b
  1893 09:74D2: 97 05        	sta	[<L3+current_record_1],Y
  1894 09:74D4: A5 03        	lda	<R0+2
  1895 09:74D6: A0 0D 00     	ldy	#$d
  1896 09:74D9: 97 05        	sta	[<L3+current_record_1],Y
  1897                        ;  else if(current_record->operation_code == 0xF6)
  1898 09:74DB: 82 00 01     	brl	L10045
  1899                        L10044:
  1900                        	.line	147
  1901                        ;    current_record->record_data = DecodeRecordcIN
                    TERSEG(data,file_offset,segment_offset,record_length_rtn);
  1902 09:74DE: E2 20        	sep	#$20
  1903                        	longa	off
  1904 09:74E0: A0 08 00     	ldy	#$8
  1905 09:74E3: B7 05        	lda	[<L3+current_record_1],Y
  1906 09:74E5: C9 F6        	cmp	#<$f6
  1907 09:74E7: C2 20        	rep	#$20
  1908                        	longa	on
  1909 09:74E9: F0 03        	beq	L30
  1910 09:74EB: 82 25 00     	brl	L10046
  1911                        L30:
  1912                        	.line	148
  1913 09:74EE: D4 1E        	pei	<L2+record_length_rtn_0+2
  1914 09:74F0: D4 1C        	pei	<L2+record_length_rtn_0
  1915 09:74F2: D4 14        	pei	<L2+segment_offset_0
  1916 09:74F4: D4 12        	pei	<L2+file_offset_0
  1917 09:74F6: D4 0E        	pei	<L2+data_0+2
  1918 09:74F8: D4 0C        	pei	<L2+data_0
  1919 09:74FA: 22 A4 8D 09  	jsl	~~DecodeRecordcINTERSEG
  1920 09:74FE: 85 01        	sta	<R0
  1921 09:7500: 86 03        	stx	<R0+2
  1922 09:7502: A5 01        	lda	<R0
  1923 09:7504: A0 0B 00     	ldy	#$b
  1924 09:7507: 97 05        	sta	[<L3+current_record_1],Y
  1925 09:7509: A5 03        	lda	<R0+2
  1926 09:750B: A0 0D 00     	ldy	#$d
  1927 09:750E: 97 05        	sta	[<L3+current_record_1],Y
  1928                        ;  else if(current_record->operation_code == 0xF7)
  1929 09:7510: 82 CB 00     	brl	L10047
  1930                        L10046:
  1931                        	.line	149
  1932                        ;    current_record->record_data = DecodeRecordSUP
                    ER(data,file_offset,segment_offset,lconst,lconst_length,reco
                    rd_length_rtn,current_segment);
  1933 09:7513: E2 20        	sep	#$20
  1934                        	longa	off
  1935 09:7515: A0 08 00     	ldy	#$8
  1936 09:7518: B7 05        	lda	[<L3+current_record_1],Y
  1937 09:751A: C9 F7        	cmp	#<$f7
  Thu Dec  3 2020 22:25                                                Page 38


  1938 09:751C: C2 20        	rep	#$20
  1939                        	longa	on
  1940 09:751E: F0 03        	beq	L31
  1941 09:7520: 82 2F 00     	brl	L10048
  1942                        L31:
  1943                        	.line	150
  1944 09:7523: D4 22        	pei	<L2+current_segment_0+2
  1945 09:7525: D4 20        	pei	<L2+current_segment_0
  1946 09:7527: D4 1E        	pei	<L2+record_length_rtn_0+2
  1947 09:7529: D4 1C        	pei	<L2+record_length_rtn_0
  1948 09:752B: D4 1A        	pei	<L2+lconst_length_0
  1949 09:752D: D4 18        	pei	<L2+lconst_0+2
  1950 09:752F: D4 16        	pei	<L2+lconst_0
  1951 09:7531: D4 14        	pei	<L2+segment_offset_0
  1952 09:7533: D4 12        	pei	<L2+file_offset_0
  1953 09:7535: D4 0E        	pei	<L2+data_0+2
  1954 09:7537: D4 0C        	pei	<L2+data_0
  1955 09:7539: 22 0A 8F 09  	jsl	~~DecodeRecordSUPER
  1956 09:753D: 85 01        	sta	<R0
  1957 09:753F: 86 03        	stx	<R0+2
  1958 09:7541: A5 01        	lda	<R0
  1959 09:7543: A0 0B 00     	ldy	#$b
  1960 09:7546: 97 05        	sta	[<L3+current_record_1],Y
  1961 09:7548: A5 03        	lda	<R0+2
  1962 09:754A: A0 0D 00     	ldy	#$d
  1963 09:754D: 97 05        	sta	[<L3+current_record_1],Y
  1964                        ;  else if(current_record->operation_code == 0xFB)
  1965 09:754F: 82 8C 00     	brl	L10049
  1966                        L10048:
  1967                        	.line	151
  1968                        ;    current_record->record_data = DecodeRecordGen
                    eral(data,file_offset,segment_offset,record_length_rtn);
  1969 09:7552: E2 20        	sep	#$20
  1970                        	longa	off
  1971 09:7554: A0 08 00     	ldy	#$8
  1972 09:7557: B7 05        	lda	[<L3+current_record_1],Y
  1973 09:7559: C9 FB        	cmp	#<$fb
  1974 09:755B: C2 20        	rep	#$20
  1975                        	longa	on
  1976 09:755D: F0 03        	beq	L32
  1977 09:755F: 82 25 00     	brl	L10050
  1978                        L32:
  1979                        	.line	152
  1980 09:7562: D4 1E        	pei	<L2+record_length_rtn_0+2
  1981 09:7564: D4 1C        	pei	<L2+record_length_rtn_0
  1982 09:7566: D4 14        	pei	<L2+segment_offset_0
  1983 09:7568: D4 12        	pei	<L2+file_offset_0
  1984 09:756A: D4 0E        	pei	<L2+data_0+2
  1985 09:756C: D4 0C        	pei	<L2+data_0
  1986 09:756E: 22 FD 95 09  	jsl	~~DecodeRecordGeneral
  1987 09:7572: 85 01        	sta	<R0
  1988 09:7574: 86 03        	stx	<R0+2
  1989 09:7576: A5 01        	lda	<R0
  1990 09:7578: A0 0B 00     	ldy	#$b
  1991 09:757B: 97 05        	sta	[<L3+current_record_1],Y
  1992 09:757D: A5 03        	lda	<R0+2
  1993 09:757F: A0 0D 00     	ldy	#$d
  1994 09:7582: 97 05        	sta	[<L3+current_record_1],Y
  Thu Dec  3 2020 22:25                                                Page 39


  1995                        ;  else if(current_record->operation_code >= 0xFC 
                    && current_record->operation_code <= 0xFF)
  1996 09:7584: 82 57 00     	brl	L10051
  1997                        L10050:
  1998                        	.line	153
  1999                        ;    current_record->record_data = DecodeRecordExp
                    erimental(data,file_offset,segment_offset,record_length_rtn)
                    ;
  2000 09:7587: E2 20        	sep	#$20
  2001                        	longa	off
  2002 09:7589: A0 08 00     	ldy	#$8
  2003 09:758C: B7 05        	lda	[<L3+current_record_1],Y
  2004 09:758E: C9 FC        	cmp	#<$fc
  2005 09:7590: C2 20        	rep	#$20
  2006                        	longa	on
  2007 09:7592: B0 03        	bcs	L33
  2008 09:7594: 82 35 00     	brl	L10052
  2009                        L33:
  2010 09:7597: E2 20        	sep	#$20
  2011                        	longa	off
  2012 09:7599: A9 FF        	lda	#$ff
  2013 09:759B: A0 08 00     	ldy	#$8
  2014 09:759E: D7 05        	cmp	[<L3+current_record_1],Y
  2015 09:75A0: C2 20        	rep	#$20
  2016                        	longa	on
  2017 09:75A2: B0 03        	bcs	L34
  2018 09:75A4: 82 25 00     	brl	L10052
  2019                        L34:
  2020                        	.line	154
  2021 09:75A7: D4 1E        	pei	<L2+record_length_rtn_0+2
  2022 09:75A9: D4 1C        	pei	<L2+record_length_rtn_0
  2023 09:75AB: D4 14        	pei	<L2+segment_offset_0
  2024 09:75AD: D4 12        	pei	<L2+file_offset_0
  2025 09:75AF: D4 0E        	pei	<L2+data_0+2
  2026 09:75B1: D4 0C        	pei	<L2+data_0
  2027 09:75B3: 22 78 96 09  	jsl	~~DecodeRecordExperimental
  2028 09:75B7: 85 01        	sta	<R0
  2029 09:75B9: 86 03        	stx	<R0+2
  2030 09:75BB: A5 01        	lda	<R0
  2031 09:75BD: A0 0B 00     	ldy	#$b
  2032 09:75C0: 97 05        	sta	[<L3+current_record_1],Y
  2033 09:75C2: A5 03        	lda	<R0+2
  2034 09:75C4: A0 0D 00     	ldy	#$d
  2035 09:75C7: 97 05        	sta	[<L3+current_record_1],Y
  2036                        ;  else
  2037 09:75C9: 82 12 00     	brl	L10053
  2038                        L10052:
  2039                        ;    {
  2040                        	.line	156
  2041                        ;      /* Operation Code inconnu */
  2042                        ;      ////printf("Error : Unknow Record Operation
                     Code %02X for Segment #%02X at offset %d.\n",current_record
                    ->operation_code,segment_num,file_offset);
  2043                        ;      mem_free_record(current_record);
  2044                        	.line	159
  2045 09:75CC: D4 07        	pei	<L3+current_record_1+2
  2046 09:75CE: D4 05        	pei	<L3+current_record_1
  2047 09:75D0: 22 5A 7B 09  	jsl	~~mem_free_record
  Thu Dec  3 2020 22:25                                                Page 40


  2048                        ;      return(NULL);
  2049                        	.line	160
  2050 09:75D4: A9 00 00     	lda	#$0
  2051 09:75D7: AA           	tax
  2052 09:75D8: A9 00 00     	lda	#$0
  2053 09:75DB: 82 48 FA     	brl	L6
  2054                        ;    }
  2055                        	.line	161
  2056                        L10053:
  2057                        L10051:
  2058                        L10049:
  2059                        L10047:
  2060                        L10045:
  2061                        L10043:
  2062                        L10041:
  2063                        L10039:
  2064                        L10037:
  2065                        L10035:
  2066                        L10033:
  2067                        L10031:
  2068                        L10029:
  2069                        L10027:
  2070                        L10025:
  2071                        L10023:
  2072                        L10021:
  2073                        L10019:
  2074                        L10017:
  2075                        L10015:
  2076                        L10013:
  2077                        L10011:
  2078                        L10009:
  2079                        L10007:
  2080                        L10005:
  2081                        L10003:
  2082                        ;
  2083                        ;  /* Valide le Record */
  2084                        ;  if(current_record->record_data == NULL)
  2085                        	.line	164
  2086                        ;    {
  2087 09:75DE: A0 0B 00     	ldy	#$b
  2088 09:75E1: B7 05        	lda	[<L3+current_record_1],Y
  2089 09:75E3: A0 0D 00     	ldy	#$d
  2090 09:75E6: 17 05        	ora	[<L3+current_record_1],Y
  2091 09:75E8: F0 03        	beq	L35
  2092 09:75EA: 82 12 00     	brl	L10054
  2093                        L35:
  2094                        	.line	165
  2095                        ;      mem_free_record(current_record);
  2096                        	.line	166
  2097 09:75ED: D4 07        	pei	<L3+current_record_1+2
  2098 09:75EF: D4 05        	pei	<L3+current_record_1
  2099 09:75F1: 22 5A 7B 09  	jsl	~~mem_free_record
  2100                        ;      return(NULL);
  2101                        	.line	167
  2102 09:75F5: A9 00 00     	lda	#$0
  2103 09:75F8: AA           	tax
  2104 09:75F9: A9 00 00     	lda	#$0
  2105 09:75FC: 82 27 FA     	brl	L6
  Thu Dec  3 2020 22:25                                                Page 41


  2106                        ;    }
  2107                        	.line	168
  2108                        ;
  2109                        ;  /* Longueur du Record */
  2110                        ;  current_record->length = *record_length_rtn;
  2111                        L10054:
  2112                        	.line	171
  2113 09:75FF: A7 1C        	lda	[<L2+record_length_rtn_0]
  2114 09:7601: A0 09 00     	ldy	#$9
  2115 09:7604: 97 05        	sta	[<L3+current_record_1],Y
  2116                        ;
  2117                        ;  /* Renvoie le Record */
  2118                        ;  return(current_record);
  2119                        	.line	174
  2120 09:7606: A6 07        	ldx	<L3+current_record_1+2
  2121 09:7608: A5 05        	lda	<L3+current_record_1
  2122 09:760A: 82 19 FA     	brl	L6
  2123                        ;}
  2124                        	.line	175
  2125                        	.endblock	175
  2126             00000008   L2	equ	8
  2127             00000005   L3	equ	5
  2128 09:760D:              	ends
  2129                        	efunc
  2130                        	.endfunc	175,5,8
  2131                        	.line	175
  2132                        ;
  2133                        ;
  2134                        ;/************************************************
                    ***********************************/
  2135                        ;/*  GetRecordName() :  Revoie le nom d'un Record 
                    par rapport à son Operation Code. */
  2136                        ;/************************************************
                    ***********************************/
  2137                        ;char *GetRecordName(BYTE operation_code, BYTE Rec
                    ordType)
  2138                        ;{
  2139                        	.line	181
  2140                        	.line	182
  2141                        	LOADER
  2142                        	xdef	~~GetRecordName
  2143                        	func
  2144                        	.function	182
  2145                        ~~GetRecordName:
  2146                        	longa	on
  2147                        	longi	on
  2148 09:760D: 3B           	tsc
  2149 09:760E: 38           	sec
  2150 09:760F: E9 08 00     	sbc	#L36
  2151 09:7612: 1B           	tcs
  2152 09:7613: 0B           	phd
  2153 09:7614: 5B           	tcd
  2154             00000004   operation_code_0	set	4
  2155             00000006   RecordType_0	set	6
  2156                        	.block	182
  2157                        ;  static char record_name[256];
  2158                        	udata
  2159                        L10055:
  Thu Dec  3 2020 22:25                                                Page 42


  2160 00:0000:              	ds	256
  2161 00:0100:              	ends
  2162                        ;
  2163                        ;  /* Renvoi le nom du Record */
  2164                        ;  if(operation_code == 0x00)
  2165                        	.sym	record_name,10055,110,19,0,256
  2166                        	.sym	operation_code,4,14,6,8
  2167                        	.sym	RecordType,6,14,6,8
  2168                        	.line	186
  2169                        ;    strcpy(record_name,"END");
  2170 09:7615: A5 0C        	lda	<L36+operation_code_0
  2171 09:7617: 29 FF 00     	and	#$ff
  2172 09:761A: F0 03        	beq	L39
  2173 09:761C: 82 1B 00     	brl	L10056
  2174                        L39:
  2175                        	.line	187
  2176 09:761F: F4 xx xx     	pea	#^L1
  2177 09:7622: F4 xx xx     	pea	#<L1
  2178 09:7625: A9 xx xx     	lda	#<L10055
  2179 09:7628: 85 01        	sta	<R0
  2180                        	xref	_BEG_DATA
  2181 09:762A: A9 xx xx     	lda	#_BEG_DATA>>16
  2182 09:762D: 85 03        	sta	<R0+2
  2183 09:762F: D4 03        	pei	<R0+2
  2184 09:7631: D4 01        	pei	<R0
  2185 09:7633: 22 xx xx xx  	jsl	~~strcpy
  2186                        ;  else if(operation_code >= 0x01 && operation_cod
                    e <= 0xDF)
  2187 09:7637: 82 20 04     	brl	L10057
  2188                        L10056:
  2189                        	.line	188
  2190                        ;    strcpy(record_name,"CONST");
  2191 09:763A: E2 20        	sep	#$20
  2192                        	longa	off
  2193 09:763C: A5 0C        	lda	<L36+operation_code_0
  2194 09:763E: C9 01        	cmp	#<$1
  2195 09:7640: C2 20        	rep	#$20
  2196                        	longa	on
  2197 09:7642: B0 03        	bcs	L40
  2198 09:7644: 82 28 00     	brl	L10058
  2199                        L40:
  2200 09:7647: E2 20        	sep	#$20
  2201                        	longa	off
  2202 09:7649: A9 DF        	lda	#$df
  2203 09:764B: C5 0C        	cmp	<L36+operation_code_0
  2204 09:764D: C2 20        	rep	#$20
  2205                        	longa	on
  2206 09:764F: B0 03        	bcs	L41
  2207 09:7651: 82 1B 00     	brl	L10058
  2208                        L41:
  2209                        	.line	189
  2210 09:7654: F4 xx xx     	pea	#^L1+4
  2211 09:7657: F4 xx xx     	pea	#<L1+4
  2212 09:765A: A9 xx xx     	lda	#<L10055
  2213 09:765D: 85 01        	sta	<R0
  2214                        	xref	_BEG_DATA
  2215 09:765F: A9 xx xx     	lda	#_BEG_DATA>>16
  2216 09:7662: 85 03        	sta	<R0+2
  Thu Dec  3 2020 22:25                                                Page 43


  2217 09:7664: D4 03        	pei	<R0+2
  2218 09:7666: D4 01        	pei	<R0
  2219 09:7668: 22 xx xx xx  	jsl	~~strcpy
  2220                        ;  else if(operation_code == 0xE0)
  2221 09:766C: 82 EB 03     	brl	L10059
  2222                        L10058:
  2223                        	.line	190
  2224                        ;    strcpy(record_name,"ALIGN");
  2225 09:766F: E2 20        	sep	#$20
  2226                        	longa	off
  2227 09:7671: A5 0C        	lda	<L36+operation_code_0
  2228 09:7673: C9 E0        	cmp	#<$e0
  2229 09:7675: C2 20        	rep	#$20
  2230                        	longa	on
  2231 09:7677: F0 03        	beq	L42
  2232 09:7679: 82 1B 00     	brl	L10060
  2233                        L42:
  2234                        	.line	191
  2235 09:767C: F4 xx xx     	pea	#^L1+10
  2236 09:767F: F4 xx xx     	pea	#<L1+10
  2237 09:7682: A9 xx xx     	lda	#<L10055
  2238 09:7685: 85 01        	sta	<R0
  2239                        	xref	_BEG_DATA
  2240 09:7687: A9 xx xx     	lda	#_BEG_DATA>>16
  2241 09:768A: 85 03        	sta	<R0+2
  2242 09:768C: D4 03        	pei	<R0+2
  2243 09:768E: D4 01        	pei	<R0
  2244 09:7690: 22 xx xx xx  	jsl	~~strcpy
  2245                        ;  else if(operation_code == 0xE1)
  2246 09:7694: 82 C3 03     	brl	L10061
  2247                        L10060:
  2248                        	.line	192
  2249                        ;    strcpy(record_name,"ORG");
  2250 09:7697: E2 20        	sep	#$20
  2251                        	longa	off
  2252 09:7699: A5 0C        	lda	<L36+operation_code_0
  2253 09:769B: C9 E1        	cmp	#<$e1
  2254 09:769D: C2 20        	rep	#$20
  2255                        	longa	on
  2256 09:769F: F0 03        	beq	L43
  2257 09:76A1: 82 1B 00     	brl	L10062
  2258                        L43:
  2259                        	.line	193
  2260 09:76A4: F4 xx xx     	pea	#^L1+16
  2261 09:76A7: F4 xx xx     	pea	#<L1+16
  2262 09:76AA: A9 xx xx     	lda	#<L10055
  2263 09:76AD: 85 01        	sta	<R0
  2264                        	xref	_BEG_DATA
  2265 09:76AF: A9 xx xx     	lda	#_BEG_DATA>>16
  2266 09:76B2: 85 03        	sta	<R0+2
  2267 09:76B4: D4 03        	pei	<R0+2
  2268 09:76B6: D4 01        	pei	<R0
  2269 09:76B8: 22 xx xx xx  	jsl	~~strcpy
  2270                        ;  else if(operation_code == 0xE2)
  2271 09:76BC: 82 9B 03     	brl	L10063
  2272                        L10062:
  2273                        	.line	194
  2274                        ;    strcpy(record_name,"RELOC");
  Thu Dec  3 2020 22:25                                                Page 44


  2275 09:76BF: E2 20        	sep	#$20
  2276                        	longa	off
  2277 09:76C1: A5 0C        	lda	<L36+operation_code_0
  2278 09:76C3: C9 E2        	cmp	#<$e2
  2279 09:76C5: C2 20        	rep	#$20
  2280                        	longa	on
  2281 09:76C7: F0 03        	beq	L44
  2282 09:76C9: 82 1B 00     	brl	L10064
  2283                        L44:
  2284                        	.line	195
  2285 09:76CC: F4 xx xx     	pea	#^L1+20
  2286 09:76CF: F4 xx xx     	pea	#<L1+20
  2287 09:76D2: A9 xx xx     	lda	#<L10055
  2288 09:76D5: 85 01        	sta	<R0
  2289                        	xref	_BEG_DATA
  2290 09:76D7: A9 xx xx     	lda	#_BEG_DATA>>16
  2291 09:76DA: 85 03        	sta	<R0+2
  2292 09:76DC: D4 03        	pei	<R0+2
  2293 09:76DE: D4 01        	pei	<R0
  2294 09:76E0: 22 xx xx xx  	jsl	~~strcpy
  2295                        ;  else if(operation_code == 0xE3)
  2296 09:76E4: 82 73 03     	brl	L10065
  2297                        L10064:
  2298                        	.line	196
  2299                        ;    strcpy(record_name,"INTERSEG");
  2300 09:76E7: E2 20        	sep	#$20
  2301                        	longa	off
  2302 09:76E9: A5 0C        	lda	<L36+operation_code_0
  2303 09:76EB: C9 E3        	cmp	#<$e3
  2304 09:76ED: C2 20        	rep	#$20
  2305                        	longa	on
  2306 09:76EF: F0 03        	beq	L45
  2307 09:76F1: 82 1B 00     	brl	L10066
  2308                        L45:
  2309                        	.line	197
  2310 09:76F4: F4 xx xx     	pea	#^L1+26
  2311 09:76F7: F4 xx xx     	pea	#<L1+26
  2312 09:76FA: A9 xx xx     	lda	#<L10055
  2313 09:76FD: 85 01        	sta	<R0
  2314                        	xref	_BEG_DATA
  2315 09:76FF: A9 xx xx     	lda	#_BEG_DATA>>16
  2316 09:7702: 85 03        	sta	<R0+2
  2317 09:7704: D4 03        	pei	<R0+2
  2318 09:7706: D4 01        	pei	<R0
  2319 09:7708: 22 xx xx xx  	jsl	~~strcpy
  2320                        ;  else if(operation_code == 0xE4)
  2321 09:770C: 82 4B 03     	brl	L10067
  2322                        L10066:
  2323                        	.line	198
  2324                        ;    strcpy(record_name,"USING");
  2325 09:770F: E2 20        	sep	#$20
  2326                        	longa	off
  2327 09:7711: A5 0C        	lda	<L36+operation_code_0
  2328 09:7713: C9 E4        	cmp	#<$e4
  2329 09:7715: C2 20        	rep	#$20
  2330                        	longa	on
  2331 09:7717: F0 03        	beq	L46
  2332 09:7719: 82 1B 00     	brl	L10068
  Thu Dec  3 2020 22:25                                                Page 45


  2333                        L46:
  2334                        	.line	199
  2335 09:771C: F4 xx xx     	pea	#^L1+35
  2336 09:771F: F4 xx xx     	pea	#<L1+35
  2337 09:7722: A9 xx xx     	lda	#<L10055
  2338 09:7725: 85 01        	sta	<R0
  2339                        	xref	_BEG_DATA
  2340 09:7727: A9 xx xx     	lda	#_BEG_DATA>>16
  2341 09:772A: 85 03        	sta	<R0+2
  2342 09:772C: D4 03        	pei	<R0+2
  2343 09:772E: D4 01        	pei	<R0
  2344 09:7730: 22 xx xx xx  	jsl	~~strcpy
  2345                        ;  else if(operation_code == 0xE5)
  2346 09:7734: 82 23 03     	brl	L10069
  2347                        L10068:
  2348                        	.line	200
  2349                        ;    strcpy(record_name,"STRONG");
  2350 09:7737: E2 20        	sep	#$20
  2351                        	longa	off
  2352 09:7739: A5 0C        	lda	<L36+operation_code_0
  2353 09:773B: C9 E5        	cmp	#<$e5
  2354 09:773D: C2 20        	rep	#$20
  2355                        	longa	on
  2356 09:773F: F0 03        	beq	L47
  2357 09:7741: 82 1B 00     	brl	L10070
  2358                        L47:
  2359                        	.line	201
  2360 09:7744: F4 xx xx     	pea	#^L1+41
  2361 09:7747: F4 xx xx     	pea	#<L1+41
  2362 09:774A: A9 xx xx     	lda	#<L10055
  2363 09:774D: 85 01        	sta	<R0
  2364                        	xref	_BEG_DATA
  2365 09:774F: A9 xx xx     	lda	#_BEG_DATA>>16
  2366 09:7752: 85 03        	sta	<R0+2
  2367 09:7754: D4 03        	pei	<R0+2
  2368 09:7756: D4 01        	pei	<R0
  2369 09:7758: 22 xx xx xx  	jsl	~~strcpy
  2370                        ;  else if(operation_code == 0xE6)
  2371 09:775C: 82 FB 02     	brl	L10071
  2372                        L10070:
  2373                        	.line	202
  2374                        ;    strcpy(record_name,"GLOBAL");
  2375 09:775F: E2 20        	sep	#$20
  2376                        	longa	off
  2377 09:7761: A5 0C        	lda	<L36+operation_code_0
  2378 09:7763: C9 E6        	cmp	#<$e6
  2379 09:7765: C2 20        	rep	#$20
  2380                        	longa	on
  2381 09:7767: F0 03        	beq	L48
  2382 09:7769: 82 1B 00     	brl	L10072
  2383                        L48:
  2384                        	.line	203
  2385 09:776C: F4 xx xx     	pea	#^L1+48
  2386 09:776F: F4 xx xx     	pea	#<L1+48
  2387 09:7772: A9 xx xx     	lda	#<L10055
  2388 09:7775: 85 01        	sta	<R0
  2389                        	xref	_BEG_DATA
  2390 09:7777: A9 xx xx     	lda	#_BEG_DATA>>16
  Thu Dec  3 2020 22:25                                                Page 46


  2391 09:777A: 85 03        	sta	<R0+2
  2392 09:777C: D4 03        	pei	<R0+2
  2393 09:777E: D4 01        	pei	<R0
  2394 09:7780: 22 xx xx xx  	jsl	~~strcpy
  2395                        ;  else if(operation_code == 0xE7)
  2396 09:7784: 82 D3 02     	brl	L10073
  2397                        L10072:
  2398                        	.line	204
  2399                        ;    strcpy(record_name,"GEQU");
  2400 09:7787: E2 20        	sep	#$20
  2401                        	longa	off
  2402 09:7789: A5 0C        	lda	<L36+operation_code_0
  2403 09:778B: C9 E7        	cmp	#<$e7
  2404 09:778D: C2 20        	rep	#$20
  2405                        	longa	on
  2406 09:778F: F0 03        	beq	L49
  2407 09:7791: 82 1B 00     	brl	L10074
  2408                        L49:
  2409                        	.line	205
  2410 09:7794: F4 xx xx     	pea	#^L1+55
  2411 09:7797: F4 xx xx     	pea	#<L1+55
  2412 09:779A: A9 xx xx     	lda	#<L10055
  2413 09:779D: 85 01        	sta	<R0
  2414                        	xref	_BEG_DATA
  2415 09:779F: A9 xx xx     	lda	#_BEG_DATA>>16
  2416 09:77A2: 85 03        	sta	<R0+2
  2417 09:77A4: D4 03        	pei	<R0+2
  2418 09:77A6: D4 01        	pei	<R0
  2419 09:77A8: 22 xx xx xx  	jsl	~~strcpy
  2420                        ;  else if(operation_code == 0xE8)
  2421 09:77AC: 82 AB 02     	brl	L10075
  2422                        L10074:
  2423                        	.line	206
  2424                        ;    strcpy(record_name,"MEM");
  2425 09:77AF: E2 20        	sep	#$20
  2426                        	longa	off
  2427 09:77B1: A5 0C        	lda	<L36+operation_code_0
  2428 09:77B3: C9 E8        	cmp	#<$e8
  2429 09:77B5: C2 20        	rep	#$20
  2430                        	longa	on
  2431 09:77B7: F0 03        	beq	L50
  2432 09:77B9: 82 1B 00     	brl	L10076
  2433                        L50:
  2434                        	.line	207
  2435 09:77BC: F4 xx xx     	pea	#^L1+60
  2436 09:77BF: F4 xx xx     	pea	#<L1+60
  2437 09:77C2: A9 xx xx     	lda	#<L10055
  2438 09:77C5: 85 01        	sta	<R0
  2439                        	xref	_BEG_DATA
  2440 09:77C7: A9 xx xx     	lda	#_BEG_DATA>>16
  2441 09:77CA: 85 03        	sta	<R0+2
  2442 09:77CC: D4 03        	pei	<R0+2
  2443 09:77CE: D4 01        	pei	<R0
  2444 09:77D0: 22 xx xx xx  	jsl	~~strcpy
  2445                        ;  else if(operation_code == 0xEB)
  2446 09:77D4: 82 83 02     	brl	L10077
  2447                        L10076:
  2448                        	.line	208
  Thu Dec  3 2020 22:25                                                Page 47


  2449                        ;    strcpy(record_name,"EXPR");
  2450 09:77D7: E2 20        	sep	#$20
  2451                        	longa	off
  2452 09:77D9: A5 0C        	lda	<L36+operation_code_0
  2453 09:77DB: C9 EB        	cmp	#<$eb
  2454 09:77DD: C2 20        	rep	#$20
  2455                        	longa	on
  2456 09:77DF: F0 03        	beq	L51
  2457 09:77E1: 82 1B 00     	brl	L10078
  2458                        L51:
  2459                        	.line	209
  2460 09:77E4: F4 xx xx     	pea	#^L1+64
  2461 09:77E7: F4 xx xx     	pea	#<L1+64
  2462 09:77EA: A9 xx xx     	lda	#<L10055
  2463 09:77ED: 85 01        	sta	<R0
  2464                        	xref	_BEG_DATA
  2465 09:77EF: A9 xx xx     	lda	#_BEG_DATA>>16
  2466 09:77F2: 85 03        	sta	<R0+2
  2467 09:77F4: D4 03        	pei	<R0+2
  2468 09:77F6: D4 01        	pei	<R0
  2469 09:77F8: 22 xx xx xx  	jsl	~~strcpy
  2470                        ;  else if(operation_code == 0xEC)
  2471 09:77FC: 82 5B 02     	brl	L10079
  2472                        L10078:
  2473                        	.line	210
  2474                        ;    strcpy(record_name,"ZEXPR");
  2475 09:77FF: E2 20        	sep	#$20
  2476                        	longa	off
  2477 09:7801: A5 0C        	lda	<L36+operation_code_0
  2478 09:7803: C9 EC        	cmp	#<$ec
  2479 09:7805: C2 20        	rep	#$20
  2480                        	longa	on
  2481 09:7807: F0 03        	beq	L52
  2482 09:7809: 82 1B 00     	brl	L10080
  2483                        L52:
  2484                        	.line	211
  2485 09:780C: F4 xx xx     	pea	#^L1+69
  2486 09:780F: F4 xx xx     	pea	#<L1+69
  2487 09:7812: A9 xx xx     	lda	#<L10055
  2488 09:7815: 85 01        	sta	<R0
  2489                        	xref	_BEG_DATA
  2490 09:7817: A9 xx xx     	lda	#_BEG_DATA>>16
  2491 09:781A: 85 03        	sta	<R0+2
  2492 09:781C: D4 03        	pei	<R0+2
  2493 09:781E: D4 01        	pei	<R0
  2494 09:7820: 22 xx xx xx  	jsl	~~strcpy
  2495                        ;  else if(operation_code == 0xED)
  2496 09:7824: 82 33 02     	brl	L10081
  2497                        L10080:
  2498                        	.line	212
  2499                        ;    strcpy(record_name,"BEXPR");
  2500 09:7827: E2 20        	sep	#$20
  2501                        	longa	off
  2502 09:7829: A5 0C        	lda	<L36+operation_code_0
  2503 09:782B: C9 ED        	cmp	#<$ed
  2504 09:782D: C2 20        	rep	#$20
  2505                        	longa	on
  2506 09:782F: F0 03        	beq	L53
  Thu Dec  3 2020 22:25                                                Page 48


  2507 09:7831: 82 1B 00     	brl	L10082
  2508                        L53:
  2509                        	.line	213
  2510 09:7834: F4 xx xx     	pea	#^L1+75
  2511 09:7837: F4 xx xx     	pea	#<L1+75
  2512 09:783A: A9 xx xx     	lda	#<L10055
  2513 09:783D: 85 01        	sta	<R0
  2514                        	xref	_BEG_DATA
  2515 09:783F: A9 xx xx     	lda	#_BEG_DATA>>16
  2516 09:7842: 85 03        	sta	<R0+2
  2517 09:7844: D4 03        	pei	<R0+2
  2518 09:7846: D4 01        	pei	<R0
  2519 09:7848: 22 xx xx xx  	jsl	~~strcpy
  2520                        ;  else if(operation_code == 0xEE)
  2521 09:784C: 82 0B 02     	brl	L10083
  2522                        L10082:
  2523                        	.line	214
  2524                        ;    strcpy(record_name,"RELEXPR");
  2525 09:784F: E2 20        	sep	#$20
  2526                        	longa	off
  2527 09:7851: A5 0C        	lda	<L36+operation_code_0
  2528 09:7853: C9 EE        	cmp	#<$ee
  2529 09:7855: C2 20        	rep	#$20
  2530                        	longa	on
  2531 09:7857: F0 03        	beq	L54
  2532 09:7859: 82 1B 00     	brl	L10084
  2533                        L54:
  2534                        	.line	215
  2535 09:785C: F4 xx xx     	pea	#^L1+81
  2536 09:785F: F4 xx xx     	pea	#<L1+81
  2537 09:7862: A9 xx xx     	lda	#<L10055
  2538 09:7865: 85 01        	sta	<R0
  2539                        	xref	_BEG_DATA
  2540 09:7867: A9 xx xx     	lda	#_BEG_DATA>>16
  2541 09:786A: 85 03        	sta	<R0+2
  2542 09:786C: D4 03        	pei	<R0+2
  2543 09:786E: D4 01        	pei	<R0
  2544 09:7870: 22 xx xx xx  	jsl	~~strcpy
  2545                        ;  else if(operation_code == 0xEF)
  2546 09:7874: 82 E3 01     	brl	L10085
  2547                        L10084:
  2548                        	.line	216
  2549                        ;    strcpy(record_name,"LOCAL");
  2550 09:7877: E2 20        	sep	#$20
  2551                        	longa	off
  2552 09:7879: A5 0C        	lda	<L36+operation_code_0
  2553 09:787B: C9 EF        	cmp	#<$ef
  2554 09:787D: C2 20        	rep	#$20
  2555                        	longa	on
  2556 09:787F: F0 03        	beq	L55
  2557 09:7881: 82 1B 00     	brl	L10086
  2558                        L55:
  2559                        	.line	217
  2560 09:7884: F4 xx xx     	pea	#^L1+89
  2561 09:7887: F4 xx xx     	pea	#<L1+89
  2562 09:788A: A9 xx xx     	lda	#<L10055
  2563 09:788D: 85 01        	sta	<R0
  2564                        	xref	_BEG_DATA
  Thu Dec  3 2020 22:25                                                Page 49


  2565 09:788F: A9 xx xx     	lda	#_BEG_DATA>>16
  2566 09:7892: 85 03        	sta	<R0+2
  2567 09:7894: D4 03        	pei	<R0+2
  2568 09:7896: D4 01        	pei	<R0
  2569 09:7898: 22 xx xx xx  	jsl	~~strcpy
  2570                        ;  else if(operation_code == 0xF0)
  2571 09:789C: 82 BB 01     	brl	L10087
  2572                        L10086:
  2573                        	.line	218
  2574                        ;    strcpy(record_name,"EQU");
  2575 09:789F: E2 20        	sep	#$20
  2576                        	longa	off
  2577 09:78A1: A5 0C        	lda	<L36+operation_code_0
  2578 09:78A3: C9 F0        	cmp	#<$f0
  2579 09:78A5: C2 20        	rep	#$20
  2580                        	longa	on
  2581 09:78A7: F0 03        	beq	L56
  2582 09:78A9: 82 1B 00     	brl	L10088
  2583                        L56:
  2584                        	.line	219
  2585 09:78AC: F4 xx xx     	pea	#^L1+95
  2586 09:78AF: F4 xx xx     	pea	#<L1+95
  2587 09:78B2: A9 xx xx     	lda	#<L10055
  2588 09:78B5: 85 01        	sta	<R0
  2589                        	xref	_BEG_DATA
  2590 09:78B7: A9 xx xx     	lda	#_BEG_DATA>>16
  2591 09:78BA: 85 03        	sta	<R0+2
  2592 09:78BC: D4 03        	pei	<R0+2
  2593 09:78BE: D4 01        	pei	<R0
  2594 09:78C0: 22 xx xx xx  	jsl	~~strcpy
  2595                        ;  else if(operation_code == 0xF1)
  2596 09:78C4: 82 93 01     	brl	L10089
  2597                        L10088:
  2598                        	.line	220
  2599                        ;    strcpy(record_name,"DS");
  2600 09:78C7: E2 20        	sep	#$20
  2601                        	longa	off
  2602 09:78C9: A5 0C        	lda	<L36+operation_code_0
  2603 09:78CB: C9 F1        	cmp	#<$f1
  2604 09:78CD: C2 20        	rep	#$20
  2605                        	longa	on
  2606 09:78CF: F0 03        	beq	L57
  2607 09:78D1: 82 1B 00     	brl	L10090
  2608                        L57:
  2609                        	.line	221
  2610 09:78D4: F4 xx xx     	pea	#^L1+99
  2611 09:78D7: F4 xx xx     	pea	#<L1+99
  2612 09:78DA: A9 xx xx     	lda	#<L10055
  2613 09:78DD: 85 01        	sta	<R0
  2614                        	xref	_BEG_DATA
  2615 09:78DF: A9 xx xx     	lda	#_BEG_DATA>>16
  2616 09:78E2: 85 03        	sta	<R0+2
  2617 09:78E4: D4 03        	pei	<R0+2
  2618 09:78E6: D4 01        	pei	<R0
  2619 09:78E8: 22 xx xx xx  	jsl	~~strcpy
  2620                        ;  else if(operation_code == 0xF2)
  2621 09:78EC: 82 6B 01     	brl	L10091
  2622                        L10090:
  Thu Dec  3 2020 22:25                                                Page 50


  2623                        	.line	222
  2624                        ;    strcpy(record_name,"LCONST");
  2625 09:78EF: E2 20        	sep	#$20
  2626                        	longa	off
  2627 09:78F1: A5 0C        	lda	<L36+operation_code_0
  2628 09:78F3: C9 F2        	cmp	#<$f2
  2629 09:78F5: C2 20        	rep	#$20
  2630                        	longa	on
  2631 09:78F7: F0 03        	beq	L58
  2632 09:78F9: 82 1B 00     	brl	L10092
  2633                        L58:
  2634                        	.line	223
  2635 09:78FC: F4 xx xx     	pea	#^L1+102
  2636 09:78FF: F4 xx xx     	pea	#<L1+102
  2637 09:7902: A9 xx xx     	lda	#<L10055
  2638 09:7905: 85 01        	sta	<R0
  2639                        	xref	_BEG_DATA
  2640 09:7907: A9 xx xx     	lda	#_BEG_DATA>>16
  2641 09:790A: 85 03        	sta	<R0+2
  2642 09:790C: D4 03        	pei	<R0+2
  2643 09:790E: D4 01        	pei	<R0
  2644 09:7910: 22 xx xx xx  	jsl	~~strcpy
  2645                        ;  else if(operation_code == 0xF3)
  2646 09:7914: 82 43 01     	brl	L10093
  2647                        L10092:
  2648                        	.line	224
  2649                        ;    strcpy(record_name,"LEXPR");
  2650 09:7917: E2 20        	sep	#$20
  2651                        	longa	off
  2652 09:7919: A5 0C        	lda	<L36+operation_code_0
  2653 09:791B: C9 F3        	cmp	#<$f3
  2654 09:791D: C2 20        	rep	#$20
  2655                        	longa	on
  2656 09:791F: F0 03        	beq	L59
  2657 09:7921: 82 1B 00     	brl	L10094
  2658                        L59:
  2659                        	.line	225
  2660 09:7924: F4 xx xx     	pea	#^L1+109
  2661 09:7927: F4 xx xx     	pea	#<L1+109
  2662 09:792A: A9 xx xx     	lda	#<L10055
  2663 09:792D: 85 01        	sta	<R0
  2664                        	xref	_BEG_DATA
  2665 09:792F: A9 xx xx     	lda	#_BEG_DATA>>16
  2666 09:7932: 85 03        	sta	<R0+2
  2667 09:7934: D4 03        	pei	<R0+2
  2668 09:7936: D4 01        	pei	<R0
  2669 09:7938: 22 xx xx xx  	jsl	~~strcpy
  2670                        ;  else if(operation_code == 0xF4)
  2671 09:793C: 82 1B 01     	brl	L10095
  2672                        L10094:
  2673                        	.line	226
  2674                        ;    strcpy(record_name,"ENTRY");
  2675 09:793F: E2 20        	sep	#$20
  2676                        	longa	off
  2677 09:7941: A5 0C        	lda	<L36+operation_code_0
  2678 09:7943: C9 F4        	cmp	#<$f4
  2679 09:7945: C2 20        	rep	#$20
  2680                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 51


  2681 09:7947: F0 03        	beq	L60
  2682 09:7949: 82 1B 00     	brl	L10096
  2683                        L60:
  2684                        	.line	227
  2685 09:794C: F4 xx xx     	pea	#^L1+115
  2686 09:794F: F4 xx xx     	pea	#<L1+115
  2687 09:7952: A9 xx xx     	lda	#<L10055
  2688 09:7955: 85 01        	sta	<R0
  2689                        	xref	_BEG_DATA
  2690 09:7957: A9 xx xx     	lda	#_BEG_DATA>>16
  2691 09:795A: 85 03        	sta	<R0+2
  2692 09:795C: D4 03        	pei	<R0+2
  2693 09:795E: D4 01        	pei	<R0
  2694 09:7960: 22 xx xx xx  	jsl	~~strcpy
  2695                        ;  else if(operation_code == 0xF5)
  2696 09:7964: 82 F3 00     	brl	L10097
  2697                        L10096:
  2698                        	.line	228
  2699                        ;    strcpy(record_name,"cRELOC");
  2700 09:7967: E2 20        	sep	#$20
  2701                        	longa	off
  2702 09:7969: A5 0C        	lda	<L36+operation_code_0
  2703 09:796B: C9 F5        	cmp	#<$f5
  2704 09:796D: C2 20        	rep	#$20
  2705                        	longa	on
  2706 09:796F: F0 03        	beq	L61
  2707 09:7971: 82 1B 00     	brl	L10098
  2708                        L61:
  2709                        	.line	229
  2710 09:7974: F4 xx xx     	pea	#^L1+121
  2711 09:7977: F4 xx xx     	pea	#<L1+121
  2712 09:797A: A9 xx xx     	lda	#<L10055
  2713 09:797D: 85 01        	sta	<R0
  2714                        	xref	_BEG_DATA
  2715 09:797F: A9 xx xx     	lda	#_BEG_DATA>>16
  2716 09:7982: 85 03        	sta	<R0+2
  2717 09:7984: D4 03        	pei	<R0+2
  2718 09:7986: D4 01        	pei	<R0
  2719 09:7988: 22 xx xx xx  	jsl	~~strcpy
  2720                        ;  else if(operation_code == 0xF6)
  2721 09:798C: 82 CB 00     	brl	L10099
  2722                        L10098:
  2723                        	.line	230
  2724                        ;    strcpy(record_name,"cINTERSEG");
  2725 09:798F: E2 20        	sep	#$20
  2726                        	longa	off
  2727 09:7991: A5 0C        	lda	<L36+operation_code_0
  2728 09:7993: C9 F6        	cmp	#<$f6
  2729 09:7995: C2 20        	rep	#$20
  2730                        	longa	on
  2731 09:7997: F0 03        	beq	L62
  2732 09:7999: 82 1B 00     	brl	L10100
  2733                        L62:
  2734                        	.line	231
  2735 09:799C: F4 xx xx     	pea	#^L1+128
  2736 09:799F: F4 xx xx     	pea	#<L1+128
  2737 09:79A2: A9 xx xx     	lda	#<L10055
  2738 09:79A5: 85 01        	sta	<R0
  Thu Dec  3 2020 22:25                                                Page 52


  2739                        	xref	_BEG_DATA
  2740 09:79A7: A9 xx xx     	lda	#_BEG_DATA>>16
  2741 09:79AA: 85 03        	sta	<R0+2
  2742 09:79AC: D4 03        	pei	<R0+2
  2743 09:79AE: D4 01        	pei	<R0
  2744 09:79B0: 22 xx xx xx  	jsl	~~strcpy
  2745                        ;  else if(operation_code == 0xF7)
  2746 09:79B4: 82 A3 00     	brl	L10101
  2747                        L10100:
  2748                        	.line	232
  2749                        ;    strcpy(record_name,GetSUPERType(RecordType));
  2750 09:79B7: E2 20        	sep	#$20
  2751                        	longa	off
  2752 09:79B9: A5 0C        	lda	<L36+operation_code_0
  2753 09:79BB: C9 F7        	cmp	#<$f7
  2754 09:79BD: C2 20        	rep	#$20
  2755                        	longa	on
  2756 09:79BF: F0 03        	beq	L63
  2757 09:79C1: 82 21 00     	brl	L10102
  2758                        L63:
  2759                        	.line	233
  2760 09:79C4: D4 0E        	pei	<L36+RecordType_0
  2761 09:79C6: 22 7A 7A 09  	jsl	~~GetSUPERType
  2762 09:79CA: 85 01        	sta	<R0
  2763 09:79CC: 86 03        	stx	<R0+2
  2764 09:79CE: DA           	phx
  2765 09:79CF: 48           	pha
  2766 09:79D0: A9 xx xx     	lda	#<L10055
  2767 09:79D3: 85 05        	sta	<R1
  2768                        	xref	_BEG_DATA
  2769 09:79D5: A9 xx xx     	lda	#_BEG_DATA>>16
  2770 09:79D8: 85 07        	sta	<R1+2
  2771 09:79DA: D4 07        	pei	<R1+2
  2772 09:79DC: D4 05        	pei	<R1
  2773 09:79DE: 22 xx xx xx  	jsl	~~strcpy
  2774                        ;  else if(operation_code == 0xFB)
  2775 09:79E2: 82 75 00     	brl	L10103
  2776                        L10102:
  2777                        	.line	234
  2778                        ;    strcpy(record_name,"General");
  2779 09:79E5: E2 20        	sep	#$20
  2780                        	longa	off
  2781 09:79E7: A5 0C        	lda	<L36+operation_code_0
  2782 09:79E9: C9 FB        	cmp	#<$fb
  2783 09:79EB: C2 20        	rep	#$20
  2784                        	longa	on
  2785 09:79ED: F0 03        	beq	L64
  2786 09:79EF: 82 1B 00     	brl	L10104
  2787                        L64:
  2788                        	.line	235
  2789 09:79F2: F4 xx xx     	pea	#^L1+138
  2790 09:79F5: F4 xx xx     	pea	#<L1+138
  2791 09:79F8: A9 xx xx     	lda	#<L10055
  2792 09:79FB: 85 01        	sta	<R0
  2793                        	xref	_BEG_DATA
  2794 09:79FD: A9 xx xx     	lda	#_BEG_DATA>>16
  2795 09:7A00: 85 03        	sta	<R0+2
  2796 09:7A02: D4 03        	pei	<R0+2
  Thu Dec  3 2020 22:25                                                Page 53


  2797 09:7A04: D4 01        	pei	<R0
  2798 09:7A06: 22 xx xx xx  	jsl	~~strcpy
  2799                        ;  else if(operation_code >= 0xFC && operation_cod
                    e <= 0xFF)
  2800 09:7A0A: 82 4D 00     	brl	L10105
  2801                        L10104:
  2802                        	.line	236
  2803                        ;    strcpy(record_name,"Experimental");
  2804 09:7A0D: E2 20        	sep	#$20
  2805                        	longa	off
  2806 09:7A0F: A5 0C        	lda	<L36+operation_code_0
  2807 09:7A11: C9 FC        	cmp	#<$fc
  2808 09:7A13: C2 20        	rep	#$20
  2809                        	longa	on
  2810 09:7A15: B0 03        	bcs	L65
  2811 09:7A17: 82 28 00     	brl	L10106
  2812                        L65:
  2813 09:7A1A: E2 20        	sep	#$20
  2814                        	longa	off
  2815 09:7A1C: A9 FF        	lda	#$ff
  2816 09:7A1E: C5 0C        	cmp	<L36+operation_code_0
  2817 09:7A20: C2 20        	rep	#$20
  2818                        	longa	on
  2819 09:7A22: B0 03        	bcs	L66
  2820 09:7A24: 82 1B 00     	brl	L10106
  2821                        L66:
  2822                        	.line	237
  2823 09:7A27: F4 xx xx     	pea	#^L1+146
  2824 09:7A2A: F4 xx xx     	pea	#<L1+146
  2825 09:7A2D: A9 xx xx     	lda	#<L10055
  2826 09:7A30: 85 01        	sta	<R0
  2827                        	xref	_BEG_DATA
  2828 09:7A32: A9 xx xx     	lda	#_BEG_DATA>>16
  2829 09:7A35: 85 03        	sta	<R0+2
  2830 09:7A37: D4 03        	pei	<R0+2
  2831 09:7A39: D4 01        	pei	<R0
  2832 09:7A3B: 22 xx xx xx  	jsl	~~strcpy
  2833                        ;  else
  2834 09:7A3F: 82 18 00     	brl	L10107
  2835                        L10106:
  2836                        ;    strcpy(record_name,"Unknown");
  2837                        	.line	239
  2838 09:7A42: F4 xx xx     	pea	#^L1+159
  2839 09:7A45: F4 xx xx     	pea	#<L1+159
  2840 09:7A48: A9 xx xx     	lda	#<L10055
  2841 09:7A4B: 85 01        	sta	<R0
  2842                        	xref	_BEG_DATA
  2843 09:7A4D: A9 xx xx     	lda	#_BEG_DATA>>16
  2844 09:7A50: 85 03        	sta	<R0+2
  2845 09:7A52: D4 03        	pei	<R0+2
  2846 09:7A54: D4 01        	pei	<R0
  2847 09:7A56: 22 xx xx xx  	jsl	~~strcpy
  2848                        L10107:
  2849                        L10105:
  2850                        L10103:
  2851                        L10101:
  2852                        L10099:
  2853                        L10097:
  Thu Dec  3 2020 22:25                                                Page 54


  2854                        L10095:
  2855                        L10093:
  2856                        L10091:
  2857                        L10089:
  2858                        L10087:
  2859                        L10085:
  2860                        L10083:
  2861                        L10081:
  2862                        L10079:
  2863                        L10077:
  2864                        L10075:
  2865                        L10073:
  2866                        L10071:
  2867                        L10069:
  2868                        L10067:
  2869                        L10065:
  2870                        L10063:
  2871                        L10061:
  2872                        L10059:
  2873                        L10057:
  2874                        ;
  2875                        ;  /* Renvoie le nom */
  2876                        ;  return(&record_name[0]);
  2877                        	.line	242
  2878 09:7A5A: A9 xx xx     	lda	#<L10055
  2879 09:7A5D: 85 01        	sta	<R0
  2880                        	xref	_BEG_DATA
  2881 09:7A5F: A9 xx xx     	lda	#_BEG_DATA>>16
  2882 09:7A62: 85 03        	sta	<R0+2
  2883 09:7A64: A6 03        	ldx	<R0+2
  2884 09:7A66: A5 01        	lda	<R0
  2885                        L67:
  2886 09:7A68: A8           	tay
  2887 09:7A69: A5 0A        	lda	<L36+2
  2888 09:7A6B: 85 0E        	sta	<L36+2+4
  2889 09:7A6D: A5 09        	lda	<L36+1
  2890 09:7A6F: 85 0D        	sta	<L36+1+4
  2891 09:7A71: 2B           	pld
  2892 09:7A72: 3B           	tsc
  2893 09:7A73: 18           	clc
  2894 09:7A74: 69 0C 00     	adc	#L36+4
  2895 09:7A77: 1B           	tcs
  2896 09:7A78: 98           	tya
  2897 09:7A79: 6B           	rtl
  2898                        ;}
  2899                        	.line	243
  2900                        	.endblock	243
  2901             00000008   L36	equ	8
  2902             00000009   L37	equ	9
  2903 09:7A7A:              	ends
  2904                        	efunc
  2905                        	.endfunc	243,9,8
  2906                        	.line	243
  2907                        	data
  2908                        L1:
  2909 00:0000: 45 4E 44 00  	db	$45,$4E,$44,$00,$43,$4F,$4E,$53,$54,$00,
                    $41,$4C,$49,$47,$4E
       00:0004: 43 4F 4E 53 
  Thu Dec  3 2020 22:25                                                Page 55


       00:0008: 54 00 41 4C 
       00:000C: 49 47 4E 
  2910 00:000F: 00 4F 52 47  	db	$00,$4F,$52,$47,$00,$52,$45,$4C,$4F,$43,
                    $00,$49,$4E,$54,$45
       00:0013: 00 52 45 4C 
       00:0017: 4F 43 00 49 
       00:001B: 4E 54 45 
  2911 00:001E: 52 53 45 47  	db	$52,$53,$45,$47,$00,$55,$53,$49,$4E,$47,
                    $00,$53,$54,$52,$4F
       00:0022: 00 55 53 49 
       00:0026: 4E 47 00 53 
       00:002A: 54 52 4F 
  2912 00:002D: 4E 47 00 47  	db	$4E,$47,$00,$47,$4C,$4F,$42,$41,$4C,$00,
                    $47,$45,$51,$55,$00
       00:0031: 4C 4F 42 41 
       00:0035: 4C 00 47 45 
       00:0039: 51 55 00 
  2913 00:003C: 4D 45 4D 00  	db	$4D,$45,$4D,$00,$45,$58,$50,$52,$00,$5A,
                    $45,$58,$50,$52,$00
       00:0040: 45 58 50 52 
       00:0044: 00 5A 45 58 
       00:0048: 50 52 00 
  2914 00:004B: 42 45 58 50  	db	$42,$45,$58,$50,$52,$00,$52,$45,$4C,$45,
                    $58,$50,$52,$00,$4C
       00:004F: 52 00 52 45 
       00:0053: 4C 45 58 50 
       00:0057: 52 00 4C 
  2915 00:005A: 4F 43 41 4C  	db	$4F,$43,$41,$4C,$00,$45,$51,$55,$00,$44,
                    $53,$00,$4C,$43,$4F
       00:005E: 00 45 51 55 
       00:0062: 00 44 53 00 
       00:0066: 4C 43 4F 
  2916 00:0069: 4E 53 54 00  	db	$4E,$53,$54,$00,$4C,$45,$58,$50,$52,$00,
                    $45,$4E,$54,$52,$59
       00:006D: 4C 45 58 50 
       00:0071: 52 00 45 4E 
       00:0075: 54 52 59 
  2917 00:0078: 00 63 52 45  	db	$00,$63,$52,$45,$4C,$4F,$43,$00,$63,$49,
                    $4E,$54,$45,$52,$53
       00:007C: 4C 4F 43 00 
       00:0080: 63 49 4E 54 
       00:0084: 45 52 53 
  2918 00:0087: 45 47 00 47  	db	$45,$47,$00,$47,$65,$6E,$65,$72,$61,$6C,
                    $00,$45,$78,$70,$65
       00:008B: 65 6E 65 72 
       00:008F: 61 6C 00 45 
       00:0093: 78 70 65 
  2919 00:0096: 72 69 6D 65  	db	$72,$69,$6D,$65,$6E,$74,$61,$6C,$00,$55,
                    $6E,$6B,$6E,$6F,$77
       00:009A: 6E 74 61 6C 
       00:009E: 00 55 6E 6B 
       00:00A2: 6E 6F 77 
  2920 00:00A5: 6E 00        	db	$6E,$00
  2921 00:00A7:              	ends
  2922                        ;
  2923                        ;
  2924                        ;/************************************************
                    ******/
  Thu Dec  3 2020 22:25                                                Page 56


  2925                        ;/*  GetSUPERType() :  Décode le Type du Record SU
                    PER. */
  2926                        ;/************************************************
                    ******/
  2927                        ;char *GetSUPERType(BYTE Type)
  2928                        ;{
  2929                        	.line	249
  2930                        	.line	250
  2931                        	LOADER
  2932                        	xdef	~~GetSUPERType
  2933                        	func
  2934                        	.function	250
  2935                        ~~GetSUPERType:
  2936                        	longa	on
  2937                        	longi	on
  2938 09:7A7A: 3B           	tsc
  2939 09:7A7B: 38           	sec
  2940 09:7A7C: E9 04 00     	sbc	#L69
  2941 09:7A7F: 1B           	tcs
  2942 09:7A80: 0B           	phd
  2943 09:7A81: 5B           	tcd
  2944             00000004   Type_0	set	4
  2945                        	.block	250
  2946                        ;  static char type_txt[256];
  2947                        	udata
  2948                        L10108:
  2949 00:0100:              	ds	256
  2950 00:0200:              	ends
  2951                        ;
  2952                        ;  /* On ne veut pas du Type */
  2953                        ;  if(Type == 0xFF)
  2954                        	.sym	type_txt,10108,110,19,0,256
  2955                        	.sym	Type,4,14,6,8
  2956                        	.line	254
  2957                        ;    {
  2958 09:7A82: E2 20        	sep	#$20
  2959                        	longa	off
  2960 09:7A84: A5 08        	lda	<L69+Type_0
  2961 09:7A86: C9 FF        	cmp	#<$ff
  2962 09:7A88: C2 20        	rep	#$20
  2963                        	longa	on
  2964 09:7A8A: F0 03        	beq	L72
  2965 09:7A8C: 82 38 00     	brl	L10109
  2966                        L72:
  2967                        	.line	255
  2968                        ;      strcpy(type_txt,"SUPER");
  2969                        	.line	256
  2970 09:7A8F: F4 xx xx     	pea	#^L68
  2971 09:7A92: F4 xx xx     	pea	#<L68
  2972 09:7A95: A9 xx xx     	lda	#<L10108
  2973 09:7A98: 85 01        	sta	<R0
  2974                        	xref	_BEG_DATA
  2975 09:7A9A: A9 xx xx     	lda	#_BEG_DATA>>16
  2976 09:7A9D: 85 03        	sta	<R0+2
  2977 09:7A9F: D4 03        	pei	<R0+2
  2978 09:7AA1: D4 01        	pei	<R0
  2979 09:7AA3: 22 xx xx xx  	jsl	~~strcpy
  2980                        ;      return(&type_txt[0]);
  Thu Dec  3 2020 22:25                                                Page 57


  2981                        	.line	257
  2982 09:7AA7: A9 xx xx     	lda	#<L10108
  2983 09:7AAA: 85 01        	sta	<R0
  2984                        	xref	_BEG_DATA
  2985 09:7AAC: A9 xx xx     	lda	#_BEG_DATA>>16
  2986 09:7AAF: 85 03        	sta	<R0+2
  2987 09:7AB1: A6 03        	ldx	<R0+2
  2988 09:7AB3: A5 01        	lda	<R0
  2989                        L73:
  2990 09:7AB5: A8           	tay
  2991 09:7AB6: A5 06        	lda	<L69+2
  2992 09:7AB8: 85 08        	sta	<L69+2+2
  2993 09:7ABA: A5 05        	lda	<L69+1
  2994 09:7ABC: 85 07        	sta	<L69+1+2
  2995 09:7ABE: 2B           	pld
  2996 09:7ABF: 3B           	tsc
  2997 09:7AC0: 18           	clc
  2998 09:7AC1: 69 06 00     	adc	#L69+2
  2999 09:7AC4: 1B           	tcs
  3000 09:7AC5: 98           	tya
  3001 09:7AC6: 6B           	rtl
  3002                        ;    }
  3003                        	.line	258
  3004                        ;
  3005                        ;  /** Décode le type du SUPER **/
  3006                        ;  if(Type == 0x00)
  3007                        L10109:
  3008                        	.line	261
  3009                        ;    strcpy(type_txt,"SUPER RELOC2");
  3010 09:7AC7: A5 08        	lda	<L69+Type_0
  3011 09:7AC9: 29 FF 00     	and	#$ff
  3012 09:7ACC: F0 03        	beq	L74
  3013 09:7ACE: 82 1B 00     	brl	L10110
  3014                        L74:
  3015                        	.line	262
  3016 09:7AD1: F4 xx xx     	pea	#^L68+6
  3017 09:7AD4: F4 xx xx     	pea	#<L68+6
  3018 09:7AD7: A9 xx xx     	lda	#<L10108
  3019 09:7ADA: 85 01        	sta	<R0
  3020                        	xref	_BEG_DATA
  3021 09:7ADC: A9 xx xx     	lda	#_BEG_DATA>>16
  3022 09:7ADF: 85 03        	sta	<R0+2
  3023 09:7AE1: D4 03        	pei	<R0+2
  3024 09:7AE3: D4 01        	pei	<R0
  3025 09:7AE5: 22 xx xx xx  	jsl	~~strcpy
  3026                        ;  else if(Type == 0x01)
  3027 09:7AE9: 82 5D 00     	brl	L10111
  3028                        L10110:
  3029                        	.line	263
  3030                        ;    strcpy(type_txt,"SUPER RELOC3");
  3031 09:7AEC: E2 20        	sep	#$20
  3032                        	longa	off
  3033 09:7AEE: A5 08        	lda	<L69+Type_0
  3034 09:7AF0: C9 01        	cmp	#<$1
  3035 09:7AF2: C2 20        	rep	#$20
  3036                        	longa	on
  3037 09:7AF4: F0 03        	beq	L75
  3038 09:7AF6: 82 1B 00     	brl	L10112
  Thu Dec  3 2020 22:25                                                Page 58


  3039                        L75:
  3040                        	.line	264
  3041 09:7AF9: F4 xx xx     	pea	#^L68+19
  3042 09:7AFC: F4 xx xx     	pea	#<L68+19
  3043 09:7AFF: A9 xx xx     	lda	#<L10108
  3044 09:7B02: 85 01        	sta	<R0
  3045                        	xref	_BEG_DATA
  3046 09:7B04: A9 xx xx     	lda	#_BEG_DATA>>16
  3047 09:7B07: 85 03        	sta	<R0+2
  3048 09:7B09: D4 03        	pei	<R0+2
  3049 09:7B0B: D4 01        	pei	<R0
  3050 09:7B0D: 22 xx xx xx  	jsl	~~strcpy
  3051                        ;  else if(Type >= 0x02 && Type <= 0x25)   /* 37 *
                    /
  3052 09:7B11: 82 35 00     	brl	L10113
  3053                        L10112:
  3054                        	.line	265
  3055                        ;  {
  3056 09:7B14: E2 20        	sep	#$20
  3057                        	longa	off
  3058 09:7B16: A5 08        	lda	<L69+Type_0
  3059 09:7B18: C9 02        	cmp	#<$2
  3060 09:7B1A: C2 20        	rep	#$20
  3061                        	longa	on
  3062 09:7B1C: B0 03        	bcs	L76
  3063 09:7B1E: 82 10 00     	brl	L10114
  3064                        L76:
  3065 09:7B21: E2 20        	sep	#$20
  3066                        	longa	off
  3067 09:7B23: A9 25        	lda	#$25
  3068 09:7B25: C5 08        	cmp	<L69+Type_0
  3069 09:7B27: C2 20        	rep	#$20
  3070                        	longa	on
  3071 09:7B29: B0 03        	bcs	L77
  3072 09:7B2B: 82 03 00     	brl	L10114
  3073                        L77:
  3074                        	.line	266
  3075                        ;	  //printf(type_txt,"SUPER INTERSEG%d",Type-1);
  3076                        ;
  3077                        ;  }
  3078                        	.line	269
  3079                        ;  else
  3080 09:7B2E: 82 18 00     	brl	L10115
  3081                        L10114:
  3082                        ;    strcpy(type_txt," SUPER Unknown");
  3083                        	.line	271
  3084 09:7B31: F4 xx xx     	pea	#^L68+32
  3085 09:7B34: F4 xx xx     	pea	#<L68+32
  3086 09:7B37: A9 xx xx     	lda	#<L10108
  3087 09:7B3A: 85 01        	sta	<R0
  3088                        	xref	_BEG_DATA
  3089 09:7B3C: A9 xx xx     	lda	#_BEG_DATA>>16
  3090 09:7B3F: 85 03        	sta	<R0+2
  3091 09:7B41: D4 03        	pei	<R0+2
  3092 09:7B43: D4 01        	pei	<R0
  3093 09:7B45: 22 xx xx xx  	jsl	~~strcpy
  3094                        L10115:
  3095                        L10113:
  Thu Dec  3 2020 22:25                                                Page 59


  3096                        L10111:
  3097                        ;
  3098                        ;  /* Renvoi le Texte */
  3099                        ;  return(&type_txt[0]);
  3100                        	.line	274
  3101 09:7B49: A9 xx xx     	lda	#<L10108
  3102 09:7B4C: 85 01        	sta	<R0
  3103                        	xref	_BEG_DATA
  3104 09:7B4E: A9 xx xx     	lda	#_BEG_DATA>>16
  3105 09:7B51: 85 03        	sta	<R0+2
  3106 09:7B53: A6 03        	ldx	<R0+2
  3107 09:7B55: A5 01        	lda	<R0
  3108 09:7B57: 82 5B FF     	brl	L73
  3109                        ;}
  3110                        	.line	275
  3111                        	.endblock	275
  3112             00000004   L69	equ	4
  3113             00000005   L70	equ	5
  3114 09:7B5A:              	ends
  3115                        	efunc
  3116                        	.endfunc	275,5,4
  3117                        	.line	275
  3118                        	data
  3119                        L68:
  3120 00:00A7: 53 55 50 45  	db	$53,$55,$50,$45,$52,$00,$53,$55,$50,$45,
                    $52,$20,$52,$45,$4C
       00:00AB: 52 00 53 55 
       00:00AF: 50 45 52 20 
       00:00B3: 52 45 4C 
  3121 00:00B6: 4F 43 32 00  	db	$4F,$43,$32,$00,$53,$55,$50,$45,$52,$20,
                    $52,$45,$4C,$4F,$43
       00:00BA: 53 55 50 45 
       00:00BE: 52 20 52 45 
       00:00C2: 4C 4F 43 
  3122 00:00C5: 33 00 20 53  	db	$33,$00,$20,$53,$55,$50,$45,$52,$20,$55,
                    $6E,$6B,$6E,$6F,$77
       00:00C9: 55 50 45 52 
       00:00CD: 20 55 6E 6B 
       00:00D1: 6E 6F 77 
  3123 00:00D4: 6E 00        	db	$6E,$00
  3124 00:00D6:              	ends
  3125                        ;
  3126                        ;
  3127                        ;/************************************************
                    *****************************/
  3128                        ;/*  mem_free_record() :  Libération mémoire de la
                     structure omf_body_record. */
  3129                        ;/************************************************
                    *****************************/
  3130                        ;void mem_free_record(struct omf_body_record *curr
                    ent_record)
  3131                        ;{
  3132                        	.line	281
  3133                        	.line	282
  3134                        	LOADER
  3135                        	xdef	~~mem_free_record
  3136                        	func
  3137                        	.function	282
  Thu Dec  3 2020 22:25                                                Page 60


  3138                        ~~mem_free_record:
  3139                        	longa	on
  3140                        	longi	on
  3141 09:7B5A: 3B           	tsc
  3142 09:7B5B: 38           	sec
  3143 09:7B5C: E9 00 00     	sbc	#L79
  3144 09:7B5F: 1B           	tcs
  3145 09:7B60: 0B           	phd
  3146 09:7B61: 5B           	tcd
  3147             00000004   current_record_0	set	4
  3148                        	.block	282
  3149                        ;  if(current_record)
  3150                        	.sym	current_record,4,138,6,32,67
  3151                        	.line	283
  3152                        ;    {
  3153 09:7B62: A5 04        	lda	<L79+current_record_0
  3154 09:7B64: 05 06        	ora	<L79+current_record_0+2
  3155 09:7B66: D0 03        	bne	L82
  3156 09:7B68: 82 B0 03     	brl	L10116
  3157                        L82:
  3158                        	.line	284
  3159                        ;      if(current_record->operation_code == 0x00)
  3160                        	.line	285
  3161                        ;        mem_free_END((struct record_END *) curren
                    t_record->record_data);
  3162 09:7B6B: A0 08 00     	ldy	#$8
  3163 09:7B6E: B7 04        	lda	[<L79+current_record_0],Y
  3164 09:7B70: 29 FF 00     	and	#$ff
  3165 09:7B73: F0 03        	beq	L83
  3166 09:7B75: 82 13 00     	brl	L10117
  3167                        L83:
  3168                        	.line	286
  3169 09:7B78: A0 0D 00     	ldy	#$d
  3170 09:7B7B: B7 04        	lda	[<L79+current_record_0],Y
  3171 09:7B7D: 48           	pha
  3172 09:7B7E: A0 0B 00     	ldy	#$b
  3173 09:7B81: B7 04        	lda	[<L79+current_record_0],Y
  3174 09:7B83: 48           	pha
  3175 09:7B84: 22 2D AD 09  	jsl	~~mem_free_END
  3176                        ;      else if(current_record->operation_code >= 0
                    x01 && current_record->operation_code <= 0xDF)
  3177 09:7B88: 82 88 03     	brl	L10118
  3178                        L10117:
  3179                        	.line	287
  3180                        ;        mem_free_CONST((struct record_CONST *) cu
                    rrent_record->record_data);
  3181 09:7B8B: E2 20        	sep	#$20
  3182                        	longa	off
  3183 09:7B8D: A0 08 00     	ldy	#$8
  3184 09:7B90: B7 04        	lda	[<L79+current_record_0],Y
  3185 09:7B92: C9 01        	cmp	#<$1
  3186 09:7B94: C2 20        	rep	#$20
  3187                        	longa	on
  3188 09:7B96: B0 03        	bcs	L84
  3189 09:7B98: 82 23 00     	brl	L10119
  3190                        L84:
  3191 09:7B9B: E2 20        	sep	#$20
  3192                        	longa	off
  Thu Dec  3 2020 22:25                                                Page 61


  3193 09:7B9D: A9 DF        	lda	#$df
  3194 09:7B9F: A0 08 00     	ldy	#$8
  3195 09:7BA2: D7 04        	cmp	[<L79+current_record_0],Y
  3196 09:7BA4: C2 20        	rep	#$20
  3197                        	longa	on
  3198 09:7BA6: B0 03        	bcs	L85
  3199 09:7BA8: 82 13 00     	brl	L10119
  3200                        L85:
  3201                        	.line	288
  3202 09:7BAB: A0 0D 00     	ldy	#$d
  3203 09:7BAE: B7 04        	lda	[<L79+current_record_0],Y
  3204 09:7BB0: 48           	pha
  3205 09:7BB1: A0 0B 00     	ldy	#$b
  3206 09:7BB4: B7 04        	lda	[<L79+current_record_0],Y
  3207 09:7BB6: 48           	pha
  3208 09:7BB7: 22 56 AD 09  	jsl	~~mem_free_CONST
  3209                        ;      else if(current_record->operation_code == 0
                    xE0)
  3210 09:7BBB: 82 55 03     	brl	L10120
  3211                        L10119:
  3212                        	.line	289
  3213                        ;        mem_free_ALIGN((struct record_ALIGN *) cu
                    rrent_record->record_data);
  3214 09:7BBE: E2 20        	sep	#$20
  3215                        	longa	off
  3216 09:7BC0: A0 08 00     	ldy	#$8
  3217 09:7BC3: B7 04        	lda	[<L79+current_record_0],Y
  3218 09:7BC5: C9 E0        	cmp	#<$e0
  3219 09:7BC7: C2 20        	rep	#$20
  3220                        	longa	on
  3221 09:7BC9: F0 03        	beq	L86
  3222 09:7BCB: 82 13 00     	brl	L10121
  3223                        L86:
  3224                        	.line	290
  3225 09:7BCE: A0 0D 00     	ldy	#$d
  3226 09:7BD1: B7 04        	lda	[<L79+current_record_0],Y
  3227 09:7BD3: 48           	pha
  3228 09:7BD4: A0 0B 00     	ldy	#$b
  3229 09:7BD7: B7 04        	lda	[<L79+current_record_0],Y
  3230 09:7BD9: 48           	pha
  3231 09:7BDA: 22 9E AD 09  	jsl	~~mem_free_ALIGN
  3232                        ;      else if(current_record->operation_code == 0
                    xE1)
  3233 09:7BDE: 82 32 03     	brl	L10122
  3234                        L10121:
  3235                        	.line	291
  3236                        ;        mem_free_ORG((struct record_ORG *) curren
                    t_record->record_data);
  3237 09:7BE1: E2 20        	sep	#$20
  3238                        	longa	off
  3239 09:7BE3: A0 08 00     	ldy	#$8
  3240 09:7BE6: B7 04        	lda	[<L79+current_record_0],Y
  3241 09:7BE8: C9 E1        	cmp	#<$e1
  3242 09:7BEA: C2 20        	rep	#$20
  3243                        	longa	on
  3244 09:7BEC: F0 03        	beq	L87
  3245 09:7BEE: 82 13 00     	brl	L10123
  3246                        L87:
  Thu Dec  3 2020 22:25                                                Page 62


  3247                        	.line	292
  3248 09:7BF1: A0 0D 00     	ldy	#$d
  3249 09:7BF4: B7 04        	lda	[<L79+current_record_0],Y
  3250 09:7BF6: 48           	pha
  3251 09:7BF7: A0 0B 00     	ldy	#$b
  3252 09:7BFA: B7 04        	lda	[<L79+current_record_0],Y
  3253 09:7BFC: 48           	pha
  3254 09:7BFD: 22 C7 AD 09  	jsl	~~mem_free_ORG
  3255                        ;      else if(current_record->operation_code == 0
                    xE2)
  3256 09:7C01: 82 0F 03     	brl	L10124
  3257                        L10123:
  3258                        	.line	293
  3259                        ;        mem_free_RELOC((struct record_RELOC *) cu
                    rrent_record->record_data);
  3260 09:7C04: E2 20        	sep	#$20
  3261                        	longa	off
  3262 09:7C06: A0 08 00     	ldy	#$8
  3263 09:7C09: B7 04        	lda	[<L79+current_record_0],Y
  3264 09:7C0B: C9 E2        	cmp	#<$e2
  3265 09:7C0D: C2 20        	rep	#$20
  3266                        	longa	on
  3267 09:7C0F: F0 03        	beq	L88
  3268 09:7C11: 82 13 00     	brl	L10125
  3269                        L88:
  3270                        	.line	294
  3271 09:7C14: A0 0D 00     	ldy	#$d
  3272 09:7C17: B7 04        	lda	[<L79+current_record_0],Y
  3273 09:7C19: 48           	pha
  3274 09:7C1A: A0 0B 00     	ldy	#$b
  3275 09:7C1D: B7 04        	lda	[<L79+current_record_0],Y
  3276 09:7C1F: 48           	pha
  3277 09:7C20: 22 F0 AD 09  	jsl	~~mem_free_RELOC
  3278                        ;      else if(current_record->operation_code == 0
                    xE3)
  3279 09:7C24: 82 EC 02     	brl	L10126
  3280                        L10125:
  3281                        	.line	295
  3282                        ;        mem_free_INTERSEG((struct record_INTERSEG
                     *) current_record->record_data);
  3283 09:7C27: E2 20        	sep	#$20
  3284                        	longa	off
  3285 09:7C29: A0 08 00     	ldy	#$8
  3286 09:7C2C: B7 04        	lda	[<L79+current_record_0],Y
  3287 09:7C2E: C9 E3        	cmp	#<$e3
  3288 09:7C30: C2 20        	rep	#$20
  3289                        	longa	on
  3290 09:7C32: F0 03        	beq	L89
  3291 09:7C34: 82 13 00     	brl	L10127
  3292                        L89:
  3293                        	.line	296
  3294 09:7C37: A0 0D 00     	ldy	#$d
  3295 09:7C3A: B7 04        	lda	[<L79+current_record_0],Y
  3296 09:7C3C: 48           	pha
  3297 09:7C3D: A0 0B 00     	ldy	#$b
  3298 09:7C40: B7 04        	lda	[<L79+current_record_0],Y
  3299 09:7C42: 48           	pha
  3300 09:7C43: 22 19 AE 09  	jsl	~~mem_free_INTERSEG
  Thu Dec  3 2020 22:25                                                Page 63


  3301                        ;      else if(current_record->operation_code == 0
                    xE4)
  3302 09:7C47: 82 C9 02     	brl	L10128
  3303                        L10127:
  3304                        	.line	297
  3305                        ;        mem_free_USING((struct record_USING *) cu
                    rrent_record->record_data);
  3306 09:7C4A: E2 20        	sep	#$20
  3307                        	longa	off
  3308 09:7C4C: A0 08 00     	ldy	#$8
  3309 09:7C4F: B7 04        	lda	[<L79+current_record_0],Y
  3310 09:7C51: C9 E4        	cmp	#<$e4
  3311 09:7C53: C2 20        	rep	#$20
  3312                        	longa	on
  3313 09:7C55: F0 03        	beq	L90
  3314 09:7C57: 82 13 00     	brl	L10129
  3315                        L90:
  3316                        	.line	298
  3317 09:7C5A: A0 0D 00     	ldy	#$d
  3318 09:7C5D: B7 04        	lda	[<L79+current_record_0],Y
  3319 09:7C5F: 48           	pha
  3320 09:7C60: A0 0B 00     	ldy	#$b
  3321 09:7C63: B7 04        	lda	[<L79+current_record_0],Y
  3322 09:7C65: 48           	pha
  3323 09:7C66: 22 42 AE 09  	jsl	~~mem_free_USING
  3324                        ;      else if(current_record->operation_code == 0
                    xE5)
  3325 09:7C6A: 82 A6 02     	brl	L10130
  3326                        L10129:
  3327                        	.line	299
  3328                        ;        mem_free_STRONG((struct record_STRONG *) 
                    current_record->record_data);
  3329 09:7C6D: E2 20        	sep	#$20
  3330                        	longa	off
  3331 09:7C6F: A0 08 00     	ldy	#$8
  3332 09:7C72: B7 04        	lda	[<L79+current_record_0],Y
  3333 09:7C74: C9 E5        	cmp	#<$e5
  3334 09:7C76: C2 20        	rep	#$20
  3335                        	longa	on
  3336 09:7C78: F0 03        	beq	L91
  3337 09:7C7A: 82 13 00     	brl	L10131
  3338                        L91:
  3339                        	.line	300
  3340 09:7C7D: A0 0D 00     	ldy	#$d
  3341 09:7C80: B7 04        	lda	[<L79+current_record_0],Y
  3342 09:7C82: 48           	pha
  3343 09:7C83: A0 0B 00     	ldy	#$b
  3344 09:7C86: B7 04        	lda	[<L79+current_record_0],Y
  3345 09:7C88: 48           	pha
  3346 09:7C89: 22 6B AE 09  	jsl	~~mem_free_STRONG
  3347                        ;      else if(current_record->operation_code == 0
                    xE6)
  3348 09:7C8D: 82 83 02     	brl	L10132
  3349                        L10131:
  3350                        	.line	301
  3351                        ;        mem_free_GLOBAL((struct record_GLOBAL *) 
                    current_record->record_data);
  3352 09:7C90: E2 20        	sep	#$20
  Thu Dec  3 2020 22:25                                                Page 64


  3353                        	longa	off
  3354 09:7C92: A0 08 00     	ldy	#$8
  3355 09:7C95: B7 04        	lda	[<L79+current_record_0],Y
  3356 09:7C97: C9 E6        	cmp	#<$e6
  3357 09:7C99: C2 20        	rep	#$20
  3358                        	longa	on
  3359 09:7C9B: F0 03        	beq	L92
  3360 09:7C9D: 82 13 00     	brl	L10133
  3361                        L92:
  3362                        	.line	302
  3363 09:7CA0: A0 0D 00     	ldy	#$d
  3364 09:7CA3: B7 04        	lda	[<L79+current_record_0],Y
  3365 09:7CA5: 48           	pha
  3366 09:7CA6: A0 0B 00     	ldy	#$b
  3367 09:7CA9: B7 04        	lda	[<L79+current_record_0],Y
  3368 09:7CAB: 48           	pha
  3369 09:7CAC: 22 94 AE 09  	jsl	~~mem_free_GLOBAL
  3370                        ;      else if(current_record->operation_code == 0
                    xE7)
  3371 09:7CB0: 82 60 02     	brl	L10134
  3372                        L10133:
  3373                        	.line	303
  3374                        ;        mem_free_GEQU((struct record_GEQU *) curr
                    ent_record->record_data);
  3375 09:7CB3: E2 20        	sep	#$20
  3376                        	longa	off
  3377 09:7CB5: A0 08 00     	ldy	#$8
  3378 09:7CB8: B7 04        	lda	[<L79+current_record_0],Y
  3379 09:7CBA: C9 E7        	cmp	#<$e7
  3380 09:7CBC: C2 20        	rep	#$20
  3381                        	longa	on
  3382 09:7CBE: F0 03        	beq	L93
  3383 09:7CC0: 82 13 00     	brl	L10135
  3384                        L93:
  3385                        	.line	304
  3386 09:7CC3: A0 0D 00     	ldy	#$d
  3387 09:7CC6: B7 04        	lda	[<L79+current_record_0],Y
  3388 09:7CC8: 48           	pha
  3389 09:7CC9: A0 0B 00     	ldy	#$b
  3390 09:7CCC: B7 04        	lda	[<L79+current_record_0],Y
  3391 09:7CCE: 48           	pha
  3392 09:7CCF: 22 BD AE 09  	jsl	~~mem_free_GEQU
  3393                        ;      else if(current_record->operation_code == 0
                    xE8)
  3394 09:7CD3: 82 3D 02     	brl	L10136
  3395                        L10135:
  3396                        	.line	305
  3397                        ;        mem_free_MEM((struct record_MEM *) curren
                    t_record->record_data);
  3398 09:7CD6: E2 20        	sep	#$20
  3399                        	longa	off
  3400 09:7CD8: A0 08 00     	ldy	#$8
  3401 09:7CDB: B7 04        	lda	[<L79+current_record_0],Y
  3402 09:7CDD: C9 E8        	cmp	#<$e8
  3403 09:7CDF: C2 20        	rep	#$20
  3404                        	longa	on
  3405 09:7CE1: F0 03        	beq	L94
  3406 09:7CE3: 82 13 00     	brl	L10137
  Thu Dec  3 2020 22:25                                                Page 65


  3407                        L94:
  3408                        	.line	306
  3409 09:7CE6: A0 0D 00     	ldy	#$d
  3410 09:7CE9: B7 04        	lda	[<L79+current_record_0],Y
  3411 09:7CEB: 48           	pha
  3412 09:7CEC: A0 0B 00     	ldy	#$b
  3413 09:7CEF: B7 04        	lda	[<L79+current_record_0],Y
  3414 09:7CF1: 48           	pha
  3415 09:7CF2: 22 E6 AE 09  	jsl	~~mem_free_MEM
  3416                        ;      else if(current_record->operation_code == 0
                    xEB)
  3417 09:7CF6: 82 1A 02     	brl	L10138
  3418                        L10137:
  3419                        	.line	307
  3420                        ;        mem_free_EXPR((struct record_EXPR *) curr
                    ent_record->record_data);
  3421 09:7CF9: E2 20        	sep	#$20
  3422                        	longa	off
  3423 09:7CFB: A0 08 00     	ldy	#$8
  3424 09:7CFE: B7 04        	lda	[<L79+current_record_0],Y
  3425 09:7D00: C9 EB        	cmp	#<$eb
  3426 09:7D02: C2 20        	rep	#$20
  3427                        	longa	on
  3428 09:7D04: F0 03        	beq	L95
  3429 09:7D06: 82 13 00     	brl	L10139
  3430                        L95:
  3431                        	.line	308
  3432 09:7D09: A0 0D 00     	ldy	#$d
  3433 09:7D0C: B7 04        	lda	[<L79+current_record_0],Y
  3434 09:7D0E: 48           	pha
  3435 09:7D0F: A0 0B 00     	ldy	#$b
  3436 09:7D12: B7 04        	lda	[<L79+current_record_0],Y
  3437 09:7D14: 48           	pha
  3438 09:7D15: 22 0F AF 09  	jsl	~~mem_free_EXPR
  3439                        ;      else if(current_record->operation_code == 0
                    xEC)
  3440 09:7D19: 82 F7 01     	brl	L10140
  3441                        L10139:
  3442                        	.line	309
  3443                        ;        mem_free_ZEXPR((struct record_ZEXPR *) cu
                    rrent_record->record_data);
  3444 09:7D1C: E2 20        	sep	#$20
  3445                        	longa	off
  3446 09:7D1E: A0 08 00     	ldy	#$8
  3447 09:7D21: B7 04        	lda	[<L79+current_record_0],Y
  3448 09:7D23: C9 EC        	cmp	#<$ec
  3449 09:7D25: C2 20        	rep	#$20
  3450                        	longa	on
  3451 09:7D27: F0 03        	beq	L96
  3452 09:7D29: 82 13 00     	brl	L10141
  3453                        L96:
  3454                        	.line	310
  3455 09:7D2C: A0 0D 00     	ldy	#$d
  3456 09:7D2F: B7 04        	lda	[<L79+current_record_0],Y
  3457 09:7D31: 48           	pha
  3458 09:7D32: A0 0B 00     	ldy	#$b
  3459 09:7D35: B7 04        	lda	[<L79+current_record_0],Y
  3460 09:7D37: 48           	pha
  Thu Dec  3 2020 22:25                                                Page 66


  3461 09:7D38: 22 38 AF 09  	jsl	~~mem_free_ZEXPR
  3462                        ;      else if(current_record->operation_code == 0
                    xED)
  3463 09:7D3C: 82 D4 01     	brl	L10142
  3464                        L10141:
  3465                        	.line	311
  3466                        ;        mem_free_BEXPR((struct record_BEXPR *) cu
                    rrent_record->record_data);
  3467 09:7D3F: E2 20        	sep	#$20
  3468                        	longa	off
  3469 09:7D41: A0 08 00     	ldy	#$8
  3470 09:7D44: B7 04        	lda	[<L79+current_record_0],Y
  3471 09:7D46: C9 ED        	cmp	#<$ed
  3472 09:7D48: C2 20        	rep	#$20
  3473                        	longa	on
  3474 09:7D4A: F0 03        	beq	L97
  3475 09:7D4C: 82 13 00     	brl	L10143
  3476                        L97:
  3477                        	.line	312
  3478 09:7D4F: A0 0D 00     	ldy	#$d
  3479 09:7D52: B7 04        	lda	[<L79+current_record_0],Y
  3480 09:7D54: 48           	pha
  3481 09:7D55: A0 0B 00     	ldy	#$b
  3482 09:7D58: B7 04        	lda	[<L79+current_record_0],Y
  3483 09:7D5A: 48           	pha
  3484 09:7D5B: 22 61 AF 09  	jsl	~~mem_free_BEXPR
  3485                        ;      else if(current_record->operation_code == 0
                    xEE)
  3486 09:7D5F: 82 B1 01     	brl	L10144
  3487                        L10143:
  3488                        	.line	313
  3489                        ;        mem_free_RELEXPR((struct record_RELEXPR *
                    ) current_record->record_data);
  3490 09:7D62: E2 20        	sep	#$20
  3491                        	longa	off
  3492 09:7D64: A0 08 00     	ldy	#$8
  3493 09:7D67: B7 04        	lda	[<L79+current_record_0],Y
  3494 09:7D69: C9 EE        	cmp	#<$ee
  3495 09:7D6B: C2 20        	rep	#$20
  3496                        	longa	on
  3497 09:7D6D: F0 03        	beq	L98
  3498 09:7D6F: 82 13 00     	brl	L10145
  3499                        L98:
  3500                        	.line	314
  3501 09:7D72: A0 0D 00     	ldy	#$d
  3502 09:7D75: B7 04        	lda	[<L79+current_record_0],Y
  3503 09:7D77: 48           	pha
  3504 09:7D78: A0 0B 00     	ldy	#$b
  3505 09:7D7B: B7 04        	lda	[<L79+current_record_0],Y
  3506 09:7D7D: 48           	pha
  3507 09:7D7E: 22 8A AF 09  	jsl	~~mem_free_RELEXPR
  3508                        ;      else if(current_record->operation_code == 0
                    xEF)
  3509 09:7D82: 82 8E 01     	brl	L10146
  3510                        L10145:
  3511                        	.line	315
  3512                        ;        mem_free_LOCAL((struct record_LOCAL *) cu
                    rrent_record->record_data);
  Thu Dec  3 2020 22:25                                                Page 67


  3513 09:7D85: E2 20        	sep	#$20
  3514                        	longa	off
  3515 09:7D87: A0 08 00     	ldy	#$8
  3516 09:7D8A: B7 04        	lda	[<L79+current_record_0],Y
  3517 09:7D8C: C9 EF        	cmp	#<$ef
  3518 09:7D8E: C2 20        	rep	#$20
  3519                        	longa	on
  3520 09:7D90: F0 03        	beq	L99
  3521 09:7D92: 82 13 00     	brl	L10147
  3522                        L99:
  3523                        	.line	316
  3524 09:7D95: A0 0D 00     	ldy	#$d
  3525 09:7D98: B7 04        	lda	[<L79+current_record_0],Y
  3526 09:7D9A: 48           	pha
  3527 09:7D9B: A0 0B 00     	ldy	#$b
  3528 09:7D9E: B7 04        	lda	[<L79+current_record_0],Y
  3529 09:7DA0: 48           	pha
  3530 09:7DA1: 22 B3 AF 09  	jsl	~~mem_free_LOCAL
  3531                        ;      else if(current_record->operation_code == 0
                    xF0)
  3532 09:7DA5: 82 6B 01     	brl	L10148
  3533                        L10147:
  3534                        	.line	317
  3535                        ;        mem_free_EQU((struct record_EQU *) curren
                    t_record->record_data);
  3536 09:7DA8: E2 20        	sep	#$20
  3537                        	longa	off
  3538 09:7DAA: A0 08 00     	ldy	#$8
  3539 09:7DAD: B7 04        	lda	[<L79+current_record_0],Y
  3540 09:7DAF: C9 F0        	cmp	#<$f0
  3541 09:7DB1: C2 20        	rep	#$20
  3542                        	longa	on
  3543 09:7DB3: F0 03        	beq	L100
  3544 09:7DB5: 82 13 00     	brl	L10149
  3545                        L100:
  3546                        	.line	318
  3547 09:7DB8: A0 0D 00     	ldy	#$d
  3548 09:7DBB: B7 04        	lda	[<L79+current_record_0],Y
  3549 09:7DBD: 48           	pha
  3550 09:7DBE: A0 0B 00     	ldy	#$b
  3551 09:7DC1: B7 04        	lda	[<L79+current_record_0],Y
  3552 09:7DC3: 48           	pha
  3553 09:7DC4: 22 DC AF 09  	jsl	~~mem_free_EQU
  3554                        ;      else if(current_record->operation_code == 0
                    xF1)
  3555 09:7DC8: 82 48 01     	brl	L10150
  3556                        L10149:
  3557                        	.line	319
  3558                        ;        mem_free_DS((struct record_DS *) current_
                    record->record_data);
  3559 09:7DCB: E2 20        	sep	#$20
  3560                        	longa	off
  3561 09:7DCD: A0 08 00     	ldy	#$8
  3562 09:7DD0: B7 04        	lda	[<L79+current_record_0],Y
  3563 09:7DD2: C9 F1        	cmp	#<$f1
  3564 09:7DD4: C2 20        	rep	#$20
  3565                        	longa	on
  3566 09:7DD6: F0 03        	beq	L101
  Thu Dec  3 2020 22:25                                                Page 68


  3567 09:7DD8: 82 13 00     	brl	L10151
  3568                        L101:
  3569                        	.line	320
  3570 09:7DDB: A0 0D 00     	ldy	#$d
  3571 09:7DDE: B7 04        	lda	[<L79+current_record_0],Y
  3572 09:7DE0: 48           	pha
  3573 09:7DE1: A0 0B 00     	ldy	#$b
  3574 09:7DE4: B7 04        	lda	[<L79+current_record_0],Y
  3575 09:7DE6: 48           	pha
  3576 09:7DE7: 22 05 B0 09  	jsl	~~mem_free_DS
  3577                        ;      else if(current_record->operation_code == 0
                    xF2)
  3578 09:7DEB: 82 25 01     	brl	L10152
  3579                        L10151:
  3580                        	.line	321
  3581                        ;        mem_free_LCONST((struct record_LCONST *) 
                    current_record->record_data);
  3582 09:7DEE: E2 20        	sep	#$20
  3583                        	longa	off
  3584 09:7DF0: A0 08 00     	ldy	#$8
  3585 09:7DF3: B7 04        	lda	[<L79+current_record_0],Y
  3586 09:7DF5: C9 F2        	cmp	#<$f2
  3587 09:7DF7: C2 20        	rep	#$20
  3588                        	longa	on
  3589 09:7DF9: F0 03        	beq	L102
  3590 09:7DFB: 82 13 00     	brl	L10153
  3591                        L102:
  3592                        	.line	322
  3593 09:7DFE: A0 0D 00     	ldy	#$d
  3594 09:7E01: B7 04        	lda	[<L79+current_record_0],Y
  3595 09:7E03: 48           	pha
  3596 09:7E04: A0 0B 00     	ldy	#$b
  3597 09:7E07: B7 04        	lda	[<L79+current_record_0],Y
  3598 09:7E09: 48           	pha
  3599 09:7E0A: 22 2E B0 09  	jsl	~~mem_free_LCONST
  3600                        ;      else if(current_record->operation_code == 0
                    xF3)
  3601 09:7E0E: 82 02 01     	brl	L10154
  3602                        L10153:
  3603                        	.line	323
  3604                        ;        mem_free_LEXPR((struct record_LEXPR *) cu
                    rrent_record->record_data);
  3605 09:7E11: E2 20        	sep	#$20
  3606                        	longa	off
  3607 09:7E13: A0 08 00     	ldy	#$8
  3608 09:7E16: B7 04        	lda	[<L79+current_record_0],Y
  3609 09:7E18: C9 F3        	cmp	#<$f3
  3610 09:7E1A: C2 20        	rep	#$20
  3611                        	longa	on
  3612 09:7E1C: F0 03        	beq	L103
  3613 09:7E1E: 82 13 00     	brl	L10155
  3614                        L103:
  3615                        	.line	324
  3616 09:7E21: A0 0D 00     	ldy	#$d
  3617 09:7E24: B7 04        	lda	[<L79+current_record_0],Y
  3618 09:7E26: 48           	pha
  3619 09:7E27: A0 0B 00     	ldy	#$b
  3620 09:7E2A: B7 04        	lda	[<L79+current_record_0],Y
  Thu Dec  3 2020 22:25                                                Page 69


  3621 09:7E2C: 48           	pha
  3622 09:7E2D: 22 76 B0 09  	jsl	~~mem_free_LEXPR
  3623                        ;      else if(current_record->operation_code == 0
                    xF4)
  3624 09:7E31: 82 DF 00     	brl	L10156
  3625                        L10155:
  3626                        	.line	325
  3627                        ;        mem_free_ENTRY((struct record_ENTRY *) cu
                    rrent_record->record_data);
  3628 09:7E34: E2 20        	sep	#$20
  3629                        	longa	off
  3630 09:7E36: A0 08 00     	ldy	#$8
  3631 09:7E39: B7 04        	lda	[<L79+current_record_0],Y
  3632 09:7E3B: C9 F4        	cmp	#<$f4
  3633 09:7E3D: C2 20        	rep	#$20
  3634                        	longa	on
  3635 09:7E3F: F0 03        	beq	L104
  3636 09:7E41: 82 13 00     	brl	L10157
  3637                        L104:
  3638                        	.line	326
  3639 09:7E44: A0 0D 00     	ldy	#$d
  3640 09:7E47: B7 04        	lda	[<L79+current_record_0],Y
  3641 09:7E49: 48           	pha
  3642 09:7E4A: A0 0B 00     	ldy	#$b
  3643 09:7E4D: B7 04        	lda	[<L79+current_record_0],Y
  3644 09:7E4F: 48           	pha
  3645 09:7E50: 22 9F B0 09  	jsl	~~mem_free_ENTRY
  3646                        ;      else if(current_record->operation_code == 0
                    xF5)
  3647 09:7E54: 82 BC 00     	brl	L10158
  3648                        L10157:
  3649                        	.line	327
  3650                        ;        mem_free_cRELOC((struct record_cRELOC *) 
                    current_record->record_data);
  3651 09:7E57: E2 20        	sep	#$20
  3652                        	longa	off
  3653 09:7E59: A0 08 00     	ldy	#$8
  3654 09:7E5C: B7 04        	lda	[<L79+current_record_0],Y
  3655 09:7E5E: C9 F5        	cmp	#<$f5
  3656 09:7E60: C2 20        	rep	#$20
  3657                        	longa	on
  3658 09:7E62: F0 03        	beq	L105
  3659 09:7E64: 82 13 00     	brl	L10159
  3660                        L105:
  3661                        	.line	328
  3662 09:7E67: A0 0D 00     	ldy	#$d
  3663 09:7E6A: B7 04        	lda	[<L79+current_record_0],Y
  3664 09:7E6C: 48           	pha
  3665 09:7E6D: A0 0B 00     	ldy	#$b
  3666 09:7E70: B7 04        	lda	[<L79+current_record_0],Y
  3667 09:7E72: 48           	pha
  3668 09:7E73: 22 C8 B0 09  	jsl	~~mem_free_cRELOC
  3669                        ;      else if(current_record->operation_code == 0
                    xF6)
  3670 09:7E77: 82 99 00     	brl	L10160
  3671                        L10159:
  3672                        	.line	329
  3673                        ;        mem_free_cINTERSEG((struct record_cINTERS
  Thu Dec  3 2020 22:25                                                Page 70


                    EG *) current_record->record_data);
  3674 09:7E7A: E2 20        	sep	#$20
  3675                        	longa	off
  3676 09:7E7C: A0 08 00     	ldy	#$8
  3677 09:7E7F: B7 04        	lda	[<L79+current_record_0],Y
  3678 09:7E81: C9 F6        	cmp	#<$f6
  3679 09:7E83: C2 20        	rep	#$20
  3680                        	longa	on
  3681 09:7E85: F0 03        	beq	L106
  3682 09:7E87: 82 13 00     	brl	L10161
  3683                        L106:
  3684                        	.line	330
  3685 09:7E8A: A0 0D 00     	ldy	#$d
  3686 09:7E8D: B7 04        	lda	[<L79+current_record_0],Y
  3687 09:7E8F: 48           	pha
  3688 09:7E90: A0 0B 00     	ldy	#$b
  3689 09:7E93: B7 04        	lda	[<L79+current_record_0],Y
  3690 09:7E95: 48           	pha
  3691 09:7E96: 22 F1 B0 09  	jsl	~~mem_free_cINTERSEG
  3692                        ;      else if(current_record->operation_code == 0
                    xF7)
  3693 09:7E9A: 82 76 00     	brl	L10162
  3694                        L10161:
  3695                        	.line	331
  3696                        ;        mem_free_SUPER((struct record_SUPER *) cu
                    rrent_record->record_data);
  3697 09:7E9D: E2 20        	sep	#$20
  3698                        	longa	off
  3699 09:7E9F: A0 08 00     	ldy	#$8
  3700 09:7EA2: B7 04        	lda	[<L79+current_record_0],Y
  3701 09:7EA4: C9 F7        	cmp	#<$f7
  3702 09:7EA6: C2 20        	rep	#$20
  3703                        	longa	on
  3704 09:7EA8: F0 03        	beq	L107
  3705 09:7EAA: 82 13 00     	brl	L10163
  3706                        L107:
  3707                        	.line	332
  3708 09:7EAD: A0 0D 00     	ldy	#$d
  3709 09:7EB0: B7 04        	lda	[<L79+current_record_0],Y
  3710 09:7EB2: 48           	pha
  3711 09:7EB3: A0 0B 00     	ldy	#$b
  3712 09:7EB6: B7 04        	lda	[<L79+current_record_0],Y
  3713 09:7EB8: 48           	pha
  3714 09:7EB9: 22 1A B1 09  	jsl	~~mem_free_SUPER
  3715                        ;      else if(current_record->operation_code == 0
                    xFB)
  3716 09:7EBD: 82 53 00     	brl	L10164
  3717                        L10163:
  3718                        	.line	333
  3719                        ;        mem_free_General((struct record_General *
                    ) current_record->record_data);
  3720 09:7EC0: E2 20        	sep	#$20
  3721                        	longa	off
  3722 09:7EC2: A0 08 00     	ldy	#$8
  3723 09:7EC5: B7 04        	lda	[<L79+current_record_0],Y
  3724 09:7EC7: C9 FB        	cmp	#<$fb
  3725 09:7EC9: C2 20        	rep	#$20
  3726                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 71


  3727 09:7ECB: F0 03        	beq	L108
  3728 09:7ECD: 82 13 00     	brl	L10165
  3729                        L108:
  3730                        	.line	334
  3731 09:7ED0: A0 0D 00     	ldy	#$d
  3732 09:7ED3: B7 04        	lda	[<L79+current_record_0],Y
  3733 09:7ED5: 48           	pha
  3734 09:7ED6: A0 0B 00     	ldy	#$b
  3735 09:7ED9: B7 04        	lda	[<L79+current_record_0],Y
  3736 09:7EDB: 48           	pha
  3737 09:7EDC: 22 7B B1 09  	jsl	~~mem_free_General
  3738                        ;      else if(current_record->operation_code >= 0
                    xFC && current_record->operation_code <= 0xFF)
  3739 09:7EE0: 82 30 00     	brl	L10166
  3740                        L10165:
  3741                        	.line	335
  3742                        ;        mem_free_Experimental((struct record_Expe
                    rimental *) current_record->record_data);
  3743 09:7EE3: E2 20        	sep	#$20
  3744                        	longa	off
  3745 09:7EE5: A0 08 00     	ldy	#$8
  3746 09:7EE8: B7 04        	lda	[<L79+current_record_0],Y
  3747 09:7EEA: C9 FC        	cmp	#<$fc
  3748 09:7EEC: C2 20        	rep	#$20
  3749                        	longa	on
  3750 09:7EEE: B0 03        	bcs	L109
  3751 09:7EF0: 82 20 00     	brl	L10167
  3752                        L109:
  3753 09:7EF3: E2 20        	sep	#$20
  3754                        	longa	off
  3755 09:7EF5: A9 FF        	lda	#$ff
  3756 09:7EF7: A0 08 00     	ldy	#$8
  3757 09:7EFA: D7 04        	cmp	[<L79+current_record_0],Y
  3758 09:7EFC: C2 20        	rep	#$20
  3759                        	longa	on
  3760 09:7EFE: B0 03        	bcs	L110
  3761 09:7F00: 82 10 00     	brl	L10167
  3762                        L110:
  3763                        	.line	336
  3764 09:7F03: A0 0D 00     	ldy	#$d
  3765 09:7F06: B7 04        	lda	[<L79+current_record_0],Y
  3766 09:7F08: 48           	pha
  3767 09:7F09: A0 0B 00     	ldy	#$b
  3768 09:7F0C: B7 04        	lda	[<L79+current_record_0],Y
  3769 09:7F0E: 48           	pha
  3770 09:7F0F: 22 A4 B1 09  	jsl	~~mem_free_Experimental
  3771                        ;
  3772                        ;      k_free(current_record);
  3773                        L10167:
  3774                        L10166:
  3775                        L10164:
  3776                        L10162:
  3777                        L10160:
  3778                        L10158:
  3779                        L10156:
  3780                        L10154:
  3781                        L10152:
  3782                        L10150:
  Thu Dec  3 2020 22:25                                                Page 72


  3783                        L10148:
  3784                        L10146:
  3785                        L10144:
  3786                        L10142:
  3787                        L10140:
  3788                        L10138:
  3789                        L10136:
  3790                        L10134:
  3791                        L10132:
  3792                        L10130:
  3793                        L10128:
  3794                        L10126:
  3795                        L10124:
  3796                        L10122:
  3797                        L10120:
  3798                        L10118:
  3799                        	.line	338
  3800 09:7F13: D4 06        	pei	<L79+current_record_0+2
  3801 09:7F15: D4 04        	pei	<L79+current_record_0
  3802 09:7F17: 22 xx xx xx  	jsl	~~k_free
  3803                        ;    }
  3804                        	.line	339
  3805                        ;}
  3806                        L10116:
  3807                        	.line	340
  3808                        L111:
  3809 09:7F1B: A5 02        	lda	<L79+2
  3810 09:7F1D: 85 06        	sta	<L79+2+4
  3811 09:7F1F: A5 01        	lda	<L79+1
  3812 09:7F21: 85 05        	sta	<L79+1+4
  3813 09:7F23: 2B           	pld
  3814 09:7F24: 3B           	tsc
  3815 09:7F25: 18           	clc
  3816 09:7F26: 69 04 00     	adc	#L79+4
  3817 09:7F29: 1B           	tcs
  3818 09:7F2A: 6B           	rtl
  3819                        	.endblock	340
  3820             00000000   L79	equ	0
  3821             00000001   L80	equ	1
  3822 09:7F2B:              	ends
  3823                        	efunc
  3824                        	.endfunc	340,1,0
  3825                        	.line	340
  3826                        ;
  3827                        ;
  3828                        ;/************************************************
                    */
  3829                        ;/*  DecodeRecordEND() :  Décodage du Record END. 
                    */
  3830                        ;/************************************************
                    */
  3831                        ;static void *DecodeRecordEND(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  3832                        ;{
  3833                        	.line	346
  3834                        	.line	347
  3835                        	LOADER
  Thu Dec  3 2020 22:25                                                Page 73


  3836                        	func
  3837                        	.function	347
  3838                        ~~DecodeRecordEND:
  3839                        	longa	on
  3840                        	longi	on
  3841 09:7F2B: 3B           	tsc
  3842 09:7F2C: 38           	sec
  3843 09:7F2D: E9 08 00     	sbc	#L112
  3844 09:7F30: 1B           	tcs
  3845 09:7F31: 0B           	phd
  3846 09:7F32: 5B           	tcd
  3847             00000004   data_0	set	4
  3848             00000008   file_offset_0	set	8
  3849             0000000A   segment_offset_0	set	10
  3850             0000000C   record_length_rtn_0	set	12
  3851                        	.block	347
  3852                        ;  struct record_END *current_record;
  3853                        ;
  3854                        ;  /* Allocation mémoire */
  3855                        ;  current_record = (struct record_END *) k_calloc
                    (1,sizeof(struct record_END));
  3856             00000000   current_record_1	set	0
  3857                        	.sym	current_record,0,138,1,32,74
  3858                        	.sym	data,4,142,6,32
  3859                        	.sym	file_offset,8,5,6,16
  3860                        	.sym	segment_offset,10,5,6,16
  3861                        	.sym	record_length_rtn,12,133,6,32
  3862                        	.line	351
  3863 09:7F33: F4 09 00     	pea	#<$9
  3864 09:7F36: F4 01 00     	pea	#<$1
  3865 09:7F39: 22 xx xx xx  	jsl	~~k_calloc
  3866 09:7F3D: 85 05        	sta	<L113+current_record_1
  3867 09:7F3F: 86 07        	stx	<L113+current_record_1+2
  3868                        ;  if(current_record == NULL)
  3869                        	.line	352
  3870                        ;    {
  3871 09:7F41: A5 05        	lda	<L113+current_record_1
  3872 09:7F43: 05 07        	ora	<L113+current_record_1+2
  3873 09:7F45: F0 03        	beq	L115
  3874 09:7F47: 82 19 00     	brl	L10168
  3875                        L115:
  3876                        	.line	353
  3877                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  3878                        ;      return(NULL);
  3879                        	.line	355
  3880 09:7F4A: A9 00 00     	lda	#$0
  3881 09:7F4D: AA           	tax
  3882 09:7F4E: A9 00 00     	lda	#$0
  3883                        L116:
  3884 09:7F51: A8           	tay
  3885 09:7F52: A5 0A        	lda	<L112+2
  3886 09:7F54: 85 16        	sta	<L112+2+12
  3887 09:7F56: A5 09        	lda	<L112+1
  3888 09:7F58: 85 15        	sta	<L112+1+12
  3889 09:7F5A: 2B           	pld
  3890 09:7F5B: 3B           	tsc
  3891 09:7F5C: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 74


  3892 09:7F5D: 69 14 00     	adc	#L112+12
  3893 09:7F60: 1B           	tcs
  3894 09:7F61: 98           	tya
  3895 09:7F62: 6B           	rtl
  3896                        ;    }
  3897                        	.line	356
  3898                        ;
  3899                        ;  /* Offset */
  3900                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  3901                        L10168:
  3902                        	.line	359
  3903 09:7F63: A0 00 00     	ldy	#$0
  3904 09:7F66: A5 10        	lda	<L112+file_offset_0
  3905 09:7F68: 10 01        	bpl	L117
  3906 09:7F6A: 88           	dey
  3907                        L117:
  3908 09:7F6B: 85 01        	sta	<R0
  3909 09:7F6D: 84 03        	sty	<R0+2
  3910 09:7F6F: A5 01        	lda	<R0
  3911 09:7F71: 87 05        	sta	[<L113+current_record_1]
  3912 09:7F73: A5 03        	lda	<R0+2
  3913 09:7F75: A0 02 00     	ldy	#$2
  3914 09:7F78: 97 05        	sta	[<L113+current_record_1],Y
  3915                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  3916                        	.line	360
  3917 09:7F7A: A0 00 00     	ldy	#$0
  3918 09:7F7D: A5 12        	lda	<L112+segment_offset_0
  3919 09:7F7F: 10 01        	bpl	L118
  3920 09:7F81: 88           	dey
  3921                        L118:
  3922 09:7F82: 85 01        	sta	<R0
  3923 09:7F84: 84 03        	sty	<R0+2
  3924 09:7F86: A5 01        	lda	<R0
  3925 09:7F88: A0 04 00     	ldy	#$4
  3926 09:7F8B: 97 05        	sta	[<L113+current_record_1],Y
  3927 09:7F8D: A5 03        	lda	<R0+2
  3928 09:7F8F: A0 06 00     	ldy	#$6
  3929 09:7F92: 97 05        	sta	[<L113+current_record_1],Y
  3930                        ;
  3931                        ;  /* Operation Code */
  3932                        ;  current_record->operation_code = data[0];
  3933                        	.line	363
  3934 09:7F94: E2 20        	sep	#$20
  3935                        	longa	off
  3936 09:7F96: A7 0C        	lda	[<L112+data_0]
  3937 09:7F98: A0 08 00     	ldy	#$8
  3938 09:7F9B: 97 05        	sta	[<L113+current_record_1],Y
  3939 09:7F9D: C2 20        	rep	#$20
  3940                        	longa	on
  3941                        ;
  3942                        ;  /* Renvoie la structure */
  3943                        ;  *record_length_rtn = 1;
  3944                        	.line	366
  3945 09:7F9F: A9 01 00     	lda	#$1
  3946 09:7FA2: 87 14        	sta	[<L112+record_length_rtn_0]
  3947                        ;  return(current_record);
  Thu Dec  3 2020 22:25                                                Page 75


  3948                        	.line	367
  3949 09:7FA4: A6 07        	ldx	<L113+current_record_1+2
  3950 09:7FA6: A5 05        	lda	<L113+current_record_1
  3951 09:7FA8: 82 A6 FF     	brl	L116
  3952                        ;}
  3953                        	.line	368
  3954                        	.endblock	368
  3955             00000008   L112	equ	8
  3956             00000005   L113	equ	5
  3957 09:7FAB:              	ends
  3958                        	efunc
  3959                        	.endfunc	368,5,8
  3960                        	.line	368
  3961                        ;
  3962                        ;
  3963                        ;/************************************************
                    *****/
  3964                        ;/*  DecodeRecordCONST() :  Décodage du Record CON
                    ST. */
  3965                        ;/************************************************
                    *****/
  3966                        ;static void *DecodeRecordCONST(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  3967                        ;{
  3968                        	.line	374
  3969                        	.line	375
  3970                        	LOADER
  3971                        	func
  3972                        	.function	375
  3973                        ~~DecodeRecordCONST:
  3974                        	longa	on
  3975                        	longi	on
  3976 09:7FAB: 3B           	tsc
  3977 09:7FAC: 38           	sec
  3978 09:7FAD: E9 08 00     	sbc	#L119
  3979 09:7FB0: 1B           	tcs
  3980 09:7FB1: 0B           	phd
  3981 09:7FB2: 5B           	tcd
  3982             00000004   data_0	set	4
  3983             00000008   file_offset_0	set	8
  3984             0000000A   segment_offset_0	set	10
  3985             0000000C   record_length_rtn_0	set	12
  3986                        	.block	375
  3987                        ;  struct record_CONST *current_record;
  3988                        ;
  3989                        ;  /* Allocation mémoire */
  3990                        ;  current_record = (struct record_CONST *) k_call
                    oc(1,sizeof(struct record_CONST));
  3991             00000000   current_record_1	set	0
  3992                        	.sym	current_record,0,138,1,32,75
  3993                        	.sym	data,4,142,6,32
  3994                        	.sym	file_offset,8,5,6,16
  3995                        	.sym	segment_offset,10,5,6,16
  3996                        	.sym	record_length_rtn,12,133,6,32
  3997                        	.line	379
  3998 09:7FB3: F4 0E 00     	pea	#<$e
  3999 09:7FB6: F4 01 00     	pea	#<$1
  Thu Dec  3 2020 22:25                                                Page 76


  4000 09:7FB9: 22 xx xx xx  	jsl	~~k_calloc
  4001 09:7FBD: 85 05        	sta	<L120+current_record_1
  4002 09:7FBF: 86 07        	stx	<L120+current_record_1+2
  4003                        ;  if(current_record == NULL)
  4004                        	.line	380
  4005                        ;    {
  4006 09:7FC1: A5 05        	lda	<L120+current_record_1
  4007 09:7FC3: 05 07        	ora	<L120+current_record_1+2
  4008 09:7FC5: F0 03        	beq	L122
  4009 09:7FC7: 82 19 00     	brl	L10169
  4010                        L122:
  4011                        	.line	381
  4012                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4013                        ;      return(NULL);
  4014                        	.line	383
  4015 09:7FCA: A9 00 00     	lda	#$0
  4016 09:7FCD: AA           	tax
  4017 09:7FCE: A9 00 00     	lda	#$0
  4018                        L123:
  4019 09:7FD1: A8           	tay
  4020 09:7FD2: A5 0A        	lda	<L119+2
  4021 09:7FD4: 85 16        	sta	<L119+2+12
  4022 09:7FD6: A5 09        	lda	<L119+1
  4023 09:7FD8: 85 15        	sta	<L119+1+12
  4024 09:7FDA: 2B           	pld
  4025 09:7FDB: 3B           	tsc
  4026 09:7FDC: 18           	clc
  4027 09:7FDD: 69 14 00     	adc	#L119+12
  4028 09:7FE0: 1B           	tcs
  4029 09:7FE1: 98           	tya
  4030 09:7FE2: 6B           	rtl
  4031                        ;    }
  4032                        	.line	384
  4033                        ;
  4034                        ;  /* Offset */
  4035                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4036                        L10169:
  4037                        	.line	387
  4038 09:7FE3: A0 00 00     	ldy	#$0
  4039 09:7FE6: A5 10        	lda	<L119+file_offset_0
  4040 09:7FE8: 10 01        	bpl	L124
  4041 09:7FEA: 88           	dey
  4042                        L124:
  4043 09:7FEB: 85 01        	sta	<R0
  4044 09:7FED: 84 03        	sty	<R0+2
  4045 09:7FEF: A5 01        	lda	<R0
  4046 09:7FF1: 87 05        	sta	[<L120+current_record_1]
  4047 09:7FF3: A5 03        	lda	<R0+2
  4048 09:7FF5: A0 02 00     	ldy	#$2
  4049 09:7FF8: 97 05        	sta	[<L120+current_record_1],Y
  4050                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4051                        	.line	388
  4052 09:7FFA: A0 00 00     	ldy	#$0
  4053 09:7FFD: A5 12        	lda	<L119+segment_offset_0
  4054 09:7FFF: 10 01        	bpl	L125
  Thu Dec  3 2020 22:25                                                Page 77


  4055 09:8001: 88           	dey
  4056                        L125:
  4057 09:8002: 85 01        	sta	<R0
  4058 09:8004: 84 03        	sty	<R0+2
  4059 09:8006: A5 01        	lda	<R0
  4060 09:8008: A0 04 00     	ldy	#$4
  4061 09:800B: 97 05        	sta	[<L120+current_record_1],Y
  4062 09:800D: A5 03        	lda	<R0+2
  4063 09:800F: A0 06 00     	ldy	#$6
  4064 09:8012: 97 05        	sta	[<L120+current_record_1],Y
  4065                        ;
  4066                        ;  /* Operation Code : 0x01 - 0xDF */
  4067                        ;  current_record->operation_code = data[0];
  4068                        	.line	391
  4069 09:8014: E2 20        	sep	#$20
  4070                        	longa	off
  4071 09:8016: A7 0C        	lda	[<L119+data_0]
  4072 09:8018: A0 08 00     	ldy	#$8
  4073 09:801B: 97 05        	sta	[<L120+current_record_1],Y
  4074 09:801D: C2 20        	rep	#$20
  4075                        	longa	on
  4076                        ;
  4077                        ;  /** Zone de Data qui n'a pas besoin d'être relo
                    gée **/
  4078                        ;  current_record->ByteCnt = data[0];
  4079                        	.line	394
  4080 09:801F: E2 20        	sep	#$20
  4081                        	longa	off
  4082 09:8021: A7 0C        	lda	[<L119+data_0]
  4083 09:8023: A0 09 00     	ldy	#$9
  4084 09:8026: 97 05        	sta	[<L120+current_record_1],Y
  4085 09:8028: C2 20        	rep	#$20
  4086                        	longa	on
  4087                        ;
  4088                        ;  /* Allocation mémoire */
  4089                        ;  current_record->data = (unsigned char *) k_call
                    oc(current_record->ByteCnt,sizeof(unsigned char));
  4090                        	.line	397
  4091 09:802A: F4 01 00     	pea	#<$1
  4092 09:802D: A0 09 00     	ldy	#$9
  4093 09:8030: B7 05        	lda	[<L120+current_record_1],Y
  4094 09:8032: 29 FF 00     	and	#$ff
  4095 09:8035: 48           	pha
  4096 09:8036: 22 xx xx xx  	jsl	~~k_calloc
  4097 09:803A: 85 01        	sta	<R0
  4098 09:803C: 86 03        	stx	<R0+2
  4099 09:803E: A5 01        	lda	<R0
  4100 09:8040: A0 0A 00     	ldy	#$a
  4101 09:8043: 97 05        	sta	[<L120+current_record_1],Y
  4102 09:8045: A5 03        	lda	<R0+2
  4103 09:8047: A0 0C 00     	ldy	#$c
  4104 09:804A: 97 05        	sta	[<L120+current_record_1],Y
  4105                        ;  if(current_record->data == NULL)
  4106                        	.line	398
  4107                        ;    {
  4108 09:804C: A0 0A 00     	ldy	#$a
  4109 09:804F: B7 05        	lda	[<L120+current_record_1],Y
  4110 09:8051: A0 0C 00     	ldy	#$c
  Thu Dec  3 2020 22:25                                                Page 78


  4111 09:8054: 17 05        	ora	[<L120+current_record_1],Y
  4112 09:8056: F0 03        	beq	L126
  4113 09:8058: 82 12 00     	brl	L10170
  4114                        L126:
  4115                        	.line	399
  4116                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record LCONST : %d bytes requir
                    ed.\n",current_record->ByteCnt);
  4117                        ;      mem_free_CONST(current_record);
  4118                        	.line	401
  4119 09:805B: D4 07        	pei	<L120+current_record_1+2
  4120 09:805D: D4 05        	pei	<L120+current_record_1
  4121 09:805F: 22 56 AD 09  	jsl	~~mem_free_CONST
  4122                        ;      return(NULL);
  4123                        	.line	402
  4124 09:8063: A9 00 00     	lda	#$0
  4125 09:8066: AA           	tax
  4126 09:8067: A9 00 00     	lda	#$0
  4127 09:806A: 82 64 FF     	brl	L123
  4128                        ;    }
  4129                        	.line	403
  4130                        ;  
  4131                        ;  /* Copie les Data */
  4132                        ;  memcpy(current_record->data,&data[1],current_re
                    cord->ByteCnt);
  4133                        L10170:
  4134                        	.line	406
  4135 09:806D: A0 09 00     	ldy	#$9
  4136 09:8070: B7 05        	lda	[<L120+current_record_1],Y
  4137 09:8072: 29 FF 00     	and	#$ff
  4138 09:8075: 48           	pha
  4139 09:8076: 18           	clc
  4140 09:8077: A9 01 00     	lda	#$1
  4141 09:807A: 65 0C        	adc	<L119+data_0
  4142 09:807C: 85 01        	sta	<R0
  4143 09:807E: A9 00 00     	lda	#$0
  4144 09:8081: 65 0E        	adc	<L119+data_0+2
  4145 09:8083: 85 03        	sta	<R0+2
  4146 09:8085: D4 03        	pei	<R0+2
  4147 09:8087: D4 01        	pei	<R0
  4148 09:8089: A0 0C 00     	ldy	#$c
  4149 09:808C: B7 05        	lda	[<L120+current_record_1],Y
  4150 09:808E: 48           	pha
  4151 09:808F: A0 0A 00     	ldy	#$a
  4152 09:8092: B7 05        	lda	[<L120+current_record_1],Y
  4153 09:8094: 48           	pha
  4154 09:8095: 22 xx xx xx  	jsl	~~memcpy
  4155                        ;
  4156                        ;  /* Renvoie la structure */
  4157                        ;  *record_length_rtn = 1 + current_record->ByteCn
                    t;
  4158                        	.line	409
  4159 09:8099: A0 09 00     	ldy	#$9
  4160 09:809C: B7 05        	lda	[<L120+current_record_1],Y
  4161 09:809E: 29 FF 00     	and	#$ff
  4162 09:80A1: 85 01        	sta	<R0
  4163 09:80A3: A5 01        	lda	<R0
  4164 09:80A5: 1A           	ina
  Thu Dec  3 2020 22:25                                                Page 79


  4165 09:80A6: 87 14        	sta	[<L119+record_length_rtn_0]
  4166                        ;  return(current_record);
  4167                        	.line	410
  4168 09:80A8: A6 07        	ldx	<L120+current_record_1+2
  4169 09:80AA: A5 05        	lda	<L120+current_record_1
  4170 09:80AC: 82 22 FF     	brl	L123
  4171                        ;}
  4172                        	.line	411
  4173                        	.endblock	411
  4174             00000008   L119	equ	8
  4175             00000005   L120	equ	5
  4176 09:80AF:              	ends
  4177                        	efunc
  4178                        	.endfunc	411,5,8
  4179                        	.line	411
  4180                        ;
  4181                        ;
  4182                        ;/************************************************
                    *****/
  4183                        ;/*  DecodeRecordALIGN() :  Décodage du Record ALI
                    GN. */
  4184                        ;/************************************************
                    *****/
  4185                        ;static void *DecodeRecordALIGN(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4186                        ;{
  4187                        	.line	417
  4188                        	.line	418
  4189                        	LOADER
  4190                        	func
  4191                        	.function	418
  4192                        ~~DecodeRecordALIGN:
  4193                        	longa	on
  4194                        	longi	on
  4195 09:80AF: 3B           	tsc
  4196 09:80B0: 38           	sec
  4197 09:80B1: E9 08 00     	sbc	#L127
  4198 09:80B4: 1B           	tcs
  4199 09:80B5: 0B           	phd
  4200 09:80B6: 5B           	tcd
  4201             00000004   data_0	set	4
  4202             00000008   file_offset_0	set	8
  4203             0000000A   segment_offset_0	set	10
  4204             0000000C   record_length_rtn_0	set	12
  4205                        	.block	418
  4206                        ;  struct record_ALIGN *current_record;
  4207                        ;
  4208                        ;  /* Allocation mémoire */
  4209                        ;  current_record = (struct record_ALIGN *) k_call
                    oc(1,sizeof(struct record_ALIGN));
  4210             00000000   current_record_1	set	0
  4211                        	.sym	current_record,0,138,1,32,76
  4212                        	.sym	data,4,142,6,32
  4213                        	.sym	file_offset,8,5,6,16
  4214                        	.sym	segment_offset,10,5,6,16
  4215                        	.sym	record_length_rtn,12,133,6,32
  4216                        	.line	422
  Thu Dec  3 2020 22:25                                                Page 80


  4217 09:80B7: F4 09 00     	pea	#<$9
  4218 09:80BA: F4 01 00     	pea	#<$1
  4219 09:80BD: 22 xx xx xx  	jsl	~~k_calloc
  4220 09:80C1: 85 05        	sta	<L128+current_record_1
  4221 09:80C3: 86 07        	stx	<L128+current_record_1+2
  4222                        ;  if(current_record == NULL)
  4223                        	.line	423
  4224                        ;    {
  4225 09:80C5: A5 05        	lda	<L128+current_record_1
  4226 09:80C7: 05 07        	ora	<L128+current_record_1+2
  4227 09:80C9: F0 03        	beq	L130
  4228 09:80CB: 82 19 00     	brl	L10171
  4229                        L130:
  4230                        	.line	424
  4231                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4232                        ;      return(NULL);
  4233                        	.line	426
  4234 09:80CE: A9 00 00     	lda	#$0
  4235 09:80D1: AA           	tax
  4236 09:80D2: A9 00 00     	lda	#$0
  4237                        L131:
  4238 09:80D5: A8           	tay
  4239 09:80D6: A5 0A        	lda	<L127+2
  4240 09:80D8: 85 16        	sta	<L127+2+12
  4241 09:80DA: A5 09        	lda	<L127+1
  4242 09:80DC: 85 15        	sta	<L127+1+12
  4243 09:80DE: 2B           	pld
  4244 09:80DF: 3B           	tsc
  4245 09:80E0: 18           	clc
  4246 09:80E1: 69 14 00     	adc	#L127+12
  4247 09:80E4: 1B           	tcs
  4248 09:80E5: 98           	tya
  4249 09:80E6: 6B           	rtl
  4250                        ;    }
  4251                        	.line	427
  4252                        ;
  4253                        ;  /* Offset */
  4254                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4255                        L10171:
  4256                        	.line	430
  4257 09:80E7: A0 00 00     	ldy	#$0
  4258 09:80EA: A5 10        	lda	<L127+file_offset_0
  4259 09:80EC: 10 01        	bpl	L132
  4260 09:80EE: 88           	dey
  4261                        L132:
  4262 09:80EF: 85 01        	sta	<R0
  4263 09:80F1: 84 03        	sty	<R0+2
  4264 09:80F3: A5 01        	lda	<R0
  4265 09:80F5: 87 05        	sta	[<L128+current_record_1]
  4266 09:80F7: A5 03        	lda	<R0+2
  4267 09:80F9: A0 02 00     	ldy	#$2
  4268 09:80FC: 97 05        	sta	[<L128+current_record_1],Y
  4269                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4270                        	.line	431
  4271 09:80FE: A0 00 00     	ldy	#$0
  Thu Dec  3 2020 22:25                                                Page 81


  4272 09:8101: A5 12        	lda	<L127+segment_offset_0
  4273 09:8103: 10 01        	bpl	L133
  4274 09:8105: 88           	dey
  4275                        L133:
  4276 09:8106: 85 01        	sta	<R0
  4277 09:8108: 84 03        	sty	<R0+2
  4278 09:810A: A5 01        	lda	<R0
  4279 09:810C: A0 04 00     	ldy	#$4
  4280 09:810F: 97 05        	sta	[<L128+current_record_1],Y
  4281 09:8111: A5 03        	lda	<R0+2
  4282 09:8113: A0 06 00     	ldy	#$6
  4283 09:8116: 97 05        	sta	[<L128+current_record_1],Y
  4284                        ;
  4285                        ;  /* Operation Code */
  4286                        ;  current_record->operation_code = data[0];
  4287                        	.line	434
  4288 09:8118: E2 20        	sep	#$20
  4289                        	longa	off
  4290 09:811A: A7 0C        	lda	[<L127+data_0]
  4291 09:811C: A0 08 00     	ldy	#$8
  4292 09:811F: 97 05        	sta	[<L128+current_record_1],Y
  4293 09:8121: C2 20        	rep	#$20
  4294                        	longa	on
  4295                        ;
  4296                        ;  /* Renvoie la structure */
  4297                        ;  return(current_record);
  4298                        	.line	437
  4299 09:8123: A6 07        	ldx	<L128+current_record_1+2
  4300 09:8125: A5 05        	lda	<L128+current_record_1
  4301 09:8127: 82 AB FF     	brl	L131
  4302                        ;}
  4303                        	.line	438
  4304                        	.endblock	438
  4305             00000008   L127	equ	8
  4306             00000005   L128	equ	5
  4307 09:812A:              	ends
  4308                        	efunc
  4309                        	.endfunc	438,5,8
  4310                        	.line	438
  4311                        ;
  4312                        ;
  4313                        ;/************************************************
                    */
  4314                        ;/*  DecodeRecordORG() :  Décodage du Record ORG. 
                    */
  4315                        ;/************************************************
                    */
  4316                        ;static void *DecodeRecordORG(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  4317                        ;{  
  4318                        	.line	444
  4319                        	.line	445
  4320                        	LOADER
  4321                        	func
  4322                        	.function	445
  4323                        ~~DecodeRecordORG:
  4324                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 82


  4325                        	longi	on
  4326 09:812A: 3B           	tsc
  4327 09:812B: 38           	sec
  4328 09:812C: E9 08 00     	sbc	#L134
  4329 09:812F: 1B           	tcs
  4330 09:8130: 0B           	phd
  4331 09:8131: 5B           	tcd
  4332             00000004   data_0	set	4
  4333             00000008   file_offset_0	set	8
  4334             0000000A   segment_offset_0	set	10
  4335             0000000C   record_length_rtn_0	set	12
  4336                        	.block	445
  4337                        ;  struct record_ORG *current_record;
  4338                        ;
  4339                        ;  /* Allocation mémoire */
  4340                        ;  current_record = (struct record_ORG *) k_calloc
                    (1,sizeof(struct record_ORG));
  4341             00000000   current_record_1	set	0
  4342                        	.sym	current_record,0,138,1,32,77
  4343                        	.sym	data,4,142,6,32
  4344                        	.sym	file_offset,8,5,6,16
  4345                        	.sym	segment_offset,10,5,6,16
  4346                        	.sym	record_length_rtn,12,133,6,32
  4347                        	.line	449
  4348 09:8132: F4 09 00     	pea	#<$9
  4349 09:8135: F4 01 00     	pea	#<$1
  4350 09:8138: 22 xx xx xx  	jsl	~~k_calloc
  4351 09:813C: 85 05        	sta	<L135+current_record_1
  4352 09:813E: 86 07        	stx	<L135+current_record_1+2
  4353                        ;  if(current_record == NULL)
  4354                        	.line	450
  4355                        ;    {
  4356 09:8140: A5 05        	lda	<L135+current_record_1
  4357 09:8142: 05 07        	ora	<L135+current_record_1+2
  4358 09:8144: F0 03        	beq	L137
  4359 09:8146: 82 19 00     	brl	L10172
  4360                        L137:
  4361                        	.line	451
  4362                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4363                        ;      return(NULL);
  4364                        	.line	453
  4365 09:8149: A9 00 00     	lda	#$0
  4366 09:814C: AA           	tax
  4367 09:814D: A9 00 00     	lda	#$0
  4368                        L138:
  4369 09:8150: A8           	tay
  4370 09:8151: A5 0A        	lda	<L134+2
  4371 09:8153: 85 16        	sta	<L134+2+12
  4372 09:8155: A5 09        	lda	<L134+1
  4373 09:8157: 85 15        	sta	<L134+1+12
  4374 09:8159: 2B           	pld
  4375 09:815A: 3B           	tsc
  4376 09:815B: 18           	clc
  4377 09:815C: 69 14 00     	adc	#L134+12
  4378 09:815F: 1B           	tcs
  4379 09:8160: 98           	tya
  4380 09:8161: 6B           	rtl
  Thu Dec  3 2020 22:25                                                Page 83


  4381                        ;    }
  4382                        	.line	454
  4383                        ;
  4384                        ;  /* Offset */
  4385                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4386                        L10172:
  4387                        	.line	457
  4388 09:8162: A0 00 00     	ldy	#$0
  4389 09:8165: A5 10        	lda	<L134+file_offset_0
  4390 09:8167: 10 01        	bpl	L139
  4391 09:8169: 88           	dey
  4392                        L139:
  4393 09:816A: 85 01        	sta	<R0
  4394 09:816C: 84 03        	sty	<R0+2
  4395 09:816E: A5 01        	lda	<R0
  4396 09:8170: 87 05        	sta	[<L135+current_record_1]
  4397 09:8172: A5 03        	lda	<R0+2
  4398 09:8174: A0 02 00     	ldy	#$2
  4399 09:8177: 97 05        	sta	[<L135+current_record_1],Y
  4400                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4401                        	.line	458
  4402 09:8179: A0 00 00     	ldy	#$0
  4403 09:817C: A5 12        	lda	<L134+segment_offset_0
  4404 09:817E: 10 01        	bpl	L140
  4405 09:8180: 88           	dey
  4406                        L140:
  4407 09:8181: 85 01        	sta	<R0
  4408 09:8183: 84 03        	sty	<R0+2
  4409 09:8185: A5 01        	lda	<R0
  4410 09:8187: A0 04 00     	ldy	#$4
  4411 09:818A: 97 05        	sta	[<L135+current_record_1],Y
  4412 09:818C: A5 03        	lda	<R0+2
  4413 09:818E: A0 06 00     	ldy	#$6
  4414 09:8191: 97 05        	sta	[<L135+current_record_1],Y
  4415                        ;
  4416                        ;  /* Operation Code */
  4417                        ;  current_record->operation_code = data[0];
  4418                        	.line	461
  4419 09:8193: E2 20        	sep	#$20
  4420                        	longa	off
  4421 09:8195: A7 0C        	lda	[<L134+data_0]
  4422 09:8197: A0 08 00     	ldy	#$8
  4423 09:819A: 97 05        	sta	[<L135+current_record_1],Y
  4424 09:819C: C2 20        	rep	#$20
  4425                        	longa	on
  4426                        ;
  4427                        ;  /* Renvoie la structure */
  4428                        ;  return(current_record);
  4429                        	.line	464
  4430 09:819E: A6 07        	ldx	<L135+current_record_1+2
  4431 09:81A0: A5 05        	lda	<L135+current_record_1
  4432 09:81A2: 82 AB FF     	brl	L138
  4433                        ;}
  4434                        	.line	465
  4435                        	.endblock	465
  4436             00000008   L134	equ	8
  Thu Dec  3 2020 22:25                                                Page 84


  4437             00000005   L135	equ	5
  4438 09:81A5:              	ends
  4439                        	efunc
  4440                        	.endfunc	465,5,8
  4441                        	.line	465
  4442                        ;
  4443                        ;
  4444                        ;/************************************************
                    *****/
  4445                        ;/*  DecodeRecordRELOC() :  Décodage du Record REL
                    OC. */
  4446                        ;/************************************************
                    *****/
  4447                        ;static void *DecodeRecordRELOC(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4448                        ;{
  4449                        	.line	471
  4450                        	.line	472
  4451                        	LOADER
  4452                        	func
  4453                        	.function	472
  4454                        ~~DecodeRecordRELOC:
  4455                        	longa	on
  4456                        	longi	on
  4457 09:81A5: 3B           	tsc
  4458 09:81A6: 38           	sec
  4459 09:81A7: E9 0C 00     	sbc	#L141
  4460 09:81AA: 1B           	tcs
  4461 09:81AB: 0B           	phd
  4462 09:81AC: 5B           	tcd
  4463             00000004   data_0	set	4
  4464             00000008   file_offset_0	set	8
  4465             0000000A   segment_offset_0	set	10
  4466             0000000C   record_length_rtn_0	set	12
  4467                        	.block	472
  4468                        ;  struct record_RELOC *current_record;
  4469                        ;
  4470                        ;  /* Allocation mémoire */
  4471                        ;  current_record = (struct record_RELOC *) k_call
                    oc(1,sizeof(struct record_RELOC));
  4472             00000000   current_record_1	set	0
  4473                        	.sym	current_record,0,138,1,32,78
  4474                        	.sym	data,4,142,6,32
  4475                        	.sym	file_offset,8,5,6,16
  4476                        	.sym	segment_offset,10,5,6,16
  4477                        	.sym	record_length_rtn,12,133,6,32
  4478                        	.line	476
  4479 09:81AD: F4 13 00     	pea	#<$13
  4480 09:81B0: F4 01 00     	pea	#<$1
  4481 09:81B3: 22 xx xx xx  	jsl	~~k_calloc
  4482 09:81B7: 85 09        	sta	<L142+current_record_1
  4483 09:81B9: 86 0B        	stx	<L142+current_record_1+2
  4484                        ;  if(current_record == NULL)
  4485                        	.line	477
  4486                        ;    {
  4487 09:81BB: A5 09        	lda	<L142+current_record_1
  4488 09:81BD: 05 0B        	ora	<L142+current_record_1+2
  Thu Dec  3 2020 22:25                                                Page 85


  4489 09:81BF: F0 03        	beq	L144
  4490 09:81C1: 82 19 00     	brl	L10173
  4491                        L144:
  4492                        	.line	478
  4493                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4494                        ;      return(NULL);
  4495                        	.line	480
  4496 09:81C4: A9 00 00     	lda	#$0
  4497 09:81C7: AA           	tax
  4498 09:81C8: A9 00 00     	lda	#$0
  4499                        L145:
  4500 09:81CB: A8           	tay
  4501 09:81CC: A5 0E        	lda	<L141+2
  4502 09:81CE: 85 1A        	sta	<L141+2+12
  4503 09:81D0: A5 0D        	lda	<L141+1
  4504 09:81D2: 85 19        	sta	<L141+1+12
  4505 09:81D4: 2B           	pld
  4506 09:81D5: 3B           	tsc
  4507 09:81D6: 18           	clc
  4508 09:81D7: 69 18 00     	adc	#L141+12
  4509 09:81DA: 1B           	tcs
  4510 09:81DB: 98           	tya
  4511 09:81DC: 6B           	rtl
  4512                        ;    }
  4513                        	.line	481
  4514                        ;
  4515                        ;  /* Offset */
  4516                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4517                        L10173:
  4518                        	.line	484
  4519 09:81DD: A0 00 00     	ldy	#$0
  4520 09:81E0: A5 14        	lda	<L141+file_offset_0
  4521 09:81E2: 10 01        	bpl	L146
  4522 09:81E4: 88           	dey
  4523                        L146:
  4524 09:81E5: 85 01        	sta	<R0
  4525 09:81E7: 84 03        	sty	<R0+2
  4526 09:81E9: A5 01        	lda	<R0
  4527 09:81EB: 87 09        	sta	[<L142+current_record_1]
  4528 09:81ED: A5 03        	lda	<R0+2
  4529 09:81EF: A0 02 00     	ldy	#$2
  4530 09:81F2: 97 09        	sta	[<L142+current_record_1],Y
  4531                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4532                        	.line	485
  4533 09:81F4: A0 00 00     	ldy	#$0
  4534 09:81F7: A5 16        	lda	<L141+segment_offset_0
  4535 09:81F9: 10 01        	bpl	L147
  4536 09:81FB: 88           	dey
  4537                        L147:
  4538 09:81FC: 85 01        	sta	<R0
  4539 09:81FE: 84 03        	sty	<R0+2
  4540 09:8200: A5 01        	lda	<R0
  4541 09:8202: A0 04 00     	ldy	#$4
  4542 09:8205: 97 09        	sta	[<L142+current_record_1],Y
  4543 09:8207: A5 03        	lda	<R0+2
  Thu Dec  3 2020 22:25                                                Page 86


  4544 09:8209: A0 06 00     	ldy	#$6
  4545 09:820C: 97 09        	sta	[<L142+current_record_1],Y
  4546                        ;
  4547                        ;  /* Operation Code */
  4548                        ;  current_record->operation_code = data[0];
  4549                        	.line	488
  4550 09:820E: E2 20        	sep	#$20
  4551                        	longa	off
  4552 09:8210: A7 10        	lda	[<L141+data_0]
  4553 09:8212: A0 08 00     	ldy	#$8
  4554 09:8215: 97 09        	sta	[<L142+current_record_1],Y
  4555 09:8217: C2 20        	rep	#$20
  4556                        	longa	on
  4557                        ;
  4558                        ;  /* Récupère les données */
  4559                        ;  current_record->ByteCnt = data[1];
  4560                        	.line	491
  4561 09:8219: E2 20        	sep	#$20
  4562                        	longa	off
  4563 09:821B: A0 01 00     	ldy	#$1
  4564 09:821E: B7 10        	lda	[<L141+data_0],Y
  4565 09:8220: A0 09 00     	ldy	#$9
  4566 09:8223: 97 09        	sta	[<L142+current_record_1],Y
  4567 09:8225: C2 20        	rep	#$20
  4568                        	longa	on
  4569                        ;  current_record->BitShiftCnt = data[2];
  4570                        	.line	492
  4571 09:8227: E2 20        	sep	#$20
  4572                        	longa	off
  4573 09:8229: A0 02 00     	ldy	#$2
  4574 09:822C: B7 10        	lda	[<L141+data_0],Y
  4575 09:822E: A0 0A 00     	ldy	#$a
  4576 09:8231: 97 09        	sta	[<L142+current_record_1],Y
  4577 09:8233: C2 20        	rep	#$20
  4578                        	longa	on
  4579                        ;  memcpy(&current_record->OffsetPatch,&data[3],si
                    zeof(DWORD));
  4580                        	.line	493
  4581 09:8235: F4 04 00     	pea	#<$4
  4582 09:8238: 18           	clc
  4583 09:8239: A9 03 00     	lda	#$3
  4584 09:823C: 65 10        	adc	<L141+data_0
  4585 09:823E: 85 01        	sta	<R0
  4586 09:8240: A9 00 00     	lda	#$0
  4587 09:8243: 65 12        	adc	<L141+data_0+2
  4588 09:8245: 85 03        	sta	<R0+2
  4589 09:8247: D4 03        	pei	<R0+2
  4590 09:8249: D4 01        	pei	<R0
  4591 09:824B: 18           	clc
  4592 09:824C: A9 0B 00     	lda	#$b
  4593 09:824F: 65 09        	adc	<L142+current_record_1
  4594 09:8251: 85 05        	sta	<R1
  4595 09:8253: A9 00 00     	lda	#$0
  4596 09:8256: 65 0B        	adc	<L142+current_record_1+2
  4597 09:8258: 85 07        	sta	<R1+2
  4598 09:825A: D4 07        	pei	<R1+2
  4599 09:825C: D4 05        	pei	<R1
  4600 09:825E: 22 xx xx xx  	jsl	~~memcpy
  Thu Dec  3 2020 22:25                                                Page 87


  4601                        ;  memcpy(&current_record->OffsetReference,&data[7
                    ],sizeof(DWORD));
  4602                        	.line	494
  4603 09:8262: F4 04 00     	pea	#<$4
  4604 09:8265: 18           	clc
  4605 09:8266: A9 07 00     	lda	#$7
  4606 09:8269: 65 10        	adc	<L141+data_0
  4607 09:826B: 85 01        	sta	<R0
  4608 09:826D: A9 00 00     	lda	#$0
  4609 09:8270: 65 12        	adc	<L141+data_0+2
  4610 09:8272: 85 03        	sta	<R0+2
  4611 09:8274: D4 03        	pei	<R0+2
  4612 09:8276: D4 01        	pei	<R0
  4613 09:8278: 18           	clc
  4614 09:8279: A9 0F 00     	lda	#$f
  4615 09:827C: 65 09        	adc	<L142+current_record_1
  4616 09:827E: 85 05        	sta	<R1
  4617 09:8280: A9 00 00     	lda	#$0
  4618 09:8283: 65 0B        	adc	<L142+current_record_1+2
  4619 09:8285: 85 07        	sta	<R1+2
  4620 09:8287: D4 07        	pei	<R1+2
  4621 09:8289: D4 05        	pei	<R1
  4622 09:828B: 22 xx xx xx  	jsl	~~memcpy
  4623                        ;
  4624                        ;  /* Conserve ce RELOC */
  4625                        ;  AddReloc(current_record->ByteCnt,current_record
                    ->BitShiftCnt,current_record->OffsetPatch,current_record->Of
                    fsetReference,RECORD_RELOC);
  4626                        	.line	497
  4627 09:828F: F4 01 00     	pea	#<$1
  4628 09:8292: A0 11 00     	ldy	#$11
  4629 09:8295: B7 09        	lda	[<L142+current_record_1],Y
  4630 09:8297: 48           	pha
  4631 09:8298: A0 0F 00     	ldy	#$f
  4632 09:829B: B7 09        	lda	[<L142+current_record_1],Y
  4633 09:829D: 48           	pha
  4634 09:829E: A0 0D 00     	ldy	#$d
  4635 09:82A1: B7 09        	lda	[<L142+current_record_1],Y
  4636 09:82A3: 48           	pha
  4637 09:82A4: A0 0B 00     	ldy	#$b
  4638 09:82A7: B7 09        	lda	[<L142+current_record_1],Y
  4639 09:82A9: 48           	pha
  4640 09:82AA: A0 0A 00     	ldy	#$a
  4641 09:82AD: B7 09        	lda	[<L142+current_record_1],Y
  4642 09:82AF: 48           	pha
  4643 09:82B0: A0 09 00     	ldy	#$9
  4644 09:82B3: B7 09        	lda	[<L142+current_record_1],Y
  4645 09:82B5: 48           	pha
  4646 09:82B6: 22 33 AC 09  	jsl	~~AddReloc
  4647                        ;
  4648                        ;  /* Renvoie la structure */
  4649                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
                    DWORD);
  4650                        	.line	500
  4651 09:82BA: A9 0B 00     	lda	#$b
  4652 09:82BD: 87 18        	sta	[<L141+record_length_rtn_0]
  4653                        ;  return(current_record);
  4654                        	.line	501
  Thu Dec  3 2020 22:25                                                Page 88


  4655 09:82BF: A6 0B        	ldx	<L142+current_record_1+2
  4656 09:82C1: A5 09        	lda	<L142+current_record_1
  4657 09:82C3: 82 05 FF     	brl	L145
  4658                        ;}
  4659                        	.line	502
  4660                        	.endblock	502
  4661             0000000C   L141	equ	12
  4662             00000009   L142	equ	9
  4663 09:82C6:              	ends
  4664                        	efunc
  4665                        	.endfunc	502,9,12
  4666                        	.line	502
  4667                        ;
  4668                        ;
  4669                        ;/************************************************
                    ***********/
  4670                        ;/*  DecodeRecordINTERSEG() :  Décodage du Record 
                    INTERSEG. */
  4671                        ;/************************************************
                    ***********/
  4672                        ;static void *DecodeRecordINTERSEG(unsigned char *
                    data, int file_offset, int segment_offset, int *record_lengt
                    h_rtn)
  4673                        ;{
  4674                        	.line	508
  4675                        	.line	509
  4676                        	LOADER
  4677                        	func
  4678                        	.function	509
  4679                        ~~DecodeRecordINTERSEG:
  4680                        	longa	on
  4681                        	longi	on
  4682 09:82C6: 3B           	tsc
  4683 09:82C7: 38           	sec
  4684 09:82C8: E9 0C 00     	sbc	#L148
  4685 09:82CB: 1B           	tcs
  4686 09:82CC: 0B           	phd
  4687 09:82CD: 5B           	tcd
  4688             00000004   data_0	set	4
  4689             00000008   file_offset_0	set	8
  4690             0000000A   segment_offset_0	set	10
  4691             0000000C   record_length_rtn_0	set	12
  4692                        	.block	509
  4693                        ;  struct record_INTERSEG *current_record;
  4694                        ;
  4695                        ;  /* Allocation mémoire */
  4696                        ;  current_record = (struct record_INTERSEG *) k_c
                    alloc(1,sizeof(struct record_INTERSEG));
  4697             00000000   current_record_1	set	0
  4698                        	.sym	current_record,0,138,1,32,79
  4699                        	.sym	data,4,142,6,32
  4700                        	.sym	file_offset,8,5,6,16
  4701                        	.sym	segment_offset,10,5,6,16
  4702                        	.sym	record_length_rtn,12,133,6,32
  4703                        	.line	513
  4704 09:82CE: F4 17 00     	pea	#<$17
  4705 09:82D1: F4 01 00     	pea	#<$1
  4706 09:82D4: 22 xx xx xx  	jsl	~~k_calloc
  Thu Dec  3 2020 22:25                                                Page 89


  4707 09:82D8: 85 09        	sta	<L149+current_record_1
  4708 09:82DA: 86 0B        	stx	<L149+current_record_1+2
  4709                        ;  if(current_record == NULL)
  4710                        	.line	514
  4711                        ;    {
  4712 09:82DC: A5 09        	lda	<L149+current_record_1
  4713 09:82DE: 05 0B        	ora	<L149+current_record_1+2
  4714 09:82E0: F0 03        	beq	L151
  4715 09:82E2: 82 19 00     	brl	L10174
  4716                        L151:
  4717                        	.line	515
  4718                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4719                        ;      return(NULL);
  4720                        	.line	517
  4721 09:82E5: A9 00 00     	lda	#$0
  4722 09:82E8: AA           	tax
  4723 09:82E9: A9 00 00     	lda	#$0
  4724                        L152:
  4725 09:82EC: A8           	tay
  4726 09:82ED: A5 0E        	lda	<L148+2
  4727 09:82EF: 85 1A        	sta	<L148+2+12
  4728 09:82F1: A5 0D        	lda	<L148+1
  4729 09:82F3: 85 19        	sta	<L148+1+12
  4730 09:82F5: 2B           	pld
  4731 09:82F6: 3B           	tsc
  4732 09:82F7: 18           	clc
  4733 09:82F8: 69 18 00     	adc	#L148+12
  4734 09:82FB: 1B           	tcs
  4735 09:82FC: 98           	tya
  4736 09:82FD: 6B           	rtl
  4737                        ;    }
  4738                        	.line	518
  4739                        ;
  4740                        ;  /* Offset */
  4741                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  4742                        L10174:
  4743                        	.line	521
  4744 09:82FE: A0 00 00     	ldy	#$0
  4745 09:8301: A5 14        	lda	<L148+file_offset_0
  4746 09:8303: 10 01        	bpl	L153
  4747 09:8305: 88           	dey
  4748                        L153:
  4749 09:8306: 85 01        	sta	<R0
  4750 09:8308: 84 03        	sty	<R0+2
  4751 09:830A: A5 01        	lda	<R0
  4752 09:830C: 87 09        	sta	[<L149+current_record_1]
  4753 09:830E: A5 03        	lda	<R0+2
  4754 09:8310: A0 02 00     	ldy	#$2
  4755 09:8313: 97 09        	sta	[<L149+current_record_1],Y
  4756                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  4757                        	.line	522
  4758 09:8315: A0 00 00     	ldy	#$0
  4759 09:8318: A5 16        	lda	<L148+segment_offset_0
  4760 09:831A: 10 01        	bpl	L154
  4761 09:831C: 88           	dey
  Thu Dec  3 2020 22:25                                                Page 90


  4762                        L154:
  4763 09:831D: 85 01        	sta	<R0
  4764 09:831F: 84 03        	sty	<R0+2
  4765 09:8321: A5 01        	lda	<R0
  4766 09:8323: A0 04 00     	ldy	#$4
  4767 09:8326: 97 09        	sta	[<L149+current_record_1],Y
  4768 09:8328: A5 03        	lda	<R0+2
  4769 09:832A: A0 06 00     	ldy	#$6
  4770 09:832D: 97 09        	sta	[<L149+current_record_1],Y
  4771                        ;
  4772                        ;  /* Operation Code */
  4773                        ;  current_record->operation_code = data[0];
  4774                        	.line	525
  4775 09:832F: E2 20        	sep	#$20
  4776                        	longa	off
  4777 09:8331: A7 10        	lda	[<L148+data_0]
  4778 09:8333: A0 08 00     	ldy	#$8
  4779 09:8336: 97 09        	sta	[<L149+current_record_1],Y
  4780 09:8338: C2 20        	rep	#$20
  4781                        	longa	on
  4782                        ;
  4783                        ;  /** Récupère les informations **/
  4784                        ;  current_record->ByteCnt = data[1];
  4785                        	.line	528
  4786 09:833A: E2 20        	sep	#$20
  4787                        	longa	off
  4788 09:833C: A0 01 00     	ldy	#$1
  4789 09:833F: B7 10        	lda	[<L148+data_0],Y
  4790 09:8341: A0 09 00     	ldy	#$9
  4791 09:8344: 97 09        	sta	[<L149+current_record_1],Y
  4792 09:8346: C2 20        	rep	#$20
  4793                        	longa	on
  4794                        ;  current_record->BitShiftCnt = data[2];
  4795                        	.line	529
  4796 09:8348: E2 20        	sep	#$20
  4797                        	longa	off
  4798 09:834A: A0 02 00     	ldy	#$2
  4799 09:834D: B7 10        	lda	[<L148+data_0],Y
  4800 09:834F: A0 0A 00     	ldy	#$a
  4801 09:8352: 97 09        	sta	[<L149+current_record_1],Y
  4802 09:8354: C2 20        	rep	#$20
  4803                        	longa	on
  4804                        ;  memcpy(&current_record->OffsetPatch,&data[3],si
                    zeof(DWORD));
  4805                        	.line	530
  4806 09:8356: F4 04 00     	pea	#<$4
  4807 09:8359: 18           	clc
  4808 09:835A: A9 03 00     	lda	#$3
  4809 09:835D: 65 10        	adc	<L148+data_0
  4810 09:835F: 85 01        	sta	<R0
  4811 09:8361: A9 00 00     	lda	#$0
  4812 09:8364: 65 12        	adc	<L148+data_0+2
  4813 09:8366: 85 03        	sta	<R0+2
  4814 09:8368: D4 03        	pei	<R0+2
  4815 09:836A: D4 01        	pei	<R0
  4816 09:836C: 18           	clc
  4817 09:836D: A9 0B 00     	lda	#$b
  4818 09:8370: 65 09        	adc	<L149+current_record_1
  Thu Dec  3 2020 22:25                                                Page 91


  4819 09:8372: 85 05        	sta	<R1
  4820 09:8374: A9 00 00     	lda	#$0
  4821 09:8377: 65 0B        	adc	<L149+current_record_1+2
  4822 09:8379: 85 07        	sta	<R1+2
  4823 09:837B: D4 07        	pei	<R1+2
  4824 09:837D: D4 05        	pei	<R1
  4825 09:837F: 22 xx xx xx  	jsl	~~memcpy
  4826                        ;  memcpy(&current_record->FileNum,&data[7],sizeof
                    (WORD));
  4827                        	.line	531
  4828 09:8383: F4 02 00     	pea	#<$2
  4829 09:8386: 18           	clc
  4830 09:8387: A9 07 00     	lda	#$7
  4831 09:838A: 65 10        	adc	<L148+data_0
  4832 09:838C: 85 01        	sta	<R0
  4833 09:838E: A9 00 00     	lda	#$0
  4834 09:8391: 65 12        	adc	<L148+data_0+2
  4835 09:8393: 85 03        	sta	<R0+2
  4836 09:8395: D4 03        	pei	<R0+2
  4837 09:8397: D4 01        	pei	<R0
  4838 09:8399: 18           	clc
  4839 09:839A: A9 0F 00     	lda	#$f
  4840 09:839D: 65 09        	adc	<L149+current_record_1
  4841 09:839F: 85 05        	sta	<R1
  4842 09:83A1: A9 00 00     	lda	#$0
  4843 09:83A4: 65 0B        	adc	<L149+current_record_1+2
  4844 09:83A6: 85 07        	sta	<R1+2
  4845 09:83A8: D4 07        	pei	<R1+2
  4846 09:83AA: D4 05        	pei	<R1
  4847 09:83AC: 22 xx xx xx  	jsl	~~memcpy
  4848                        ;  memcpy(&current_record->SegNum,&data[9],sizeof(
                    WORD));
  4849                        	.line	532
  4850 09:83B0: F4 02 00     	pea	#<$2
  4851 09:83B3: 18           	clc
  4852 09:83B4: A9 09 00     	lda	#$9
  4853 09:83B7: 65 10        	adc	<L148+data_0
  4854 09:83B9: 85 01        	sta	<R0
  4855 09:83BB: A9 00 00     	lda	#$0
  4856 09:83BE: 65 12        	adc	<L148+data_0+2
  4857 09:83C0: 85 03        	sta	<R0+2
  4858 09:83C2: D4 03        	pei	<R0+2
  4859 09:83C4: D4 01        	pei	<R0
  4860 09:83C6: 18           	clc
  4861 09:83C7: A9 11 00     	lda	#$11
  4862 09:83CA: 65 09        	adc	<L149+current_record_1
  4863 09:83CC: 85 05        	sta	<R1
  4864 09:83CE: A9 00 00     	lda	#$0
  4865 09:83D1: 65 0B        	adc	<L149+current_record_1+2
  4866 09:83D3: 85 07        	sta	<R1+2
  4867 09:83D5: D4 07        	pei	<R1+2
  4868 09:83D7: D4 05        	pei	<R1
  4869 09:83D9: 22 xx xx xx  	jsl	~~memcpy
  4870                        ;  memcpy(&current_record->OffsetReference,&data[1
                    1],sizeof(DWORD));
  4871                        	.line	533
  4872 09:83DD: F4 04 00     	pea	#<$4
  4873 09:83E0: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 92


  4874 09:83E1: A9 0B 00     	lda	#$b
  4875 09:83E4: 65 10        	adc	<L148+data_0
  4876 09:83E6: 85 01        	sta	<R0
  4877 09:83E8: A9 00 00     	lda	#$0
  4878 09:83EB: 65 12        	adc	<L148+data_0+2
  4879 09:83ED: 85 03        	sta	<R0+2
  4880 09:83EF: D4 03        	pei	<R0+2
  4881 09:83F1: D4 01        	pei	<R0
  4882 09:83F3: 18           	clc
  4883 09:83F4: A9 13 00     	lda	#$13
  4884 09:83F7: 65 09        	adc	<L149+current_record_1
  4885 09:83F9: 85 05        	sta	<R1
  4886 09:83FB: A9 00 00     	lda	#$0
  4887 09:83FE: 65 0B        	adc	<L149+current_record_1+2
  4888 09:8400: 85 07        	sta	<R1+2
  4889 09:8402: D4 07        	pei	<R1+2
  4890 09:8404: D4 05        	pei	<R1
  4891 09:8406: 22 xx xx xx  	jsl	~~memcpy
  4892                        ;
  4893                        ;  /* Conserve ce INTERSEG */
  4894                        ;  AddInterseg(current_record->ByteCnt,current_rec
                    ord->BitShiftCnt,current_record->OffsetPatch,current_record-
                    >OffsetReference,current_record->FileNum,current_record->Seg
                    Num,RECORD_INTERSEG);
  4895                        	.line	536
  4896 09:840A: F4 02 00     	pea	#<$2
  4897 09:840D: A0 11 00     	ldy	#$11
  4898 09:8410: B7 09        	lda	[<L149+current_record_1],Y
  4899 09:8412: 48           	pha
  4900 09:8413: A0 0F 00     	ldy	#$f
  4901 09:8416: B7 09        	lda	[<L149+current_record_1],Y
  4902 09:8418: 48           	pha
  4903 09:8419: A0 15 00     	ldy	#$15
  4904 09:841C: B7 09        	lda	[<L149+current_record_1],Y
  4905 09:841E: 48           	pha
  4906 09:841F: A0 13 00     	ldy	#$13
  4907 09:8422: B7 09        	lda	[<L149+current_record_1],Y
  4908 09:8424: 48           	pha
  4909 09:8425: A0 0D 00     	ldy	#$d
  4910 09:8428: B7 09        	lda	[<L149+current_record_1],Y
  4911 09:842A: 48           	pha
  4912 09:842B: A0 0B 00     	ldy	#$b
  4913 09:842E: B7 09        	lda	[<L149+current_record_1],Y
  4914 09:8430: 48           	pha
  4915 09:8431: A0 0A 00     	ldy	#$a
  4916 09:8434: B7 09        	lda	[<L149+current_record_1],Y
  4917 09:8436: 48           	pha
  4918 09:8437: A0 09 00     	ldy	#$9
  4919 09:843A: B7 09        	lda	[<L149+current_record_1],Y
  4920 09:843C: 48           	pha
  4921 09:843D: 22 A9 AC 09  	jsl	~~AddInterseg
  4922                        ;
  4923                        ;  /* Renvoie la structure */
  4924                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
                    DWORD) + 2*sizeof(WORD);
  4925                        	.line	539
  4926 09:8441: A9 0F 00     	lda	#$f
  4927 09:8444: 87 18        	sta	[<L148+record_length_rtn_0]
  Thu Dec  3 2020 22:25                                                Page 93


  4928                        ;  return(current_record);
  4929                        	.line	540
  4930 09:8446: A6 0B        	ldx	<L149+current_record_1+2
  4931 09:8448: A5 09        	lda	<L149+current_record_1
  4932 09:844A: 82 9F FE     	brl	L152
  4933                        ;}
  4934                        	.line	541
  4935                        	.endblock	541
  4936             0000000C   L148	equ	12
  4937             00000009   L149	equ	9
  4938 09:844D:              	ends
  4939                        	efunc
  4940                        	.endfunc	541,9,12
  4941                        	.line	541
  4942                        ;
  4943                        ;
  4944                        ;/************************************************
                    *****/
  4945                        ;/*  DecodeRecordUSING() :  Décodage du Record USI
                    NG. */
  4946                        ;/************************************************
                    *****/
  4947                        ;static void *DecodeRecordUSING(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  4948                        ;{
  4949                        	.line	547
  4950                        	.line	548
  4951                        	LOADER
  4952                        	func
  4953                        	.function	548
  4954                        ~~DecodeRecordUSING:
  4955                        	longa	on
  4956                        	longi	on
  4957 09:844D: 3B           	tsc
  4958 09:844E: 38           	sec
  4959 09:844F: E9 08 00     	sbc	#L155
  4960 09:8452: 1B           	tcs
  4961 09:8453: 0B           	phd
  4962 09:8454: 5B           	tcd
  4963             00000004   data_0	set	4
  4964             00000008   file_offset_0	set	8
  4965             0000000A   segment_offset_0	set	10
  4966             0000000C   record_length_rtn_0	set	12
  4967                        	.block	548
  4968                        ;  struct record_USING *current_record;
  4969                        ;
  4970                        ;  /* Allocation mémoire */
  4971                        ;  current_record = (struct record_USING *) k_call
                    oc(1,sizeof(struct record_USING));
  4972             00000000   current_record_1	set	0
  4973                        	.sym	current_record,0,138,1,32,80
  4974                        	.sym	data,4,142,6,32
  4975                        	.sym	file_offset,8,5,6,16
  4976                        	.sym	segment_offset,10,5,6,16
  4977                        	.sym	record_length_rtn,12,133,6,32
  4978                        	.line	552
  4979 09:8455: F4 09 00     	pea	#<$9
  Thu Dec  3 2020 22:25                                                Page 94


  4980 09:8458: F4 01 00     	pea	#<$1
  4981 09:845B: 22 xx xx xx  	jsl	~~k_calloc
  4982 09:845F: 85 05        	sta	<L156+current_record_1
  4983 09:8461: 86 07        	stx	<L156+current_record_1+2
  4984                        ;  if(current_record == NULL)
  4985                        	.line	553
  4986                        ;    {
  4987 09:8463: A5 05        	lda	<L156+current_record_1
  4988 09:8465: 05 07        	ora	<L156+current_record_1+2
  4989 09:8467: F0 03        	beq	L158
  4990 09:8469: 82 19 00     	brl	L10175
  4991                        L158:
  4992                        	.line	554
  4993                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  4994                        ;      return(NULL);
  4995                        	.line	556
  4996 09:846C: A9 00 00     	lda	#$0
  4997 09:846F: AA           	tax
  4998 09:8470: A9 00 00     	lda	#$0
  4999                        L159:
  5000 09:8473: A8           	tay
  5001 09:8474: A5 0A        	lda	<L155+2
  5002 09:8476: 85 16        	sta	<L155+2+12
  5003 09:8478: A5 09        	lda	<L155+1
  5004 09:847A: 85 15        	sta	<L155+1+12
  5005 09:847C: 2B           	pld
  5006 09:847D: 3B           	tsc
  5007 09:847E: 18           	clc
  5008 09:847F: 69 14 00     	adc	#L155+12
  5009 09:8482: 1B           	tcs
  5010 09:8483: 98           	tya
  5011 09:8484: 6B           	rtl
  5012                        ;    }
  5013                        	.line	557
  5014                        ;
  5015                        ;
  5016                        ;  /* Offset */
  5017                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5018                        L10175:
  5019                        	.line	561
  5020 09:8485: A0 00 00     	ldy	#$0
  5021 09:8488: A5 10        	lda	<L155+file_offset_0
  5022 09:848A: 10 01        	bpl	L160
  5023 09:848C: 88           	dey
  5024                        L160:
  5025 09:848D: 85 01        	sta	<R0
  5026 09:848F: 84 03        	sty	<R0+2
  5027 09:8491: A5 01        	lda	<R0
  5028 09:8493: 87 05        	sta	[<L156+current_record_1]
  5029 09:8495: A5 03        	lda	<R0+2
  5030 09:8497: A0 02 00     	ldy	#$2
  5031 09:849A: 97 05        	sta	[<L156+current_record_1],Y
  5032                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5033                        	.line	562
  5034 09:849C: A0 00 00     	ldy	#$0
  Thu Dec  3 2020 22:25                                                Page 95


  5035 09:849F: A5 12        	lda	<L155+segment_offset_0
  5036 09:84A1: 10 01        	bpl	L161
  5037 09:84A3: 88           	dey
  5038                        L161:
  5039 09:84A4: 85 01        	sta	<R0
  5040 09:84A6: 84 03        	sty	<R0+2
  5041 09:84A8: A5 01        	lda	<R0
  5042 09:84AA: A0 04 00     	ldy	#$4
  5043 09:84AD: 97 05        	sta	[<L156+current_record_1],Y
  5044 09:84AF: A5 03        	lda	<R0+2
  5045 09:84B1: A0 06 00     	ldy	#$6
  5046 09:84B4: 97 05        	sta	[<L156+current_record_1],Y
  5047                        ;
  5048                        ;  /* Operation Code */
  5049                        ;  current_record->operation_code = data[0];
  5050                        	.line	565
  5051 09:84B6: E2 20        	sep	#$20
  5052                        	longa	off
  5053 09:84B8: A7 0C        	lda	[<L155+data_0]
  5054 09:84BA: A0 08 00     	ldy	#$8
  5055 09:84BD: 97 05        	sta	[<L156+current_record_1],Y
  5056 09:84BF: C2 20        	rep	#$20
  5057                        	longa	on
  5058                        ;
  5059                        ;  /* Renvoie la structure */
  5060                        ;  return(current_record);
  5061                        	.line	568
  5062 09:84C1: A6 07        	ldx	<L156+current_record_1+2
  5063 09:84C3: A5 05        	lda	<L156+current_record_1
  5064 09:84C5: 82 AB FF     	brl	L159
  5065                        ;}
  5066                        	.line	569
  5067                        	.endblock	569
  5068             00000008   L155	equ	8
  5069             00000005   L156	equ	5
  5070 09:84C8:              	ends
  5071                        	efunc
  5072                        	.endfunc	569,5,8
  5073                        	.line	569
  5074                        ;
  5075                        ;  
  5076                        ;/************************************************
                    *******/
  5077                        ;/*  DecodeRecordSTRONG() :  Décodage du Record ST
                    RONG. */
  5078                        ;/************************************************
                    *******/
  5079                        ;static void *DecodeRecordSTRONG(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  5080                        ;{
  5081                        	.line	575
  5082                        	.line	576
  5083                        	LOADER
  5084                        	func
  5085                        	.function	576
  5086                        ~~DecodeRecordSTRONG:
  5087                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 96


  5088                        	longi	on
  5089 09:84C8: 3B           	tsc
  5090 09:84C9: 38           	sec
  5091 09:84CA: E9 08 00     	sbc	#L162
  5092 09:84CD: 1B           	tcs
  5093 09:84CE: 0B           	phd
  5094 09:84CF: 5B           	tcd
  5095             00000004   data_0	set	4
  5096             00000008   file_offset_0	set	8
  5097             0000000A   segment_offset_0	set	10
  5098             0000000C   record_length_rtn_0	set	12
  5099                        	.block	576
  5100                        ;  struct record_STRONG *current_record;
  5101                        ;
  5102                        ;  /* Allocation mémoire */
  5103                        ;  current_record = (struct record_STRONG *) k_cal
                    loc(1,sizeof(struct record_STRONG));
  5104             00000000   current_record_1	set	0
  5105                        	.sym	current_record,0,138,1,32,81
  5106                        	.sym	data,4,142,6,32
  5107                        	.sym	file_offset,8,5,6,16
  5108                        	.sym	segment_offset,10,5,6,16
  5109                        	.sym	record_length_rtn,12,133,6,32
  5110                        	.line	580
  5111 09:84D0: F4 09 00     	pea	#<$9
  5112 09:84D3: F4 01 00     	pea	#<$1
  5113 09:84D6: 22 xx xx xx  	jsl	~~k_calloc
  5114 09:84DA: 85 05        	sta	<L163+current_record_1
  5115 09:84DC: 86 07        	stx	<L163+current_record_1+2
  5116                        ;  if(current_record == NULL)
  5117                        	.line	581
  5118                        ;    {
  5119 09:84DE: A5 05        	lda	<L163+current_record_1
  5120 09:84E0: 05 07        	ora	<L163+current_record_1+2
  5121 09:84E2: F0 03        	beq	L165
  5122 09:84E4: 82 19 00     	brl	L10176
  5123                        L165:
  5124                        	.line	582
  5125                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5126                        ;      return(NULL);
  5127                        	.line	584
  5128 09:84E7: A9 00 00     	lda	#$0
  5129 09:84EA: AA           	tax
  5130 09:84EB: A9 00 00     	lda	#$0
  5131                        L166:
  5132 09:84EE: A8           	tay
  5133 09:84EF: A5 0A        	lda	<L162+2
  5134 09:84F1: 85 16        	sta	<L162+2+12
  5135 09:84F3: A5 09        	lda	<L162+1
  5136 09:84F5: 85 15        	sta	<L162+1+12
  5137 09:84F7: 2B           	pld
  5138 09:84F8: 3B           	tsc
  5139 09:84F9: 18           	clc
  5140 09:84FA: 69 14 00     	adc	#L162+12
  5141 09:84FD: 1B           	tcs
  5142 09:84FE: 98           	tya
  5143 09:84FF: 6B           	rtl
  Thu Dec  3 2020 22:25                                                Page 97


  5144                        ;    }
  5145                        	.line	585
  5146                        ;
  5147                        ;  /* Offset */
  5148                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5149                        L10176:
  5150                        	.line	588
  5151 09:8500: A0 00 00     	ldy	#$0
  5152 09:8503: A5 10        	lda	<L162+file_offset_0
  5153 09:8505: 10 01        	bpl	L167
  5154 09:8507: 88           	dey
  5155                        L167:
  5156 09:8508: 85 01        	sta	<R0
  5157 09:850A: 84 03        	sty	<R0+2
  5158 09:850C: A5 01        	lda	<R0
  5159 09:850E: 87 05        	sta	[<L163+current_record_1]
  5160 09:8510: A5 03        	lda	<R0+2
  5161 09:8512: A0 02 00     	ldy	#$2
  5162 09:8515: 97 05        	sta	[<L163+current_record_1],Y
  5163                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5164                        	.line	589
  5165 09:8517: A0 00 00     	ldy	#$0
  5166 09:851A: A5 12        	lda	<L162+segment_offset_0
  5167 09:851C: 10 01        	bpl	L168
  5168 09:851E: 88           	dey
  5169                        L168:
  5170 09:851F: 85 01        	sta	<R0
  5171 09:8521: 84 03        	sty	<R0+2
  5172 09:8523: A5 01        	lda	<R0
  5173 09:8525: A0 04 00     	ldy	#$4
  5174 09:8528: 97 05        	sta	[<L163+current_record_1],Y
  5175 09:852A: A5 03        	lda	<R0+2
  5176 09:852C: A0 06 00     	ldy	#$6
  5177 09:852F: 97 05        	sta	[<L163+current_record_1],Y
  5178                        ;
  5179                        ;  /* Operation Code */
  5180                        ;  current_record->operation_code = data[0];
  5181                        	.line	592
  5182 09:8531: E2 20        	sep	#$20
  5183                        	longa	off
  5184 09:8533: A7 0C        	lda	[<L162+data_0]
  5185 09:8535: A0 08 00     	ldy	#$8
  5186 09:8538: 97 05        	sta	[<L163+current_record_1],Y
  5187 09:853A: C2 20        	rep	#$20
  5188                        	longa	on
  5189                        ;
  5190                        ;  /* Renvoie la structure */
  5191                        ;  return(current_record);
  5192                        	.line	595
  5193 09:853C: A6 07        	ldx	<L163+current_record_1+2
  5194 09:853E: A5 05        	lda	<L163+current_record_1
  5195 09:8540: 82 AB FF     	brl	L166
  5196                        ;}
  5197                        	.line	596
  5198                        	.endblock	596
  5199             00000008   L162	equ	8
  Thu Dec  3 2020 22:25                                                Page 98


  5200             00000005   L163	equ	5
  5201 09:8543:              	ends
  5202                        	efunc
  5203                        	.endfunc	596,5,8
  5204                        	.line	596
  5205                        ;
  5206                        ;
  5207                        ;/************************************************
                    *******/
  5208                        ;/*  DecodeRecordGLOBAL() :  Décodage du Record GL
                    OBAL. */
  5209                        ;/************************************************
                    *******/
  5210                        ;static void *DecodeRecordGLOBAL(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  5211                        ;{
  5212                        	.line	602
  5213                        	.line	603
  5214                        	LOADER
  5215                        	func
  5216                        	.function	603
  5217                        ~~DecodeRecordGLOBAL:
  5218                        	longa	on
  5219                        	longi	on
  5220 09:8543: 3B           	tsc
  5221 09:8544: 38           	sec
  5222 09:8545: E9 08 00     	sbc	#L169
  5223 09:8548: 1B           	tcs
  5224 09:8549: 0B           	phd
  5225 09:854A: 5B           	tcd
  5226             00000004   data_0	set	4
  5227             00000008   file_offset_0	set	8
  5228             0000000A   segment_offset_0	set	10
  5229             0000000C   record_length_rtn_0	set	12
  5230                        	.block	603
  5231                        ;  struct record_GLOBAL *current_record;
  5232                        ;
  5233                        ;  /* Allocation mémoire */
  5234                        ;  current_record = (struct record_GLOBAL *) k_cal
                    loc(1,sizeof(struct record_GLOBAL));
  5235             00000000   current_record_1	set	0
  5236                        	.sym	current_record,0,138,1,32,82
  5237                        	.sym	data,4,142,6,32
  5238                        	.sym	file_offset,8,5,6,16
  5239                        	.sym	segment_offset,10,5,6,16
  5240                        	.sym	record_length_rtn,12,133,6,32
  5241                        	.line	607
  5242 09:854B: F4 09 00     	pea	#<$9
  5243 09:854E: F4 01 00     	pea	#<$1
  5244 09:8551: 22 xx xx xx  	jsl	~~k_calloc
  5245 09:8555: 85 05        	sta	<L170+current_record_1
  5246 09:8557: 86 07        	stx	<L170+current_record_1+2
  5247                        ;  if(current_record == NULL)
  5248                        	.line	608
  5249                        ;    {
  5250 09:8559: A5 05        	lda	<L170+current_record_1
  5251 09:855B: 05 07        	ora	<L170+current_record_1+2
  Thu Dec  3 2020 22:25                                                Page 99


  5252 09:855D: F0 03        	beq	L172
  5253 09:855F: 82 19 00     	brl	L10177
  5254                        L172:
  5255                        	.line	609
  5256                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5257                        ;      return(NULL);
  5258                        	.line	611
  5259 09:8562: A9 00 00     	lda	#$0
  5260 09:8565: AA           	tax
  5261 09:8566: A9 00 00     	lda	#$0
  5262                        L173:
  5263 09:8569: A8           	tay
  5264 09:856A: A5 0A        	lda	<L169+2
  5265 09:856C: 85 16        	sta	<L169+2+12
  5266 09:856E: A5 09        	lda	<L169+1
  5267 09:8570: 85 15        	sta	<L169+1+12
  5268 09:8572: 2B           	pld
  5269 09:8573: 3B           	tsc
  5270 09:8574: 18           	clc
  5271 09:8575: 69 14 00     	adc	#L169+12
  5272 09:8578: 1B           	tcs
  5273 09:8579: 98           	tya
  5274 09:857A: 6B           	rtl
  5275                        ;    }
  5276                        	.line	612
  5277                        ;
  5278                        ;  /* Offset */
  5279                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5280                        L10177:
  5281                        	.line	615
  5282 09:857B: A0 00 00     	ldy	#$0
  5283 09:857E: A5 10        	lda	<L169+file_offset_0
  5284 09:8580: 10 01        	bpl	L174
  5285 09:8582: 88           	dey
  5286                        L174:
  5287 09:8583: 85 01        	sta	<R0
  5288 09:8585: 84 03        	sty	<R0+2
  5289 09:8587: A5 01        	lda	<R0
  5290 09:8589: 87 05        	sta	[<L170+current_record_1]
  5291 09:858B: A5 03        	lda	<R0+2
  5292 09:858D: A0 02 00     	ldy	#$2
  5293 09:8590: 97 05        	sta	[<L170+current_record_1],Y
  5294                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5295                        	.line	616
  5296 09:8592: A0 00 00     	ldy	#$0
  5297 09:8595: A5 12        	lda	<L169+segment_offset_0
  5298 09:8597: 10 01        	bpl	L175
  5299 09:8599: 88           	dey
  5300                        L175:
  5301 09:859A: 85 01        	sta	<R0
  5302 09:859C: 84 03        	sty	<R0+2
  5303 09:859E: A5 01        	lda	<R0
  5304 09:85A0: A0 04 00     	ldy	#$4
  5305 09:85A3: 97 05        	sta	[<L170+current_record_1],Y
  5306 09:85A5: A5 03        	lda	<R0+2
  Thu Dec  3 2020 22:25                                                Page 100


  5307 09:85A7: A0 06 00     	ldy	#$6
  5308 09:85AA: 97 05        	sta	[<L170+current_record_1],Y
  5309                        ;
  5310                        ;  /* Operation Code */
  5311                        ;  current_record->operation_code = data[0];
  5312                        	.line	619
  5313 09:85AC: E2 20        	sep	#$20
  5314                        	longa	off
  5315 09:85AE: A7 0C        	lda	[<L169+data_0]
  5316 09:85B0: A0 08 00     	ldy	#$8
  5317 09:85B3: 97 05        	sta	[<L170+current_record_1],Y
  5318 09:85B5: C2 20        	rep	#$20
  5319                        	longa	on
  5320                        ;
  5321                        ;  /* Renvoie la structure */
  5322                        ;  return(current_record);
  5323                        	.line	622
  5324 09:85B7: A6 07        	ldx	<L170+current_record_1+2
  5325 09:85B9: A5 05        	lda	<L170+current_record_1
  5326 09:85BB: 82 AB FF     	brl	L173
  5327                        ;}
  5328                        	.line	623
  5329                        	.endblock	623
  5330             00000008   L169	equ	8
  5331             00000005   L170	equ	5
  5332 09:85BE:              	ends
  5333                        	efunc
  5334                        	.endfunc	623,5,8
  5335                        	.line	623
  5336                        ;
  5337                        ;
  5338                        ;/************************************************
                    ***/
  5339                        ;/*  DecodeRecordGEQU() :  Décodage du Record GEQU
                    . */
  5340                        ;/************************************************
                    ***/
  5341                        ;static void *DecodeRecordGEQU(unsigned char *data
                    , int file_offset, int segment_offset, int *record_length_rt
                    n)
  5342                        ;{
  5343                        	.line	629
  5344                        	.line	630
  5345                        	LOADER
  5346                        	func
  5347                        	.function	630
  5348                        ~~DecodeRecordGEQU:
  5349                        	longa	on
  5350                        	longi	on
  5351 09:85BE: 3B           	tsc
  5352 09:85BF: 38           	sec
  5353 09:85C0: E9 08 00     	sbc	#L176
  5354 09:85C3: 1B           	tcs
  5355 09:85C4: 0B           	phd
  5356 09:85C5: 5B           	tcd
  5357             00000004   data_0	set	4
  5358             00000008   file_offset_0	set	8
  5359             0000000A   segment_offset_0	set	10
  Thu Dec  3 2020 22:25                                                Page 101


  5360             0000000C   record_length_rtn_0	set	12
  5361                        	.block	630
  5362                        ;  struct record_GEQU *current_record;
  5363                        ;
  5364                        ;  /* Allocation mémoire */
  5365                        ;  current_record = (struct record_GEQU *) k_callo
                    c(1,sizeof(struct record_GEQU));
  5366             00000000   current_record_1	set	0
  5367                        	.sym	current_record,0,138,1,32,83
  5368                        	.sym	data,4,142,6,32
  5369                        	.sym	file_offset,8,5,6,16
  5370                        	.sym	segment_offset,10,5,6,16
  5371                        	.sym	record_length_rtn,12,133,6,32
  5372                        	.line	634
  5373 09:85C6: F4 09 00     	pea	#<$9
  5374 09:85C9: F4 01 00     	pea	#<$1
  5375 09:85CC: 22 xx xx xx  	jsl	~~k_calloc
  5376 09:85D0: 85 05        	sta	<L177+current_record_1
  5377 09:85D2: 86 07        	stx	<L177+current_record_1+2
  5378                        ;  if(current_record == NULL)
  5379                        	.line	635
  5380                        ;    {
  5381 09:85D4: A5 05        	lda	<L177+current_record_1
  5382 09:85D6: 05 07        	ora	<L177+current_record_1+2
  5383 09:85D8: F0 03        	beq	L179
  5384 09:85DA: 82 19 00     	brl	L10178
  5385                        L179:
  5386                        	.line	636
  5387                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5388                        ;      return(NULL);
  5389                        	.line	638
  5390 09:85DD: A9 00 00     	lda	#$0
  5391 09:85E0: AA           	tax
  5392 09:85E1: A9 00 00     	lda	#$0
  5393                        L180:
  5394 09:85E4: A8           	tay
  5395 09:85E5: A5 0A        	lda	<L176+2
  5396 09:85E7: 85 16        	sta	<L176+2+12
  5397 09:85E9: A5 09        	lda	<L176+1
  5398 09:85EB: 85 15        	sta	<L176+1+12
  5399 09:85ED: 2B           	pld
  5400 09:85EE: 3B           	tsc
  5401 09:85EF: 18           	clc
  5402 09:85F0: 69 14 00     	adc	#L176+12
  5403 09:85F3: 1B           	tcs
  5404 09:85F4: 98           	tya
  5405 09:85F5: 6B           	rtl
  5406                        ;    }
  5407                        	.line	639
  5408                        ;
  5409                        ;  /* Offset */
  5410                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5411                        L10178:
  5412                        	.line	642
  5413 09:85F6: A0 00 00     	ldy	#$0
  5414 09:85F9: A5 10        	lda	<L176+file_offset_0
  Thu Dec  3 2020 22:25                                                Page 102


  5415 09:85FB: 10 01        	bpl	L181
  5416 09:85FD: 88           	dey
  5417                        L181:
  5418 09:85FE: 85 01        	sta	<R0
  5419 09:8600: 84 03        	sty	<R0+2
  5420 09:8602: A5 01        	lda	<R0
  5421 09:8604: 87 05        	sta	[<L177+current_record_1]
  5422 09:8606: A5 03        	lda	<R0+2
  5423 09:8608: A0 02 00     	ldy	#$2
  5424 09:860B: 97 05        	sta	[<L177+current_record_1],Y
  5425                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5426                        	.line	643
  5427 09:860D: A0 00 00     	ldy	#$0
  5428 09:8610: A5 12        	lda	<L176+segment_offset_0
  5429 09:8612: 10 01        	bpl	L182
  5430 09:8614: 88           	dey
  5431                        L182:
  5432 09:8615: 85 01        	sta	<R0
  5433 09:8617: 84 03        	sty	<R0+2
  5434 09:8619: A5 01        	lda	<R0
  5435 09:861B: A0 04 00     	ldy	#$4
  5436 09:861E: 97 05        	sta	[<L177+current_record_1],Y
  5437 09:8620: A5 03        	lda	<R0+2
  5438 09:8622: A0 06 00     	ldy	#$6
  5439 09:8625: 97 05        	sta	[<L177+current_record_1],Y
  5440                        ;
  5441                        ;  /* Operation Code */
  5442                        ;  current_record->operation_code = data[0];
  5443                        	.line	646
  5444 09:8627: E2 20        	sep	#$20
  5445                        	longa	off
  5446 09:8629: A7 0C        	lda	[<L176+data_0]
  5447 09:862B: A0 08 00     	ldy	#$8
  5448 09:862E: 97 05        	sta	[<L177+current_record_1],Y
  5449 09:8630: C2 20        	rep	#$20
  5450                        	longa	on
  5451                        ;
  5452                        ;  /* Renvoie la structure */
  5453                        ;  return(current_record);
  5454                        	.line	649
  5455 09:8632: A6 07        	ldx	<L177+current_record_1+2
  5456 09:8634: A5 05        	lda	<L177+current_record_1
  5457 09:8636: 82 AB FF     	brl	L180
  5458                        ;}
  5459                        	.line	650
  5460                        	.endblock	650
  5461             00000008   L176	equ	8
  5462             00000005   L177	equ	5
  5463 09:8639:              	ends
  5464                        	efunc
  5465                        	.endfunc	650,5,8
  5466                        	.line	650
  5467                        ;
  5468                        ;
  5469                        ;/************************************************
                    */
  5470                        ;/*  DecodeRecordMEM() :  Décodage du Record MEM. 
  Thu Dec  3 2020 22:25                                                Page 103


                    */
  5471                        ;/************************************************
                    */
  5472                        ;static void *DecodeRecordMEM(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  5473                        ;{
  5474                        	.line	656
  5475                        	.line	657
  5476                        	LOADER
  5477                        	func
  5478                        	.function	657
  5479                        ~~DecodeRecordMEM:
  5480                        	longa	on
  5481                        	longi	on
  5482 09:8639: 3B           	tsc
  5483 09:863A: 38           	sec
  5484 09:863B: E9 08 00     	sbc	#L183
  5485 09:863E: 1B           	tcs
  5486 09:863F: 0B           	phd
  5487 09:8640: 5B           	tcd
  5488             00000004   data_0	set	4
  5489             00000008   file_offset_0	set	8
  5490             0000000A   segment_offset_0	set	10
  5491             0000000C   record_length_rtn_0	set	12
  5492                        	.block	657
  5493                        ;  struct record_MEM *current_record;
  5494                        ;
  5495                        ;  /* Allocation mémoire */
  5496                        ;  current_record = (struct record_MEM *) k_calloc
                    (1,sizeof(struct record_MEM));
  5497             00000000   current_record_1	set	0
  5498                        	.sym	current_record,0,138,1,32,84
  5499                        	.sym	data,4,142,6,32
  5500                        	.sym	file_offset,8,5,6,16
  5501                        	.sym	segment_offset,10,5,6,16
  5502                        	.sym	record_length_rtn,12,133,6,32
  5503                        	.line	661
  5504 09:8641: F4 09 00     	pea	#<$9
  5505 09:8644: F4 01 00     	pea	#<$1
  5506 09:8647: 22 xx xx xx  	jsl	~~k_calloc
  5507 09:864B: 85 05        	sta	<L184+current_record_1
  5508 09:864D: 86 07        	stx	<L184+current_record_1+2
  5509                        ;  if(current_record == NULL)
  5510                        	.line	662
  5511                        ;    {
  5512 09:864F: A5 05        	lda	<L184+current_record_1
  5513 09:8651: 05 07        	ora	<L184+current_record_1+2
  5514 09:8653: F0 03        	beq	L186
  5515 09:8655: 82 19 00     	brl	L10179
  5516                        L186:
  5517                        	.line	663
  5518                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5519                        ;      return(NULL);
  5520                        	.line	665
  5521 09:8658: A9 00 00     	lda	#$0
  5522 09:865B: AA           	tax
  Thu Dec  3 2020 22:25                                                Page 104


  5523 09:865C: A9 00 00     	lda	#$0
  5524                        L187:
  5525 09:865F: A8           	tay
  5526 09:8660: A5 0A        	lda	<L183+2
  5527 09:8662: 85 16        	sta	<L183+2+12
  5528 09:8664: A5 09        	lda	<L183+1
  5529 09:8666: 85 15        	sta	<L183+1+12
  5530 09:8668: 2B           	pld
  5531 09:8669: 3B           	tsc
  5532 09:866A: 18           	clc
  5533 09:866B: 69 14 00     	adc	#L183+12
  5534 09:866E: 1B           	tcs
  5535 09:866F: 98           	tya
  5536 09:8670: 6B           	rtl
  5537                        ;    }
  5538                        	.line	666
  5539                        ;
  5540                        ;  /* Offset */
  5541                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5542                        L10179:
  5543                        	.line	669
  5544 09:8671: A0 00 00     	ldy	#$0
  5545 09:8674: A5 10        	lda	<L183+file_offset_0
  5546 09:8676: 10 01        	bpl	L188
  5547 09:8678: 88           	dey
  5548                        L188:
  5549 09:8679: 85 01        	sta	<R0
  5550 09:867B: 84 03        	sty	<R0+2
  5551 09:867D: A5 01        	lda	<R0
  5552 09:867F: 87 05        	sta	[<L184+current_record_1]
  5553 09:8681: A5 03        	lda	<R0+2
  5554 09:8683: A0 02 00     	ldy	#$2
  5555 09:8686: 97 05        	sta	[<L184+current_record_1],Y
  5556                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5557                        	.line	670
  5558 09:8688: A0 00 00     	ldy	#$0
  5559 09:868B: A5 12        	lda	<L183+segment_offset_0
  5560 09:868D: 10 01        	bpl	L189
  5561 09:868F: 88           	dey
  5562                        L189:
  5563 09:8690: 85 01        	sta	<R0
  5564 09:8692: 84 03        	sty	<R0+2
  5565 09:8694: A5 01        	lda	<R0
  5566 09:8696: A0 04 00     	ldy	#$4
  5567 09:8699: 97 05        	sta	[<L184+current_record_1],Y
  5568 09:869B: A5 03        	lda	<R0+2
  5569 09:869D: A0 06 00     	ldy	#$6
  5570 09:86A0: 97 05        	sta	[<L184+current_record_1],Y
  5571                        ;
  5572                        ;  /* Operation Code */
  5573                        ;  current_record->operation_code = data[0];
  5574                        	.line	673
  5575 09:86A2: E2 20        	sep	#$20
  5576                        	longa	off
  5577 09:86A4: A7 0C        	lda	[<L183+data_0]
  5578 09:86A6: A0 08 00     	ldy	#$8
  Thu Dec  3 2020 22:25                                                Page 105


  5579 09:86A9: 97 05        	sta	[<L184+current_record_1],Y
  5580 09:86AB: C2 20        	rep	#$20
  5581                        	longa	on
  5582                        ;
  5583                        ;  /* Renvoie la structure */
  5584                        ;  return(current_record);
  5585                        	.line	676
  5586 09:86AD: A6 07        	ldx	<L184+current_record_1+2
  5587 09:86AF: A5 05        	lda	<L184+current_record_1
  5588 09:86B1: 82 AB FF     	brl	L187
  5589                        ;}
  5590                        	.line	677
  5591                        	.endblock	677
  5592             00000008   L183	equ	8
  5593             00000005   L184	equ	5
  5594 09:86B4:              	ends
  5595                        	efunc
  5596                        	.endfunc	677,5,8
  5597                        	.line	677
  5598                        ;
  5599                        ;
  5600                        ;/************************************************
                    ***/
  5601                        ;/*  DecodeRecordEXPR() :  Décodage du Record EXPR
                    . */
  5602                        ;/************************************************
                    ***/
  5603                        ;static void *DecodeRecordEXPR(unsigned char *data
                    , int file_offset, int segment_offset, int *record_length_rt
                    n)
  5604                        ;{
  5605                        	.line	683
  5606                        	.line	684
  5607                        	LOADER
  5608                        	func
  5609                        	.function	684
  5610                        ~~DecodeRecordEXPR:
  5611                        	longa	on
  5612                        	longi	on
  5613 09:86B4: 3B           	tsc
  5614 09:86B5: 38           	sec
  5615 09:86B6: E9 08 00     	sbc	#L190
  5616 09:86B9: 1B           	tcs
  5617 09:86BA: 0B           	phd
  5618 09:86BB: 5B           	tcd
  5619             00000004   data_0	set	4
  5620             00000008   file_offset_0	set	8
  5621             0000000A   segment_offset_0	set	10
  5622             0000000C   record_length_rtn_0	set	12
  5623                        	.block	684
  5624                        ;  struct record_EXPR *current_record;
  5625                        ;
  5626                        ;  /* Allocation mémoire */
  5627                        ;  current_record = (struct record_EXPR *) k_callo
                    c(1,sizeof(struct record_EXPR));
  5628             00000000   current_record_1	set	0
  5629                        	.sym	current_record,0,138,1,32,85
  5630                        	.sym	data,4,142,6,32
  Thu Dec  3 2020 22:25                                                Page 106


  5631                        	.sym	file_offset,8,5,6,16
  5632                        	.sym	segment_offset,10,5,6,16
  5633                        	.sym	record_length_rtn,12,133,6,32
  5634                        	.line	688
  5635 09:86BC: F4 09 00     	pea	#<$9
  5636 09:86BF: F4 01 00     	pea	#<$1
  5637 09:86C2: 22 xx xx xx  	jsl	~~k_calloc
  5638 09:86C6: 85 05        	sta	<L191+current_record_1
  5639 09:86C8: 86 07        	stx	<L191+current_record_1+2
  5640                        ;  if(current_record == NULL)
  5641                        	.line	689
  5642                        ;    {
  5643 09:86CA: A5 05        	lda	<L191+current_record_1
  5644 09:86CC: 05 07        	ora	<L191+current_record_1+2
  5645 09:86CE: F0 03        	beq	L193
  5646 09:86D0: 82 19 00     	brl	L10180
  5647                        L193:
  5648                        	.line	690
  5649                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5650                        ;      return(NULL);
  5651                        	.line	692
  5652 09:86D3: A9 00 00     	lda	#$0
  5653 09:86D6: AA           	tax
  5654 09:86D7: A9 00 00     	lda	#$0
  5655                        L194:
  5656 09:86DA: A8           	tay
  5657 09:86DB: A5 0A        	lda	<L190+2
  5658 09:86DD: 85 16        	sta	<L190+2+12
  5659 09:86DF: A5 09        	lda	<L190+1
  5660 09:86E1: 85 15        	sta	<L190+1+12
  5661 09:86E3: 2B           	pld
  5662 09:86E4: 3B           	tsc
  5663 09:86E5: 18           	clc
  5664 09:86E6: 69 14 00     	adc	#L190+12
  5665 09:86E9: 1B           	tcs
  5666 09:86EA: 98           	tya
  5667 09:86EB: 6B           	rtl
  5668                        ;    }
  5669                        	.line	693
  5670                        ;
  5671                        ;  /* Offset */
  5672                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5673                        L10180:
  5674                        	.line	696
  5675 09:86EC: A0 00 00     	ldy	#$0
  5676 09:86EF: A5 10        	lda	<L190+file_offset_0
  5677 09:86F1: 10 01        	bpl	L195
  5678 09:86F3: 88           	dey
  5679                        L195:
  5680 09:86F4: 85 01        	sta	<R0
  5681 09:86F6: 84 03        	sty	<R0+2
  5682 09:86F8: A5 01        	lda	<R0
  5683 09:86FA: 87 05        	sta	[<L191+current_record_1]
  5684 09:86FC: A5 03        	lda	<R0+2
  5685 09:86FE: A0 02 00     	ldy	#$2
  5686 09:8701: 97 05        	sta	[<L191+current_record_1],Y
  Thu Dec  3 2020 22:25                                                Page 107


  5687                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5688                        	.line	697
  5689 09:8703: A0 00 00     	ldy	#$0
  5690 09:8706: A5 12        	lda	<L190+segment_offset_0
  5691 09:8708: 10 01        	bpl	L196
  5692 09:870A: 88           	dey
  5693                        L196:
  5694 09:870B: 85 01        	sta	<R0
  5695 09:870D: 84 03        	sty	<R0+2
  5696 09:870F: A5 01        	lda	<R0
  5697 09:8711: A0 04 00     	ldy	#$4
  5698 09:8714: 97 05        	sta	[<L191+current_record_1],Y
  5699 09:8716: A5 03        	lda	<R0+2
  5700 09:8718: A0 06 00     	ldy	#$6
  5701 09:871B: 97 05        	sta	[<L191+current_record_1],Y
  5702                        ;
  5703                        ;  /* Operation Code */
  5704                        ;  current_record->operation_code = data[0];
  5705                        	.line	700
  5706 09:871D: E2 20        	sep	#$20
  5707                        	longa	off
  5708 09:871F: A7 0C        	lda	[<L190+data_0]
  5709 09:8721: A0 08 00     	ldy	#$8
  5710 09:8724: 97 05        	sta	[<L191+current_record_1],Y
  5711 09:8726: C2 20        	rep	#$20
  5712                        	longa	on
  5713                        ;
  5714                        ;  /* Renvoie la structure */
  5715                        ;  return(current_record);
  5716                        	.line	703
  5717 09:8728: A6 07        	ldx	<L191+current_record_1+2
  5718 09:872A: A5 05        	lda	<L191+current_record_1
  5719 09:872C: 82 AB FF     	brl	L194
  5720                        ;}
  5721                        	.line	704
  5722                        	.endblock	704
  5723             00000008   L190	equ	8
  5724             00000005   L191	equ	5
  5725 09:872F:              	ends
  5726                        	efunc
  5727                        	.endfunc	704,5,8
  5728                        	.line	704
  5729                        ;
  5730                        ;
  5731                        ;/************************************************
                    *****/
  5732                        ;/*  DecodeRecordZEXPR() :  Décodage du Record ZEX
                    PR. */
  5733                        ;/************************************************
                    *****/
  5734                        ;static void *DecodeRecordZEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  5735                        ;{
  5736                        	.line	710
  5737                        	.line	711
  5738                        	LOADER
  Thu Dec  3 2020 22:25                                                Page 108


  5739                        	func
  5740                        	.function	711
  5741                        ~~DecodeRecordZEXPR:
  5742                        	longa	on
  5743                        	longi	on
  5744 09:872F: 3B           	tsc
  5745 09:8730: 38           	sec
  5746 09:8731: E9 08 00     	sbc	#L197
  5747 09:8734: 1B           	tcs
  5748 09:8735: 0B           	phd
  5749 09:8736: 5B           	tcd
  5750             00000004   data_0	set	4
  5751             00000008   file_offset_0	set	8
  5752             0000000A   segment_offset_0	set	10
  5753             0000000C   record_length_rtn_0	set	12
  5754                        	.block	711
  5755                        ;  struct record_ZEXPR *current_record;
  5756                        ;
  5757                        ;  /* Allocation mémoire */
  5758                        ;  current_record = (struct record_ZEXPR *) k_call
                    oc(1,sizeof(struct record_ZEXPR));
  5759             00000000   current_record_1	set	0
  5760                        	.sym	current_record,0,138,1,32,86
  5761                        	.sym	data,4,142,6,32
  5762                        	.sym	file_offset,8,5,6,16
  5763                        	.sym	segment_offset,10,5,6,16
  5764                        	.sym	record_length_rtn,12,133,6,32
  5765                        	.line	715
  5766 09:8737: F4 09 00     	pea	#<$9
  5767 09:873A: F4 01 00     	pea	#<$1
  5768 09:873D: 22 xx xx xx  	jsl	~~k_calloc
  5769 09:8741: 85 05        	sta	<L198+current_record_1
  5770 09:8743: 86 07        	stx	<L198+current_record_1+2
  5771                        ;  if(current_record == NULL)
  5772                        	.line	716
  5773                        ;    {
  5774 09:8745: A5 05        	lda	<L198+current_record_1
  5775 09:8747: 05 07        	ora	<L198+current_record_1+2
  5776 09:8749: F0 03        	beq	L200
  5777 09:874B: 82 19 00     	brl	L10181
  5778                        L200:
  5779                        	.line	717
  5780                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5781                        ;      return(NULL);
  5782                        	.line	719
  5783 09:874E: A9 00 00     	lda	#$0
  5784 09:8751: AA           	tax
  5785 09:8752: A9 00 00     	lda	#$0
  5786                        L201:
  5787 09:8755: A8           	tay
  5788 09:8756: A5 0A        	lda	<L197+2
  5789 09:8758: 85 16        	sta	<L197+2+12
  5790 09:875A: A5 09        	lda	<L197+1
  5791 09:875C: 85 15        	sta	<L197+1+12
  5792 09:875E: 2B           	pld
  5793 09:875F: 3B           	tsc
  5794 09:8760: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 109


  5795 09:8761: 69 14 00     	adc	#L197+12
  5796 09:8764: 1B           	tcs
  5797 09:8765: 98           	tya
  5798 09:8766: 6B           	rtl
  5799                        ;    }
  5800                        	.line	720
  5801                        ;
  5802                        ;  /* Offset */
  5803                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5804                        L10181:
  5805                        	.line	723
  5806 09:8767: A0 00 00     	ldy	#$0
  5807 09:876A: A5 10        	lda	<L197+file_offset_0
  5808 09:876C: 10 01        	bpl	L202
  5809 09:876E: 88           	dey
  5810                        L202:
  5811 09:876F: 85 01        	sta	<R0
  5812 09:8771: 84 03        	sty	<R0+2
  5813 09:8773: A5 01        	lda	<R0
  5814 09:8775: 87 05        	sta	[<L198+current_record_1]
  5815 09:8777: A5 03        	lda	<R0+2
  5816 09:8779: A0 02 00     	ldy	#$2
  5817 09:877C: 97 05        	sta	[<L198+current_record_1],Y
  5818                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5819                        	.line	724
  5820 09:877E: A0 00 00     	ldy	#$0
  5821 09:8781: A5 12        	lda	<L197+segment_offset_0
  5822 09:8783: 10 01        	bpl	L203
  5823 09:8785: 88           	dey
  5824                        L203:
  5825 09:8786: 85 01        	sta	<R0
  5826 09:8788: 84 03        	sty	<R0+2
  5827 09:878A: A5 01        	lda	<R0
  5828 09:878C: A0 04 00     	ldy	#$4
  5829 09:878F: 97 05        	sta	[<L198+current_record_1],Y
  5830 09:8791: A5 03        	lda	<R0+2
  5831 09:8793: A0 06 00     	ldy	#$6
  5832 09:8796: 97 05        	sta	[<L198+current_record_1],Y
  5833                        ;
  5834                        ;  /* Operation Code */
  5835                        ;  current_record->operation_code = data[0];
  5836                        	.line	727
  5837 09:8798: E2 20        	sep	#$20
  5838                        	longa	off
  5839 09:879A: A7 0C        	lda	[<L197+data_0]
  5840 09:879C: A0 08 00     	ldy	#$8
  5841 09:879F: 97 05        	sta	[<L198+current_record_1],Y
  5842 09:87A1: C2 20        	rep	#$20
  5843                        	longa	on
  5844                        ;
  5845                        ;  /* Renvoie la structure */
  5846                        ;  return(current_record);
  5847                        	.line	730
  5848 09:87A3: A6 07        	ldx	<L198+current_record_1+2
  5849 09:87A5: A5 05        	lda	<L198+current_record_1
  5850 09:87A7: 82 AB FF     	brl	L201
  Thu Dec  3 2020 22:25                                                Page 110


  5851                        ;}
  5852                        	.line	731
  5853                        	.endblock	731
  5854             00000008   L197	equ	8
  5855             00000005   L198	equ	5
  5856 09:87AA:              	ends
  5857                        	efunc
  5858                        	.endfunc	731,5,8
  5859                        	.line	731
  5860                        ;
  5861                        ;
  5862                        ;/************************************************
                    *****/
  5863                        ;/*  DecodeRecordBEXPR() :  Décodage du Record BEX
                    PR. */
  5864                        ;/************************************************
                    *****/
  5865                        ;static void *DecodeRecordBEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  5866                        ;{
  5867                        	.line	737
  5868                        	.line	738
  5869                        	LOADER
  5870                        	func
  5871                        	.function	738
  5872                        ~~DecodeRecordBEXPR:
  5873                        	longa	on
  5874                        	longi	on
  5875 09:87AA: 3B           	tsc
  5876 09:87AB: 38           	sec
  5877 09:87AC: E9 08 00     	sbc	#L204
  5878 09:87AF: 1B           	tcs
  5879 09:87B0: 0B           	phd
  5880 09:87B1: 5B           	tcd
  5881             00000004   data_0	set	4
  5882             00000008   file_offset_0	set	8
  5883             0000000A   segment_offset_0	set	10
  5884             0000000C   record_length_rtn_0	set	12
  5885                        	.block	738
  5886                        ;  struct record_BEXPR *current_record;
  5887                        ;
  5888                        ;  /* Allocation mémoire */
  5889                        ;  current_record = (struct record_BEXPR *) k_call
                    oc(1,sizeof(struct record_BEXPR));
  5890             00000000   current_record_1	set	0
  5891                        	.sym	current_record,0,138,1,32,87
  5892                        	.sym	data,4,142,6,32
  5893                        	.sym	file_offset,8,5,6,16
  5894                        	.sym	segment_offset,10,5,6,16
  5895                        	.sym	record_length_rtn,12,133,6,32
  5896                        	.line	742
  5897 09:87B2: F4 09 00     	pea	#<$9
  5898 09:87B5: F4 01 00     	pea	#<$1
  5899 09:87B8: 22 xx xx xx  	jsl	~~k_calloc
  5900 09:87BC: 85 05        	sta	<L205+current_record_1
  5901 09:87BE: 86 07        	stx	<L205+current_record_1+2
  5902                        ;  if(current_record == NULL)
  Thu Dec  3 2020 22:25                                                Page 111


  5903                        	.line	743
  5904                        ;    {
  5905 09:87C0: A5 05        	lda	<L205+current_record_1
  5906 09:87C2: 05 07        	ora	<L205+current_record_1+2
  5907 09:87C4: F0 03        	beq	L207
  5908 09:87C6: 82 19 00     	brl	L10182
  5909                        L207:
  5910                        	.line	744
  5911                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  5912                        ;      return(NULL);
  5913                        	.line	746
  5914 09:87C9: A9 00 00     	lda	#$0
  5915 09:87CC: AA           	tax
  5916 09:87CD: A9 00 00     	lda	#$0
  5917                        L208:
  5918 09:87D0: A8           	tay
  5919 09:87D1: A5 0A        	lda	<L204+2
  5920 09:87D3: 85 16        	sta	<L204+2+12
  5921 09:87D5: A5 09        	lda	<L204+1
  5922 09:87D7: 85 15        	sta	<L204+1+12
  5923 09:87D9: 2B           	pld
  5924 09:87DA: 3B           	tsc
  5925 09:87DB: 18           	clc
  5926 09:87DC: 69 14 00     	adc	#L204+12
  5927 09:87DF: 1B           	tcs
  5928 09:87E0: 98           	tya
  5929 09:87E1: 6B           	rtl
  5930                        ;    }
  5931                        	.line	747
  5932                        ;
  5933                        ;  /* Offset */
  5934                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  5935                        L10182:
  5936                        	.line	750
  5937 09:87E2: A0 00 00     	ldy	#$0
  5938 09:87E5: A5 10        	lda	<L204+file_offset_0
  5939 09:87E7: 10 01        	bpl	L209
  5940 09:87E9: 88           	dey
  5941                        L209:
  5942 09:87EA: 85 01        	sta	<R0
  5943 09:87EC: 84 03        	sty	<R0+2
  5944 09:87EE: A5 01        	lda	<R0
  5945 09:87F0: 87 05        	sta	[<L205+current_record_1]
  5946 09:87F2: A5 03        	lda	<R0+2
  5947 09:87F4: A0 02 00     	ldy	#$2
  5948 09:87F7: 97 05        	sta	[<L205+current_record_1],Y
  5949                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  5950                        	.line	751
  5951 09:87F9: A0 00 00     	ldy	#$0
  5952 09:87FC: A5 12        	lda	<L204+segment_offset_0
  5953 09:87FE: 10 01        	bpl	L210
  5954 09:8800: 88           	dey
  5955                        L210:
  5956 09:8801: 85 01        	sta	<R0
  5957 09:8803: 84 03        	sty	<R0+2
  Thu Dec  3 2020 22:25                                                Page 112


  5958 09:8805: A5 01        	lda	<R0
  5959 09:8807: A0 04 00     	ldy	#$4
  5960 09:880A: 97 05        	sta	[<L205+current_record_1],Y
  5961 09:880C: A5 03        	lda	<R0+2
  5962 09:880E: A0 06 00     	ldy	#$6
  5963 09:8811: 97 05        	sta	[<L205+current_record_1],Y
  5964                        ;
  5965                        ;  /* Operation Code */
  5966                        ;  current_record->operation_code = data[0];
  5967                        	.line	754
  5968 09:8813: E2 20        	sep	#$20
  5969                        	longa	off
  5970 09:8815: A7 0C        	lda	[<L204+data_0]
  5971 09:8817: A0 08 00     	ldy	#$8
  5972 09:881A: 97 05        	sta	[<L205+current_record_1],Y
  5973 09:881C: C2 20        	rep	#$20
  5974                        	longa	on
  5975                        ;
  5976                        ;  /* Renvoie la structure */
  5977                        ;  return(current_record);
  5978                        	.line	757
  5979 09:881E: A6 07        	ldx	<L205+current_record_1+2
  5980 09:8820: A5 05        	lda	<L205+current_record_1
  5981 09:8822: 82 AB FF     	brl	L208
  5982                        ;}
  5983                        	.line	758
  5984                        	.endblock	758
  5985             00000008   L204	equ	8
  5986             00000005   L205	equ	5
  5987 09:8825:              	ends
  5988                        	efunc
  5989                        	.endfunc	758,5,8
  5990                        	.line	758
  5991                        ;
  5992                        ;
  5993                        ;/************************************************
                    ********/
  5994                        ;/*  DecodeRecordRELEXPR() :  Décodage du Record E
                    LEXPR. */
  5995                        ;/************************************************
                    ********/
  5996                        ;static void *DecodeRecordRELEXPR(unsigned char *d
                    ata, int file_offset, int segment_offset, int *record_length
                    _rtn)
  5997                        ;{
  5998                        	.line	764
  5999                        	.line	765
  6000                        	LOADER
  6001                        	func
  6002                        	.function	765
  6003                        ~~DecodeRecordRELEXPR:
  6004                        	longa	on
  6005                        	longi	on
  6006 09:8825: 3B           	tsc
  6007 09:8826: 38           	sec
  6008 09:8827: E9 08 00     	sbc	#L211
  6009 09:882A: 1B           	tcs
  6010 09:882B: 0B           	phd
  Thu Dec  3 2020 22:25                                                Page 113


  6011 09:882C: 5B           	tcd
  6012             00000004   data_0	set	4
  6013             00000008   file_offset_0	set	8
  6014             0000000A   segment_offset_0	set	10
  6015             0000000C   record_length_rtn_0	set	12
  6016                        	.block	765
  6017                        ;  struct record_RELEXPR *current_record;
  6018                        ;
  6019                        ;  /* Allocation mémoire */
  6020                        ;  current_record = (struct record_RELEXPR *) k_ca
                    lloc(1,sizeof(struct record_RELEXPR));
  6021             00000000   current_record_1	set	0
  6022                        	.sym	current_record,0,138,1,32,88
  6023                        	.sym	data,4,142,6,32
  6024                        	.sym	file_offset,8,5,6,16
  6025                        	.sym	segment_offset,10,5,6,16
  6026                        	.sym	record_length_rtn,12,133,6,32
  6027                        	.line	769
  6028 09:882D: F4 09 00     	pea	#<$9
  6029 09:8830: F4 01 00     	pea	#<$1
  6030 09:8833: 22 xx xx xx  	jsl	~~k_calloc
  6031 09:8837: 85 05        	sta	<L212+current_record_1
  6032 09:8839: 86 07        	stx	<L212+current_record_1+2
  6033                        ;  if(current_record == NULL)
  6034                        	.line	770
  6035                        ;    {
  6036 09:883B: A5 05        	lda	<L212+current_record_1
  6037 09:883D: 05 07        	ora	<L212+current_record_1+2
  6038 09:883F: F0 03        	beq	L214
  6039 09:8841: 82 19 00     	brl	L10183
  6040                        L214:
  6041                        	.line	771
  6042                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6043                        ;      return(NULL);
  6044                        	.line	773
  6045 09:8844: A9 00 00     	lda	#$0
  6046 09:8847: AA           	tax
  6047 09:8848: A9 00 00     	lda	#$0
  6048                        L215:
  6049 09:884B: A8           	tay
  6050 09:884C: A5 0A        	lda	<L211+2
  6051 09:884E: 85 16        	sta	<L211+2+12
  6052 09:8850: A5 09        	lda	<L211+1
  6053 09:8852: 85 15        	sta	<L211+1+12
  6054 09:8854: 2B           	pld
  6055 09:8855: 3B           	tsc
  6056 09:8856: 18           	clc
  6057 09:8857: 69 14 00     	adc	#L211+12
  6058 09:885A: 1B           	tcs
  6059 09:885B: 98           	tya
  6060 09:885C: 6B           	rtl
  6061                        ;    }
  6062                        	.line	774
  6063                        ;
  6064                        ;  /* Offset */
  6065                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  Thu Dec  3 2020 22:25                                                Page 114


  6066                        L10183:
  6067                        	.line	777
  6068 09:885D: A0 00 00     	ldy	#$0
  6069 09:8860: A5 10        	lda	<L211+file_offset_0
  6070 09:8862: 10 01        	bpl	L216
  6071 09:8864: 88           	dey
  6072                        L216:
  6073 09:8865: 85 01        	sta	<R0
  6074 09:8867: 84 03        	sty	<R0+2
  6075 09:8869: A5 01        	lda	<R0
  6076 09:886B: 87 05        	sta	[<L212+current_record_1]
  6077 09:886D: A5 03        	lda	<R0+2
  6078 09:886F: A0 02 00     	ldy	#$2
  6079 09:8872: 97 05        	sta	[<L212+current_record_1],Y
  6080                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6081                        	.line	778
  6082 09:8874: A0 00 00     	ldy	#$0
  6083 09:8877: A5 12        	lda	<L211+segment_offset_0
  6084 09:8879: 10 01        	bpl	L217
  6085 09:887B: 88           	dey
  6086                        L217:
  6087 09:887C: 85 01        	sta	<R0
  6088 09:887E: 84 03        	sty	<R0+2
  6089 09:8880: A5 01        	lda	<R0
  6090 09:8882: A0 04 00     	ldy	#$4
  6091 09:8885: 97 05        	sta	[<L212+current_record_1],Y
  6092 09:8887: A5 03        	lda	<R0+2
  6093 09:8889: A0 06 00     	ldy	#$6
  6094 09:888C: 97 05        	sta	[<L212+current_record_1],Y
  6095                        ;
  6096                        ;  /* Operation Code */
  6097                        ;  current_record->operation_code = data[0];
  6098                        	.line	781
  6099 09:888E: E2 20        	sep	#$20
  6100                        	longa	off
  6101 09:8890: A7 0C        	lda	[<L211+data_0]
  6102 09:8892: A0 08 00     	ldy	#$8
  6103 09:8895: 97 05        	sta	[<L212+current_record_1],Y
  6104 09:8897: C2 20        	rep	#$20
  6105                        	longa	on
  6106                        ;
  6107                        ;  /* Renvoie la structure */
  6108                        ;  return(current_record);
  6109                        	.line	784
  6110 09:8899: A6 07        	ldx	<L212+current_record_1+2
  6111 09:889B: A5 05        	lda	<L212+current_record_1
  6112 09:889D: 82 AB FF     	brl	L215
  6113                        ;}
  6114                        	.line	785
  6115                        	.endblock	785
  6116             00000008   L211	equ	8
  6117             00000005   L212	equ	5
  6118 09:88A0:              	ends
  6119                        	efunc
  6120                        	.endfunc	785,5,8
  6121                        	.line	785
  6122                        ;
  Thu Dec  3 2020 22:25                                                Page 115


  6123                        ;
  6124                        ;/************************************************
                    *****/
  6125                        ;/*  DecodeRecordLOCAL() :  Décodage du Record LOC
                    AL. */
  6126                        ;/************************************************
                    *****/
  6127                        ;static void *DecodeRecordLOCAL(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  6128                        ;{
  6129                        	.line	791
  6130                        	.line	792
  6131                        	LOADER
  6132                        	func
  6133                        	.function	792
  6134                        ~~DecodeRecordLOCAL:
  6135                        	longa	on
  6136                        	longi	on
  6137 09:88A0: 3B           	tsc
  6138 09:88A1: 38           	sec
  6139 09:88A2: E9 08 00     	sbc	#L218
  6140 09:88A5: 1B           	tcs
  6141 09:88A6: 0B           	phd
  6142 09:88A7: 5B           	tcd
  6143             00000004   data_0	set	4
  6144             00000008   file_offset_0	set	8
  6145             0000000A   segment_offset_0	set	10
  6146             0000000C   record_length_rtn_0	set	12
  6147                        	.block	792
  6148                        ;  struct record_LOCAL *current_record;
  6149                        ;
  6150                        ;  /* Allocation mémoire */
  6151                        ;  current_record = (struct record_LOCAL *) k_call
                    oc(1,sizeof(struct record_LOCAL));
  6152             00000000   current_record_1	set	0
  6153                        	.sym	current_record,0,138,1,32,89
  6154                        	.sym	data,4,142,6,32
  6155                        	.sym	file_offset,8,5,6,16
  6156                        	.sym	segment_offset,10,5,6,16
  6157                        	.sym	record_length_rtn,12,133,6,32
  6158                        	.line	796
  6159 09:88A8: F4 09 00     	pea	#<$9
  6160 09:88AB: F4 01 00     	pea	#<$1
  6161 09:88AE: 22 xx xx xx  	jsl	~~k_calloc
  6162 09:88B2: 85 05        	sta	<L219+current_record_1
  6163 09:88B4: 86 07        	stx	<L219+current_record_1+2
  6164                        ;  if(current_record == NULL)
  6165                        	.line	797
  6166                        ;    {
  6167 09:88B6: A5 05        	lda	<L219+current_record_1
  6168 09:88B8: 05 07        	ora	<L219+current_record_1+2
  6169 09:88BA: F0 03        	beq	L221
  6170 09:88BC: 82 19 00     	brl	L10184
  6171                        L221:
  6172                        	.line	798
  6173                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  Thu Dec  3 2020 22:25                                                Page 116


  6174                        ;      return(NULL);
  6175                        	.line	800
  6176 09:88BF: A9 00 00     	lda	#$0
  6177 09:88C2: AA           	tax
  6178 09:88C3: A9 00 00     	lda	#$0
  6179                        L222:
  6180 09:88C6: A8           	tay
  6181 09:88C7: A5 0A        	lda	<L218+2
  6182 09:88C9: 85 16        	sta	<L218+2+12
  6183 09:88CB: A5 09        	lda	<L218+1
  6184 09:88CD: 85 15        	sta	<L218+1+12
  6185 09:88CF: 2B           	pld
  6186 09:88D0: 3B           	tsc
  6187 09:88D1: 18           	clc
  6188 09:88D2: 69 14 00     	adc	#L218+12
  6189 09:88D5: 1B           	tcs
  6190 09:88D6: 98           	tya
  6191 09:88D7: 6B           	rtl
  6192                        ;    }
  6193                        	.line	801
  6194                        ;
  6195                        ;  /* Offset */
  6196                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6197                        L10184:
  6198                        	.line	804
  6199 09:88D8: A0 00 00     	ldy	#$0
  6200 09:88DB: A5 10        	lda	<L218+file_offset_0
  6201 09:88DD: 10 01        	bpl	L223
  6202 09:88DF: 88           	dey
  6203                        L223:
  6204 09:88E0: 85 01        	sta	<R0
  6205 09:88E2: 84 03        	sty	<R0+2
  6206 09:88E4: A5 01        	lda	<R0
  6207 09:88E6: 87 05        	sta	[<L219+current_record_1]
  6208 09:88E8: A5 03        	lda	<R0+2
  6209 09:88EA: A0 02 00     	ldy	#$2
  6210 09:88ED: 97 05        	sta	[<L219+current_record_1],Y
  6211                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6212                        	.line	805
  6213 09:88EF: A0 00 00     	ldy	#$0
  6214 09:88F2: A5 12        	lda	<L218+segment_offset_0
  6215 09:88F4: 10 01        	bpl	L224
  6216 09:88F6: 88           	dey
  6217                        L224:
  6218 09:88F7: 85 01        	sta	<R0
  6219 09:88F9: 84 03        	sty	<R0+2
  6220 09:88FB: A5 01        	lda	<R0
  6221 09:88FD: A0 04 00     	ldy	#$4
  6222 09:8900: 97 05        	sta	[<L219+current_record_1],Y
  6223 09:8902: A5 03        	lda	<R0+2
  6224 09:8904: A0 06 00     	ldy	#$6
  6225 09:8907: 97 05        	sta	[<L219+current_record_1],Y
  6226                        ;
  6227                        ;  /* Operation Code */
  6228                        ;  current_record->operation_code = data[0];
  6229                        	.line	808
  Thu Dec  3 2020 22:25                                                Page 117


  6230 09:8909: E2 20        	sep	#$20
  6231                        	longa	off
  6232 09:890B: A7 0C        	lda	[<L218+data_0]
  6233 09:890D: A0 08 00     	ldy	#$8
  6234 09:8910: 97 05        	sta	[<L219+current_record_1],Y
  6235 09:8912: C2 20        	rep	#$20
  6236                        	longa	on
  6237                        ;
  6238                        ;  /* Renvoie la structure */
  6239                        ;  return(current_record);
  6240                        	.line	811
  6241 09:8914: A6 07        	ldx	<L219+current_record_1+2
  6242 09:8916: A5 05        	lda	<L219+current_record_1
  6243 09:8918: 82 AB FF     	brl	L222
  6244                        ;}
  6245                        	.line	812
  6246                        	.endblock	812
  6247             00000008   L218	equ	8
  6248             00000005   L219	equ	5
  6249 09:891B:              	ends
  6250                        	efunc
  6251                        	.endfunc	812,5,8
  6252                        	.line	812
  6253                        ;
  6254                        ;
  6255                        ;/************************************************
                    */
  6256                        ;/*  DecodeRecordEQU() :  Décodage du Record EQU. 
                    */
  6257                        ;/************************************************
                    */
  6258                        ;static void *DecodeRecordEQU(unsigned char *data,
                     int file_offset, int segment_offset, int *record_length_rtn
                    )
  6259                        ;{
  6260                        	.line	818
  6261                        	.line	819
  6262                        	LOADER
  6263                        	func
  6264                        	.function	819
  6265                        ~~DecodeRecordEQU:
  6266                        	longa	on
  6267                        	longi	on
  6268 09:891B: 3B           	tsc
  6269 09:891C: 38           	sec
  6270 09:891D: E9 08 00     	sbc	#L225
  6271 09:8920: 1B           	tcs
  6272 09:8921: 0B           	phd
  6273 09:8922: 5B           	tcd
  6274             00000004   data_0	set	4
  6275             00000008   file_offset_0	set	8
  6276             0000000A   segment_offset_0	set	10
  6277             0000000C   record_length_rtn_0	set	12
  6278                        	.block	819
  6279                        ;  struct record_EQU *current_record;
  6280                        ;
  6281                        ;  /* Allocation mémoire */
  6282                        ;  current_record = (struct record_EQU *) k_calloc
  Thu Dec  3 2020 22:25                                                Page 118


                    (1,sizeof(struct record_EQU));
  6283             00000000   current_record_1	set	0
  6284                        	.sym	current_record,0,138,1,32,90
  6285                        	.sym	data,4,142,6,32
  6286                        	.sym	file_offset,8,5,6,16
  6287                        	.sym	segment_offset,10,5,6,16
  6288                        	.sym	record_length_rtn,12,133,6,32
  6289                        	.line	823
  6290 09:8923: F4 09 00     	pea	#<$9
  6291 09:8926: F4 01 00     	pea	#<$1
  6292 09:8929: 22 xx xx xx  	jsl	~~k_calloc
  6293 09:892D: 85 05        	sta	<L226+current_record_1
  6294 09:892F: 86 07        	stx	<L226+current_record_1+2
  6295                        ;  if(current_record == NULL)
  6296                        	.line	824
  6297                        ;    {
  6298 09:8931: A5 05        	lda	<L226+current_record_1
  6299 09:8933: 05 07        	ora	<L226+current_record_1+2
  6300 09:8935: F0 03        	beq	L228
  6301 09:8937: 82 19 00     	brl	L10185
  6302                        L228:
  6303                        	.line	825
  6304                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6305                        ;      return(NULL);
  6306                        	.line	827
  6307 09:893A: A9 00 00     	lda	#$0
  6308 09:893D: AA           	tax
  6309 09:893E: A9 00 00     	lda	#$0
  6310                        L229:
  6311 09:8941: A8           	tay
  6312 09:8942: A5 0A        	lda	<L225+2
  6313 09:8944: 85 16        	sta	<L225+2+12
  6314 09:8946: A5 09        	lda	<L225+1
  6315 09:8948: 85 15        	sta	<L225+1+12
  6316 09:894A: 2B           	pld
  6317 09:894B: 3B           	tsc
  6318 09:894C: 18           	clc
  6319 09:894D: 69 14 00     	adc	#L225+12
  6320 09:8950: 1B           	tcs
  6321 09:8951: 98           	tya
  6322 09:8952: 6B           	rtl
  6323                        ;    }
  6324                        	.line	828
  6325                        ;
  6326                        ;  /* Offset */
  6327                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6328                        L10185:
  6329                        	.line	831
  6330 09:8953: A0 00 00     	ldy	#$0
  6331 09:8956: A5 10        	lda	<L225+file_offset_0
  6332 09:8958: 10 01        	bpl	L230
  6333 09:895A: 88           	dey
  6334                        L230:
  6335 09:895B: 85 01        	sta	<R0
  6336 09:895D: 84 03        	sty	<R0+2
  6337 09:895F: A5 01        	lda	<R0
  Thu Dec  3 2020 22:25                                                Page 119


  6338 09:8961: 87 05        	sta	[<L226+current_record_1]
  6339 09:8963: A5 03        	lda	<R0+2
  6340 09:8965: A0 02 00     	ldy	#$2
  6341 09:8968: 97 05        	sta	[<L226+current_record_1],Y
  6342                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6343                        	.line	832
  6344 09:896A: A0 00 00     	ldy	#$0
  6345 09:896D: A5 12        	lda	<L225+segment_offset_0
  6346 09:896F: 10 01        	bpl	L231
  6347 09:8971: 88           	dey
  6348                        L231:
  6349 09:8972: 85 01        	sta	<R0
  6350 09:8974: 84 03        	sty	<R0+2
  6351 09:8976: A5 01        	lda	<R0
  6352 09:8978: A0 04 00     	ldy	#$4
  6353 09:897B: 97 05        	sta	[<L226+current_record_1],Y
  6354 09:897D: A5 03        	lda	<R0+2
  6355 09:897F: A0 06 00     	ldy	#$6
  6356 09:8982: 97 05        	sta	[<L226+current_record_1],Y
  6357                        ;
  6358                        ;  /* Operation Code */
  6359                        ;  current_record->operation_code = data[0];
  6360                        	.line	835
  6361 09:8984: E2 20        	sep	#$20
  6362                        	longa	off
  6363 09:8986: A7 0C        	lda	[<L225+data_0]
  6364 09:8988: A0 08 00     	ldy	#$8
  6365 09:898B: 97 05        	sta	[<L226+current_record_1],Y
  6366 09:898D: C2 20        	rep	#$20
  6367                        	longa	on
  6368                        ;
  6369                        ;  /* Renvoie la structure */
  6370                        ;  return(current_record);
  6371                        	.line	838
  6372 09:898F: A6 07        	ldx	<L226+current_record_1+2
  6373 09:8991: A5 05        	lda	<L226+current_record_1
  6374 09:8993: 82 AB FF     	brl	L229
  6375                        ;}
  6376                        	.line	839
  6377                        	.endblock	839
  6378             00000008   L225	equ	8
  6379             00000005   L226	equ	5
  6380 09:8996:              	ends
  6381                        	efunc
  6382                        	.endfunc	839,5,8
  6383                        	.line	839
  6384                        ;
  6385                        ;
  6386                        ;/***********************************************/
  6387                        ;/*  DecodeRecordDS() :  Décodage du Record DS. */
  6388                        ;/***********************************************/
  6389                        ;static void *DecodeRecordDS(unsigned char *data, 
                    int file_offset, int segment_offset, int *record_length_rtn)
  6390                        ;{
  6391                        	.line	845
  6392                        	.line	846
  6393                        	LOADER
  Thu Dec  3 2020 22:25                                                Page 120


  6394                        	func
  6395                        	.function	846
  6396                        ~~DecodeRecordDS:
  6397                        	longa	on
  6398                        	longi	on
  6399 09:8996: 3B           	tsc
  6400 09:8997: 38           	sec
  6401 09:8998: E9 0C 00     	sbc	#L232
  6402 09:899B: 1B           	tcs
  6403 09:899C: 0B           	phd
  6404 09:899D: 5B           	tcd
  6405             00000004   data_0	set	4
  6406             00000008   file_offset_0	set	8
  6407             0000000A   segment_offset_0	set	10
  6408             0000000C   record_length_rtn_0	set	12
  6409                        	.block	846
  6410                        ;  struct record_DS *current_record;
  6411                        ;
  6412                        ;  /* Allocation mémoire */
  6413                        ;  current_record = (struct record_DS *) k_calloc(
                    1,sizeof(struct record_DS));
  6414             00000000   current_record_1	set	0
  6415                        	.sym	current_record,0,138,1,32,91
  6416                        	.sym	data,4,142,6,32
  6417                        	.sym	file_offset,8,5,6,16
  6418                        	.sym	segment_offset,10,5,6,16
  6419                        	.sym	record_length_rtn,12,133,6,32
  6420                        	.line	850
  6421 09:899E: F4 0D 00     	pea	#<$d
  6422 09:89A1: F4 01 00     	pea	#<$1
  6423 09:89A4: 22 xx xx xx  	jsl	~~k_calloc
  6424 09:89A8: 85 09        	sta	<L233+current_record_1
  6425 09:89AA: 86 0B        	stx	<L233+current_record_1+2
  6426                        ;  if(current_record == NULL)
  6427                        	.line	851
  6428                        ;    {
  6429 09:89AC: A5 09        	lda	<L233+current_record_1
  6430 09:89AE: 05 0B        	ora	<L233+current_record_1+2
  6431 09:89B0: F0 03        	beq	L235
  6432 09:89B2: 82 19 00     	brl	L10186
  6433                        L235:
  6434                        	.line	852
  6435                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6436                        ;      return(NULL);
  6437                        	.line	854
  6438 09:89B5: A9 00 00     	lda	#$0
  6439 09:89B8: AA           	tax
  6440 09:89B9: A9 00 00     	lda	#$0
  6441                        L236:
  6442 09:89BC: A8           	tay
  6443 09:89BD: A5 0E        	lda	<L232+2
  6444 09:89BF: 85 1A        	sta	<L232+2+12
  6445 09:89C1: A5 0D        	lda	<L232+1
  6446 09:89C3: 85 19        	sta	<L232+1+12
  6447 09:89C5: 2B           	pld
  6448 09:89C6: 3B           	tsc
  6449 09:89C7: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 121


  6450 09:89C8: 69 18 00     	adc	#L232+12
  6451 09:89CB: 1B           	tcs
  6452 09:89CC: 98           	tya
  6453 09:89CD: 6B           	rtl
  6454                        ;    }
  6455                        	.line	855
  6456                        ;
  6457                        ;  /* Offset */
  6458                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6459                        L10186:
  6460                        	.line	858
  6461 09:89CE: A0 00 00     	ldy	#$0
  6462 09:89D1: A5 14        	lda	<L232+file_offset_0
  6463 09:89D3: 10 01        	bpl	L237
  6464 09:89D5: 88           	dey
  6465                        L237:
  6466 09:89D6: 85 01        	sta	<R0
  6467 09:89D8: 84 03        	sty	<R0+2
  6468 09:89DA: A5 01        	lda	<R0
  6469 09:89DC: 87 09        	sta	[<L233+current_record_1]
  6470 09:89DE: A5 03        	lda	<R0+2
  6471 09:89E0: A0 02 00     	ldy	#$2
  6472 09:89E3: 97 09        	sta	[<L233+current_record_1],Y
  6473                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6474                        	.line	859
  6475 09:89E5: A0 00 00     	ldy	#$0
  6476 09:89E8: A5 16        	lda	<L232+segment_offset_0
  6477 09:89EA: 10 01        	bpl	L238
  6478 09:89EC: 88           	dey
  6479                        L238:
  6480 09:89ED: 85 01        	sta	<R0
  6481 09:89EF: 84 03        	sty	<R0+2
  6482 09:89F1: A5 01        	lda	<R0
  6483 09:89F3: A0 04 00     	ldy	#$4
  6484 09:89F6: 97 09        	sta	[<L233+current_record_1],Y
  6485 09:89F8: A5 03        	lda	<R0+2
  6486 09:89FA: A0 06 00     	ldy	#$6
  6487 09:89FD: 97 09        	sta	[<L233+current_record_1],Y
  6488                        ;
  6489                        ;  /* Operation Code */
  6490                        ;  current_record->operation_code = data[0];
  6491                        	.line	862
  6492 09:89FF: E2 20        	sep	#$20
  6493                        	longa	off
  6494 09:8A01: A7 10        	lda	[<L232+data_0]
  6495 09:8A03: A0 08 00     	ldy	#$8
  6496 09:8A06: 97 09        	sta	[<L233+current_record_1],Y
  6497 09:8A08: C2 20        	rep	#$20
  6498                        	longa	on
  6499                        ;
  6500                        ;  /* Nombre de Byte à $00 */
  6501                        ;  memcpy(&current_record->nb_zero_byte,&data[1],s
                    izeof(DWORD));
  6502                        	.line	865
  6503 09:8A0A: F4 04 00     	pea	#<$4
  6504 09:8A0D: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 122


  6505 09:8A0E: A9 01 00     	lda	#$1
  6506 09:8A11: 65 10        	adc	<L232+data_0
  6507 09:8A13: 85 01        	sta	<R0
  6508 09:8A15: A9 00 00     	lda	#$0
  6509 09:8A18: 65 12        	adc	<L232+data_0+2
  6510 09:8A1A: 85 03        	sta	<R0+2
  6511 09:8A1C: D4 03        	pei	<R0+2
  6512 09:8A1E: D4 01        	pei	<R0
  6513 09:8A20: 18           	clc
  6514 09:8A21: A9 09 00     	lda	#$9
  6515 09:8A24: 65 09        	adc	<L233+current_record_1
  6516 09:8A26: 85 05        	sta	<R1
  6517 09:8A28: A9 00 00     	lda	#$0
  6518 09:8A2B: 65 0B        	adc	<L233+current_record_1+2
  6519 09:8A2D: 85 07        	sta	<R1+2
  6520 09:8A2F: D4 07        	pei	<R1+2
  6521 09:8A31: D4 05        	pei	<R1
  6522 09:8A33: 22 xx xx xx  	jsl	~~memcpy
  6523                        ;
  6524                        ;  /* Renvoie la structure */
  6525                        ;  *record_length_rtn = 1 + sizeof(DWORD);
  6526                        	.line	868
  6527 09:8A37: A9 05 00     	lda	#$5
  6528 09:8A3A: 87 18        	sta	[<L232+record_length_rtn_0]
  6529                        ;  return(current_record);
  6530                        	.line	869
  6531 09:8A3C: A6 0B        	ldx	<L233+current_record_1+2
  6532 09:8A3E: A5 09        	lda	<L233+current_record_1
  6533 09:8A40: 82 79 FF     	brl	L236
  6534                        ;}
  6535                        	.line	870
  6536                        	.endblock	870
  6537             0000000C   L232	equ	12
  6538             00000009   L233	equ	9
  6539 09:8A43:              	ends
  6540                        	efunc
  6541                        	.endfunc	870,9,12
  6542                        	.line	870
  6543                        ;
  6544                        ;
  6545                        ;/************************************************
                    *******/
  6546                        ;/*  DecodeRecordLCONST() :  Décodage du Record LC
                    ONST. */
  6547                        ;/************************************************
                    *******/
  6548                        ;static void *DecodeRecordLCONST(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  6549                        ;{
  6550                        	.line	876
  6551                        	.line	877
  6552                        	LOADER
  6553                        	func
  6554                        	.function	877
  6555                        ~~DecodeRecordLCONST:
  6556                        	longa	on
  6557                        	longi	on
  Thu Dec  3 2020 22:25                                                Page 123


  6558 09:8A43: 3B           	tsc
  6559 09:8A44: 38           	sec
  6560 09:8A45: E9 0C 00     	sbc	#L239
  6561 09:8A48: 1B           	tcs
  6562 09:8A49: 0B           	phd
  6563 09:8A4A: 5B           	tcd
  6564             00000004   data_0	set	4
  6565             00000008   file_offset_0	set	8
  6566             0000000A   segment_offset_0	set	10
  6567             0000000C   record_length_rtn_0	set	12
  6568                        	.block	877
  6569                        ;  struct record_LCONST *current_record;
  6570                        ;
  6571                        ;  /* Allocation mémoire */
  6572                        ;  current_record = (struct record_LCONST *) k_cal
                    loc(1,sizeof(struct record_LCONST));
  6573             00000000   current_record_1	set	0
  6574                        	.sym	current_record,0,138,1,32,92
  6575                        	.sym	data,4,142,6,32
  6576                        	.sym	file_offset,8,5,6,16
  6577                        	.sym	segment_offset,10,5,6,16
  6578                        	.sym	record_length_rtn,12,133,6,32
  6579                        	.line	881
  6580 09:8A4B: F4 11 00     	pea	#<$11
  6581 09:8A4E: F4 01 00     	pea	#<$1
  6582 09:8A51: 22 xx xx xx  	jsl	~~k_calloc
  6583 09:8A55: 85 09        	sta	<L240+current_record_1
  6584 09:8A57: 86 0B        	stx	<L240+current_record_1+2
  6585                        ;  if(current_record == NULL)
  6586                        	.line	882
  6587                        ;    {
  6588 09:8A59: A5 09        	lda	<L240+current_record_1
  6589 09:8A5B: 05 0B        	ora	<L240+current_record_1+2
  6590 09:8A5D: F0 03        	beq	L242
  6591 09:8A5F: 82 19 00     	brl	L10187
  6592                        L242:
  6593                        	.line	883
  6594                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6595                        ;      return(NULL);
  6596                        	.line	885
  6597 09:8A62: A9 00 00     	lda	#$0
  6598 09:8A65: AA           	tax
  6599 09:8A66: A9 00 00     	lda	#$0
  6600                        L243:
  6601 09:8A69: A8           	tay
  6602 09:8A6A: A5 0E        	lda	<L239+2
  6603 09:8A6C: 85 1A        	sta	<L239+2+12
  6604 09:8A6E: A5 0D        	lda	<L239+1
  6605 09:8A70: 85 19        	sta	<L239+1+12
  6606 09:8A72: 2B           	pld
  6607 09:8A73: 3B           	tsc
  6608 09:8A74: 18           	clc
  6609 09:8A75: 69 18 00     	adc	#L239+12
  6610 09:8A78: 1B           	tcs
  6611 09:8A79: 98           	tya
  6612 09:8A7A: 6B           	rtl
  6613                        ;    }
  Thu Dec  3 2020 22:25                                                Page 124


  6614                        	.line	886
  6615                        ;
  6616                        ;  /* Offset */
  6617                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6618                        L10187:
  6619                        	.line	889
  6620 09:8A7B: A0 00 00     	ldy	#$0
  6621 09:8A7E: A5 14        	lda	<L239+file_offset_0
  6622 09:8A80: 10 01        	bpl	L244
  6623 09:8A82: 88           	dey
  6624                        L244:
  6625 09:8A83: 85 01        	sta	<R0
  6626 09:8A85: 84 03        	sty	<R0+2
  6627 09:8A87: A5 01        	lda	<R0
  6628 09:8A89: 87 09        	sta	[<L240+current_record_1]
  6629 09:8A8B: A5 03        	lda	<R0+2
  6630 09:8A8D: A0 02 00     	ldy	#$2
  6631 09:8A90: 97 09        	sta	[<L240+current_record_1],Y
  6632                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6633                        	.line	890
  6634 09:8A92: A0 00 00     	ldy	#$0
  6635 09:8A95: A5 16        	lda	<L239+segment_offset_0
  6636 09:8A97: 10 01        	bpl	L245
  6637 09:8A99: 88           	dey
  6638                        L245:
  6639 09:8A9A: 85 01        	sta	<R0
  6640 09:8A9C: 84 03        	sty	<R0+2
  6641 09:8A9E: A5 01        	lda	<R0
  6642 09:8AA0: A0 04 00     	ldy	#$4
  6643 09:8AA3: 97 09        	sta	[<L240+current_record_1],Y
  6644 09:8AA5: A5 03        	lda	<R0+2
  6645 09:8AA7: A0 06 00     	ldy	#$6
  6646 09:8AAA: 97 09        	sta	[<L240+current_record_1],Y
  6647                        ;
  6648                        ;  /* Operation Code : 0xF2 */
  6649                        ;  current_record->operation_code = data[0];
  6650                        	.line	893
  6651 09:8AAC: E2 20        	sep	#$20
  6652                        	longa	off
  6653 09:8AAE: A7 10        	lda	[<L239+data_0]
  6654 09:8AB0: A0 08 00     	ldy	#$8
  6655 09:8AB3: 97 09        	sta	[<L240+current_record_1],Y
  6656 09:8AB5: C2 20        	rep	#$20
  6657                        	longa	on
  6658                        ;
  6659                        ;  /** Zone de Data ou de Code **/
  6660                        ;  memcpy(&current_record->ByteCnt,&data[1],sizeof
                    (DWORD));
  6661                        	.line	896
  6662 09:8AB7: F4 04 00     	pea	#<$4
  6663 09:8ABA: 18           	clc
  6664 09:8ABB: A9 01 00     	lda	#$1
  6665 09:8ABE: 65 10        	adc	<L239+data_0
  6666 09:8AC0: 85 01        	sta	<R0
  6667 09:8AC2: A9 00 00     	lda	#$0
  6668 09:8AC5: 65 12        	adc	<L239+data_0+2
  Thu Dec  3 2020 22:25                                                Page 125


  6669 09:8AC7: 85 03        	sta	<R0+2
  6670 09:8AC9: D4 03        	pei	<R0+2
  6671 09:8ACB: D4 01        	pei	<R0
  6672 09:8ACD: 18           	clc
  6673 09:8ACE: A9 09 00     	lda	#$9
  6674 09:8AD1: 65 09        	adc	<L240+current_record_1
  6675 09:8AD3: 85 05        	sta	<R1
  6676 09:8AD5: A9 00 00     	lda	#$0
  6677 09:8AD8: 65 0B        	adc	<L240+current_record_1+2
  6678 09:8ADA: 85 07        	sta	<R1+2
  6679 09:8ADC: D4 07        	pei	<R1+2
  6680 09:8ADE: D4 05        	pei	<R1
  6681 09:8AE0: 22 xx xx xx  	jsl	~~memcpy
  6682                        ;
  6683                        ;  /* Allocation mémoire */
  6684                        ;  current_record->data = (unsigned char *) k_call
                    oc(current_record->ByteCnt,sizeof(unsigned char));
  6685                        	.line	899
  6686 09:8AE4: F4 01 00     	pea	#<$1
  6687 09:8AE7: A0 09 00     	ldy	#$9
  6688 09:8AEA: B7 09        	lda	[<L240+current_record_1],Y
  6689 09:8AEC: 48           	pha
  6690 09:8AED: 22 xx xx xx  	jsl	~~k_calloc
  6691 09:8AF1: 85 01        	sta	<R0
  6692 09:8AF3: 86 03        	stx	<R0+2
  6693 09:8AF5: A5 01        	lda	<R0
  6694 09:8AF7: A0 0D 00     	ldy	#$d
  6695 09:8AFA: 97 09        	sta	[<L240+current_record_1],Y
  6696 09:8AFC: A5 03        	lda	<R0+2
  6697 09:8AFE: A0 0F 00     	ldy	#$f
  6698 09:8B01: 97 09        	sta	[<L240+current_record_1],Y
  6699                        ;  if(current_record->data == NULL)
  6700                        	.line	900
  6701                        ;    {
  6702 09:8B03: A0 0D 00     	ldy	#$d
  6703 09:8B06: B7 09        	lda	[<L240+current_record_1],Y
  6704 09:8B08: A0 0F 00     	ldy	#$f
  6705 09:8B0B: 17 09        	ora	[<L240+current_record_1],Y
  6706 09:8B0D: F0 03        	beq	L246
  6707 09:8B0F: 82 12 00     	brl	L10188
  6708                        L246:
  6709                        	.line	901
  6710                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record LCONST : %d bytes requir
                    ed.\n",current_record->ByteCnt);
  6711                        ;      mem_free_LCONST(current_record);
  6712                        	.line	903
  6713 09:8B12: D4 0B        	pei	<L240+current_record_1+2
  6714 09:8B14: D4 09        	pei	<L240+current_record_1
  6715 09:8B16: 22 2E B0 09  	jsl	~~mem_free_LCONST
  6716                        ;      return(NULL);
  6717                        	.line	904
  6718 09:8B1A: A9 00 00     	lda	#$0
  6719 09:8B1D: AA           	tax
  6720 09:8B1E: A9 00 00     	lda	#$0
  6721 09:8B21: 82 45 FF     	brl	L243
  6722                        ;    }
  6723                        	.line	905
  Thu Dec  3 2020 22:25                                                Page 126


  6724                        ;  
  6725                        ;  /* Copie les Data */
  6726                        ;  memcpy(current_record->data,&data[5],current_re
                    cord->ByteCnt);
  6727                        L10188:
  6728                        	.line	908
  6729 09:8B24: A0 09 00     	ldy	#$9
  6730 09:8B27: B7 09        	lda	[<L240+current_record_1],Y
  6731 09:8B29: 48           	pha
  6732 09:8B2A: 18           	clc
  6733 09:8B2B: A9 05 00     	lda	#$5
  6734 09:8B2E: 65 10        	adc	<L239+data_0
  6735 09:8B30: 85 01        	sta	<R0
  6736 09:8B32: A9 00 00     	lda	#$0
  6737 09:8B35: 65 12        	adc	<L239+data_0+2
  6738 09:8B37: 85 03        	sta	<R0+2
  6739 09:8B39: D4 03        	pei	<R0+2
  6740 09:8B3B: D4 01        	pei	<R0
  6741 09:8B3D: A0 0F 00     	ldy	#$f
  6742 09:8B40: B7 09        	lda	[<L240+current_record_1],Y
  6743 09:8B42: 48           	pha
  6744 09:8B43: A0 0D 00     	ldy	#$d
  6745 09:8B46: B7 09        	lda	[<L240+current_record_1],Y
  6746 09:8B48: 48           	pha
  6747 09:8B49: 22 xx xx xx  	jsl	~~memcpy
  6748                        ;
  6749                        ;  /* Renvoie la structure */
  6750                        ;  *record_length_rtn = 1 + sizeof(DWORD) + curren
                    t_record->ByteCnt;
  6751                        	.line	911
  6752 09:8B4D: 18           	clc
  6753 09:8B4E: A9 05 00     	lda	#$5
  6754 09:8B51: A0 09 00     	ldy	#$9
  6755 09:8B54: 77 09        	adc	[<L240+current_record_1],Y
  6756 09:8B56: 85 01        	sta	<R0
  6757 09:8B58: A9 00 00     	lda	#$0
  6758 09:8B5B: A0 0B 00     	ldy	#$b
  6759 09:8B5E: 77 09        	adc	[<L240+current_record_1],Y
  6760 09:8B60: 85 03        	sta	<R0+2
  6761 09:8B62: A5 01        	lda	<R0
  6762 09:8B64: 87 18        	sta	[<L239+record_length_rtn_0]
  6763                        ;  return(current_record);
  6764                        	.line	912
  6765 09:8B66: A6 0B        	ldx	<L240+current_record_1+2
  6766 09:8B68: A5 09        	lda	<L240+current_record_1
  6767 09:8B6A: 82 FC FE     	brl	L243
  6768                        ;}
  6769                        	.line	913
  6770                        	.endblock	913
  6771             0000000C   L239	equ	12
  6772             00000009   L240	equ	9
  6773 09:8B6D:              	ends
  6774                        	efunc
  6775                        	.endfunc	913,9,12
  6776                        	.line	913
  6777                        ;
  6778                        ;
  6779                        ;/************************************************
  Thu Dec  3 2020 22:25                                                Page 127


                    *****/
  6780                        ;/*  DecodeRecordLEXPR() :  Décodage du Record LEX
                    PR. */
  6781                        ;/************************************************
                    *****/
  6782                        ;static void *DecodeRecordLEXPR(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  6783                        ;{
  6784                        	.line	919
  6785                        	.line	920
  6786                        	LOADER
  6787                        	func
  6788                        	.function	920
  6789                        ~~DecodeRecordLEXPR:
  6790                        	longa	on
  6791                        	longi	on
  6792 09:8B6D: 3B           	tsc
  6793 09:8B6E: 38           	sec
  6794 09:8B6F: E9 08 00     	sbc	#L247
  6795 09:8B72: 1B           	tcs
  6796 09:8B73: 0B           	phd
  6797 09:8B74: 5B           	tcd
  6798             00000004   data_0	set	4
  6799             00000008   file_offset_0	set	8
  6800             0000000A   segment_offset_0	set	10
  6801             0000000C   record_length_rtn_0	set	12
  6802                        	.block	920
  6803                        ;  struct record_LEXPR *current_record;
  6804                        ;
  6805                        ;  /* Allocation mémoire */
  6806                        ;  current_record = (struct record_LEXPR *) k_call
                    oc(1,sizeof(struct record_LEXPR));
  6807             00000000   current_record_1	set	0
  6808                        	.sym	current_record,0,138,1,32,93
  6809                        	.sym	data,4,142,6,32
  6810                        	.sym	file_offset,8,5,6,16
  6811                        	.sym	segment_offset,10,5,6,16
  6812                        	.sym	record_length_rtn,12,133,6,32
  6813                        	.line	924
  6814 09:8B75: F4 09 00     	pea	#<$9
  6815 09:8B78: F4 01 00     	pea	#<$1
  6816 09:8B7B: 22 xx xx xx  	jsl	~~k_calloc
  6817 09:8B7F: 85 05        	sta	<L248+current_record_1
  6818 09:8B81: 86 07        	stx	<L248+current_record_1+2
  6819                        ;  if(current_record == NULL)
  6820                        	.line	925
  6821                        ;    {
  6822 09:8B83: A5 05        	lda	<L248+current_record_1
  6823 09:8B85: 05 07        	ora	<L248+current_record_1+2
  6824 09:8B87: F0 03        	beq	L250
  6825 09:8B89: 82 19 00     	brl	L10189
  6826                        L250:
  6827                        	.line	926
  6828                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6829                        ;      return(NULL);
  6830                        	.line	928
  Thu Dec  3 2020 22:25                                                Page 128


  6831 09:8B8C: A9 00 00     	lda	#$0
  6832 09:8B8F: AA           	tax
  6833 09:8B90: A9 00 00     	lda	#$0
  6834                        L251:
  6835 09:8B93: A8           	tay
  6836 09:8B94: A5 0A        	lda	<L247+2
  6837 09:8B96: 85 16        	sta	<L247+2+12
  6838 09:8B98: A5 09        	lda	<L247+1
  6839 09:8B9A: 85 15        	sta	<L247+1+12
  6840 09:8B9C: 2B           	pld
  6841 09:8B9D: 3B           	tsc
  6842 09:8B9E: 18           	clc
  6843 09:8B9F: 69 14 00     	adc	#L247+12
  6844 09:8BA2: 1B           	tcs
  6845 09:8BA3: 98           	tya
  6846 09:8BA4: 6B           	rtl
  6847                        ;    }
  6848                        	.line	929
  6849                        ;
  6850                        ;  /* Offset */
  6851                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6852                        L10189:
  6853                        	.line	932
  6854 09:8BA5: A0 00 00     	ldy	#$0
  6855 09:8BA8: A5 10        	lda	<L247+file_offset_0
  6856 09:8BAA: 10 01        	bpl	L252
  6857 09:8BAC: 88           	dey
  6858                        L252:
  6859 09:8BAD: 85 01        	sta	<R0
  6860 09:8BAF: 84 03        	sty	<R0+2
  6861 09:8BB1: A5 01        	lda	<R0
  6862 09:8BB3: 87 05        	sta	[<L248+current_record_1]
  6863 09:8BB5: A5 03        	lda	<R0+2
  6864 09:8BB7: A0 02 00     	ldy	#$2
  6865 09:8BBA: 97 05        	sta	[<L248+current_record_1],Y
  6866                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6867                        	.line	933
  6868 09:8BBC: A0 00 00     	ldy	#$0
  6869 09:8BBF: A5 12        	lda	<L247+segment_offset_0
  6870 09:8BC1: 10 01        	bpl	L253
  6871 09:8BC3: 88           	dey
  6872                        L253:
  6873 09:8BC4: 85 01        	sta	<R0
  6874 09:8BC6: 84 03        	sty	<R0+2
  6875 09:8BC8: A5 01        	lda	<R0
  6876 09:8BCA: A0 04 00     	ldy	#$4
  6877 09:8BCD: 97 05        	sta	[<L248+current_record_1],Y
  6878 09:8BCF: A5 03        	lda	<R0+2
  6879 09:8BD1: A0 06 00     	ldy	#$6
  6880 09:8BD4: 97 05        	sta	[<L248+current_record_1],Y
  6881                        ;
  6882                        ;  /* Operation Code */
  6883                        ;  current_record->operation_code = data[0];
  6884                        	.line	936
  6885 09:8BD6: E2 20        	sep	#$20
  6886                        	longa	off
  Thu Dec  3 2020 22:25                                                Page 129


  6887 09:8BD8: A7 0C        	lda	[<L247+data_0]
  6888 09:8BDA: A0 08 00     	ldy	#$8
  6889 09:8BDD: 97 05        	sta	[<L248+current_record_1],Y
  6890 09:8BDF: C2 20        	rep	#$20
  6891                        	longa	on
  6892                        ;
  6893                        ;  /* Renvoie la structure */
  6894                        ;  return(current_record);
  6895                        	.line	939
  6896 09:8BE1: A6 07        	ldx	<L248+current_record_1+2
  6897 09:8BE3: A5 05        	lda	<L248+current_record_1
  6898 09:8BE5: 82 AB FF     	brl	L251
  6899                        ;}
  6900                        	.line	940
  6901                        	.endblock	940
  6902             00000008   L247	equ	8
  6903             00000005   L248	equ	5
  6904 09:8BE8:              	ends
  6905                        	efunc
  6906                        	.endfunc	940,5,8
  6907                        	.line	940
  6908                        ;
  6909                        ;
  6910                        ;/************************************************
                    *****/
  6911                        ;/*  DecodeRecordENTRY() :  Décodage du Record ENT
                    RY. */
  6912                        ;/************************************************
                    *****/
  6913                        ;static void *DecodeRecordENTRY(unsigned char *dat
                    a, int file_offset, int segment_offset, int *record_length_r
                    tn)
  6914                        ;{
  6915                        	.line	946
  6916                        	.line	947
  6917                        	LOADER
  6918                        	func
  6919                        	.function	947
  6920                        ~~DecodeRecordENTRY:
  6921                        	longa	on
  6922                        	longi	on
  6923 09:8BE8: 3B           	tsc
  6924 09:8BE9: 38           	sec
  6925 09:8BEA: E9 08 00     	sbc	#L254
  6926 09:8BED: 1B           	tcs
  6927 09:8BEE: 0B           	phd
  6928 09:8BEF: 5B           	tcd
  6929             00000004   data_0	set	4
  6930             00000008   file_offset_0	set	8
  6931             0000000A   segment_offset_0	set	10
  6932             0000000C   record_length_rtn_0	set	12
  6933                        	.block	947
  6934                        ;  struct record_ENTRY *current_record;
  6935                        ;
  6936                        ;  /* Allocation mémoire */
  6937                        ;  current_record = (struct record_ENTRY *) k_call
                    oc(1,sizeof(struct record_ENTRY));
  6938             00000000   current_record_1	set	0
  Thu Dec  3 2020 22:25                                                Page 130


  6939                        	.sym	current_record,0,138,1,32,94
  6940                        	.sym	data,4,142,6,32
  6941                        	.sym	file_offset,8,5,6,16
  6942                        	.sym	segment_offset,10,5,6,16
  6943                        	.sym	record_length_rtn,12,133,6,32
  6944                        	.line	951
  6945 09:8BF0: F4 09 00     	pea	#<$9
  6946 09:8BF3: F4 01 00     	pea	#<$1
  6947 09:8BF6: 22 xx xx xx  	jsl	~~k_calloc
  6948 09:8BFA: 85 05        	sta	<L255+current_record_1
  6949 09:8BFC: 86 07        	stx	<L255+current_record_1+2
  6950                        ;  if(current_record == NULL)
  6951                        	.line	952
  6952                        ;    {
  6953 09:8BFE: A5 05        	lda	<L255+current_record_1
  6954 09:8C00: 05 07        	ora	<L255+current_record_1+2
  6955 09:8C02: F0 03        	beq	L257
  6956 09:8C04: 82 19 00     	brl	L10190
  6957                        L257:
  6958                        	.line	953
  6959                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  6960                        ;      return(NULL);
  6961                        	.line	955
  6962 09:8C07: A9 00 00     	lda	#$0
  6963 09:8C0A: AA           	tax
  6964 09:8C0B: A9 00 00     	lda	#$0
  6965                        L258:
  6966 09:8C0E: A8           	tay
  6967 09:8C0F: A5 0A        	lda	<L254+2
  6968 09:8C11: 85 16        	sta	<L254+2+12
  6969 09:8C13: A5 09        	lda	<L254+1
  6970 09:8C15: 85 15        	sta	<L254+1+12
  6971 09:8C17: 2B           	pld
  6972 09:8C18: 3B           	tsc
  6973 09:8C19: 18           	clc
  6974 09:8C1A: 69 14 00     	adc	#L254+12
  6975 09:8C1D: 1B           	tcs
  6976 09:8C1E: 98           	tya
  6977 09:8C1F: 6B           	rtl
  6978                        ;    }
  6979                        	.line	956
  6980                        ;
  6981                        ;  /* Offset */
  6982                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  6983                        L10190:
  6984                        	.line	959
  6985 09:8C20: A0 00 00     	ldy	#$0
  6986 09:8C23: A5 10        	lda	<L254+file_offset_0
  6987 09:8C25: 10 01        	bpl	L259
  6988 09:8C27: 88           	dey
  6989                        L259:
  6990 09:8C28: 85 01        	sta	<R0
  6991 09:8C2A: 84 03        	sty	<R0+2
  6992 09:8C2C: A5 01        	lda	<R0
  6993 09:8C2E: 87 05        	sta	[<L255+current_record_1]
  6994 09:8C30: A5 03        	lda	<R0+2
  Thu Dec  3 2020 22:25                                                Page 131


  6995 09:8C32: A0 02 00     	ldy	#$2
  6996 09:8C35: 97 05        	sta	[<L255+current_record_1],Y
  6997                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  6998                        	.line	960
  6999 09:8C37: A0 00 00     	ldy	#$0
  7000 09:8C3A: A5 12        	lda	<L254+segment_offset_0
  7001 09:8C3C: 10 01        	bpl	L260
  7002 09:8C3E: 88           	dey
  7003                        L260:
  7004 09:8C3F: 85 01        	sta	<R0
  7005 09:8C41: 84 03        	sty	<R0+2
  7006 09:8C43: A5 01        	lda	<R0
  7007 09:8C45: A0 04 00     	ldy	#$4
  7008 09:8C48: 97 05        	sta	[<L255+current_record_1],Y
  7009 09:8C4A: A5 03        	lda	<R0+2
  7010 09:8C4C: A0 06 00     	ldy	#$6
  7011 09:8C4F: 97 05        	sta	[<L255+current_record_1],Y
  7012                        ;
  7013                        ;  /* Operation Code */
  7014                        ;  current_record->operation_code = data[0];
  7015                        	.line	963
  7016 09:8C51: E2 20        	sep	#$20
  7017                        	longa	off
  7018 09:8C53: A7 0C        	lda	[<L254+data_0]
  7019 09:8C55: A0 08 00     	ldy	#$8
  7020 09:8C58: 97 05        	sta	[<L255+current_record_1],Y
  7021 09:8C5A: C2 20        	rep	#$20
  7022                        	longa	on
  7023                        ;
  7024                        ;  /* Renvoie la structure */
  7025                        ;  return(current_record);
  7026                        	.line	966
  7027 09:8C5C: A6 07        	ldx	<L255+current_record_1+2
  7028 09:8C5E: A5 05        	lda	<L255+current_record_1
  7029 09:8C60: 82 AB FF     	brl	L258
  7030                        ;}
  7031                        	.line	967
  7032                        	.endblock	967
  7033             00000008   L254	equ	8
  7034             00000005   L255	equ	5
  7035 09:8C63:              	ends
  7036                        	efunc
  7037                        	.endfunc	967,5,8
  7038                        	.line	967
  7039                        ;
  7040                        ;
  7041                        ;/************************************************
                    *******/
  7042                        ;/*  DecodeRecordcRELOC() :  Décodage du Record cR
                    ELOC. */
  7043                        ;/************************************************
                    *******/
  7044                        ;static void *DecodeRecordcRELOC(unsigned char *da
                    ta, int file_offset, int segment_offset, int *record_length_
                    rtn)
  7045                        ;{
  7046                        	.line	973
  Thu Dec  3 2020 22:25                                                Page 132


  7047                        	.line	974
  7048                        	LOADER
  7049                        	func
  7050                        	.function	974
  7051                        ~~DecodeRecordcRELOC:
  7052                        	longa	on
  7053                        	longi	on
  7054 09:8C63: 3B           	tsc
  7055 09:8C64: 38           	sec
  7056 09:8C65: E9 0A 00     	sbc	#L261
  7057 09:8C68: 1B           	tcs
  7058 09:8C69: 0B           	phd
  7059 09:8C6A: 5B           	tcd
  7060             00000004   data_0	set	4
  7061             00000008   file_offset_0	set	8
  7062             0000000A   segment_offset_0	set	10
  7063             0000000C   record_length_rtn_0	set	12
  7064                        	.block	974
  7065                        ;  WORD one_word;
  7066                        ;  struct record_cRELOC *current_record;
  7067                        ;
  7068                        ;  /* Allocation mémoire */
  7069                        ;  current_record = (struct record_cRELOC *) k_cal
                    loc(1,sizeof(struct record_cRELOC));
  7070             00000000   one_word_1	set	0
  7071             00000002   current_record_1	set	2
  7072                        	.sym	one_word,0,5,1,16
  7073                        	.sym	current_record,2,138,1,32,95
  7074                        	.sym	data,4,142,6,32
  7075                        	.sym	file_offset,8,5,6,16
  7076                        	.sym	segment_offset,10,5,6,16
  7077                        	.sym	record_length_rtn,12,133,6,32
  7078                        	.line	979
  7079 09:8C6B: F4 13 00     	pea	#<$13
  7080 09:8C6E: F4 01 00     	pea	#<$1
  7081 09:8C71: 22 xx xx xx  	jsl	~~k_calloc
  7082 09:8C75: 85 07        	sta	<L262+current_record_1
  7083 09:8C77: 86 09        	stx	<L262+current_record_1+2
  7084                        ;  if(current_record == NULL)
  7085                        	.line	980
  7086                        ;    {
  7087 09:8C79: A5 07        	lda	<L262+current_record_1
  7088 09:8C7B: 05 09        	ora	<L262+current_record_1+2
  7089 09:8C7D: F0 03        	beq	L264
  7090 09:8C7F: 82 19 00     	brl	L10191
  7091                        L264:
  7092                        	.line	981
  7093                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7094                        ;      return(NULL);
  7095                        	.line	983
  7096 09:8C82: A9 00 00     	lda	#$0
  7097 09:8C85: AA           	tax
  7098 09:8C86: A9 00 00     	lda	#$0
  7099                        L265:
  7100 09:8C89: A8           	tay
  7101 09:8C8A: A5 0C        	lda	<L261+2
  7102 09:8C8C: 85 18        	sta	<L261+2+12
  Thu Dec  3 2020 22:25                                                Page 133


  7103 09:8C8E: A5 0B        	lda	<L261+1
  7104 09:8C90: 85 17        	sta	<L261+1+12
  7105 09:8C92: 2B           	pld
  7106 09:8C93: 3B           	tsc
  7107 09:8C94: 18           	clc
  7108 09:8C95: 69 16 00     	adc	#L261+12
  7109 09:8C98: 1B           	tcs
  7110 09:8C99: 98           	tya
  7111 09:8C9A: 6B           	rtl
  7112                        ;    }
  7113                        	.line	984
  7114                        ;
  7115                        ;  /* Offset */
  7116                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7117                        L10191:
  7118                        	.line	987
  7119 09:8C9B: A0 00 00     	ldy	#$0
  7120 09:8C9E: A5 12        	lda	<L261+file_offset_0
  7121 09:8CA0: 10 01        	bpl	L266
  7122 09:8CA2: 88           	dey
  7123                        L266:
  7124 09:8CA3: 85 01        	sta	<R0
  7125 09:8CA5: 84 03        	sty	<R0+2
  7126 09:8CA7: A5 01        	lda	<R0
  7127 09:8CA9: 87 07        	sta	[<L262+current_record_1]
  7128 09:8CAB: A5 03        	lda	<R0+2
  7129 09:8CAD: A0 02 00     	ldy	#$2
  7130 09:8CB0: 97 07        	sta	[<L262+current_record_1],Y
  7131                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7132                        	.line	988
  7133 09:8CB2: A0 00 00     	ldy	#$0
  7134 09:8CB5: A5 14        	lda	<L261+segment_offset_0
  7135 09:8CB7: 10 01        	bpl	L267
  7136 09:8CB9: 88           	dey
  7137                        L267:
  7138 09:8CBA: 85 01        	sta	<R0
  7139 09:8CBC: 84 03        	sty	<R0+2
  7140 09:8CBE: A5 01        	lda	<R0
  7141 09:8CC0: A0 04 00     	ldy	#$4
  7142 09:8CC3: 97 07        	sta	[<L262+current_record_1],Y
  7143 09:8CC5: A5 03        	lda	<R0+2
  7144 09:8CC7: A0 06 00     	ldy	#$6
  7145 09:8CCA: 97 07        	sta	[<L262+current_record_1],Y
  7146                        ;
  7147                        ;  /* Operation Code */
  7148                        ;  current_record->operation_code = data[0];
  7149                        	.line	991
  7150 09:8CCC: E2 20        	sep	#$20
  7151                        	longa	off
  7152 09:8CCE: A7 0E        	lda	[<L261+data_0]
  7153 09:8CD0: A0 08 00     	ldy	#$8
  7154 09:8CD3: 97 07        	sta	[<L262+current_record_1],Y
  7155 09:8CD5: C2 20        	rep	#$20
  7156                        	longa	on
  7157                        ;
  7158                        ;  /* Récupère les données */
  Thu Dec  3 2020 22:25                                                Page 134


  7159                        ;  current_record->ByteCnt = data[1];
  7160                        	.line	994
  7161 09:8CD7: E2 20        	sep	#$20
  7162                        	longa	off
  7163 09:8CD9: A0 01 00     	ldy	#$1
  7164 09:8CDC: B7 0E        	lda	[<L261+data_0],Y
  7165 09:8CDE: A0 09 00     	ldy	#$9
  7166 09:8CE1: 97 07        	sta	[<L262+current_record_1],Y
  7167 09:8CE3: C2 20        	rep	#$20
  7168                        	longa	on
  7169                        ;  current_record->BitShiftCnt = data[2];
  7170                        	.line	995
  7171 09:8CE5: E2 20        	sep	#$20
  7172                        	longa	off
  7173 09:8CE7: A0 02 00     	ldy	#$2
  7174 09:8CEA: B7 0E        	lda	[<L261+data_0],Y
  7175 09:8CEC: A0 0A 00     	ldy	#$a
  7176 09:8CEF: 97 07        	sta	[<L262+current_record_1],Y
  7177 09:8CF1: C2 20        	rep	#$20
  7178                        	longa	on
  7179                        ;  memcpy(&one_word,&data[3],sizeof(WORD));
  7180                        	.line	996
  7181 09:8CF3: F4 02 00     	pea	#<$2
  7182 09:8CF6: 18           	clc
  7183 09:8CF7: A9 03 00     	lda	#$3
  7184 09:8CFA: 65 0E        	adc	<L261+data_0
  7185 09:8CFC: 85 01        	sta	<R0
  7186 09:8CFE: A9 00 00     	lda	#$0
  7187 09:8D01: 65 10        	adc	<L261+data_0+2
  7188 09:8D03: 85 03        	sta	<R0+2
  7189 09:8D05: D4 03        	pei	<R0+2
  7190 09:8D07: D4 01        	pei	<R0
  7191 09:8D09: F4 00 00     	pea	#0
  7192 09:8D0C: 18           	clc
  7193 09:8D0D: 7B           	tdc
  7194 09:8D0E: 69 05 00     	adc	#<L262+one_word_1
  7195 09:8D11: 48           	pha
  7196 09:8D12: 22 xx xx xx  	jsl	~~memcpy
  7197                        ;  current_record->OffsetPatch = (DWORD) one_word;
  7198                        	.line	997
  7199 09:8D16: A0 00 00     	ldy	#$0
  7200 09:8D19: A5 05        	lda	<L262+one_word_1
  7201 09:8D1B: 10 01        	bpl	L268
  7202 09:8D1D: 88           	dey
  7203                        L268:
  7204 09:8D1E: 85 01        	sta	<R0
  7205 09:8D20: 84 03        	sty	<R0+2
  7206 09:8D22: A5 01        	lda	<R0
  7207 09:8D24: A0 0B 00     	ldy	#$b
  7208 09:8D27: 97 07        	sta	[<L262+current_record_1],Y
  7209 09:8D29: A5 03        	lda	<R0+2
  7210 09:8D2B: A0 0D 00     	ldy	#$d
  7211 09:8D2E: 97 07        	sta	[<L262+current_record_1],Y
  7212                        ;  memcpy(&one_word,&data[5],sizeof(WORD));
  7213                        	.line	998
  7214 09:8D30: F4 02 00     	pea	#<$2
  7215 09:8D33: 18           	clc
  7216 09:8D34: A9 05 00     	lda	#$5
  Thu Dec  3 2020 22:25                                                Page 135


  7217 09:8D37: 65 0E        	adc	<L261+data_0
  7218 09:8D39: 85 01        	sta	<R0
  7219 09:8D3B: A9 00 00     	lda	#$0
  7220 09:8D3E: 65 10        	adc	<L261+data_0+2
  7221 09:8D40: 85 03        	sta	<R0+2
  7222 09:8D42: D4 03        	pei	<R0+2
  7223 09:8D44: D4 01        	pei	<R0
  7224 09:8D46: F4 00 00     	pea	#0
  7225 09:8D49: 18           	clc
  7226 09:8D4A: 7B           	tdc
  7227 09:8D4B: 69 05 00     	adc	#<L262+one_word_1
  7228 09:8D4E: 48           	pha
  7229 09:8D4F: 22 xx xx xx  	jsl	~~memcpy
  7230                        ;  current_record->OffsetReference = (DWORD) one_w
                    ord;
  7231                        	.line	999
  7232 09:8D53: A0 00 00     	ldy	#$0
  7233 09:8D56: A5 05        	lda	<L262+one_word_1
  7234 09:8D58: 10 01        	bpl	L269
  7235 09:8D5A: 88           	dey
  7236                        L269:
  7237 09:8D5B: 85 01        	sta	<R0
  7238 09:8D5D: 84 03        	sty	<R0+2
  7239 09:8D5F: A5 01        	lda	<R0
  7240 09:8D61: A0 0F 00     	ldy	#$f
  7241 09:8D64: 97 07        	sta	[<L262+current_record_1],Y
  7242 09:8D66: A5 03        	lda	<R0+2
  7243 09:8D68: A0 11 00     	ldy	#$11
  7244 09:8D6B: 97 07        	sta	[<L262+current_record_1],Y
  7245                        ;
  7246                        ;  /* Conserve ce RELOC */
  7247                        ;  AddReloc(current_record->ByteCnt,current_record
                    ->BitShiftCnt,current_record->OffsetPatch,current_record->Of
                    fsetReference,RECORD_cRELOC);
  7248                        	.line	1002
  7249 09:8D6D: F4 03 00     	pea	#<$3
  7250 09:8D70: A0 11 00     	ldy	#$11
  7251 09:8D73: B7 07        	lda	[<L262+current_record_1],Y
  7252 09:8D75: 48           	pha
  7253 09:8D76: A0 0F 00     	ldy	#$f
  7254 09:8D79: B7 07        	lda	[<L262+current_record_1],Y
  7255 09:8D7B: 48           	pha
  7256 09:8D7C: A0 0D 00     	ldy	#$d
  7257 09:8D7F: B7 07        	lda	[<L262+current_record_1],Y
  7258 09:8D81: 48           	pha
  7259 09:8D82: A0 0B 00     	ldy	#$b
  7260 09:8D85: B7 07        	lda	[<L262+current_record_1],Y
  7261 09:8D87: 48           	pha
  7262 09:8D88: A0 0A 00     	ldy	#$a
  7263 09:8D8B: B7 07        	lda	[<L262+current_record_1],Y
  7264 09:8D8D: 48           	pha
  7265 09:8D8E: A0 09 00     	ldy	#$9
  7266 09:8D91: B7 07        	lda	[<L262+current_record_1],Y
  7267 09:8D93: 48           	pha
  7268 09:8D94: 22 33 AC 09  	jsl	~~AddReloc
  7269                        ;
  7270                        ;  /* Renvoie la structure */
  7271                        ;  *record_length_rtn = 3*sizeof(BYTE) + 2*sizeof(
  Thu Dec  3 2020 22:25                                                Page 136


                    WORD);
  7272                        	.line	1005
  7273 09:8D98: A9 07 00     	lda	#$7
  7274 09:8D9B: 87 16        	sta	[<L261+record_length_rtn_0]
  7275                        ;  return(current_record);
  7276                        	.line	1006
  7277 09:8D9D: A6 09        	ldx	<L262+current_record_1+2
  7278 09:8D9F: A5 07        	lda	<L262+current_record_1
  7279 09:8DA1: 82 E5 FE     	brl	L265
  7280                        ;}
  7281                        	.line	1007
  7282                        	.endblock	1007
  7283             0000000A   L261	equ	10
  7284             00000005   L262	equ	5
  7285 09:8DA4:              	ends
  7286                        	efunc
  7287                        	.endfunc	1007,5,10
  7288                        	.line	1007
  7289                        ;
  7290                        ;
  7291                        ;/************************************************
                    *************/
  7292                        ;/*  DecodeRecordcINTERSEG() :  Décodage du Record
                     cINTERSEG. */
  7293                        ;/************************************************
                    *************/
  7294                        ;static void *DecodeRecordcINTERSEG(unsigned char 
                    *data, int file_offset, int segment_offset, int *record_leng
                    th_rtn)
  7295                        ;{
  7296                        	.line	1013
  7297                        	.line	1014
  7298                        	LOADER
  7299                        	func
  7300                        	.function	1014
  7301                        ~~DecodeRecordcINTERSEG:
  7302                        	longa	on
  7303                        	longi	on
  7304 09:8DA4: 3B           	tsc
  7305 09:8DA5: 38           	sec
  7306 09:8DA6: E9 0A 00     	sbc	#L270
  7307 09:8DA9: 1B           	tcs
  7308 09:8DAA: 0B           	phd
  7309 09:8DAB: 5B           	tcd
  7310             00000004   data_0	set	4
  7311             00000008   file_offset_0	set	8
  7312             0000000A   segment_offset_0	set	10
  7313             0000000C   record_length_rtn_0	set	12
  7314                        	.block	1014
  7315                        ;  WORD one_word;
  7316                        ;  struct record_cINTERSEG *current_record;
  7317                        ;
  7318                        ;  /* Allocation mémoire */
  7319                        ;  current_record = (struct record_cINTERSEG *) k_
                    calloc(1,sizeof(struct record_cINTERSEG));
  7320             00000000   one_word_1	set	0
  7321             00000002   current_record_1	set	2
  7322                        	.sym	one_word,0,5,1,16
  Thu Dec  3 2020 22:25                                                Page 137


  7323                        	.sym	current_record,2,138,1,32,96
  7324                        	.sym	data,4,142,6,32
  7325                        	.sym	file_offset,8,5,6,16
  7326                        	.sym	segment_offset,10,5,6,16
  7327                        	.sym	record_length_rtn,12,133,6,32
  7328                        	.line	1019
  7329 09:8DAC: F4 16 00     	pea	#<$16
  7330 09:8DAF: F4 01 00     	pea	#<$1
  7331 09:8DB2: 22 xx xx xx  	jsl	~~k_calloc
  7332 09:8DB6: 85 07        	sta	<L271+current_record_1
  7333 09:8DB8: 86 09        	stx	<L271+current_record_1+2
  7334                        ;  if(current_record == NULL)
  7335                        	.line	1020
  7336                        ;    {
  7337 09:8DBA: A5 07        	lda	<L271+current_record_1
  7338 09:8DBC: 05 09        	ora	<L271+current_record_1+2
  7339 09:8DBE: F0 03        	beq	L273
  7340 09:8DC0: 82 19 00     	brl	L10192
  7341                        L273:
  7342                        	.line	1021
  7343                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7344                        ;      return(NULL);
  7345                        	.line	1023
  7346 09:8DC3: A9 00 00     	lda	#$0
  7347 09:8DC6: AA           	tax
  7348 09:8DC7: A9 00 00     	lda	#$0
  7349                        L274:
  7350 09:8DCA: A8           	tay
  7351 09:8DCB: A5 0C        	lda	<L270+2
  7352 09:8DCD: 85 18        	sta	<L270+2+12
  7353 09:8DCF: A5 0B        	lda	<L270+1
  7354 09:8DD1: 85 17        	sta	<L270+1+12
  7355 09:8DD3: 2B           	pld
  7356 09:8DD4: 3B           	tsc
  7357 09:8DD5: 18           	clc
  7358 09:8DD6: 69 16 00     	adc	#L270+12
  7359 09:8DD9: 1B           	tcs
  7360 09:8DDA: 98           	tya
  7361 09:8DDB: 6B           	rtl
  7362                        ;    }
  7363                        	.line	1024
  7364                        ;
  7365                        ;  /* Offset */
  7366                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7367                        L10192:
  7368                        	.line	1027
  7369 09:8DDC: A0 00 00     	ldy	#$0
  7370 09:8DDF: A5 12        	lda	<L270+file_offset_0
  7371 09:8DE1: 10 01        	bpl	L275
  7372 09:8DE3: 88           	dey
  7373                        L275:
  7374 09:8DE4: 85 01        	sta	<R0
  7375 09:8DE6: 84 03        	sty	<R0+2
  7376 09:8DE8: A5 01        	lda	<R0
  7377 09:8DEA: 87 07        	sta	[<L271+current_record_1]
  7378 09:8DEC: A5 03        	lda	<R0+2
  Thu Dec  3 2020 22:25                                                Page 138


  7379 09:8DEE: A0 02 00     	ldy	#$2
  7380 09:8DF1: 97 07        	sta	[<L271+current_record_1],Y
  7381                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7382                        	.line	1028
  7383 09:8DF3: A0 00 00     	ldy	#$0
  7384 09:8DF6: A5 14        	lda	<L270+segment_offset_0
  7385 09:8DF8: 10 01        	bpl	L276
  7386 09:8DFA: 88           	dey
  7387                        L276:
  7388 09:8DFB: 85 01        	sta	<R0
  7389 09:8DFD: 84 03        	sty	<R0+2
  7390 09:8DFF: A5 01        	lda	<R0
  7391 09:8E01: A0 04 00     	ldy	#$4
  7392 09:8E04: 97 07        	sta	[<L271+current_record_1],Y
  7393 09:8E06: A5 03        	lda	<R0+2
  7394 09:8E08: A0 06 00     	ldy	#$6
  7395 09:8E0B: 97 07        	sta	[<L271+current_record_1],Y
  7396                        ;
  7397                        ;  /* Operation Code */
  7398                        ;  current_record->operation_code = data[0];
  7399                        	.line	1031
  7400 09:8E0D: E2 20        	sep	#$20
  7401                        	longa	off
  7402 09:8E0F: A7 0E        	lda	[<L270+data_0]
  7403 09:8E11: A0 08 00     	ldy	#$8
  7404 09:8E14: 97 07        	sta	[<L271+current_record_1],Y
  7405 09:8E16: C2 20        	rep	#$20
  7406                        	longa	on
  7407                        ;
  7408                        ;  /* File Number toujours à 1 */
  7409                        ;  current_record->FileNum = 1;
  7410                        	.line	1034
  7411 09:8E18: A9 01 00     	lda	#$1
  7412 09:8E1B: A0 0F 00     	ldy	#$f
  7413 09:8E1E: 97 07        	sta	[<L271+current_record_1],Y
  7414                        ;
  7415                        ;  /** Récupère les informations **/
  7416                        ;  current_record->ByteCnt = data[1];
  7417                        	.line	1037
  7418 09:8E20: E2 20        	sep	#$20
  7419                        	longa	off
  7420 09:8E22: A0 01 00     	ldy	#$1
  7421 09:8E25: B7 0E        	lda	[<L270+data_0],Y
  7422 09:8E27: A0 09 00     	ldy	#$9
  7423 09:8E2A: 97 07        	sta	[<L271+current_record_1],Y
  7424 09:8E2C: C2 20        	rep	#$20
  7425                        	longa	on
  7426                        ;  current_record->BitShiftCnt = data[2];
  7427                        	.line	1038
  7428 09:8E2E: E2 20        	sep	#$20
  7429                        	longa	off
  7430 09:8E30: A0 02 00     	ldy	#$2
  7431 09:8E33: B7 0E        	lda	[<L270+data_0],Y
  7432 09:8E35: A0 0A 00     	ldy	#$a
  7433 09:8E38: 97 07        	sta	[<L271+current_record_1],Y
  7434 09:8E3A: C2 20        	rep	#$20
  7435                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 139


  7436                        ;  memcpy(&one_word,&data[3],sizeof(WORD));
  7437                        	.line	1039
  7438 09:8E3C: F4 02 00     	pea	#<$2
  7439 09:8E3F: 18           	clc
  7440 09:8E40: A9 03 00     	lda	#$3
  7441 09:8E43: 65 0E        	adc	<L270+data_0
  7442 09:8E45: 85 01        	sta	<R0
  7443 09:8E47: A9 00 00     	lda	#$0
  7444 09:8E4A: 65 10        	adc	<L270+data_0+2
  7445 09:8E4C: 85 03        	sta	<R0+2
  7446 09:8E4E: D4 03        	pei	<R0+2
  7447 09:8E50: D4 01        	pei	<R0
  7448 09:8E52: F4 00 00     	pea	#0
  7449 09:8E55: 18           	clc
  7450 09:8E56: 7B           	tdc
  7451 09:8E57: 69 05 00     	adc	#<L271+one_word_1
  7452 09:8E5A: 48           	pha
  7453 09:8E5B: 22 xx xx xx  	jsl	~~memcpy
  7454                        ;  current_record->OffsetPatch = (DWORD) one_word;
  7455                        	.line	1040
  7456 09:8E5F: A0 00 00     	ldy	#$0
  7457 09:8E62: A5 05        	lda	<L271+one_word_1
  7458 09:8E64: 10 01        	bpl	L277
  7459 09:8E66: 88           	dey
  7460                        L277:
  7461 09:8E67: 85 01        	sta	<R0
  7462 09:8E69: 84 03        	sty	<R0+2
  7463 09:8E6B: A5 01        	lda	<R0
  7464 09:8E6D: A0 0B 00     	ldy	#$b
  7465 09:8E70: 97 07        	sta	[<L271+current_record_1],Y
  7466 09:8E72: A5 03        	lda	<R0+2
  7467 09:8E74: A0 0D 00     	ldy	#$d
  7468 09:8E77: 97 07        	sta	[<L271+current_record_1],Y
  7469                        ;  current_record->SegNum = data[5];
  7470                        	.line	1041
  7471 09:8E79: E2 20        	sep	#$20
  7472                        	longa	off
  7473 09:8E7B: A0 05 00     	ldy	#$5
  7474 09:8E7E: B7 0E        	lda	[<L270+data_0],Y
  7475 09:8E80: A0 11 00     	ldy	#$11
  7476 09:8E83: 97 07        	sta	[<L271+current_record_1],Y
  7477 09:8E85: C2 20        	rep	#$20
  7478                        	longa	on
  7479                        ;  memcpy(&one_word,&data[6],sizeof(WORD));
  7480                        	.line	1042
  7481 09:8E87: F4 02 00     	pea	#<$2
  7482 09:8E8A: 18           	clc
  7483 09:8E8B: A9 06 00     	lda	#$6
  7484 09:8E8E: 65 0E        	adc	<L270+data_0
  7485 09:8E90: 85 01        	sta	<R0
  7486 09:8E92: A9 00 00     	lda	#$0
  7487 09:8E95: 65 10        	adc	<L270+data_0+2
  7488 09:8E97: 85 03        	sta	<R0+2
  7489 09:8E99: D4 03        	pei	<R0+2
  7490 09:8E9B: D4 01        	pei	<R0
  7491 09:8E9D: F4 00 00     	pea	#0
  7492 09:8EA0: 18           	clc
  7493 09:8EA1: 7B           	tdc
  Thu Dec  3 2020 22:25                                                Page 140


  7494 09:8EA2: 69 05 00     	adc	#<L271+one_word_1
  7495 09:8EA5: 48           	pha
  7496 09:8EA6: 22 xx xx xx  	jsl	~~memcpy
  7497                        ;  current_record->OffsetReference = (DWORD) one_w
                    ord;
  7498                        	.line	1043
  7499 09:8EAA: A0 00 00     	ldy	#$0
  7500 09:8EAD: A5 05        	lda	<L271+one_word_1
  7501 09:8EAF: 10 01        	bpl	L278
  7502 09:8EB1: 88           	dey
  7503                        L278:
  7504 09:8EB2: 85 01        	sta	<R0
  7505 09:8EB4: 84 03        	sty	<R0+2
  7506 09:8EB6: A5 01        	lda	<R0
  7507 09:8EB8: A0 12 00     	ldy	#$12
  7508 09:8EBB: 97 07        	sta	[<L271+current_record_1],Y
  7509 09:8EBD: A5 03        	lda	<R0+2
  7510 09:8EBF: A0 14 00     	ldy	#$14
  7511 09:8EC2: 97 07        	sta	[<L271+current_record_1],Y
  7512                        ;
  7513                        ;  /* Conserve ce INTERSEG */
  7514                        ;  AddInterseg(current_record->ByteCnt,current_rec
                    ord->BitShiftCnt,current_record->OffsetPatch,current_record-
                    >OffsetReference,current_record->FileNum,current_record->Seg
                    Num,RECORD_cINTERSEG);
  7515                        	.line	1046
  7516 09:8EC4: F4 04 00     	pea	#<$4
  7517 09:8EC7: A0 11 00     	ldy	#$11
  7518 09:8ECA: B7 07        	lda	[<L271+current_record_1],Y
  7519 09:8ECC: 29 FF 00     	and	#$ff
  7520 09:8ECF: 48           	pha
  7521 09:8ED0: A0 0F 00     	ldy	#$f
  7522 09:8ED3: B7 07        	lda	[<L271+current_record_1],Y
  7523 09:8ED5: 48           	pha
  7524 09:8ED6: A0 14 00     	ldy	#$14
  7525 09:8ED9: B7 07        	lda	[<L271+current_record_1],Y
  7526 09:8EDB: 48           	pha
  7527 09:8EDC: A0 12 00     	ldy	#$12
  7528 09:8EDF: B7 07        	lda	[<L271+current_record_1],Y
  7529 09:8EE1: 48           	pha
  7530 09:8EE2: A0 0D 00     	ldy	#$d
  7531 09:8EE5: B7 07        	lda	[<L271+current_record_1],Y
  7532 09:8EE7: 48           	pha
  7533 09:8EE8: A0 0B 00     	ldy	#$b
  7534 09:8EEB: B7 07        	lda	[<L271+current_record_1],Y
  7535 09:8EED: 48           	pha
  7536 09:8EEE: A0 0A 00     	ldy	#$a
  7537 09:8EF1: B7 07        	lda	[<L271+current_record_1],Y
  7538 09:8EF3: 48           	pha
  7539 09:8EF4: A0 09 00     	ldy	#$9
  7540 09:8EF7: B7 07        	lda	[<L271+current_record_1],Y
  7541 09:8EF9: 48           	pha
  7542 09:8EFA: 22 A9 AC 09  	jsl	~~AddInterseg
  7543                        ;
  7544                        ;  /* Renvoie la structure */
  7545                        ;  *record_length_rtn = 4*sizeof(BYTE) + 2*sizeof(
                    WORD);
  7546                        	.line	1049
  Thu Dec  3 2020 22:25                                                Page 141


  7547 09:8EFE: A9 08 00     	lda	#$8
  7548 09:8F01: 87 16        	sta	[<L270+record_length_rtn_0]
  7549                        ;  return(current_record);
  7550                        	.line	1050
  7551 09:8F03: A6 09        	ldx	<L271+current_record_1+2
  7552 09:8F05: A5 07        	lda	<L271+current_record_1
  7553 09:8F07: 82 C0 FE     	brl	L274
  7554                        ;}
  7555                        	.line	1051
  7556                        	.endblock	1051
  7557             0000000A   L270	equ	10
  7558             00000005   L271	equ	5
  7559 09:8F0A:              	ends
  7560                        	efunc
  7561                        	.endfunc	1051,5,10
  7562                        	.line	1051
  7563                        ;
  7564                        ;
  7565                        ;/************************************************
                    *****/
  7566                        ;/*  DecodeRecordSUPER() :  Décodage du Record SUP
                    ER. */
  7567                        ;/************************************************
                    *****/
  7568                        ;static void *DecodeRecordSUPER(unsigned char *dat
                    a, int file_offset, int segment_offset, unsigned char *lcons
                    t, int lconst_length, int *record_length_rtn, struct omf_seg
                    ment *current_segment)
  7569                        ;{
  7570                        	.line	1057
  7571                        	.line	1058
  7572                        	LOADER
  7573                        	func
  7574                        	.function	1058
  7575                        ~~DecodeRecordSUPER:
  7576                        	longa	on
  7577                        	longi	on
  7578 09:8F0A: 3B           	tsc
  7579 09:8F0B: 38           	sec
  7580 09:8F0C: E9 29 00     	sbc	#L279
  7581 09:8F0F: 1B           	tcs
  7582 09:8F10: 0B           	phd
  7583 09:8F11: 5B           	tcd
  7584             00000004   data_0	set	4
  7585             00000008   file_offset_0	set	8
  7586             0000000A   segment_offset_0	set	10
  7587             0000000C   lconst_0	set	12
  7588             00000010   lconst_length_0	set	16
  7589             00000012   record_length_rtn_0	set	18
  7590             00000016   current_segment_0	set	22
  7591                        	.block	1058
  7592                        ;  int offset, length;
  7593                        ;  BYTE page;
  7594                        ;  struct record_SUPER *current_record;
  7595                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
  7596                        ;  struct subrecord_SuperReloc3 *current_SuperRelo
                    c3;
  Thu Dec  3 2020 22:25                                                Page 142


  7597                        ;  struct subrecord_SuperInterseg1 *current_SuperI
                    nterseg1;
  7598                        ;  struct subrecord_SuperInterseg212 *current_Supe
                    rInterseg212;
  7599                        ;  struct subrecord_SuperInterseg1324 *current_Sup
                    erInterseg1324;
  7600                        ;  struct subrecord_SuperInterseg2536 *current_Sup
                    erInterseg2536;
  7601                        ;
  7602                        ;  /* Allocation mémoire */
  7603                        ;  current_record = (struct record_SUPER *) k_call
                    oc(1,sizeof(struct record_SUPER));
  7604             00000000   offset_1	set	0
  7605             00000002   length_1	set	2
  7606             00000004   page_1	set	4
  7607             00000005   current_record_1	set	5
  7608             00000009   current_SuperReloc2_1	set	9
  7609             0000000D   current_SuperReloc3_1	set	13
  7610             00000011   current_SuperInterseg1_1	set	17
  7611             00000015   current_SuperInterseg212_1	set	21
  7612             00000019   current_SuperInterseg1324_1	set	25
  7613             0000001D   current_SuperInterseg2536_1	set	29
  7614                        	.sym	offset,0,5,1,16
  7615                        	.sym	length,2,5,1,16
  7616                        	.sym	page,4,14,1,8
  7617                        	.sym	current_record,5,138,1,32,97
  7618                        	.sym	current_SuperReloc2,9,138,1,32,68
  7619                        	.sym	current_SuperReloc3,13,138,1,32,69
  7620                        	.sym	current_SuperInterseg1,17,138,1,32,70
  7621                        	.sym	current_SuperInterseg212,21,138,1,32,71
  7622                        	.sym	current_SuperInterseg1324,25,138,1,32,72
  7623                        	.sym	current_SuperInterseg2536,29,138,1,32,73
  7624                        	.sym	data,4,142,6,32
  7625                        	.sym	file_offset,8,5,6,16
  7626                        	.sym	segment_offset,10,5,6,16
  7627                        	.sym	lconst,12,142,6,32
  7628                        	.sym	lconst_length,16,5,6,16
  7629                        	.sym	record_length_rtn,18,133,6,32
  7630                        	.sym	current_segment,22,138,6,32,65
  7631                        	.line	1070
  7632 09:8F12: F4 4A 00     	pea	#<$4a
  7633 09:8F15: F4 01 00     	pea	#<$1
  7634 09:8F18: 22 xx xx xx  	jsl	~~k_calloc
  7635 09:8F1C: 85 0E        	sta	<L280+current_record_1
  7636 09:8F1E: 86 10        	stx	<L280+current_record_1+2
  7637                        ;  if(current_record == NULL)
  7638                        	.line	1071
  7639                        ;    {
  7640 09:8F20: A5 0E        	lda	<L280+current_record_1
  7641 09:8F22: 05 10        	ora	<L280+current_record_1+2
  7642 09:8F24: F0 03        	beq	L282
  7643 09:8F26: 82 19 00     	brl	L10193
  7644                        L282:
  7645                        	.line	1072
  7646                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  7647                        ;      return(NULL);
  7648                        	.line	1074
  Thu Dec  3 2020 22:25                                                Page 143


  7649 09:8F29: A9 00 00     	lda	#$0
  7650 09:8F2C: AA           	tax
  7651 09:8F2D: A9 00 00     	lda	#$0
  7652                        L283:
  7653 09:8F30: A8           	tay
  7654 09:8F31: A5 2B        	lda	<L279+2
  7655 09:8F33: 85 41        	sta	<L279+2+22
  7656 09:8F35: A5 2A        	lda	<L279+1
  7657 09:8F37: 85 40        	sta	<L279+1+22
  7658 09:8F39: 2B           	pld
  7659 09:8F3A: 3B           	tsc
  7660 09:8F3B: 18           	clc
  7661 09:8F3C: 69 3F 00     	adc	#L279+22
  7662 09:8F3F: 1B           	tcs
  7663 09:8F40: 98           	tya
  7664 09:8F41: 6B           	rtl
  7665                        ;    }
  7666                        	.line	1075
  7667                        ;
  7668                        ;  /* Offset */
  7669                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  7670                        L10193:
  7671                        	.line	1078
  7672 09:8F42: A0 00 00     	ldy	#$0
  7673 09:8F45: A5 31        	lda	<L279+file_offset_0
  7674 09:8F47: 10 01        	bpl	L284
  7675 09:8F49: 88           	dey
  7676                        L284:
  7677 09:8F4A: 85 01        	sta	<R0
  7678 09:8F4C: 84 03        	sty	<R0+2
  7679 09:8F4E: A5 01        	lda	<R0
  7680 09:8F50: 87 0E        	sta	[<L280+current_record_1]
  7681 09:8F52: A5 03        	lda	<R0+2
  7682 09:8F54: A0 02 00     	ldy	#$2
  7683 09:8F57: 97 0E        	sta	[<L280+current_record_1],Y
  7684                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  7685                        	.line	1079
  7686 09:8F59: A0 00 00     	ldy	#$0
  7687 09:8F5C: A5 33        	lda	<L279+segment_offset_0
  7688 09:8F5E: 10 01        	bpl	L285
  7689 09:8F60: 88           	dey
  7690                        L285:
  7691 09:8F61: 85 01        	sta	<R0
  7692 09:8F63: 84 03        	sty	<R0+2
  7693 09:8F65: A5 01        	lda	<R0
  7694 09:8F67: A0 04 00     	ldy	#$4
  7695 09:8F6A: 97 0E        	sta	[<L280+current_record_1],Y
  7696 09:8F6C: A5 03        	lda	<R0+2
  7697 09:8F6E: A0 06 00     	ldy	#$6
  7698 09:8F71: 97 0E        	sta	[<L280+current_record_1],Y
  7699                        ;
  7700                        ;  /* Operation Code : 0xF7 */
  7701                        ;  current_record->operation_code = data[0];
  7702                        	.line	1082
  7703 09:8F73: E2 20        	sep	#$20
  7704                        	longa	off
  Thu Dec  3 2020 22:25                                                Page 144


  7705 09:8F75: A7 2D        	lda	[<L279+data_0]
  7706 09:8F77: A0 08 00     	ldy	#$8
  7707 09:8F7A: 97 0E        	sta	[<L280+current_record_1],Y
  7708 09:8F7C: C2 20        	rep	#$20
  7709                        	longa	on
  7710                        ;
  7711                        ;  /* Longueur */
  7712                        ;  memcpy(&current_record->ByteCnt,&data[1],sizeof
                    (DWORD));
  7713                        	.line	1085
  7714 09:8F7E: F4 04 00     	pea	#<$4
  7715 09:8F81: 18           	clc
  7716 09:8F82: A9 01 00     	lda	#$1
  7717 09:8F85: 65 2D        	adc	<L279+data_0
  7718 09:8F87: 85 01        	sta	<R0
  7719 09:8F89: A9 00 00     	lda	#$0
  7720 09:8F8C: 65 2F        	adc	<L279+data_0+2
  7721 09:8F8E: 85 03        	sta	<R0+2
  7722 09:8F90: D4 03        	pei	<R0+2
  7723 09:8F92: D4 01        	pei	<R0
  7724 09:8F94: 18           	clc
  7725 09:8F95: A9 09 00     	lda	#$9
  7726 09:8F98: 65 0E        	adc	<L280+current_record_1
  7727 09:8F9A: 85 05        	sta	<R1
  7728 09:8F9C: A9 00 00     	lda	#$0
  7729 09:8F9F: 65 10        	adc	<L280+current_record_1+2
  7730 09:8FA1: 85 07        	sta	<R1+2
  7731 09:8FA3: D4 07        	pei	<R1+2
  7732 09:8FA5: D4 05        	pei	<R1
  7733 09:8FA7: 22 xx xx xx  	jsl	~~memcpy
  7734                        ;
  7735                        ;  /* Type */
  7736                        ;  current_record->RecordType = data[5];
  7737                        	.line	1088
  7738 09:8FAB: E2 20        	sep	#$20
  7739                        	longa	off
  7740 09:8FAD: A0 05 00     	ldy	#$5
  7741 09:8FB0: B7 2D        	lda	[<L279+data_0],Y
  7742 09:8FB2: A0 0D 00     	ldy	#$d
  7743 09:8FB5: 97 0E        	sta	[<L280+current_record_1],Y
  7744 09:8FB7: C2 20        	rep	#$20
  7745                        	longa	on
  7746                        ;
  7747                        ;  /** Décodage des Sous Record **/
  7748                        ;  if(current_record->RecordType == 0x00)
  7749                        	.line	1091
  7750                        ;    {
  7751 09:8FB9: A0 0D 00     	ldy	#$d
  7752 09:8FBC: B7 0E        	lda	[<L280+current_record_1],Y
  7753 09:8FBE: 29 FF 00     	and	#$ff
  7754 09:8FC1: F0 03        	beq	L286
  7755 09:8FC3: 82 E6 00     	brl	L10194
  7756                        L286:
  7757                        	.line	1092
  7758                        ;      /** Super Reloc2 **/
  7759                        ;      offset = 0;
  7760                        	.line	1094
  7761 09:8FC6: 64 09        	stz	<L280+offset_1
  Thu Dec  3 2020 22:25                                                Page 145


  7762                        ;      page = 0x00;
  7763                        	.line	1095
  7764 09:8FC8: E2 20        	sep	#$20
  7765                        	longa	off
  7766 09:8FCA: 64 0D        	stz	<L280+page_1
  7767 09:8FCC: C2 20        	rep	#$20
  7768                        	longa	on
  7769                        ;      while(1)
  7770                        	.line	1096
  7771                        L10195:
  7772                        ;        {
  7773                        	.line	1097
  7774                        ;          /* Récupère les données */
  7775                        ;          current_SuperReloc2 = DecodeSuperReloc2
                    (&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,&page,
                    &length,current_segment);
  7776                        	.line	1099
  7777 09:8FCE: D4 41        	pei	<L279+current_segment_0+2
  7778 09:8FD0: D4 3F        	pei	<L279+current_segment_0
  7779 09:8FD2: F4 00 00     	pea	#0
  7780 09:8FD5: 18           	clc
  7781 09:8FD6: 7B           	tdc
  7782 09:8FD7: 69 0B 00     	adc	#<L280+length_1
  7783 09:8FDA: 48           	pha
  7784 09:8FDB: F4 00 00     	pea	#0
  7785 09:8FDE: 18           	clc
  7786 09:8FDF: 7B           	tdc
  7787 09:8FE0: 69 0D 00     	adc	#<L280+page_1
  7788 09:8FE3: 48           	pha
  7789 09:8FE4: D4 39        	pei	<L279+lconst_length_0
  7790 09:8FE6: D4 37        	pei	<L279+lconst_0+2
  7791 09:8FE8: D4 35        	pei	<L279+lconst_0
  7792 09:8FEA: 18           	clc
  7793 09:8FEB: A9 06 00     	lda	#$6
  7794 09:8FEE: 65 09        	adc	<L280+offset_1
  7795 09:8FF0: 85 01        	sta	<R0
  7796 09:8FF2: A5 01        	lda	<R0
  7797 09:8FF4: 85 01        	sta	<R0
  7798 09:8FF6: 64 03        	stz	<R0+2
  7799 09:8FF8: 18           	clc
  7800 09:8FF9: A5 2D        	lda	<L279+data_0
  7801 09:8FFB: 65 01        	adc	<R0
  7802 09:8FFD: 85 05        	sta	<R1
  7803 09:8FFF: A5 2F        	lda	<L279+data_0+2
  7804 09:9001: 65 03        	adc	<R0+2
  7805 09:9003: 85 07        	sta	<R1+2
  7806 09:9005: D4 07        	pei	<R1+2
  7807 09:9007: D4 05        	pei	<R1
  7808 09:9009: 22 F3 96 09  	jsl	~~DecodeSuperReloc2
  7809 09:900D: 85 12        	sta	<L280+current_SuperReloc2_1
  7810 09:900F: 86 14        	stx	<L280+current_SuperReloc2_1+2
  7811                        ;          if(current_SuperReloc2 == NULL)
  7812                        	.line	1100
  7813                        ;            {
  7814 09:9011: A5 12        	lda	<L280+current_SuperReloc2_1
  7815 09:9013: 05 14        	ora	<L280+current_SuperReloc2_1+2
  7816 09:9015: F0 03        	beq	L287
  7817 09:9017: 82 12 00     	brl	L10197
  Thu Dec  3 2020 22:25                                                Page 146


  7818                        L287:
  7819                        	.line	1101
  7820                        ;              mem_free_SUPER(current_record);
  7821                        	.line	1102
  7822 09:901A: D4 10        	pei	<L280+current_record_1+2
  7823 09:901C: D4 0E        	pei	<L280+current_record_1
  7824 09:901E: 22 1A B1 09  	jsl	~~mem_free_SUPER
  7825                        ;              return(NULL);
  7826                        	.line	1103
  7827 09:9022: A9 00 00     	lda	#$0
  7828 09:9025: AA           	tax
  7829 09:9026: A9 00 00     	lda	#$0
  7830 09:9029: 82 04 FF     	brl	L283
  7831                        ;            }
  7832                        	.line	1104
  7833                        ;
  7834                        ;          /* Attache à la liste chainée */
  7835                        ;          if(current_record->first_SuperReloc2 ==
                     NULL)
  7836                        L10197:
  7837                        	.line	1107
  7838                        ;            current_record->first_SuperReloc2 = c
                    urrent_SuperReloc2;
  7839 09:902C: A0 10 00     	ldy	#$10
  7840 09:902F: B7 0E        	lda	[<L280+current_record_1],Y
  7841 09:9031: A0 12 00     	ldy	#$12
  7842 09:9034: 17 0E        	ora	[<L280+current_record_1],Y
  7843 09:9036: F0 03        	beq	L288
  7844 09:9038: 82 11 00     	brl	L10198
  7845                        L288:
  7846                        	.line	1108
  7847 09:903B: A5 12        	lda	<L280+current_SuperReloc2_1
  7848 09:903D: A0 10 00     	ldy	#$10
  7849 09:9040: 97 0E        	sta	[<L280+current_record_1],Y
  7850 09:9042: A5 14        	lda	<L280+current_SuperReloc2_1+2
  7851 09:9044: A0 12 00     	ldy	#$12
  7852 09:9047: 97 0E        	sta	[<L280+current_record_1],Y
  7853                        ;          else
  7854 09:9049: 82 1C 00     	brl	L10199
  7855                        L10198:
  7856                        ;            current_record->last_SuperReloc2->nex
                    t = current_SuperReloc2;
  7857                        	.line	1110
  7858 09:904C: A0 14 00     	ldy	#$14
  7859 09:904F: B7 0E        	lda	[<L280+current_record_1],Y
  7860 09:9051: 85 01        	sta	<R0
  7861 09:9053: A0 16 00     	ldy	#$16
  7862 09:9056: B7 0E        	lda	[<L280+current_record_1],Y
  7863 09:9058: 85 03        	sta	<R0+2
  7864 09:905A: A5 12        	lda	<L280+current_SuperReloc2_1
  7865 09:905C: A0 0D 08     	ldy	#$80d
  7866 09:905F: 97 01        	sta	[<R0],Y
  7867 09:9061: A5 14        	lda	<L280+current_SuperReloc2_1+2
  7868 09:9063: A0 0F 08     	ldy	#$80f
  7869 09:9066: 97 01        	sta	[<R0],Y
  7870                        L10199:
  7871                        ;          current_record->last_SuperReloc2 = curr
                    ent_SuperReloc2;
  Thu Dec  3 2020 22:25                                                Page 147


  7872                        	.line	1111
  7873 09:9068: A5 12        	lda	<L280+current_SuperReloc2_1
  7874 09:906A: A0 14 00     	ldy	#$14
  7875 09:906D: 97 0E        	sta	[<L280+current_record_1],Y
  7876 09:906F: A5 14        	lda	<L280+current_SuperReloc2_1+2
  7877 09:9071: A0 16 00     	ldy	#$16
  7878 09:9074: 97 0E        	sta	[<L280+current_record_1],Y
  7879                        ;          current_record->nb_SuperReloc2++;
  7880                        	.line	1112
  7881 09:9076: A0 0E 00     	ldy	#$e
  7882 09:9079: B7 0E        	lda	[<L280+current_record_1],Y
  7883 09:907B: 1A           	ina
  7884 09:907C: A0 0E 00     	ldy	#$e
  7885 09:907F: 97 0E        	sta	[<L280+current_record_1],Y
  7886                        ;
  7887                        ;          /* SubRecord suivant */
  7888                        ;          offset += length;
  7889                        	.line	1115
  7890 09:9081: 18           	clc
  7891 09:9082: A5 09        	lda	<L280+offset_1
  7892 09:9084: 65 0B        	adc	<L280+length_1
  7893 09:9086: 85 09        	sta	<L280+offset_1
  7894                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  7895                        	.line	1116
  7896                        ;            break;
  7897 09:9088: 18           	clc
  7898 09:9089: A9 FF FF     	lda	#$ffff
  7899 09:908C: A0 09 00     	ldy	#$9
  7900 09:908F: 77 0E        	adc	[<L280+current_record_1],Y
  7901 09:9091: 85 01        	sta	<R0
  7902 09:9093: A9 FF FF     	lda	#$ffff
  7903 09:9096: A0 0B 00     	ldy	#$b
  7904 09:9099: 77 0E        	adc	[<L280+current_record_1],Y
  7905 09:909B: 85 03        	sta	<R0+2
  7906 09:909D: A5 01        	lda	<R0
  7907 09:909F: C5 09        	cmp	<L280+offset_1
  7908 09:90A1: D0 03        	bne	L289
  7909 09:90A3: 82 03 00     	brl	L10196
  7910                        L289:
  7911                        ;        }
  7912                        	.line	1118
  7913 09:90A6: 82 25 FF     	brl	L10195
  7914                        L10196:
  7915                        ;    }
  7916                        	.line	1119
  7917                        ;  else if(current_record->RecordType == 0x01)
  7918 09:90A9: 82 31 05     	brl	L10200
  7919                        L10194:
  7920                        	.line	1120
  7921                        ;    {
  7922 09:90AC: E2 20        	sep	#$20
  7923                        	longa	off
  7924 09:90AE: A0 0D 00     	ldy	#$d
  7925 09:90B1: B7 0E        	lda	[<L280+current_record_1],Y
  7926 09:90B3: C9 01        	cmp	#<$1
  7927 09:90B5: C2 20        	rep	#$20
  7928                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 148


  7929 09:90B7: F0 03        	beq	L290
  7930 09:90B9: 82 E6 00     	brl	L10201
  7931                        L290:
  7932                        	.line	1121
  7933                        ;      /** Super Reloc3 **/
  7934                        ;      offset = 0;
  7935                        	.line	1123
  7936 09:90BC: 64 09        	stz	<L280+offset_1
  7937                        ;      page = 0x00;
  7938                        	.line	1124
  7939 09:90BE: E2 20        	sep	#$20
  7940                        	longa	off
  7941 09:90C0: 64 0D        	stz	<L280+page_1
  7942 09:90C2: C2 20        	rep	#$20
  7943                        	longa	on
  7944                        ;      while(1)
  7945                        	.line	1125
  7946                        L10202:
  7947                        ;        {
  7948                        	.line	1126
  7949                        ;          /* Récupère les données */
  7950                        ;          current_SuperReloc3 = DecodeSuperReloc3
                    (&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,&page,
                    &length,current_segment);
  7951                        	.line	1128
  7952 09:90C4: D4 41        	pei	<L279+current_segment_0+2
  7953 09:90C6: D4 3F        	pei	<L279+current_segment_0
  7954 09:90C8: F4 00 00     	pea	#0
  7955 09:90CB: 18           	clc
  7956 09:90CC: 7B           	tdc
  7957 09:90CD: 69 0B 00     	adc	#<L280+length_1
  7958 09:90D0: 48           	pha
  7959 09:90D1: F4 00 00     	pea	#0
  7960 09:90D4: 18           	clc
  7961 09:90D5: 7B           	tdc
  7962 09:90D6: 69 0D 00     	adc	#<L280+page_1
  7963 09:90D9: 48           	pha
  7964 09:90DA: D4 39        	pei	<L279+lconst_length_0
  7965 09:90DC: D4 37        	pei	<L279+lconst_0+2
  7966 09:90DE: D4 35        	pei	<L279+lconst_0
  7967 09:90E0: 18           	clc
  7968 09:90E1: A9 06 00     	lda	#$6
  7969 09:90E4: 65 09        	adc	<L280+offset_1
  7970 09:90E6: 85 01        	sta	<R0
  7971 09:90E8: A5 01        	lda	<R0
  7972 09:90EA: 85 01        	sta	<R0
  7973 09:90EC: 64 03        	stz	<R0+2
  7974 09:90EE: 18           	clc
  7975 09:90EF: A5 2D        	lda	<L279+data_0
  7976 09:90F1: 65 01        	adc	<R0
  7977 09:90F3: 85 05        	sta	<R1
  7978 09:90F5: A5 2F        	lda	<L279+data_0+2
  7979 09:90F7: 65 03        	adc	<R0+2
  7980 09:90F9: 85 07        	sta	<R1+2
  7981 09:90FB: D4 07        	pei	<R1+2
  7982 09:90FD: D4 05        	pei	<R1
  7983 09:90FF: 22 12 9A 09  	jsl	~~DecodeSuperReloc3
  7984 09:9103: 85 16        	sta	<L280+current_SuperReloc3_1
  Thu Dec  3 2020 22:25                                                Page 149


  7985 09:9105: 86 18        	stx	<L280+current_SuperReloc3_1+2
  7986                        ;          if(current_SuperReloc3 == NULL)
  7987                        	.line	1129
  7988                        ;            {
  7989 09:9107: A5 16        	lda	<L280+current_SuperReloc3_1
  7990 09:9109: 05 18        	ora	<L280+current_SuperReloc3_1+2
  7991 09:910B: F0 03        	beq	L291
  7992 09:910D: 82 12 00     	brl	L10204
  7993                        L291:
  7994                        	.line	1130
  7995                        ;              mem_free_SUPER(current_record);
  7996                        	.line	1131
  7997 09:9110: D4 10        	pei	<L280+current_record_1+2
  7998 09:9112: D4 0E        	pei	<L280+current_record_1
  7999 09:9114: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8000                        ;              return(NULL);
  8001                        	.line	1132
  8002 09:9118: A9 00 00     	lda	#$0
  8003 09:911B: AA           	tax
  8004 09:911C: A9 00 00     	lda	#$0
  8005 09:911F: 82 0E FE     	brl	L283
  8006                        ;            }
  8007                        	.line	1133
  8008                        ;
  8009                        ;          /* Attache à la liste chainée */
  8010                        ;          if(current_record->first_SuperReloc3 ==
                     NULL)
  8011                        L10204:
  8012                        	.line	1136
  8013                        ;            current_record->first_SuperReloc3 = c
                    urrent_SuperReloc3;
  8014 09:9122: A0 1A 00     	ldy	#$1a
  8015 09:9125: B7 0E        	lda	[<L280+current_record_1],Y
  8016 09:9127: A0 1C 00     	ldy	#$1c
  8017 09:912A: 17 0E        	ora	[<L280+current_record_1],Y
  8018 09:912C: F0 03        	beq	L292
  8019 09:912E: 82 11 00     	brl	L10205
  8020                        L292:
  8021                        	.line	1137
  8022 09:9131: A5 16        	lda	<L280+current_SuperReloc3_1
  8023 09:9133: A0 1A 00     	ldy	#$1a
  8024 09:9136: 97 0E        	sta	[<L280+current_record_1],Y
  8025 09:9138: A5 18        	lda	<L280+current_SuperReloc3_1+2
  8026 09:913A: A0 1C 00     	ldy	#$1c
  8027 09:913D: 97 0E        	sta	[<L280+current_record_1],Y
  8028                        ;          else
  8029 09:913F: 82 1C 00     	brl	L10206
  8030                        L10205:
  8031                        ;            current_record->last_SuperReloc3->nex
                    t = current_SuperReloc3;
  8032                        	.line	1139
  8033 09:9142: A0 1E 00     	ldy	#$1e
  8034 09:9145: B7 0E        	lda	[<L280+current_record_1],Y
  8035 09:9147: 85 01        	sta	<R0
  8036 09:9149: A0 20 00     	ldy	#$20
  8037 09:914C: B7 0E        	lda	[<L280+current_record_1],Y
  8038 09:914E: 85 03        	sta	<R0+2
  8039 09:9150: A5 16        	lda	<L280+current_SuperReloc3_1
  Thu Dec  3 2020 22:25                                                Page 150


  8040 09:9152: A0 0D 08     	ldy	#$80d
  8041 09:9155: 97 01        	sta	[<R0],Y
  8042 09:9157: A5 18        	lda	<L280+current_SuperReloc3_1+2
  8043 09:9159: A0 0F 08     	ldy	#$80f
  8044 09:915C: 97 01        	sta	[<R0],Y
  8045                        L10206:
  8046                        ;          current_record->last_SuperReloc3 = curr
                    ent_SuperReloc3;
  8047                        	.line	1140
  8048 09:915E: A5 16        	lda	<L280+current_SuperReloc3_1
  8049 09:9160: A0 1E 00     	ldy	#$1e
  8050 09:9163: 97 0E        	sta	[<L280+current_record_1],Y
  8051 09:9165: A5 18        	lda	<L280+current_SuperReloc3_1+2
  8052 09:9167: A0 20 00     	ldy	#$20
  8053 09:916A: 97 0E        	sta	[<L280+current_record_1],Y
  8054                        ;          current_record->nb_SuperReloc3++;
  8055                        	.line	1141
  8056 09:916C: A0 18 00     	ldy	#$18
  8057 09:916F: B7 0E        	lda	[<L280+current_record_1],Y
  8058 09:9171: 1A           	ina
  8059 09:9172: A0 18 00     	ldy	#$18
  8060 09:9175: 97 0E        	sta	[<L280+current_record_1],Y
  8061                        ;
  8062                        ;          /* SubRecord suivant */
  8063                        ;          offset += length;
  8064                        	.line	1144
  8065 09:9177: 18           	clc
  8066 09:9178: A5 09        	lda	<L280+offset_1
  8067 09:917A: 65 0B        	adc	<L280+length_1
  8068 09:917C: 85 09        	sta	<L280+offset_1
  8069                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8070                        	.line	1145
  8071                        ;            break;
  8072 09:917E: 18           	clc
  8073 09:917F: A9 FF FF     	lda	#$ffff
  8074 09:9182: A0 09 00     	ldy	#$9
  8075 09:9185: 77 0E        	adc	[<L280+current_record_1],Y
  8076 09:9187: 85 01        	sta	<R0
  8077 09:9189: A9 FF FF     	lda	#$ffff
  8078 09:918C: A0 0B 00     	ldy	#$b
  8079 09:918F: 77 0E        	adc	[<L280+current_record_1],Y
  8080 09:9191: 85 03        	sta	<R0+2
  8081 09:9193: A5 01        	lda	<R0
  8082 09:9195: C5 09        	cmp	<L280+offset_1
  8083 09:9197: D0 03        	bne	L293
  8084 09:9199: 82 03 00     	brl	L10203
  8085                        L293:
  8086                        ;        }      
  8087                        	.line	1147
  8088 09:919C: 82 25 FF     	brl	L10202
  8089                        L10203:
  8090                        ;    }
  8091                        	.line	1148
  8092                        ;  else if(current_record->RecordType == 0x02)  /*
                     2 */
  8093 09:919F: 82 3B 04     	brl	L10207
  8094                        L10201:
  Thu Dec  3 2020 22:25                                                Page 151


  8095                        	.line	1149
  8096                        ;    {
  8097 09:91A2: E2 20        	sep	#$20
  8098                        	longa	off
  8099 09:91A4: A0 0D 00     	ldy	#$d
  8100 09:91A7: B7 0E        	lda	[<L280+current_record_1],Y
  8101 09:91A9: C9 02        	cmp	#<$2
  8102 09:91AB: C2 20        	rep	#$20
  8103                        	longa	on
  8104 09:91AD: F0 03        	beq	L294
  8105 09:91AF: 82 E6 00     	brl	L10208
  8106                        L294:
  8107                        	.line	1150
  8108                        ;      /** Super Interseg1 **/
  8109                        ;      offset = 0;
  8110                        	.line	1152
  8111 09:91B2: 64 09        	stz	<L280+offset_1
  8112                        ;      page = 0x00;
  8113                        	.line	1153
  8114 09:91B4: E2 20        	sep	#$20
  8115                        	longa	off
  8116 09:91B6: 64 0D        	stz	<L280+page_1
  8117 09:91B8: C2 20        	rep	#$20
  8118                        	longa	on
  8119                        ;      while(1)
  8120                        	.line	1154
  8121                        L10209:
  8122                        ;        {
  8123                        	.line	1155
  8124                        ;          /* Récupère les données */
  8125                        ;          current_SuperInterseg1 = DecodeSuperInt
                    erseg1(&data[1+sizeof(DWORD)+1+offset],lconst,lconst_length,
                    &page,&length,current_segment);
  8126                        	.line	1157
  8127 09:91BA: D4 41        	pei	<L279+current_segment_0+2
  8128 09:91BC: D4 3F        	pei	<L279+current_segment_0
  8129 09:91BE: F4 00 00     	pea	#0
  8130 09:91C1: 18           	clc
  8131 09:91C2: 7B           	tdc
  8132 09:91C3: 69 0B 00     	adc	#<L280+length_1
  8133 09:91C6: 48           	pha
  8134 09:91C7: F4 00 00     	pea	#0
  8135 09:91CA: 18           	clc
  8136 09:91CB: 7B           	tdc
  8137 09:91CC: 69 0D 00     	adc	#<L280+page_1
  8138 09:91CF: 48           	pha
  8139 09:91D0: D4 39        	pei	<L279+lconst_length_0
  8140 09:91D2: D4 37        	pei	<L279+lconst_0+2
  8141 09:91D4: D4 35        	pei	<L279+lconst_0
  8142 09:91D6: 18           	clc
  8143 09:91D7: A9 06 00     	lda	#$6
  8144 09:91DA: 65 09        	adc	<L280+offset_1
  8145 09:91DC: 85 01        	sta	<R0
  8146 09:91DE: A5 01        	lda	<R0
  8147 09:91E0: 85 01        	sta	<R0
  8148 09:91E2: 64 03        	stz	<R0+2
  8149 09:91E4: 18           	clc
  8150 09:91E5: A5 2D        	lda	<L279+data_0
  Thu Dec  3 2020 22:25                                                Page 152


  8151 09:91E7: 65 01        	adc	<R0
  8152 09:91E9: 85 05        	sta	<R1
  8153 09:91EB: A5 2F        	lda	<L279+data_0+2
  8154 09:91ED: 65 03        	adc	<R0+2
  8155 09:91EF: 85 07        	sta	<R1+2
  8156 09:91F1: D4 07        	pei	<R1+2
  8157 09:91F3: D4 05        	pei	<R1
  8158 09:91F5: 22 31 9D 09  	jsl	~~DecodeSuperInterseg1
  8159 09:91F9: 85 1A        	sta	<L280+current_SuperInterseg1_1
  8160 09:91FB: 86 1C        	stx	<L280+current_SuperInterseg1_1+2
  8161                        ;          if(current_SuperInterseg1 == NULL)
  8162                        	.line	1158
  8163                        ;            {
  8164 09:91FD: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8165 09:91FF: 05 1C        	ora	<L280+current_SuperInterseg1_1+2
  8166 09:9201: F0 03        	beq	L295
  8167 09:9203: 82 12 00     	brl	L10211
  8168                        L295:
  8169                        	.line	1159
  8170                        ;              mem_free_SUPER(current_record);
  8171                        	.line	1160
  8172 09:9206: D4 10        	pei	<L280+current_record_1+2
  8173 09:9208: D4 0E        	pei	<L280+current_record_1
  8174 09:920A: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8175                        ;              return(NULL);
  8176                        	.line	1161
  8177 09:920E: A9 00 00     	lda	#$0
  8178 09:9211: AA           	tax
  8179 09:9212: A9 00 00     	lda	#$0
  8180 09:9215: 82 18 FD     	brl	L283
  8181                        ;            }
  8182                        	.line	1162
  8183                        ;
  8184                        ;          /* Attache à la liste chainée */
  8185                        ;          if(current_record->first_SuperInterseg1
                     == NULL)
  8186                        L10211:
  8187                        	.line	1165
  8188                        ;            current_record->first_SuperInterseg1 
                    = current_SuperInterseg1;
  8189 09:9218: A0 24 00     	ldy	#$24
  8190 09:921B: B7 0E        	lda	[<L280+current_record_1],Y
  8191 09:921D: A0 26 00     	ldy	#$26
  8192 09:9220: 17 0E        	ora	[<L280+current_record_1],Y
  8193 09:9222: F0 03        	beq	L296
  8194 09:9224: 82 11 00     	brl	L10212
  8195                        L296:
  8196                        	.line	1166
  8197 09:9227: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8198 09:9229: A0 24 00     	ldy	#$24
  8199 09:922C: 97 0E        	sta	[<L280+current_record_1],Y
  8200 09:922E: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8201 09:9230: A0 26 00     	ldy	#$26
  8202 09:9233: 97 0E        	sta	[<L280+current_record_1],Y
  8203                        ;          else
  8204 09:9235: 82 1C 00     	brl	L10213
  8205                        L10212:
  8206                        ;            current_record->last_SuperInterseg1->
  Thu Dec  3 2020 22:25                                                Page 153


                    next = current_SuperInterseg1;
  8207                        	.line	1168
  8208 09:9238: A0 28 00     	ldy	#$28
  8209 09:923B: B7 0E        	lda	[<L280+current_record_1],Y
  8210 09:923D: 85 01        	sta	<R0
  8211 09:923F: A0 2A 00     	ldy	#$2a
  8212 09:9242: B7 0E        	lda	[<L280+current_record_1],Y
  8213 09:9244: 85 03        	sta	<R0+2
  8214 09:9246: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8215 09:9248: A0 0F 0A     	ldy	#$a0f
  8216 09:924B: 97 01        	sta	[<R0],Y
  8217 09:924D: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8218 09:924F: A0 11 0A     	ldy	#$a11
  8219 09:9252: 97 01        	sta	[<R0],Y
  8220                        L10213:
  8221                        ;          current_record->last_SuperInterseg1 = c
                    urrent_SuperInterseg1;
  8222                        	.line	1169
  8223 09:9254: A5 1A        	lda	<L280+current_SuperInterseg1_1
  8224 09:9256: A0 28 00     	ldy	#$28
  8225 09:9259: 97 0E        	sta	[<L280+current_record_1],Y
  8226 09:925B: A5 1C        	lda	<L280+current_SuperInterseg1_1+2
  8227 09:925D: A0 2A 00     	ldy	#$2a
  8228 09:9260: 97 0E        	sta	[<L280+current_record_1],Y
  8229                        ;          current_record->nb_SuperInterseg1++;
  8230                        	.line	1170
  8231 09:9262: A0 22 00     	ldy	#$22
  8232 09:9265: B7 0E        	lda	[<L280+current_record_1],Y
  8233 09:9267: 1A           	ina
  8234 09:9268: A0 22 00     	ldy	#$22
  8235 09:926B: 97 0E        	sta	[<L280+current_record_1],Y
  8236                        ;
  8237                        ;          /* SubRecord suivant */
  8238                        ;          offset += length;
  8239                        	.line	1173
  8240 09:926D: 18           	clc
  8241 09:926E: A5 09        	lda	<L280+offset_1
  8242 09:9270: 65 0B        	adc	<L280+length_1
  8243 09:9272: 85 09        	sta	<L280+offset_1
  8244                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8245                        	.line	1174
  8246                        ;            break;
  8247 09:9274: 18           	clc
  8248 09:9275: A9 FF FF     	lda	#$ffff
  8249 09:9278: A0 09 00     	ldy	#$9
  8250 09:927B: 77 0E        	adc	[<L280+current_record_1],Y
  8251 09:927D: 85 01        	sta	<R0
  8252 09:927F: A9 FF FF     	lda	#$ffff
  8253 09:9282: A0 0B 00     	ldy	#$b
  8254 09:9285: 77 0E        	adc	[<L280+current_record_1],Y
  8255 09:9287: 85 03        	sta	<R0+2
  8256 09:9289: A5 01        	lda	<R0
  8257 09:928B: C5 09        	cmp	<L280+offset_1
  8258 09:928D: D0 03        	bne	L297
  8259 09:928F: 82 03 00     	brl	L10210
  8260                        L297:
  8261                        ;        }  
  Thu Dec  3 2020 22:25                                                Page 154


  8262                        	.line	1176
  8263 09:9292: 82 25 FF     	brl	L10209
  8264                        L10210:
  8265                        ;    }
  8266                        	.line	1177
  8267                        ;  else if(current_record->RecordType >= 0x03 && c
                    urrent_record->RecordType <= 0x0D)  /* 3-13 */
  8268 09:9295: 82 45 03     	brl	L10214
  8269                        L10208:
  8270                        	.line	1178
  8271                        ;    {
  8272 09:9298: E2 20        	sep	#$20
  8273                        	longa	off
  8274 09:929A: A0 0D 00     	ldy	#$d
  8275 09:929D: B7 0E        	lda	[<L280+current_record_1],Y
  8276 09:929F: C9 03        	cmp	#<$3
  8277 09:92A1: C2 20        	rep	#$20
  8278                        	longa	on
  8279 09:92A3: B0 03        	bcs	L298
  8280 09:92A5: 82 07 01     	brl	L10215
  8281                        L298:
  8282 09:92A8: E2 20        	sep	#$20
  8283                        	longa	off
  8284 09:92AA: A9 0D        	lda	#$d
  8285 09:92AC: A0 0D 00     	ldy	#$d
  8286 09:92AF: D7 0E        	cmp	[<L280+current_record_1],Y
  8287 09:92B1: C2 20        	rep	#$20
  8288                        	longa	on
  8289 09:92B3: B0 03        	bcs	L299
  8290 09:92B5: 82 F7 00     	brl	L10215
  8291                        L299:
  8292                        	.line	1179
  8293                        ;      /** Super Interseg 2-12 **/
  8294                        ;      offset = 0;
  8295                        	.line	1181
  8296 09:92B8: 64 09        	stz	<L280+offset_1
  8297                        ;      page = 0x00;
  8298                        	.line	1182
  8299 09:92BA: E2 20        	sep	#$20
  8300                        	longa	off
  8301 09:92BC: 64 0D        	stz	<L280+page_1
  8302 09:92BE: C2 20        	rep	#$20
  8303                        	longa	on
  8304                        ;      while(1)
  8305                        	.line	1183
  8306                        L10216:
  8307                        ;        {
  8308                        	.line	1184
  8309                        ;          /* Récupère les données */
  8310                        ;          current_SuperInterseg212 = DecodeSuperI
                    nterseg212(&data[1+sizeof(DWORD)+1+offset],current_record->R
                    ecordType-1,lconst,lconst_length,&page,&length,current_segme
                    nt);
  8311                        	.line	1186
  8312 09:92C0: D4 41        	pei	<L279+current_segment_0+2
  8313 09:92C2: D4 3F        	pei	<L279+current_segment_0
  8314 09:92C4: F4 00 00     	pea	#0
  8315 09:92C7: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 155


  8316 09:92C8: 7B           	tdc
  8317 09:92C9: 69 0B 00     	adc	#<L280+length_1
  8318 09:92CC: 48           	pha
  8319 09:92CD: F4 00 00     	pea	#0
  8320 09:92D0: 18           	clc
  8321 09:92D1: 7B           	tdc
  8322 09:92D2: 69 0D 00     	adc	#<L280+page_1
  8323 09:92D5: 48           	pha
  8324 09:92D6: D4 39        	pei	<L279+lconst_length_0
  8325 09:92D8: D4 37        	pei	<L279+lconst_0+2
  8326 09:92DA: D4 35        	pei	<L279+lconst_0
  8327 09:92DC: A0 0D 00     	ldy	#$d
  8328 09:92DF: B7 0E        	lda	[<L280+current_record_1],Y
  8329 09:92E1: 29 FF 00     	and	#$ff
  8330 09:92E4: 85 01        	sta	<R0
  8331 09:92E6: 18           	clc
  8332 09:92E7: A9 FF FF     	lda	#$ffff
  8333 09:92EA: 65 01        	adc	<R0
  8334 09:92EC: 48           	pha
  8335 09:92ED: 18           	clc
  8336 09:92EE: A9 06 00     	lda	#$6
  8337 09:92F1: 65 09        	adc	<L280+offset_1
  8338 09:92F3: 85 01        	sta	<R0
  8339 09:92F5: A5 01        	lda	<R0
  8340 09:92F7: 85 01        	sta	<R0
  8341 09:92F9: 64 03        	stz	<R0+2
  8342 09:92FB: 18           	clc
  8343 09:92FC: A5 2D        	lda	<L279+data_0
  8344 09:92FE: 65 01        	adc	<R0
  8345 09:9300: 85 05        	sta	<R1
  8346 09:9302: A5 2F        	lda	<L279+data_0+2
  8347 09:9304: 65 03        	adc	<R0+2
  8348 09:9306: 85 07        	sta	<R1+2
  8349 09:9308: D4 07        	pei	<R1+2
  8350 09:930A: D4 05        	pei	<R1
  8351 09:930C: 22 70 A1 09  	jsl	~~DecodeSuperInterseg212
  8352 09:9310: 85 1E        	sta	<L280+current_SuperInterseg212_1
  8353 09:9312: 86 20        	stx	<L280+current_SuperInterseg212_1+2
  8354                        ;          if(current_SuperInterseg212 == NULL)
  8355                        	.line	1187
  8356                        ;            {
  8357 09:9314: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8358 09:9316: 05 20        	ora	<L280+current_SuperInterseg212_1+2
  8359 09:9318: F0 03        	beq	L300
  8360 09:931A: 82 12 00     	brl	L10218
  8361                        L300:
  8362                        	.line	1188
  8363                        ;              mem_free_SUPER(current_record);
  8364                        	.line	1189
  8365 09:931D: D4 10        	pei	<L280+current_record_1+2
  8366 09:931F: D4 0E        	pei	<L280+current_record_1
  8367 09:9321: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8368                        ;              return(NULL);
  8369                        	.line	1190
  8370 09:9325: A9 00 00     	lda	#$0
  8371 09:9328: AA           	tax
  8372 09:9329: A9 00 00     	lda	#$0
  8373 09:932C: 82 01 FC     	brl	L283
  Thu Dec  3 2020 22:25                                                Page 156


  8374                        ;            }
  8375                        	.line	1191
  8376                        ;
  8377                        ;          /* Attache à la liste chainée */
  8378                        ;          if(current_record->first_SuperInterseg2
                    12 == NULL)
  8379                        L10218:
  8380                        	.line	1194
  8381                        ;            current_record->first_SuperInterseg21
                    2 = current_SuperInterseg212;
  8382 09:932F: A0 2E 00     	ldy	#$2e
  8383 09:9332: B7 0E        	lda	[<L280+current_record_1],Y
  8384 09:9334: A0 30 00     	ldy	#$30
  8385 09:9337: 17 0E        	ora	[<L280+current_record_1],Y
  8386 09:9339: F0 03        	beq	L301
  8387 09:933B: 82 11 00     	brl	L10219
  8388                        L301:
  8389                        	.line	1195
  8390 09:933E: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8391 09:9340: A0 2E 00     	ldy	#$2e
  8392 09:9343: 97 0E        	sta	[<L280+current_record_1],Y
  8393 09:9345: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8394 09:9347: A0 30 00     	ldy	#$30
  8395 09:934A: 97 0E        	sta	[<L280+current_record_1],Y
  8396                        ;          else
  8397 09:934C: 82 1C 00     	brl	L10220
  8398                        L10219:
  8399                        ;            current_record->last_SuperInterseg212
                    ->next = current_SuperInterseg212;
  8400                        	.line	1197
  8401 09:934F: A0 32 00     	ldy	#$32
  8402 09:9352: B7 0E        	lda	[<L280+current_record_1],Y
  8403 09:9354: 85 01        	sta	<R0
  8404 09:9356: A0 34 00     	ldy	#$34
  8405 09:9359: B7 0E        	lda	[<L280+current_record_1],Y
  8406 09:935B: 85 03        	sta	<R0+2
  8407 09:935D: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8408 09:935F: A0 0F 0A     	ldy	#$a0f
  8409 09:9362: 97 01        	sta	[<R0],Y
  8410 09:9364: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8411 09:9366: A0 11 0A     	ldy	#$a11
  8412 09:9369: 97 01        	sta	[<R0],Y
  8413                        L10220:
  8414                        ;          current_record->last_SuperInterseg212 =
                     current_SuperInterseg212;
  8415                        	.line	1198
  8416 09:936B: A5 1E        	lda	<L280+current_SuperInterseg212_1
  8417 09:936D: A0 32 00     	ldy	#$32
  8418 09:9370: 97 0E        	sta	[<L280+current_record_1],Y
  8419 09:9372: A5 20        	lda	<L280+current_SuperInterseg212_1+2
  8420 09:9374: A0 34 00     	ldy	#$34
  8421 09:9377: 97 0E        	sta	[<L280+current_record_1],Y
  8422                        ;          current_record->nb_SuperInterseg212++;
  8423                        	.line	1199
  8424 09:9379: A0 2C 00     	ldy	#$2c
  8425 09:937C: B7 0E        	lda	[<L280+current_record_1],Y
  8426 09:937E: 1A           	ina
  8427 09:937F: A0 2C 00     	ldy	#$2c
  Thu Dec  3 2020 22:25                                                Page 157


  8428 09:9382: 97 0E        	sta	[<L280+current_record_1],Y
  8429                        ;
  8430                        ;          /* SubRecord suivant */
  8431                        ;          offset += length;
  8432                        	.line	1202
  8433 09:9384: 18           	clc
  8434 09:9385: A5 09        	lda	<L280+offset_1
  8435 09:9387: 65 0B        	adc	<L280+length_1
  8436 09:9389: 85 09        	sta	<L280+offset_1
  8437                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8438                        	.line	1203
  8439                        ;            break;
  8440 09:938B: 18           	clc
  8441 09:938C: A9 FF FF     	lda	#$ffff
  8442 09:938F: A0 09 00     	ldy	#$9
  8443 09:9392: 77 0E        	adc	[<L280+current_record_1],Y
  8444 09:9394: 85 01        	sta	<R0
  8445 09:9396: A9 FF FF     	lda	#$ffff
  8446 09:9399: A0 0B 00     	ldy	#$b
  8447 09:939C: 77 0E        	adc	[<L280+current_record_1],Y
  8448 09:939E: 85 03        	sta	<R0+2
  8449 09:93A0: A5 01        	lda	<R0
  8450 09:93A2: C5 09        	cmp	<L280+offset_1
  8451 09:93A4: D0 03        	bne	L302
  8452 09:93A6: 82 03 00     	brl	L10217
  8453                        L302:
  8454                        ;        }
  8455                        	.line	1205
  8456 09:93A9: 82 14 FF     	brl	L10216
  8457                        L10217:
  8458                        ;    }
  8459                        	.line	1206
  8460                        ;  else if(current_record->RecordType >= 0x0E && c
                    urrent_record->RecordType <= 0x19)  /* 14-25 */
  8461 09:93AC: 82 2E 02     	brl	L10221
  8462                        L10215:
  8463                        	.line	1207
  8464                        ;    {
  8465 09:93AF: E2 20        	sep	#$20
  8466                        	longa	off
  8467 09:93B1: A0 0D 00     	ldy	#$d
  8468 09:93B4: B7 0E        	lda	[<L280+current_record_1],Y
  8469 09:93B6: C9 0E        	cmp	#<$e
  8470 09:93B8: C2 20        	rep	#$20
  8471                        	longa	on
  8472 09:93BA: B0 03        	bcs	L303
  8473 09:93BC: 82 07 01     	brl	L10222
  8474                        L303:
  8475 09:93BF: E2 20        	sep	#$20
  8476                        	longa	off
  8477 09:93C1: A9 19        	lda	#$19
  8478 09:93C3: A0 0D 00     	ldy	#$d
  8479 09:93C6: D7 0E        	cmp	[<L280+current_record_1],Y
  8480 09:93C8: C2 20        	rep	#$20
  8481                        	longa	on
  8482 09:93CA: B0 03        	bcs	L304
  8483 09:93CC: 82 F7 00     	brl	L10222
  Thu Dec  3 2020 22:25                                                Page 158


  8484                        L304:
  8485                        	.line	1208
  8486                        ;      /** Super Interseg 13-24 **/
  8487                        ;      offset = 0;
  8488                        	.line	1210
  8489 09:93CF: 64 09        	stz	<L280+offset_1
  8490                        ;      page = 0x00;
  8491                        	.line	1211
  8492 09:93D1: E2 20        	sep	#$20
  8493                        	longa	off
  8494 09:93D3: 64 0D        	stz	<L280+page_1
  8495 09:93D5: C2 20        	rep	#$20
  8496                        	longa	on
  8497                        ;      while(1)
  8498                        	.line	1212
  8499                        L10223:
  8500                        ;        {
  8501                        	.line	1213
  8502                        ;          /* Récupère les données */
  8503                        ;          current_SuperInterseg1324 = DecodeSuper
                    Interseg1324(&data[1+sizeof(DWORD)+1+offset],current_record-
                    >RecordType-1-12,lconst,lconst_length,&page,&length,current_
                    segment);
  8504                        	.line	1215
  8505 09:93D7: D4 41        	pei	<L279+current_segment_0+2
  8506 09:93D9: D4 3F        	pei	<L279+current_segment_0
  8507 09:93DB: F4 00 00     	pea	#0
  8508 09:93DE: 18           	clc
  8509 09:93DF: 7B           	tdc
  8510 09:93E0: 69 0B 00     	adc	#<L280+length_1
  8511 09:93E3: 48           	pha
  8512 09:93E4: F4 00 00     	pea	#0
  8513 09:93E7: 18           	clc
  8514 09:93E8: 7B           	tdc
  8515 09:93E9: 69 0D 00     	adc	#<L280+page_1
  8516 09:93EC: 48           	pha
  8517 09:93ED: D4 39        	pei	<L279+lconst_length_0
  8518 09:93EF: D4 37        	pei	<L279+lconst_0+2
  8519 09:93F1: D4 35        	pei	<L279+lconst_0
  8520 09:93F3: A0 0D 00     	ldy	#$d
  8521 09:93F6: B7 0E        	lda	[<L280+current_record_1],Y
  8522 09:93F8: 29 FF 00     	and	#$ff
  8523 09:93FB: 85 01        	sta	<R0
  8524 09:93FD: 18           	clc
  8525 09:93FE: A9 F3 FF     	lda	#$fff3
  8526 09:9401: 65 01        	adc	<R0
  8527 09:9403: 48           	pha
  8528 09:9404: 18           	clc
  8529 09:9405: A9 06 00     	lda	#$6
  8530 09:9408: 65 09        	adc	<L280+offset_1
  8531 09:940A: 85 01        	sta	<R0
  8532 09:940C: A5 01        	lda	<R0
  8533 09:940E: 85 01        	sta	<R0
  8534 09:9410: 64 03        	stz	<R0+2
  8535 09:9412: 18           	clc
  8536 09:9413: A5 2D        	lda	<L279+data_0
  8537 09:9415: 65 01        	adc	<R0
  8538 09:9417: 85 05        	sta	<R1
  Thu Dec  3 2020 22:25                                                Page 159


  8539 09:9419: A5 2F        	lda	<L279+data_0+2
  8540 09:941B: 65 03        	adc	<R0+2
  8541 09:941D: 85 07        	sta	<R1+2
  8542 09:941F: D4 07        	pei	<R1+2
  8543 09:9421: D4 05        	pei	<R1
  8544 09:9423: 22 B1 A5 09  	jsl	~~DecodeSuperInterseg1324
  8545 09:9427: 85 22        	sta	<L280+current_SuperInterseg1324_1
  8546 09:9429: 86 24        	stx	<L280+current_SuperInterseg1324_1+2
  8547                        ;          if(current_SuperInterseg1324 == NULL)
  8548                        	.line	1216
  8549                        ;            {
  8550 09:942B: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8551 09:942D: 05 24        	ora	<L280+current_SuperInterseg1324_1+2
  8552 09:942F: F0 03        	beq	L305
  8553 09:9431: 82 12 00     	brl	L10225
  8554                        L305:
  8555                        	.line	1217
  8556                        ;              mem_free_SUPER(current_record);
  8557                        	.line	1218
  8558 09:9434: D4 10        	pei	<L280+current_record_1+2
  8559 09:9436: D4 0E        	pei	<L280+current_record_1
  8560 09:9438: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8561                        ;              return(NULL);
  8562                        	.line	1219
  8563 09:943C: A9 00 00     	lda	#$0
  8564 09:943F: AA           	tax
  8565 09:9440: A9 00 00     	lda	#$0
  8566 09:9443: 82 EA FA     	brl	L283
  8567                        ;            }
  8568                        	.line	1220
  8569                        ;
  8570                        ;          /* Attache à la liste chainée */
  8571                        ;          if(current_record->first_SuperInterseg1
                    324 == NULL)
  8572                        L10225:
  8573                        	.line	1223
  8574                        ;            current_record->first_SuperInterseg13
                    24 = current_SuperInterseg1324;
  8575 09:9446: A0 38 00     	ldy	#$38
  8576 09:9449: B7 0E        	lda	[<L280+current_record_1],Y
  8577 09:944B: A0 3A 00     	ldy	#$3a
  8578 09:944E: 17 0E        	ora	[<L280+current_record_1],Y
  8579 09:9450: F0 03        	beq	L306
  8580 09:9452: 82 11 00     	brl	L10226
  8581                        L306:
  8582                        	.line	1224
  8583 09:9455: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8584 09:9457: A0 38 00     	ldy	#$38
  8585 09:945A: 97 0E        	sta	[<L280+current_record_1],Y
  8586 09:945C: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8587 09:945E: A0 3A 00     	ldy	#$3a
  8588 09:9461: 97 0E        	sta	[<L280+current_record_1],Y
  8589                        ;          else
  8590 09:9463: 82 1C 00     	brl	L10227
  8591                        L10226:
  8592                        ;            current_record->last_SuperInterseg132
                    4->next = current_SuperInterseg1324;
  8593                        	.line	1226
  Thu Dec  3 2020 22:25                                                Page 160


  8594 09:9466: A0 3C 00     	ldy	#$3c
  8595 09:9469: B7 0E        	lda	[<L280+current_record_1],Y
  8596 09:946B: 85 01        	sta	<R0
  8597 09:946D: A0 3E 00     	ldy	#$3e
  8598 09:9470: B7 0E        	lda	[<L280+current_record_1],Y
  8599 09:9472: 85 03        	sta	<R0+2
  8600 09:9474: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8601 09:9476: A0 10 08     	ldy	#$810
  8602 09:9479: 97 01        	sta	[<R0],Y
  8603 09:947B: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8604 09:947D: A0 12 08     	ldy	#$812
  8605 09:9480: 97 01        	sta	[<R0],Y
  8606                        L10227:
  8607                        ;          current_record->last_SuperInterseg1324 
                    = current_SuperInterseg1324;
  8608                        	.line	1227
  8609 09:9482: A5 22        	lda	<L280+current_SuperInterseg1324_1
  8610 09:9484: A0 3C 00     	ldy	#$3c
  8611 09:9487: 97 0E        	sta	[<L280+current_record_1],Y
  8612 09:9489: A5 24        	lda	<L280+current_SuperInterseg1324_1+2
  8613 09:948B: A0 3E 00     	ldy	#$3e
  8614 09:948E: 97 0E        	sta	[<L280+current_record_1],Y
  8615                        ;          current_record->nb_SuperInterseg1324++;
  8616                        	.line	1228
  8617 09:9490: A0 36 00     	ldy	#$36
  8618 09:9493: B7 0E        	lda	[<L280+current_record_1],Y
  8619 09:9495: 1A           	ina
  8620 09:9496: A0 36 00     	ldy	#$36
  8621 09:9499: 97 0E        	sta	[<L280+current_record_1],Y
  8622                        ;
  8623                        ;          /* SubRecord suivant */
  8624                        ;          offset += length;
  8625                        	.line	1231
  8626 09:949B: 18           	clc
  8627 09:949C: A5 09        	lda	<L280+offset_1
  8628 09:949E: 65 0B        	adc	<L280+length_1
  8629 09:94A0: 85 09        	sta	<L280+offset_1
  8630                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8631                        	.line	1232
  8632                        ;            break;
  8633 09:94A2: 18           	clc
  8634 09:94A3: A9 FF FF     	lda	#$ffff
  8635 09:94A6: A0 09 00     	ldy	#$9
  8636 09:94A9: 77 0E        	adc	[<L280+current_record_1],Y
  8637 09:94AB: 85 01        	sta	<R0
  8638 09:94AD: A9 FF FF     	lda	#$ffff
  8639 09:94B0: A0 0B 00     	ldy	#$b
  8640 09:94B3: 77 0E        	adc	[<L280+current_record_1],Y
  8641 09:94B5: 85 03        	sta	<R0+2
  8642 09:94B7: A5 01        	lda	<R0
  8643 09:94B9: C5 09        	cmp	<L280+offset_1
  8644 09:94BB: D0 03        	bne	L307
  8645 09:94BD: 82 03 00     	brl	L10224
  8646                        L307:
  8647                        ;        }
  8648                        	.line	1234
  8649 09:94C0: 82 14 FF     	brl	L10223
  Thu Dec  3 2020 22:25                                                Page 161


  8650                        L10224:
  8651                        ;    }
  8652                        	.line	1235
  8653                        ;  else if(current_record->RecordType >= 0x1A && c
                    urrent_record->RecordType <= 0x25)  /* 26-37 */
  8654 09:94C3: 82 17 01     	brl	L10228
  8655                        L10222:
  8656                        	.line	1236
  8657                        ;    {
  8658 09:94C6: E2 20        	sep	#$20
  8659                        	longa	off
  8660 09:94C8: A0 0D 00     	ldy	#$d
  8661 09:94CB: B7 0E        	lda	[<L280+current_record_1],Y
  8662 09:94CD: C9 1A        	cmp	#<$1a
  8663 09:94CF: C2 20        	rep	#$20
  8664                        	longa	on
  8665 09:94D1: B0 03        	bcs	L308
  8666 09:94D3: 82 07 01     	brl	L10229
  8667                        L308:
  8668 09:94D6: E2 20        	sep	#$20
  8669                        	longa	off
  8670 09:94D8: A9 25        	lda	#$25
  8671 09:94DA: A0 0D 00     	ldy	#$d
  8672 09:94DD: D7 0E        	cmp	[<L280+current_record_1],Y
  8673 09:94DF: C2 20        	rep	#$20
  8674                        	longa	on
  8675 09:94E1: B0 03        	bcs	L309
  8676 09:94E3: 82 F7 00     	brl	L10229
  8677                        L309:
  8678                        	.line	1237
  8679                        ;      /** Super Interseg 25-36 **/
  8680                        ;      offset = 0;
  8681                        	.line	1239
  8682 09:94E6: 64 09        	stz	<L280+offset_1
  8683                        ;      page = 0x00;
  8684                        	.line	1240
  8685 09:94E8: E2 20        	sep	#$20
  8686                        	longa	off
  8687 09:94EA: 64 0D        	stz	<L280+page_1
  8688 09:94EC: C2 20        	rep	#$20
  8689                        	longa	on
  8690                        ;      while(1)
  8691                        	.line	1241
  8692                        L10230:
  8693                        ;        {
  8694                        	.line	1242
  8695                        ;          /* Récupère les données */
  8696                        ;          current_SuperInterseg2536 = DecodeSuper
                    Interseg2536(&data[1+sizeof(DWORD)+1+offset],current_record-
                    >RecordType-1-24,lconst,lconst_length,&page,&length,current_
                    segment);
  8697                        	.line	1244
  8698 09:94EE: D4 41        	pei	<L279+current_segment_0+2
  8699 09:94F0: D4 3F        	pei	<L279+current_segment_0
  8700 09:94F2: F4 00 00     	pea	#0
  8701 09:94F5: 18           	clc
  8702 09:94F6: 7B           	tdc
  8703 09:94F7: 69 0B 00     	adc	#<L280+length_1
  Thu Dec  3 2020 22:25                                                Page 162


  8704 09:94FA: 48           	pha
  8705 09:94FB: F4 00 00     	pea	#0
  8706 09:94FE: 18           	clc
  8707 09:94FF: 7B           	tdc
  8708 09:9500: 69 0D 00     	adc	#<L280+page_1
  8709 09:9503: 48           	pha
  8710 09:9504: D4 39        	pei	<L279+lconst_length_0
  8711 09:9506: D4 37        	pei	<L279+lconst_0+2
  8712 09:9508: D4 35        	pei	<L279+lconst_0
  8713 09:950A: A0 0D 00     	ldy	#$d
  8714 09:950D: B7 0E        	lda	[<L280+current_record_1],Y
  8715 09:950F: 29 FF 00     	and	#$ff
  8716 09:9512: 85 01        	sta	<R0
  8717 09:9514: 18           	clc
  8718 09:9515: A9 E7 FF     	lda	#$ffe7
  8719 09:9518: 65 01        	adc	<R0
  8720 09:951A: 48           	pha
  8721 09:951B: 18           	clc
  8722 09:951C: A9 06 00     	lda	#$6
  8723 09:951F: 65 09        	adc	<L280+offset_1
  8724 09:9521: 85 01        	sta	<R0
  8725 09:9523: A5 01        	lda	<R0
  8726 09:9525: 85 01        	sta	<R0
  8727 09:9527: 64 03        	stz	<R0+2
  8728 09:9529: 18           	clc
  8729 09:952A: A5 2D        	lda	<L279+data_0
  8730 09:952C: 65 01        	adc	<R0
  8731 09:952E: 85 05        	sta	<R1
  8732 09:9530: A5 2F        	lda	<L279+data_0+2
  8733 09:9532: 65 03        	adc	<R0+2
  8734 09:9534: 85 07        	sta	<R1+2
  8735 09:9536: D4 07        	pei	<R1+2
  8736 09:9538: D4 05        	pei	<R1
  8737 09:953A: 22 F2 A8 09  	jsl	~~DecodeSuperInterseg2536
  8738 09:953E: 85 26        	sta	<L280+current_SuperInterseg2536_1
  8739 09:9540: 86 28        	stx	<L280+current_SuperInterseg2536_1+2
  8740                        ;          if(current_SuperInterseg2536 == NULL)
  8741                        	.line	1245
  8742                        ;            {
  8743 09:9542: A5 26        	lda	<L280+current_SuperInterseg2536_1
  8744 09:9544: 05 28        	ora	<L280+current_SuperInterseg2536_1+2
  8745 09:9546: F0 03        	beq	L310
  8746 09:9548: 82 12 00     	brl	L10232
  8747                        L310:
  8748                        	.line	1246
  8749                        ;              mem_free_SUPER(current_record);
  8750                        	.line	1247
  8751 09:954B: D4 10        	pei	<L280+current_record_1+2
  8752 09:954D: D4 0E        	pei	<L280+current_record_1
  8753 09:954F: 22 1A B1 09  	jsl	~~mem_free_SUPER
  8754                        ;              return(NULL);
  8755                        	.line	1248
  8756 09:9553: A9 00 00     	lda	#$0
  8757 09:9556: AA           	tax
  8758 09:9557: A9 00 00     	lda	#$0
  8759 09:955A: 82 D3 F9     	brl	L283
  8760                        ;            }
  8761                        	.line	1249
  Thu Dec  3 2020 22:25                                                Page 163


  8762                        ;
  8763                        ;          /* Attache à la liste chainée */
  8764                        ;          if(current_record->first_SuperInterseg2
                    536 == NULL)
  8765                        L10232:
  8766                        	.line	1252
  8767                        ;            current_record->first_SuperInterseg25
                    36 = current_SuperInterseg2536;
  8768 09:955D: A0 42 00     	ldy	#$42
  8769 09:9560: B7 0E        	lda	[<L280+current_record_1],Y
  8770 09:9562: A0 44 00     	ldy	#$44
  8771 09:9565: 17 0E        	ora	[<L280+current_record_1],Y
  8772 09:9567: F0 03        	beq	L311
  8773 09:9569: 82 11 00     	brl	L10233
  8774                        L311:
  8775                        	.line	1253
  8776 09:956C: A5 26        	lda	<L280+current_SuperInterseg2536_1
  8777 09:956E: A0 42 00     	ldy	#$42
  8778 09:9571: 97 0E        	sta	[<L280+current_record_1],Y
  8779 09:9573: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  8780 09:9575: A0 44 00     	ldy	#$44
  8781 09:9578: 97 0E        	sta	[<L280+current_record_1],Y
  8782                        ;          else
  8783 09:957A: 82 1C 00     	brl	L10234
  8784                        L10233:
  8785                        ;            current_record->last_SuperInterseg253
                    6->next = current_SuperInterseg2536;
  8786                        	.line	1255
  8787 09:957D: A0 46 00     	ldy	#$46
  8788 09:9580: B7 0E        	lda	[<L280+current_record_1],Y
  8789 09:9582: 85 01        	sta	<R0
  8790 09:9584: A0 48 00     	ldy	#$48
  8791 09:9587: B7 0E        	lda	[<L280+current_record_1],Y
  8792 09:9589: 85 03        	sta	<R0+2
  8793 09:958B: A5 26        	lda	<L280+current_SuperInterseg2536_1
  8794 09:958D: A0 10 08     	ldy	#$810
  8795 09:9590: 97 01        	sta	[<R0],Y
  8796 09:9592: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  8797 09:9594: A0 12 08     	ldy	#$812
  8798 09:9597: 97 01        	sta	[<R0],Y
  8799                        L10234:
  8800                        ;          current_record->last_SuperInterseg2536 
                    = current_SuperInterseg2536;
  8801                        	.line	1256
  8802 09:9599: A5 26        	lda	<L280+current_SuperInterseg2536_1
  8803 09:959B: A0 46 00     	ldy	#$46
  8804 09:959E: 97 0E        	sta	[<L280+current_record_1],Y
  8805 09:95A0: A5 28        	lda	<L280+current_SuperInterseg2536_1+2
  8806 09:95A2: A0 48 00     	ldy	#$48
  8807 09:95A5: 97 0E        	sta	[<L280+current_record_1],Y
  8808                        ;          current_record->nb_SuperInterseg2536++;
  8809                        	.line	1257
  8810 09:95A7: A0 40 00     	ldy	#$40
  8811 09:95AA: B7 0E        	lda	[<L280+current_record_1],Y
  8812 09:95AC: 1A           	ina
  8813 09:95AD: A0 40 00     	ldy	#$40
  8814 09:95B0: 97 0E        	sta	[<L280+current_record_1],Y
  8815                        ;
  Thu Dec  3 2020 22:25                                                Page 164


  8816                        ;          /* SubRecord suivant */
  8817                        ;          offset += length;
  8818                        	.line	1260
  8819 09:95B2: 18           	clc
  8820 09:95B3: A5 09        	lda	<L280+offset_1
  8821 09:95B5: 65 0B        	adc	<L280+length_1
  8822 09:95B7: 85 09        	sta	<L280+offset_1
  8823                        ;          if(offset == (int) (current_record->Byt
                    eCnt-1))
  8824                        	.line	1261
  8825                        ;            break;
  8826 09:95B9: 18           	clc
  8827 09:95BA: A9 FF FF     	lda	#$ffff
  8828 09:95BD: A0 09 00     	ldy	#$9
  8829 09:95C0: 77 0E        	adc	[<L280+current_record_1],Y
  8830 09:95C2: 85 01        	sta	<R0
  8831 09:95C4: A9 FF FF     	lda	#$ffff
  8832 09:95C7: A0 0B 00     	ldy	#$b
  8833 09:95CA: 77 0E        	adc	[<L280+current_record_1],Y
  8834 09:95CC: 85 03        	sta	<R0+2
  8835 09:95CE: A5 01        	lda	<R0
  8836 09:95D0: C5 09        	cmp	<L280+offset_1
  8837 09:95D2: D0 03        	bne	L312
  8838 09:95D4: 82 03 00     	brl	L10231
  8839                        L312:
  8840                        ;        }
  8841                        	.line	1263
  8842 09:95D7: 82 14 FF     	brl	L10230
  8843                        L10231:
  8844                        ;    }
  8845                        	.line	1264
  8846                        ;  else
  8847 09:95DA: 82 00 00     	brl	L10235
  8848                        L10229:
  8849                        ;    {
  8850                        	.line	1266
  8851                        ;      //printf("");
  8852                        ;    }
  8853                        	.line	1268
  8854                        L10235:
  8855                        L10228:
  8856                        L10221:
  8857                        L10214:
  8858                        L10207:
  8859                        L10200:
  8860                        ;
  8861                        ;  /* Renvoie la structure */
  8862                        ;  *record_length_rtn = 1 + sizeof(DWORD) + curren
                    t_record->ByteCnt;
  8863                        	.line	1271
  8864 09:95DD: 18           	clc
  8865 09:95DE: A9 05 00     	lda	#$5
  8866 09:95E1: A0 09 00     	ldy	#$9
  8867 09:95E4: 77 0E        	adc	[<L280+current_record_1],Y
  8868 09:95E6: 85 01        	sta	<R0
  8869 09:95E8: A9 00 00     	lda	#$0
  8870 09:95EB: A0 0B 00     	ldy	#$b
  8871 09:95EE: 77 0E        	adc	[<L280+current_record_1],Y
  Thu Dec  3 2020 22:25                                                Page 165


  8872 09:95F0: 85 03        	sta	<R0+2
  8873 09:95F2: A5 01        	lda	<R0
  8874 09:95F4: 87 3B        	sta	[<L279+record_length_rtn_0]
  8875                        ;  return(current_record);
  8876                        	.line	1272
  8877 09:95F6: A6 10        	ldx	<L280+current_record_1+2
  8878 09:95F8: A5 0E        	lda	<L280+current_record_1
  8879 09:95FA: 82 33 F9     	brl	L283
  8880                        ;}
  8881                        	.line	1273
  8882                        	.endblock	1273
  8883             00000029   L279	equ	41
  8884             00000009   L280	equ	9
  8885 09:95FD:              	ends
  8886                        	efunc
  8887                        	.endfunc	1273,9,41
  8888                        	.line	1273
  8889                        ;
  8890                        ;
  8891                        ;/************************************************
                    *********/
  8892                        ;/*  DecodeRecordGeneral() :  Décodage du Record G
                    eneral. */
  8893                        ;/************************************************
                    *********/
  8894                        ;static void *DecodeRecordGeneral(unsigned char *d
                    ata, int file_offset, int segment_offset, int *record_length
                    _rtn)
  8895                        ;{
  8896                        	.line	1279
  8897                        	.line	1280
  8898                        	LOADER
  8899                        	func
  8900                        	.function	1280
  8901                        ~~DecodeRecordGeneral:
  8902                        	longa	on
  8903                        	longi	on
  8904 09:95FD: 3B           	tsc
  8905 09:95FE: 38           	sec
  8906 09:95FF: E9 08 00     	sbc	#L313
  8907 09:9602: 1B           	tcs
  8908 09:9603: 0B           	phd
  8909 09:9604: 5B           	tcd
  8910             00000004   data_0	set	4
  8911             00000008   file_offset_0	set	8
  8912             0000000A   segment_offset_0	set	10
  8913             0000000C   record_length_rtn_0	set	12
  8914                        	.block	1280
  8915                        ;  struct record_General *current_record;
  8916                        ;
  8917                        ;  /* Allocation mémoire */
  8918                        ;  current_record = (struct record_General *) k_ca
                    lloc(1,sizeof(struct record_General));
  8919             00000000   current_record_1	set	0
  8920                        	.sym	current_record,0,138,1,32,98
  8921                        	.sym	data,4,142,6,32
  8922                        	.sym	file_offset,8,5,6,16
  8923                        	.sym	segment_offset,10,5,6,16
  Thu Dec  3 2020 22:25                                                Page 166


  8924                        	.sym	record_length_rtn,12,133,6,32
  8925                        	.line	1284
  8926 09:9605: F4 09 00     	pea	#<$9
  8927 09:9608: F4 01 00     	pea	#<$1
  8928 09:960B: 22 xx xx xx  	jsl	~~k_calloc
  8929 09:960F: 85 05        	sta	<L314+current_record_1
  8930 09:9611: 86 07        	stx	<L314+current_record_1+2
  8931                        ;  if(current_record == NULL)
  8932                        	.line	1285
  8933                        ;    {
  8934 09:9613: A5 05        	lda	<L314+current_record_1
  8935 09:9615: 05 07        	ora	<L314+current_record_1+2
  8936 09:9617: F0 03        	beq	L316
  8937 09:9619: 82 19 00     	brl	L10236
  8938                        L316:
  8939                        	.line	1286
  8940                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  8941                        ;      return(NULL);
  8942                        	.line	1288
  8943 09:961C: A9 00 00     	lda	#$0
  8944 09:961F: AA           	tax
  8945 09:9620: A9 00 00     	lda	#$0
  8946                        L317:
  8947 09:9623: A8           	tay
  8948 09:9624: A5 0A        	lda	<L313+2
  8949 09:9626: 85 16        	sta	<L313+2+12
  8950 09:9628: A5 09        	lda	<L313+1
  8951 09:962A: 85 15        	sta	<L313+1+12
  8952 09:962C: 2B           	pld
  8953 09:962D: 3B           	tsc
  8954 09:962E: 18           	clc
  8955 09:962F: 69 14 00     	adc	#L313+12
  8956 09:9632: 1B           	tcs
  8957 09:9633: 98           	tya
  8958 09:9634: 6B           	rtl
  8959                        ;    }
  8960                        	.line	1289
  8961                        ;
  8962                        ;  /* Offset */
  8963                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  8964                        L10236:
  8965                        	.line	1292
  8966 09:9635: A0 00 00     	ldy	#$0
  8967 09:9638: A5 10        	lda	<L313+file_offset_0
  8968 09:963A: 10 01        	bpl	L318
  8969 09:963C: 88           	dey
  8970                        L318:
  8971 09:963D: 85 01        	sta	<R0
  8972 09:963F: 84 03        	sty	<R0+2
  8973 09:9641: A5 01        	lda	<R0
  8974 09:9643: 87 05        	sta	[<L314+current_record_1]
  8975 09:9645: A5 03        	lda	<R0+2
  8976 09:9647: A0 02 00     	ldy	#$2
  8977 09:964A: 97 05        	sta	[<L314+current_record_1],Y
  8978                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  Thu Dec  3 2020 22:25                                                Page 167


  8979                        	.line	1293
  8980 09:964C: A0 00 00     	ldy	#$0
  8981 09:964F: A5 12        	lda	<L313+segment_offset_0
  8982 09:9651: 10 01        	bpl	L319
  8983 09:9653: 88           	dey
  8984                        L319:
  8985 09:9654: 85 01        	sta	<R0
  8986 09:9656: 84 03        	sty	<R0+2
  8987 09:9658: A5 01        	lda	<R0
  8988 09:965A: A0 04 00     	ldy	#$4
  8989 09:965D: 97 05        	sta	[<L314+current_record_1],Y
  8990 09:965F: A5 03        	lda	<R0+2
  8991 09:9661: A0 06 00     	ldy	#$6
  8992 09:9664: 97 05        	sta	[<L314+current_record_1],Y
  8993                        ;
  8994                        ;  /* Operation Code */
  8995                        ;  current_record->operation_code = data[0];
  8996                        	.line	1296
  8997 09:9666: E2 20        	sep	#$20
  8998                        	longa	off
  8999 09:9668: A7 0C        	lda	[<L313+data_0]
  9000 09:966A: A0 08 00     	ldy	#$8
  9001 09:966D: 97 05        	sta	[<L314+current_record_1],Y
  9002 09:966F: C2 20        	rep	#$20
  9003                        	longa	on
  9004                        ;
  9005                        ;  /* Renvoie la structure */
  9006                        ;  return(current_record);
  9007                        	.line	1299
  9008 09:9671: A6 07        	ldx	<L314+current_record_1+2
  9009 09:9673: A5 05        	lda	<L314+current_record_1
  9010 09:9675: 82 AB FF     	brl	L317
  9011                        ;}
  9012                        	.line	1300
  9013                        	.endblock	1300
  9014             00000008   L313	equ	8
  9015             00000005   L314	equ	5
  9016 09:9678:              	ends
  9017                        	efunc
  9018                        	.endfunc	1300,5,8
  9019                        	.line	1300
  9020                        ;
  9021                        ;
  9022                        ;/************************************************
                    *******************/
  9023                        ;/*  DecodeRecordExperimental() :  Décodage du Rec
                    ord Experimental. */
  9024                        ;/************************************************
                    *******************/
  9025                        ;static void *DecodeRecordExperimental(unsigned ch
                    ar *data, int file_offset, int segment_offset, int *record_l
                    ength_rtn)
  9026                        ;{
  9027                        	.line	1306
  9028                        	.line	1307
  9029                        	LOADER
  9030                        	func
  9031                        	.function	1307
  Thu Dec  3 2020 22:25                                                Page 168


  9032                        ~~DecodeRecordExperimental:
  9033                        	longa	on
  9034                        	longi	on
  9035 09:9678: 3B           	tsc
  9036 09:9679: 38           	sec
  9037 09:967A: E9 08 00     	sbc	#L320
  9038 09:967D: 1B           	tcs
  9039 09:967E: 0B           	phd
  9040 09:967F: 5B           	tcd
  9041             00000004   data_0	set	4
  9042             00000008   file_offset_0	set	8
  9043             0000000A   segment_offset_0	set	10
  9044             0000000C   record_length_rtn_0	set	12
  9045                        	.block	1307
  9046                        ;  struct record_Experimental *current_record;
  9047                        ;
  9048                        ;  /* Allocation mémoire */
  9049                        ;  current_record = (struct record_Experimental *)
                     k_calloc(1,sizeof(struct record_Experimental));
  9050             00000000   current_record_1	set	0
  9051                        	.sym	current_record,0,138,1,32,99
  9052                        	.sym	data,4,142,6,32
  9053                        	.sym	file_offset,8,5,6,16
  9054                        	.sym	segment_offset,10,5,6,16
  9055                        	.sym	record_length_rtn,12,133,6,32
  9056                        	.line	1311
  9057 09:9680: F4 09 00     	pea	#<$9
  9058 09:9683: F4 01 00     	pea	#<$1
  9059 09:9686: 22 xx xx xx  	jsl	~~k_calloc
  9060 09:968A: 85 05        	sta	<L321+current_record_1
  9061 09:968C: 86 07        	stx	<L321+current_record_1+2
  9062                        ;  if(current_record == NULL)
  9063                        	.line	1312
  9064                        ;    {
  9065 09:968E: A5 05        	lda	<L321+current_record_1
  9066 09:9690: 05 07        	ora	<L321+current_record_1+2
  9067 09:9692: F0 03        	beq	L323
  9068 09:9694: 82 19 00     	brl	L10237
  9069                        L323:
  9070                        	.line	1313
  9071                        ;      //printf("Error : Impossible to allocate me
                    mory to process Segment Body Record.\n");
  9072                        ;      return(NULL);
  9073                        	.line	1315
  9074 09:9697: A9 00 00     	lda	#$0
  9075 09:969A: AA           	tax
  9076 09:969B: A9 00 00     	lda	#$0
  9077                        L324:
  9078 09:969E: A8           	tay
  9079 09:969F: A5 0A        	lda	<L320+2
  9080 09:96A1: 85 16        	sta	<L320+2+12
  9081 09:96A3: A5 09        	lda	<L320+1
  9082 09:96A5: 85 15        	sta	<L320+1+12
  9083 09:96A7: 2B           	pld
  9084 09:96A8: 3B           	tsc
  9085 09:96A9: 18           	clc
  9086 09:96AA: 69 14 00     	adc	#L320+12
  9087 09:96AD: 1B           	tcs
  Thu Dec  3 2020 22:25                                                Page 169


  9088 09:96AE: 98           	tya
  9089 09:96AF: 6B           	rtl
  9090                        ;    }
  9091                        	.line	1316
  9092                        ;
  9093                        ;  /* Offset */
  9094                        ;  current_record->FileOffset = (DWORD) file_offse
                    t;
  9095                        L10237:
  9096                        	.line	1319
  9097 09:96B0: A0 00 00     	ldy	#$0
  9098 09:96B3: A5 10        	lda	<L320+file_offset_0
  9099 09:96B5: 10 01        	bpl	L325
  9100 09:96B7: 88           	dey
  9101                        L325:
  9102 09:96B8: 85 01        	sta	<R0
  9103 09:96BA: 84 03        	sty	<R0+2
  9104 09:96BC: A5 01        	lda	<R0
  9105 09:96BE: 87 05        	sta	[<L321+current_record_1]
  9106 09:96C0: A5 03        	lda	<R0+2
  9107 09:96C2: A0 02 00     	ldy	#$2
  9108 09:96C5: 97 05        	sta	[<L321+current_record_1],Y
  9109                        ;  current_record->SegmentOffset = (DWORD) segment
                    _offset;
  9110                        	.line	1320
  9111 09:96C7: A0 00 00     	ldy	#$0
  9112 09:96CA: A5 12        	lda	<L320+segment_offset_0
  9113 09:96CC: 10 01        	bpl	L326
  9114 09:96CE: 88           	dey
  9115                        L326:
  9116 09:96CF: 85 01        	sta	<R0
  9117 09:96D1: 84 03        	sty	<R0+2
  9118 09:96D3: A5 01        	lda	<R0
  9119 09:96D5: A0 04 00     	ldy	#$4
  9120 09:96D8: 97 05        	sta	[<L321+current_record_1],Y
  9121 09:96DA: A5 03        	lda	<R0+2
  9122 09:96DC: A0 06 00     	ldy	#$6
  9123 09:96DF: 97 05        	sta	[<L321+current_record_1],Y
  9124                        ;
  9125                        ;  /* Operation Code */
  9126                        ;  current_record->operation_code = data[0];
  9127                        	.line	1323
  9128 09:96E1: E2 20        	sep	#$20
  9129                        	longa	off
  9130 09:96E3: A7 0C        	lda	[<L320+data_0]
  9131 09:96E5: A0 08 00     	ldy	#$8
  9132 09:96E8: 97 05        	sta	[<L321+current_record_1],Y
  9133 09:96EA: C2 20        	rep	#$20
  9134                        	longa	on
  9135                        ;
  9136                        ;  /* Renvoie la structure */
  9137                        ;  return(current_record);
  9138                        	.line	1326
  9139 09:96EC: A6 07        	ldx	<L321+current_record_1+2
  9140 09:96EE: A5 05        	lda	<L321+current_record_1
  9141 09:96F0: 82 AB FF     	brl	L324
  9142                        ;}
  9143                        	.line	1327
  Thu Dec  3 2020 22:25                                                Page 170


  9144                        	.endblock	1327
  9145             00000008   L320	equ	8
  9146             00000005   L321	equ	5
  9147 09:96F3:              	ends
  9148                        	efunc
  9149                        	.endfunc	1327,5,8
  9150                        	.line	1327
  9151                        ;
  9152                        ;
  9153                        ;/************************************************
                    ****************/
  9154                        ;/*  DecodeSuperReloc2() :  Décodage d'un SubRecor
                    d SuperReloc2. */
  9155                        ;/************************************************
                    ****************/
  9156                        ;static struct subrecord_SuperReloc2 *DecodeSuperR
                    eloc2(unsigned char *data, unsigned char *lconst, int lconst
                    _length, BYTE *page_rtn, int *length_rtn, struct omf_segment
                     *current_segment)
  9157                        ;{
  9158                        	.line	1333
  9159                        	.line	1334
  9160                        	LOADER
  9161                        	func
  9162                        	.function	1334
  9163                        ~~DecodeSuperReloc2:
  9164                        	longa	on
  9165                        	longi	on
  9166 09:96F3: 3B           	tsc
  9167 09:96F4: 38           	sec
  9168 09:96F5: E9 20 00     	sbc	#L327
  9169 09:96F8: 1B           	tcs
  9170 09:96F9: 0B           	phd
  9171 09:96FA: 5B           	tcd
  9172             00000004   data_0	set	4
  9173             00000008   lconst_0	set	8
  9174             0000000C   lconst_length_0	set	12
  9175             0000000E   page_rtn_0	set	14
  9176             00000012   length_rtn_0	set	18
  9177             00000016   current_segment_0	set	22
  9178                        	.block	1334
  9179                        ;  int i;
  9180                        ;  WORD one_word;
  9181                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
  9182                        ;
  9183                        ;  /* Allocation mémoire */
  9184                        ;  current_SuperReloc2 = (struct subrecord_SuperRe
                    loc2 *) k_calloc(1,sizeof(struct subrecord_SuperReloc2));
  9185             00000000   i_1	set	0
  9186             00000002   one_word_1	set	2
  9187             00000004   current_SuperReloc2_1	set	4
  9188                        	.sym	i,0,5,1,16
  9189                        	.sym	one_word,2,5,1,16
  9190                        	.sym	current_SuperReloc2,4,138,1,32,68
  9191                        	.sym	data,4,142,6,32
  9192                        	.sym	lconst,8,142,6,32
  9193                        	.sym	lconst_length,12,5,6,16
  Thu Dec  3 2020 22:25                                                Page 171


  9194                        	.sym	page_rtn,14,142,6,32
  9195                        	.sym	length_rtn,18,133,6,32
  9196                        	.sym	current_segment,22,138,6,32,65
  9197                        	.line	1340
  9198 09:96FB: F4 11 08     	pea	#<$811
  9199 09:96FE: F4 01 00     	pea	#<$1
  9200 09:9701: 22 xx xx xx  	jsl	~~k_calloc
  9201 09:9705: 85 1D        	sta	<L328+current_SuperReloc2_1
  9202 09:9707: 86 1F        	stx	<L328+current_SuperReloc2_1+2
  9203                        ;  if(current_SuperReloc2 == NULL)
  9204                        	.line	1341
  9205                        ;    {
  9206 09:9709: A5 1D        	lda	<L328+current_SuperReloc2_1
  9207 09:970B: 05 1F        	ora	<L328+current_SuperReloc2_1+2
  9208 09:970D: F0 03        	beq	L330
  9209 09:970F: 82 19 00     	brl	L10238
  9210                        L330:
  9211                        	.line	1342
  9212                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperReloc2 for Segment #%02X.\n",current
                    _segment->header.SegNum);
  9213                        ;      return(NULL);
  9214                        	.line	1344
  9215 09:9712: A9 00 00     	lda	#$0
  9216 09:9715: AA           	tax
  9217 09:9716: A9 00 00     	lda	#$0
  9218                        L331:
  9219 09:9719: A8           	tay
  9220 09:971A: A5 22        	lda	<L327+2
  9221 09:971C: 85 38        	sta	<L327+2+22
  9222 09:971E: A5 21        	lda	<L327+1
  9223 09:9720: 85 37        	sta	<L327+1+22
  9224 09:9722: 2B           	pld
  9225 09:9723: 3B           	tsc
  9226 09:9724: 18           	clc
  9227 09:9725: 69 36 00     	adc	#L327+22
  9228 09:9728: 1B           	tcs
  9229 09:9729: 98           	tya
  9230 09:972A: 6B           	rtl
  9231                        ;    }
  9232                        	.line	1345
  9233                        ;
  9234                        ;  /* Nombre d'adresse-1 ou Saut de Page */
  9235                        ;  current_SuperReloc2->Count = data[0];
  9236                        L10238:
  9237                        	.line	1348
  9238 09:972B: E2 20        	sep	#$20
  9239                        	longa	off
  9240 09:972D: A7 24        	lda	[<L327+data_0]
  9241 09:972F: A0 08 00     	ldy	#$8
  9242 09:9732: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9243 09:9734: C2 20        	rep	#$20
  9244                        	longa	on
  9245                        ;
  9246                        ;  /** Saut de Page **/
  9247                        ;  if((current_SuperReloc2->Count & 0x80) == 0x80)
  9248                        	.line	1351
  9249                        ;    {
  Thu Dec  3 2020 22:25                                                Page 172


  9250 09:9736: A0 08 00     	ldy	#$8
  9251 09:9739: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9252 09:973B: 29 80 00     	and	#<$80
  9253 09:973E: 85 01        	sta	<R0
  9254 09:9740: A5 01        	lda	<R0
  9255 09:9742: C9 80 00     	cmp	#<$80
  9256 09:9745: F0 03        	beq	L332
  9257 09:9747: 82 24 00     	brl	L10239
  9258                        L332:
  9259                        	.line	1352
  9260                        ;      /* On saute X pages */
  9261                        ;      *page_rtn = *page_rtn + (current_SuperReloc
                    2->Count & 0x7F);
  9262                        	.line	1354
  9263 09:974A: E2 20        	sep	#$20
  9264                        	longa	off
  9265 09:974C: A0 08 00     	ldy	#$8
  9266 09:974F: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9267 09:9751: 29 7F        	and	#<$7f
  9268 09:9753: 85 01        	sta	<R0
  9269 09:9755: C2 20        	rep	#$20
  9270                        	longa	on
  9271 09:9757: E2 20        	sep	#$20
  9272                        	longa	off
  9273 09:9759: 18           	clc
  9274 09:975A: A7 2E        	lda	[<L327+page_rtn_0]
  9275 09:975C: 65 01        	adc	<R0
  9276 09:975E: C2 20        	rep	#$20
  9277                        	longa	on
  9278 09:9760: E2 20        	sep	#$20
  9279                        	longa	off
  9280 09:9762: 87 2E        	sta	[<L327+page_rtn_0]
  9281 09:9764: C2 20        	rep	#$20
  9282                        	longa	on
  9283                        ;
  9284                        ;      /* Longueur du SubRecord */
  9285                        ;      *length_rtn = 1;
  9286                        	.line	1357
  9287 09:9766: A9 01 00     	lda	#$1
  9288 09:9769: 87 32        	sta	[<L327+length_rtn_0]
  9289                        ;    }
  9290                        	.line	1358
  9291                        ;  else
  9292 09:976B: 82 9D 02     	brl	L10240
  9293                        L10239:
  9294                        ;    {
  9295                        	.line	1360
  9296                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
  9297                        ;      current_SuperReloc2->ByteCnt = 0x02;
  9298                        	.line	1362
  9299 09:976E: E2 20        	sep	#$20
  9300                        	longa	off
  9301 09:9770: A9 02        	lda	#$2
  9302 09:9772: A0 09 00     	ldy	#$9
  9303 09:9775: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9304 09:9777: C2 20        	rep	#$20
  9305                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 173


  9306                        ;
  9307                        ;      /* Opérations >> ou << = Toujours à 0  */
  9308                        ;      current_SuperReloc2->BitShiftCnt = 0x00;
  9309                        	.line	1365
  9310 09:9779: E2 20        	sep	#$20
  9311                        	longa	off
  9312 09:977B: A9 00        	lda	#$0
  9313 09:977D: A0 0A 00     	ldy	#$a
  9314 09:9780: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9315 09:9782: C2 20        	rep	#$20
  9316                        	longa	on
  9317                        ;
  9318                        ;      /* Nombre d'adresse */
  9319                        ;      current_SuperReloc2->nb_address = current_S
                    uperReloc2->Count + 1;
  9320                        	.line	1368
  9321 09:9784: A0 08 00     	ldy	#$8
  9322 09:9787: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9323 09:9789: 29 FF 00     	and	#$ff
  9324 09:978C: 85 01        	sta	<R0
  9325 09:978E: A5 01        	lda	<R0
  9326 09:9790: 1A           	ina
  9327 09:9791: A0 0B 00     	ldy	#$b
  9328 09:9794: 97 1D        	sta	[<L328+current_SuperReloc2_1],Y
  9329                        ;
  9330                        ;      /** Copie les adresses **/
  9331                        ;      for(i=0; i<current_SuperReloc2->nb_address;
                     i++)
  9332                        	.line	1371
  9333 09:9796: 64 19        	stz	<L328+i_1
  9334 09:9798: 82 49 02     	brl	L10244
  9335                        L10243:
  9336                        ;        {
  9337                        	.line	1372
  9338                        ;          /* Décode OffsetPath et OffsetReference
                     */
  9339                        ;          current_SuperReloc2->OffsetPatch[i] = (
                    (WORD)*page_rtn) << 8 | data[1+i];
  9340                        	.line	1374
  9341 09:979B: A0 00 00     	ldy	#$0
  9342 09:979E: A5 19        	lda	<L328+i_1
  9343 09:97A0: 10 01        	bpl	L333
  9344 09:97A2: 88           	dey
  9345                        L333:
  9346 09:97A3: 85 05        	sta	<R1
  9347 09:97A5: 84 07        	sty	<R1+2
  9348 09:97A7: D4 07        	pei	<R1+2
  9349 09:97A9: D4 05        	pei	<R1
  9350 09:97AB: A9 02 00     	lda	#$2
  9351                        	xref	~~~lasl
  9352 09:97AE: 22 xx xx xx  	jsl	~~~lasl
  9353 09:97B2: 85 01        	sta	<R0
  9354 09:97B4: 86 03        	stx	<R0+2
  9355 09:97B6: 18           	clc
  9356 09:97B7: A9 0D 00     	lda	#$d
  9357 09:97BA: 65 1D        	adc	<L328+current_SuperReloc2_1
  9358 09:97BC: 85 09        	sta	<R2
  9359 09:97BE: A9 00 00     	lda	#$0
  Thu Dec  3 2020 22:25                                                Page 174


  9360 09:97C1: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9361 09:97C3: 85 0B        	sta	<R2+2
  9362 09:97C5: 18           	clc
  9363 09:97C6: A5 09        	lda	<R2
  9364 09:97C8: 65 01        	adc	<R0
  9365 09:97CA: 85 0D        	sta	<R3
  9366 09:97CC: A5 0B        	lda	<R2+2
  9367 09:97CE: 65 03        	adc	<R0+2
  9368 09:97D0: 85 0F        	sta	<R3+2
  9369 09:97D2: A5 19        	lda	<L328+i_1
  9370 09:97D4: 1A           	ina
  9371 09:97D5: 85 01        	sta	<R0
  9372 09:97D7: A4 01        	ldy	<R0
  9373 09:97D9: B7 24        	lda	[<L327+data_0],Y
  9374 09:97DB: 29 FF 00     	and	#$ff
  9375 09:97DE: 85 09        	sta	<R2
  9376 09:97E0: A7 2E        	lda	[<L327+page_rtn_0]
  9377 09:97E2: 29 FF 00     	and	#$ff
  9378 09:97E5: 85 15        	sta	<21
  9379 09:97E7: A5 15        	lda	<21
  9380 09:97E9: EB           	xba
  9381 09:97EA: 29 00 FF     	and	#$ff00
  9382 09:97ED: 85 11        	sta	<17
  9383 09:97EF: A5 11        	lda	<17
  9384 09:97F1: 05 09        	ora	<R2
  9385 09:97F3: 85 15        	sta	<21
  9386 09:97F5: A0 00 00     	ldy	#$0
  9387 09:97F8: A5 15        	lda	<21
  9388 09:97FA: 10 01        	bpl	L334
  9389 09:97FC: 88           	dey
  9390                        L334:
  9391 09:97FD: 85 09        	sta	<R2
  9392 09:97FF: 84 0B        	sty	<R2+2
  9393 09:9801: A5 09        	lda	<R2
  9394 09:9803: 87 0D        	sta	[<R3]
  9395 09:9805: A5 0B        	lda	<R2+2
  9396 09:9807: A0 02 00     	ldy	#$2
  9397 09:980A: 97 0D        	sta	[<R3],Y
  9398                        ;          
  9399                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
  9400                        ;          if(current_SuperReloc2->OffsetPatch[i] 
                    > (DWORD) lconst_length)
  9401                        	.line	1377
  9402                        ;            {
  9403 09:980C: A0 00 00     	ldy	#$0
  9404 09:980F: A5 2C        	lda	<L327+lconst_length_0
  9405 09:9811: 10 01        	bpl	L335
  9406 09:9813: 88           	dey
  9407                        L335:
  9408 09:9814: 85 01        	sta	<R0
  9409 09:9816: 84 03        	sty	<R0+2
  9410 09:9818: A0 00 00     	ldy	#$0
  9411 09:981B: A5 19        	lda	<L328+i_1
  9412 09:981D: 10 01        	bpl	L336
  9413 09:981F: 88           	dey
  9414                        L336:
  9415 09:9820: 85 09        	sta	<R2
  Thu Dec  3 2020 22:25                                                Page 175


  9416 09:9822: 84 0B        	sty	<R2+2
  9417 09:9824: D4 0B        	pei	<R2+2
  9418 09:9826: D4 09        	pei	<R2
  9419 09:9828: A9 02 00     	lda	#$2
  9420                        	xref	~~~lasl
  9421 09:982B: 22 xx xx xx  	jsl	~~~lasl
  9422 09:982F: 85 05        	sta	<R1
  9423 09:9831: 86 07        	stx	<R1+2
  9424 09:9833: 18           	clc
  9425 09:9834: A9 0D 00     	lda	#$d
  9426 09:9837: 65 1D        	adc	<L328+current_SuperReloc2_1
  9427 09:9839: 85 0D        	sta	<R3
  9428 09:983B: A9 00 00     	lda	#$0
  9429 09:983E: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9430 09:9840: 85 0F        	sta	<R3+2
  9431 09:9842: 18           	clc
  9432 09:9843: A5 0D        	lda	<R3
  9433 09:9845: 65 05        	adc	<R1
  9434 09:9847: 85 11        	sta	<17
  9435 09:9849: A5 0F        	lda	<R3+2
  9436 09:984B: 65 07        	adc	<R1+2
  9437 09:984D: 85 13        	sta	<17+2
  9438 09:984F: A5 01        	lda	<R0
  9439 09:9851: C7 11        	cmp	[<17]
  9440 09:9853: A5 03        	lda	<R0+2
  9441 09:9855: A0 02 00     	ldy	#$2
  9442 09:9858: F7 11        	sbc	[<17],Y
  9443 09:985A: 90 03        	bcc	L337
  9444 09:985C: 82 47 00     	brl	L10245
  9445                        L337:
  9446                        	.line	1378
  9447                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperReloc2 for Offset %04X in Segment #%02X.\n",c
                    urrent_SuperReloc2->OffsetPatch[i],current_segment->header.S
                    egNum);
  9448                        ;              current_SuperReloc2->OffsetReferenc
                    e[i] = 0xFFFF;   /* Erreur */
  9449                        	.line	1380
  9450 09:985F: A0 00 00     	ldy	#$0
  9451 09:9862: A5 19        	lda	<L328+i_1
  9452 09:9864: 10 01        	bpl	L338
  9453 09:9866: 88           	dey
  9454                        L338:
  9455 09:9867: 85 05        	sta	<R1
  9456 09:9869: 84 07        	sty	<R1+2
  9457 09:986B: D4 07        	pei	<R1+2
  9458 09:986D: D4 05        	pei	<R1
  9459 09:986F: A9 02 00     	lda	#$2
  9460                        	xref	~~~lasl
  9461 09:9872: 22 xx xx xx  	jsl	~~~lasl
  9462 09:9876: 85 01        	sta	<R0
  9463 09:9878: 86 03        	stx	<R0+2
  9464 09:987A: 18           	clc
  9465 09:987B: A9 0D 04     	lda	#$40d
  9466 09:987E: 65 1D        	adc	<L328+current_SuperReloc2_1
  9467 09:9880: 85 09        	sta	<R2
  9468 09:9882: A9 00 00     	lda	#$0
  9469 09:9885: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  Thu Dec  3 2020 22:25                                                Page 176


  9470 09:9887: 85 0B        	sta	<R2+2
  9471 09:9889: 18           	clc
  9472 09:988A: A5 09        	lda	<R2
  9473 09:988C: 65 01        	adc	<R0
  9474 09:988E: 85 0D        	sta	<R3
  9475 09:9890: A5 0B        	lda	<R2+2
  9476 09:9892: 65 03        	adc	<R0+2
  9477 09:9894: 85 0F        	sta	<R3+2
  9478 09:9896: A9 FF FF     	lda	#$ffff
  9479 09:9899: 87 0D        	sta	[<R3]
  9480 09:989B: A9 00 00     	lda	#$0
  9481 09:989E: A0 02 00     	ldy	#$2
  9482 09:98A1: 97 0D        	sta	[<R3],Y
  9483                        ;            }
  9484                        	.line	1381
  9485                        ;          else
  9486 09:98A3: 82 A9 00     	brl	L10246
  9487                        L10245:
  9488                        ;            {
  9489                        	.line	1383
  9490                        ;              memcpy(&one_word,&lconst[current_Su
                    perReloc2->OffsetPatch[i]],sizeof(WORD));
  9491                        	.line	1384
  9492 09:98A6: F4 02 00     	pea	#<$2
  9493 09:98A9: A0 00 00     	ldy	#$0
  9494 09:98AC: A5 19        	lda	<L328+i_1
  9495 09:98AE: 10 01        	bpl	L339
  9496 09:98B0: 88           	dey
  9497                        L339:
  9498 09:98B1: 85 05        	sta	<R1
  9499 09:98B3: 84 07        	sty	<R1+2
  9500 09:98B5: D4 07        	pei	<R1+2
  9501 09:98B7: D4 05        	pei	<R1
  9502 09:98B9: A9 02 00     	lda	#$2
  9503                        	xref	~~~lasl
  9504 09:98BC: 22 xx xx xx  	jsl	~~~lasl
  9505 09:98C0: 85 01        	sta	<R0
  9506 09:98C2: 86 03        	stx	<R0+2
  9507 09:98C4: 18           	clc
  9508 09:98C5: A9 0D 00     	lda	#$d
  9509 09:98C8: 65 1D        	adc	<L328+current_SuperReloc2_1
  9510 09:98CA: 85 09        	sta	<R2
  9511 09:98CC: A9 00 00     	lda	#$0
  9512 09:98CF: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9513 09:98D1: 85 0B        	sta	<R2+2
  9514 09:98D3: 18           	clc
  9515 09:98D4: A5 09        	lda	<R2
  9516 09:98D6: 65 01        	adc	<R0
  9517 09:98D8: 85 0D        	sta	<R3
  9518 09:98DA: A5 0B        	lda	<R2+2
  9519 09:98DC: 65 03        	adc	<R0+2
  9520 09:98DE: 85 0F        	sta	<R3+2
  9521 09:98E0: 18           	clc
  9522 09:98E1: A5 28        	lda	<L327+lconst_0
  9523 09:98E3: 67 0D        	adc	[<R3]
  9524 09:98E5: 85 01        	sta	<R0
  9525 09:98E7: A5 2A        	lda	<L327+lconst_0+2
  9526 09:98E9: A0 02 00     	ldy	#$2
  Thu Dec  3 2020 22:25                                                Page 177


  9527 09:98EC: 77 0D        	adc	[<R3],Y
  9528 09:98EE: 85 03        	sta	<R0+2
  9529 09:98F0: D4 03        	pei	<R0+2
  9530 09:98F2: D4 01        	pei	<R0
  9531 09:98F4: F4 00 00     	pea	#0
  9532 09:98F7: 18           	clc
  9533 09:98F8: 7B           	tdc
  9534 09:98F9: 69 1B 00     	adc	#<L328+one_word_1
  9535 09:98FC: 48           	pha
  9536 09:98FD: 22 xx xx xx  	jsl	~~memcpy
  9537                        ;              current_SuperReloc2->OffsetReferenc
                    e[i] = (DWORD) one_word;
  9538                        	.line	1385
  9539 09:9901: A0 00 00     	ldy	#$0
  9540 09:9904: A5 19        	lda	<L328+i_1
  9541 09:9906: 10 01        	bpl	L340
  9542 09:9908: 88           	dey
  9543                        L340:
  9544 09:9909: 85 05        	sta	<R1
  9545 09:990B: 84 07        	sty	<R1+2
  9546 09:990D: D4 07        	pei	<R1+2
  9547 09:990F: D4 05        	pei	<R1
  9548 09:9911: A9 02 00     	lda	#$2
  9549                        	xref	~~~lasl
  9550 09:9914: 22 xx xx xx  	jsl	~~~lasl
  9551 09:9918: 85 01        	sta	<R0
  9552 09:991A: 86 03        	stx	<R0+2
  9553 09:991C: 18           	clc
  9554 09:991D: A9 0D 04     	lda	#$40d
  9555 09:9920: 65 1D        	adc	<L328+current_SuperReloc2_1
  9556 09:9922: 85 09        	sta	<R2
  9557 09:9924: A9 00 00     	lda	#$0
  9558 09:9927: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9559 09:9929: 85 0B        	sta	<R2+2
  9560 09:992B: 18           	clc
  9561 09:992C: A5 09        	lda	<R2
  9562 09:992E: 65 01        	adc	<R0
  9563 09:9930: 85 0D        	sta	<R3
  9564 09:9932: A5 0B        	lda	<R2+2
  9565 09:9934: 65 03        	adc	<R0+2
  9566 09:9936: 85 0F        	sta	<R3+2
  9567 09:9938: A0 00 00     	ldy	#$0
  9568 09:993B: A5 1B        	lda	<L328+one_word_1
  9569 09:993D: 10 01        	bpl	L341
  9570 09:993F: 88           	dey
  9571                        L341:
  9572 09:9940: 85 01        	sta	<R0
  9573 09:9942: 84 03        	sty	<R0+2
  9574 09:9944: A5 01        	lda	<R0
  9575 09:9946: 87 0D        	sta	[<R3]
  9576 09:9948: A5 03        	lda	<R0+2
  9577 09:994A: A0 02 00     	ldy	#$2
  9578 09:994D: 97 0D        	sta	[<R3],Y
  9579                        ;            }
  9580                        	.line	1386
  9581                        L10246:
  9582                        ;
  9583                        ;          /* Conserve ce RELOC */
  Thu Dec  3 2020 22:25                                                Page 178


  9584                        ;          AddReloc(current_SuperReloc2->ByteCnt,c
                    urrent_SuperReloc2->BitShiftCnt,current_SuperReloc2->OffsetP
                    atch[i],current_SuperReloc2->OffsetReference[i],RECORD_SUPER
                    _RELOC2);
  9585                        	.line	1389
  9586 09:994F: F4 05 00     	pea	#<$5
  9587 09:9952: A0 00 00     	ldy	#$0
  9588 09:9955: A5 19        	lda	<L328+i_1
  9589 09:9957: 10 01        	bpl	L342
  9590 09:9959: 88           	dey
  9591                        L342:
  9592 09:995A: 85 05        	sta	<R1
  9593 09:995C: 84 07        	sty	<R1+2
  9594 09:995E: D4 07        	pei	<R1+2
  9595 09:9960: D4 05        	pei	<R1
  9596 09:9962: A9 02 00     	lda	#$2
  9597                        	xref	~~~lasl
  9598 09:9965: 22 xx xx xx  	jsl	~~~lasl
  9599 09:9969: 85 01        	sta	<R0
  9600 09:996B: 86 03        	stx	<R0+2
  9601 09:996D: 18           	clc
  9602 09:996E: A9 0D 04     	lda	#$40d
  9603 09:9971: 65 1D        	adc	<L328+current_SuperReloc2_1
  9604 09:9973: 85 09        	sta	<R2
  9605 09:9975: A9 00 00     	lda	#$0
  9606 09:9978: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9607 09:997A: 85 0B        	sta	<R2+2
  9608 09:997C: 18           	clc
  9609 09:997D: A5 09        	lda	<R2
  9610 09:997F: 65 01        	adc	<R0
  9611 09:9981: 85 0D        	sta	<R3
  9612 09:9983: A5 0B        	lda	<R2+2
  9613 09:9985: 65 03        	adc	<R0+2
  9614 09:9987: 85 0F        	sta	<R3+2
  9615 09:9989: A0 02 00     	ldy	#$2
  9616 09:998C: B7 0D        	lda	[<R3],Y
  9617 09:998E: 48           	pha
  9618 09:998F: A7 0D        	lda	[<R3]
  9619 09:9991: 48           	pha
  9620 09:9992: A0 00 00     	ldy	#$0
  9621 09:9995: A5 19        	lda	<L328+i_1
  9622 09:9997: 10 01        	bpl	L343
  9623 09:9999: 88           	dey
  9624                        L343:
  9625 09:999A: 85 09        	sta	<R2
  9626 09:999C: 84 0B        	sty	<R2+2
  9627 09:999E: D4 0B        	pei	<R2+2
  9628 09:99A0: D4 09        	pei	<R2
  9629 09:99A2: A9 02 00     	lda	#$2
  9630                        	xref	~~~lasl
  9631 09:99A5: 22 xx xx xx  	jsl	~~~lasl
  9632 09:99A9: 85 01        	sta	<R0
  9633 09:99AB: 86 03        	stx	<R0+2
  9634 09:99AD: 18           	clc
  9635 09:99AE: A9 0D 00     	lda	#$d
  9636 09:99B1: 65 1D        	adc	<L328+current_SuperReloc2_1
  9637 09:99B3: 85 0D        	sta	<R3
  9638 09:99B5: A9 00 00     	lda	#$0
  Thu Dec  3 2020 22:25                                                Page 179


  9639 09:99B8: 65 1F        	adc	<L328+current_SuperReloc2_1+2
  9640 09:99BA: 85 0F        	sta	<R3+2
  9641 09:99BC: 18           	clc
  9642 09:99BD: A5 0D        	lda	<R3
  9643 09:99BF: 65 01        	adc	<R0
  9644 09:99C1: 85 11        	sta	<17
  9645 09:99C3: A5 0F        	lda	<R3+2
  9646 09:99C5: 65 03        	adc	<R0+2
  9647 09:99C7: 85 13        	sta	<17+2
  9648 09:99C9: A0 02 00     	ldy	#$2
  9649 09:99CC: B7 11        	lda	[<17],Y
  9650 09:99CE: 48           	pha
  9651 09:99CF: A7 11        	lda	[<17]
  9652 09:99D1: 48           	pha
  9653 09:99D2: A0 0A 00     	ldy	#$a
  9654 09:99D5: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9655 09:99D7: 48           	pha
  9656 09:99D8: A0 09 00     	ldy	#$9
  9657 09:99DB: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9658 09:99DD: 48           	pha
  9659 09:99DE: 22 33 AC 09  	jsl	~~AddReloc
  9660                        ;          ////printf("  Page %02X : %02X  %04X  %
                    04X\n",*page_rtn,current_SuperReloc2->ByteCnt,current_SuperR
                    eloc2->OffsetPatch[i],current_SuperReloc2->OffsetReference[i
                    ]);
  9661                        ;        }
  9662                        	.line	1391
  9663                        L10241:
  9664 09:99E2: E6 19        	inc	<L328+i_1
  9665                        L10244:
  9666 09:99E4: 38           	sec
  9667 09:99E5: A5 19        	lda	<L328+i_1
  9668 09:99E7: A0 0B 00     	ldy	#$b
  9669 09:99EA: F7 1D        	sbc	[<L328+current_SuperReloc2_1],Y
  9670 09:99EC: 70 03        	bvs	L344
  9671 09:99EE: 49 00 80     	eor	#$8000
  9672                        L344:
  9673 09:99F1: 30 03        	bmi	L345
  9674 09:99F3: 82 A5 FD     	brl	L10243
  9675                        L345:
  9676                        L10242:
  9677                        ;
  9678                        ;      /* Page suivante */
  9679                        ;      *page_rtn = *page_rtn + 1;
  9680                        	.line	1394
  9681 09:99F6: E2 20        	sep	#$20
  9682                        	longa	off
  9683 09:99F8: A7 2E        	lda	[<L327+page_rtn_0]
  9684 09:99FA: 1A           	ina
  9685 09:99FB: C2 20        	rep	#$20
  9686                        	longa	on
  9687 09:99FD: E2 20        	sep	#$20
  9688                        	longa	off
  9689 09:99FF: 87 2E        	sta	[<L327+page_rtn_0]
  9690 09:9A01: C2 20        	rep	#$20
  9691                        	longa	on
  9692                        ;
  9693                        ;      /* Longueur du SubRecord */
  Thu Dec  3 2020 22:25                                                Page 180


  9694                        ;      *length_rtn = 1 + current_SuperReloc2->nb_a
                    ddress*sizeof(BYTE);
  9695                        	.line	1397
  9696 09:9A03: A0 0B 00     	ldy	#$b
  9697 09:9A06: B7 1D        	lda	[<L328+current_SuperReloc2_1],Y
  9698 09:9A08: 1A           	ina
  9699 09:9A09: 87 32        	sta	[<L327+length_rtn_0]
  9700                        ;    }
  9701                        	.line	1398
  9702                        L10240:
  9703                        ;
  9704                        ;  /* Renvoie la structure */
  9705                        ;  return(current_SuperReloc2);
  9706                        	.line	1401
  9707 09:9A0B: A6 1F        	ldx	<L328+current_SuperReloc2_1+2
  9708 09:9A0D: A5 1D        	lda	<L328+current_SuperReloc2_1
  9709 09:9A0F: 82 07 FD     	brl	L331
  9710                        ;}
  9711                        	.line	1402
  9712                        	.endblock	1402
  9713             00000020   L327	equ	32
  9714             00000019   L328	equ	25
  9715 09:9A12:              	ends
  9716                        	efunc
  9717                        	.endfunc	1402,25,32
  9718                        	.line	1402
  9719                        ;
  9720                        ;
  9721                        ;/************************************************
                    ****************/
  9722                        ;/*  DecodeSuperReloc3() :  Décodage d'un SubRecor
                    d SuperReloc3. */
  9723                        ;/************************************************
                    ****************/
  9724                        ;static struct subrecord_SuperReloc3 *DecodeSuperR
                    eloc3(unsigned char *data, unsigned char *lconst, int lconst
                    _length, BYTE *page_rtn, int *length_rtn, struct omf_segment
                     *current_segment)
  9725                        ;{
  9726                        	.line	1408
  9727                        	.line	1409
  9728                        	LOADER
  9729                        	func
  9730                        	.function	1409
  9731                        ~~DecodeSuperReloc3:
  9732                        	longa	on
  9733                        	longi	on
  9734 09:9A12: 3B           	tsc
  9735 09:9A13: 38           	sec
  9736 09:9A14: E9 20 00     	sbc	#L346
  9737 09:9A17: 1B           	tcs
  9738 09:9A18: 0B           	phd
  9739 09:9A19: 5B           	tcd
  9740             00000004   data_0	set	4
  9741             00000008   lconst_0	set	8
  9742             0000000C   lconst_length_0	set	12
  9743             0000000E   page_rtn_0	set	14
  9744             00000012   length_rtn_0	set	18
  Thu Dec  3 2020 22:25                                                Page 181


  9745             00000016   current_segment_0	set	22
  9746                        	.block	1409
  9747                        ;  int i;
  9748                        ;  WORD one_word;
  9749                        ;  struct subrecord_SuperReloc3 *current_SuperRelo
                    c3;
  9750                        ;
  9751                        ;  /* Allocation mémoire */
  9752                        ;  current_SuperReloc3 = (struct subrecord_SuperRe
                    loc3 *) k_calloc(1,sizeof(struct subrecord_SuperReloc3));
  9753             00000000   i_1	set	0
  9754             00000002   one_word_1	set	2
  9755             00000004   current_SuperReloc3_1	set	4
  9756                        	.sym	i,0,5,1,16
  9757                        	.sym	one_word,2,5,1,16
  9758                        	.sym	current_SuperReloc3,4,138,1,32,69
  9759                        	.sym	data,4,142,6,32
  9760                        	.sym	lconst,8,142,6,32
  9761                        	.sym	lconst_length,12,5,6,16
  9762                        	.sym	page_rtn,14,142,6,32
  9763                        	.sym	length_rtn,18,133,6,32
  9764                        	.sym	current_segment,22,138,6,32,65
  9765                        	.line	1415
  9766 09:9A1A: F4 11 08     	pea	#<$811
  9767 09:9A1D: F4 01 00     	pea	#<$1
  9768 09:9A20: 22 xx xx xx  	jsl	~~k_calloc
  9769 09:9A24: 85 1D        	sta	<L347+current_SuperReloc3_1
  9770 09:9A26: 86 1F        	stx	<L347+current_SuperReloc3_1+2
  9771                        ;  if(current_SuperReloc3 == NULL)
  9772                        	.line	1416
  9773                        ;    {
  9774 09:9A28: A5 1D        	lda	<L347+current_SuperReloc3_1
  9775 09:9A2A: 05 1F        	ora	<L347+current_SuperReloc3_1+2
  9776 09:9A2C: F0 03        	beq	L349
  9777 09:9A2E: 82 19 00     	brl	L10247
  9778                        L349:
  9779                        	.line	1417
  9780                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperReloc3.\n");
  9781                        ;      return(NULL);
  9782                        	.line	1419
  9783 09:9A31: A9 00 00     	lda	#$0
  9784 09:9A34: AA           	tax
  9785 09:9A35: A9 00 00     	lda	#$0
  9786                        L350:
  9787 09:9A38: A8           	tay
  9788 09:9A39: A5 22        	lda	<L346+2
  9789 09:9A3B: 85 38        	sta	<L346+2+22
  9790 09:9A3D: A5 21        	lda	<L346+1
  9791 09:9A3F: 85 37        	sta	<L346+1+22
  9792 09:9A41: 2B           	pld
  9793 09:9A42: 3B           	tsc
  9794 09:9A43: 18           	clc
  9795 09:9A44: 69 36 00     	adc	#L346+22
  9796 09:9A47: 1B           	tcs
  9797 09:9A48: 98           	tya
  9798 09:9A49: 6B           	rtl
  9799                        ;    }
  Thu Dec  3 2020 22:25                                                Page 182


  9800                        	.line	1420
  9801                        ;
  9802                        ;  /* Nombre d'adresse-1 ou Saut de Page */
  9803                        ;  current_SuperReloc3->Count = data[0];
  9804                        L10247:
  9805                        	.line	1423
  9806 09:9A4A: E2 20        	sep	#$20
  9807                        	longa	off
  9808 09:9A4C: A7 24        	lda	[<L346+data_0]
  9809 09:9A4E: A0 08 00     	ldy	#$8
  9810 09:9A51: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
  9811 09:9A53: C2 20        	rep	#$20
  9812                        	longa	on
  9813                        ;
  9814                        ;  /** Saut de Page **/
  9815                        ;  if((current_SuperReloc3->Count & 0x80) == 0x80)
  9816                        	.line	1426
  9817                        ;    {
  9818 09:9A55: A0 08 00     	ldy	#$8
  9819 09:9A58: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
  9820 09:9A5A: 29 80 00     	and	#<$80
  9821 09:9A5D: 85 01        	sta	<R0
  9822 09:9A5F: A5 01        	lda	<R0
  9823 09:9A61: C9 80 00     	cmp	#<$80
  9824 09:9A64: F0 03        	beq	L351
  9825 09:9A66: 82 24 00     	brl	L10248
  9826                        L351:
  9827                        	.line	1427
  9828                        ;      /* On saute X pages */
  9829                        ;      *page_rtn = *page_rtn + (current_SuperReloc
                    3->Count & 0x7F);
  9830                        	.line	1429
  9831 09:9A69: E2 20        	sep	#$20
  9832                        	longa	off
  9833 09:9A6B: A0 08 00     	ldy	#$8
  9834 09:9A6E: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
  9835 09:9A70: 29 7F        	and	#<$7f
  9836 09:9A72: 85 01        	sta	<R0
  9837 09:9A74: C2 20        	rep	#$20
  9838                        	longa	on
  9839 09:9A76: E2 20        	sep	#$20
  9840                        	longa	off
  9841 09:9A78: 18           	clc
  9842 09:9A79: A7 2E        	lda	[<L346+page_rtn_0]
  9843 09:9A7B: 65 01        	adc	<R0
  9844 09:9A7D: C2 20        	rep	#$20
  9845                        	longa	on
  9846 09:9A7F: E2 20        	sep	#$20
  9847                        	longa	off
  9848 09:9A81: 87 2E        	sta	[<L346+page_rtn_0]
  9849 09:9A83: C2 20        	rep	#$20
  9850                        	longa	on
  9851                        ;
  9852                        ;      /* Longueur du SubRecord */
  9853                        ;      *length_rtn = 1;
  9854                        	.line	1432
  9855 09:9A85: A9 01 00     	lda	#$1
  9856 09:9A88: 87 32        	sta	[<L346+length_rtn_0]
  Thu Dec  3 2020 22:25                                                Page 183


  9857                        ;    }
  9858                        	.line	1433
  9859                        ;  else
  9860 09:9A8A: 82 9D 02     	brl	L10249
  9861                        L10248:
  9862                        ;    {
  9863                        	.line	1435
  9864                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
  9865                        ;      current_SuperReloc3->ByteCnt = 0x03;
  9866                        	.line	1437
  9867 09:9A8D: E2 20        	sep	#$20
  9868                        	longa	off
  9869 09:9A8F: A9 03        	lda	#$3
  9870 09:9A91: A0 09 00     	ldy	#$9
  9871 09:9A94: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
  9872 09:9A96: C2 20        	rep	#$20
  9873                        	longa	on
  9874                        ;
  9875                        ;      /* Opérations >> ou << = Toujours à 0  */
  9876                        ;      current_SuperReloc3->BitShiftCnt = 0x00;
  9877                        	.line	1440
  9878 09:9A98: E2 20        	sep	#$20
  9879                        	longa	off
  9880 09:9A9A: A9 00        	lda	#$0
  9881 09:9A9C: A0 0A 00     	ldy	#$a
  9882 09:9A9F: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
  9883 09:9AA1: C2 20        	rep	#$20
  9884                        	longa	on
  9885                        ;
  9886                        ;      /* Nombre d'adresse */
  9887                        ;      current_SuperReloc3->nb_address = current_S
                    uperReloc3->Count + 1;
  9888                        	.line	1443
  9889 09:9AA3: A0 08 00     	ldy	#$8
  9890 09:9AA6: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
  9891 09:9AA8: 29 FF 00     	and	#$ff
  9892 09:9AAB: 85 01        	sta	<R0
  9893 09:9AAD: A5 01        	lda	<R0
  9894 09:9AAF: 1A           	ina
  9895 09:9AB0: A0 0B 00     	ldy	#$b
  9896 09:9AB3: 97 1D        	sta	[<L347+current_SuperReloc3_1],Y
  9897                        ;
  9898                        ;      /** Copie les adresses **/
  9899                        ;      for(i=0; i<current_SuperReloc3->nb_address;
                     i++)
  9900                        	.line	1446
  9901 09:9AB5: 64 19        	stz	<L347+i_1
  9902 09:9AB7: 82 49 02     	brl	L10253
  9903                        L10252:
  9904                        ;        {
  9905                        	.line	1447
  9906                        ;          /* Décode OffsetPath et OffsetReference
                     */
  9907                        ;          current_SuperReloc3->OffsetPatch[i] = (
                    (WORD)(*page_rtn) << 8) | data[1+i];
  9908                        	.line	1449
  9909 09:9ABA: A0 00 00     	ldy	#$0
  Thu Dec  3 2020 22:25                                                Page 184


  9910 09:9ABD: A5 19        	lda	<L347+i_1
  9911 09:9ABF: 10 01        	bpl	L352
  9912 09:9AC1: 88           	dey
  9913                        L352:
  9914 09:9AC2: 85 05        	sta	<R1
  9915 09:9AC4: 84 07        	sty	<R1+2
  9916 09:9AC6: D4 07        	pei	<R1+2
  9917 09:9AC8: D4 05        	pei	<R1
  9918 09:9ACA: A9 02 00     	lda	#$2
  9919                        	xref	~~~lasl
  9920 09:9ACD: 22 xx xx xx  	jsl	~~~lasl
  9921 09:9AD1: 85 01        	sta	<R0
  9922 09:9AD3: 86 03        	stx	<R0+2
  9923 09:9AD5: 18           	clc
  9924 09:9AD6: A9 0D 00     	lda	#$d
  9925 09:9AD9: 65 1D        	adc	<L347+current_SuperReloc3_1
  9926 09:9ADB: 85 09        	sta	<R2
  9927 09:9ADD: A9 00 00     	lda	#$0
  9928 09:9AE0: 65 1F        	adc	<L347+current_SuperReloc3_1+2
  9929 09:9AE2: 85 0B        	sta	<R2+2
  9930 09:9AE4: 18           	clc
  9931 09:9AE5: A5 09        	lda	<R2
  9932 09:9AE7: 65 01        	adc	<R0
  9933 09:9AE9: 85 0D        	sta	<R3
  9934 09:9AEB: A5 0B        	lda	<R2+2
  9935 09:9AED: 65 03        	adc	<R0+2
  9936 09:9AEF: 85 0F        	sta	<R3+2
  9937 09:9AF1: A5 19        	lda	<L347+i_1
  9938 09:9AF3: 1A           	ina
  9939 09:9AF4: 85 01        	sta	<R0
  9940 09:9AF6: A4 01        	ldy	<R0
  9941 09:9AF8: B7 24        	lda	[<L346+data_0],Y
  9942 09:9AFA: 29 FF 00     	and	#$ff
  9943 09:9AFD: 85 09        	sta	<R2
  9944 09:9AFF: A7 2E        	lda	[<L346+page_rtn_0]
  9945 09:9B01: 29 FF 00     	and	#$ff
  9946 09:9B04: 85 15        	sta	<21
  9947 09:9B06: A5 15        	lda	<21
  9948 09:9B08: EB           	xba
  9949 09:9B09: 29 00 FF     	and	#$ff00
  9950 09:9B0C: 85 11        	sta	<17
  9951 09:9B0E: A5 11        	lda	<17
  9952 09:9B10: 05 09        	ora	<R2
  9953 09:9B12: 85 15        	sta	<21
  9954 09:9B14: A0 00 00     	ldy	#$0
  9955 09:9B17: A5 15        	lda	<21
  9956 09:9B19: 10 01        	bpl	L353
  9957 09:9B1B: 88           	dey
  9958                        L353:
  9959 09:9B1C: 85 09        	sta	<R2
  9960 09:9B1E: 84 0B        	sty	<R2+2
  9961 09:9B20: A5 09        	lda	<R2
  9962 09:9B22: 87 0D        	sta	[<R3]
  9963 09:9B24: A5 0B        	lda	<R2+2
  9964 09:9B26: A0 02 00     	ldy	#$2
  9965 09:9B29: 97 0D        	sta	[<R3],Y
  9966                        ;          
  9967                        ;          /* On vérifie qu'on reste dans les limi
  Thu Dec  3 2020 22:25                                                Page 185


                    te du LCONST */
  9968                        ;          if(current_SuperReloc3->OffsetPatch[i] 
                    > (DWORD) lconst_length)
  9969                        	.line	1452
  9970                        ;            {
  9971 09:9B2B: A0 00 00     	ldy	#$0
  9972 09:9B2E: A5 2C        	lda	<L346+lconst_length_0
  9973 09:9B30: 10 01        	bpl	L354
  9974 09:9B32: 88           	dey
  9975                        L354:
  9976 09:9B33: 85 01        	sta	<R0
  9977 09:9B35: 84 03        	sty	<R0+2
  9978 09:9B37: A0 00 00     	ldy	#$0
  9979 09:9B3A: A5 19        	lda	<L347+i_1
  9980 09:9B3C: 10 01        	bpl	L355
  9981 09:9B3E: 88           	dey
  9982                        L355:
  9983 09:9B3F: 85 09        	sta	<R2
  9984 09:9B41: 84 0B        	sty	<R2+2
  9985 09:9B43: D4 0B        	pei	<R2+2
  9986 09:9B45: D4 09        	pei	<R2
  9987 09:9B47: A9 02 00     	lda	#$2
  9988                        	xref	~~~lasl
  9989 09:9B4A: 22 xx xx xx  	jsl	~~~lasl
  9990 09:9B4E: 85 05        	sta	<R1
  9991 09:9B50: 86 07        	stx	<R1+2
  9992 09:9B52: 18           	clc
  9993 09:9B53: A9 0D 00     	lda	#$d
  9994 09:9B56: 65 1D        	adc	<L347+current_SuperReloc3_1
  9995 09:9B58: 85 0D        	sta	<R3
  9996 09:9B5A: A9 00 00     	lda	#$0
  9997 09:9B5D: 65 1F        	adc	<L347+current_SuperReloc3_1+2
  9998 09:9B5F: 85 0F        	sta	<R3+2
  9999 09:9B61: 18           	clc
 10000 09:9B62: A5 0D        	lda	<R3
 10001 09:9B64: 65 05        	adc	<R1
 10002 09:9B66: 85 11        	sta	<17
 10003 09:9B68: A5 0F        	lda	<R3+2
 10004 09:9B6A: 65 07        	adc	<R1+2
 10005 09:9B6C: 85 13        	sta	<17+2
 10006 09:9B6E: A5 01        	lda	<R0
 10007 09:9B70: C7 11        	cmp	[<17]
 10008 09:9B72: A5 03        	lda	<R0+2
 10009 09:9B74: A0 02 00     	ldy	#$2
 10010 09:9B77: F7 11        	sbc	[<17],Y
 10011 09:9B79: 90 03        	bcc	L356
 10012 09:9B7B: 82 47 00     	brl	L10254
 10013                        L356:
 10014                        	.line	1453
 10015                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperReloc3 for Offset %04X in Segment #%02X.\n",c
                    urrent_SuperReloc3->OffsetPatch[i],current_segment->header.S
                    egNum);
 10016                        ;              current_SuperReloc3->OffsetReferenc
                    e[i] = 0xFFFF;   /* Erreur */
 10017                        	.line	1455
 10018 09:9B7E: A0 00 00     	ldy	#$0
 10019 09:9B81: A5 19        	lda	<L347+i_1
  Thu Dec  3 2020 22:25                                                Page 186


 10020 09:9B83: 10 01        	bpl	L357
 10021 09:9B85: 88           	dey
 10022                        L357:
 10023 09:9B86: 85 05        	sta	<R1
 10024 09:9B88: 84 07        	sty	<R1+2
 10025 09:9B8A: D4 07        	pei	<R1+2
 10026 09:9B8C: D4 05        	pei	<R1
 10027 09:9B8E: A9 02 00     	lda	#$2
 10028                        	xref	~~~lasl
 10029 09:9B91: 22 xx xx xx  	jsl	~~~lasl
 10030 09:9B95: 85 01        	sta	<R0
 10031 09:9B97: 86 03        	stx	<R0+2
 10032 09:9B99: 18           	clc
 10033 09:9B9A: A9 0D 04     	lda	#$40d
 10034 09:9B9D: 65 1D        	adc	<L347+current_SuperReloc3_1
 10035 09:9B9F: 85 09        	sta	<R2
 10036 09:9BA1: A9 00 00     	lda	#$0
 10037 09:9BA4: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10038 09:9BA6: 85 0B        	sta	<R2+2
 10039 09:9BA8: 18           	clc
 10040 09:9BA9: A5 09        	lda	<R2
 10041 09:9BAB: 65 01        	adc	<R0
 10042 09:9BAD: 85 0D        	sta	<R3
 10043 09:9BAF: A5 0B        	lda	<R2+2
 10044 09:9BB1: 65 03        	adc	<R0+2
 10045 09:9BB3: 85 0F        	sta	<R3+2
 10046 09:9BB5: A9 FF FF     	lda	#$ffff
 10047 09:9BB8: 87 0D        	sta	[<R3]
 10048 09:9BBA: A9 00 00     	lda	#$0
 10049 09:9BBD: A0 02 00     	ldy	#$2
 10050 09:9BC0: 97 0D        	sta	[<R3],Y
 10051                        ;            }
 10052                        	.line	1456
 10053                        ;          else
 10054 09:9BC2: 82 A9 00     	brl	L10255
 10055                        L10254:
 10056                        ;            {          
 10057                        	.line	1458
 10058                        ;              memcpy(&one_word,&lconst[current_Su
                    perReloc3->OffsetPatch[i]],sizeof(WORD));
 10059                        	.line	1459
 10060 09:9BC5: F4 02 00     	pea	#<$2
 10061 09:9BC8: A0 00 00     	ldy	#$0
 10062 09:9BCB: A5 19        	lda	<L347+i_1
 10063 09:9BCD: 10 01        	bpl	L358
 10064 09:9BCF: 88           	dey
 10065                        L358:
 10066 09:9BD0: 85 05        	sta	<R1
 10067 09:9BD2: 84 07        	sty	<R1+2
 10068 09:9BD4: D4 07        	pei	<R1+2
 10069 09:9BD6: D4 05        	pei	<R1
 10070 09:9BD8: A9 02 00     	lda	#$2
 10071                        	xref	~~~lasl
 10072 09:9BDB: 22 xx xx xx  	jsl	~~~lasl
 10073 09:9BDF: 85 01        	sta	<R0
 10074 09:9BE1: 86 03        	stx	<R0+2
 10075 09:9BE3: 18           	clc
 10076 09:9BE4: A9 0D 00     	lda	#$d
  Thu Dec  3 2020 22:25                                                Page 187


 10077 09:9BE7: 65 1D        	adc	<L347+current_SuperReloc3_1
 10078 09:9BE9: 85 09        	sta	<R2
 10079 09:9BEB: A9 00 00     	lda	#$0
 10080 09:9BEE: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10081 09:9BF0: 85 0B        	sta	<R2+2
 10082 09:9BF2: 18           	clc
 10083 09:9BF3: A5 09        	lda	<R2
 10084 09:9BF5: 65 01        	adc	<R0
 10085 09:9BF7: 85 0D        	sta	<R3
 10086 09:9BF9: A5 0B        	lda	<R2+2
 10087 09:9BFB: 65 03        	adc	<R0+2
 10088 09:9BFD: 85 0F        	sta	<R3+2
 10089 09:9BFF: 18           	clc
 10090 09:9C00: A5 28        	lda	<L346+lconst_0
 10091 09:9C02: 67 0D        	adc	[<R3]
 10092 09:9C04: 85 01        	sta	<R0
 10093 09:9C06: A5 2A        	lda	<L346+lconst_0+2
 10094 09:9C08: A0 02 00     	ldy	#$2
 10095 09:9C0B: 77 0D        	adc	[<R3],Y
 10096 09:9C0D: 85 03        	sta	<R0+2
 10097 09:9C0F: D4 03        	pei	<R0+2
 10098 09:9C11: D4 01        	pei	<R0
 10099 09:9C13: F4 00 00     	pea	#0
 10100 09:9C16: 18           	clc
 10101 09:9C17: 7B           	tdc
 10102 09:9C18: 69 1B 00     	adc	#<L347+one_word_1
 10103 09:9C1B: 48           	pha
 10104 09:9C1C: 22 xx xx xx  	jsl	~~memcpy
 10105                        ;              current_SuperReloc3->OffsetReferenc
                    e[i] = (DWORD) one_word;
 10106                        	.line	1460
 10107 09:9C20: A0 00 00     	ldy	#$0
 10108 09:9C23: A5 19        	lda	<L347+i_1
 10109 09:9C25: 10 01        	bpl	L359
 10110 09:9C27: 88           	dey
 10111                        L359:
 10112 09:9C28: 85 05        	sta	<R1
 10113 09:9C2A: 84 07        	sty	<R1+2
 10114 09:9C2C: D4 07        	pei	<R1+2
 10115 09:9C2E: D4 05        	pei	<R1
 10116 09:9C30: A9 02 00     	lda	#$2
 10117                        	xref	~~~lasl
 10118 09:9C33: 22 xx xx xx  	jsl	~~~lasl
 10119 09:9C37: 85 01        	sta	<R0
 10120 09:9C39: 86 03        	stx	<R0+2
 10121 09:9C3B: 18           	clc
 10122 09:9C3C: A9 0D 04     	lda	#$40d
 10123 09:9C3F: 65 1D        	adc	<L347+current_SuperReloc3_1
 10124 09:9C41: 85 09        	sta	<R2
 10125 09:9C43: A9 00 00     	lda	#$0
 10126 09:9C46: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10127 09:9C48: 85 0B        	sta	<R2+2
 10128 09:9C4A: 18           	clc
 10129 09:9C4B: A5 09        	lda	<R2
 10130 09:9C4D: 65 01        	adc	<R0
 10131 09:9C4F: 85 0D        	sta	<R3
 10132 09:9C51: A5 0B        	lda	<R2+2
 10133 09:9C53: 65 03        	adc	<R0+2
  Thu Dec  3 2020 22:25                                                Page 188


 10134 09:9C55: 85 0F        	sta	<R3+2
 10135 09:9C57: A0 00 00     	ldy	#$0
 10136 09:9C5A: A5 1B        	lda	<L347+one_word_1
 10137 09:9C5C: 10 01        	bpl	L360
 10138 09:9C5E: 88           	dey
 10139                        L360:
 10140 09:9C5F: 85 01        	sta	<R0
 10141 09:9C61: 84 03        	sty	<R0+2
 10142 09:9C63: A5 01        	lda	<R0
 10143 09:9C65: 87 0D        	sta	[<R3]
 10144 09:9C67: A5 03        	lda	<R0+2
 10145 09:9C69: A0 02 00     	ldy	#$2
 10146 09:9C6C: 97 0D        	sta	[<R3],Y
 10147                        ;            }
 10148                        	.line	1461
 10149                        L10255:
 10150                        ;             
 10151                        ;          /* Conserve ce RELOC */
 10152                        ;          AddReloc(current_SuperReloc3->ByteCnt,c
                    urrent_SuperReloc3->BitShiftCnt,current_SuperReloc3->OffsetP
                    atch[i],current_SuperReloc3->OffsetReference[i],RECORD_SUPER
                    _RELOC3);
 10153                        	.line	1464
 10154 09:9C6E: F4 06 00     	pea	#<$6
 10155 09:9C71: A0 00 00     	ldy	#$0
 10156 09:9C74: A5 19        	lda	<L347+i_1
 10157 09:9C76: 10 01        	bpl	L361
 10158 09:9C78: 88           	dey
 10159                        L361:
 10160 09:9C79: 85 05        	sta	<R1
 10161 09:9C7B: 84 07        	sty	<R1+2
 10162 09:9C7D: D4 07        	pei	<R1+2
 10163 09:9C7F: D4 05        	pei	<R1
 10164 09:9C81: A9 02 00     	lda	#$2
 10165                        	xref	~~~lasl
 10166 09:9C84: 22 xx xx xx  	jsl	~~~lasl
 10167 09:9C88: 85 01        	sta	<R0
 10168 09:9C8A: 86 03        	stx	<R0+2
 10169 09:9C8C: 18           	clc
 10170 09:9C8D: A9 0D 04     	lda	#$40d
 10171 09:9C90: 65 1D        	adc	<L347+current_SuperReloc3_1
 10172 09:9C92: 85 09        	sta	<R2
 10173 09:9C94: A9 00 00     	lda	#$0
 10174 09:9C97: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10175 09:9C99: 85 0B        	sta	<R2+2
 10176 09:9C9B: 18           	clc
 10177 09:9C9C: A5 09        	lda	<R2
 10178 09:9C9E: 65 01        	adc	<R0
 10179 09:9CA0: 85 0D        	sta	<R3
 10180 09:9CA2: A5 0B        	lda	<R2+2
 10181 09:9CA4: 65 03        	adc	<R0+2
 10182 09:9CA6: 85 0F        	sta	<R3+2
 10183 09:9CA8: A0 02 00     	ldy	#$2
 10184 09:9CAB: B7 0D        	lda	[<R3],Y
 10185 09:9CAD: 48           	pha
 10186 09:9CAE: A7 0D        	lda	[<R3]
 10187 09:9CB0: 48           	pha
 10188 09:9CB1: A0 00 00     	ldy	#$0
  Thu Dec  3 2020 22:25                                                Page 189


 10189 09:9CB4: A5 19        	lda	<L347+i_1
 10190 09:9CB6: 10 01        	bpl	L362
 10191 09:9CB8: 88           	dey
 10192                        L362:
 10193 09:9CB9: 85 09        	sta	<R2
 10194 09:9CBB: 84 0B        	sty	<R2+2
 10195 09:9CBD: D4 0B        	pei	<R2+2
 10196 09:9CBF: D4 09        	pei	<R2
 10197 09:9CC1: A9 02 00     	lda	#$2
 10198                        	xref	~~~lasl
 10199 09:9CC4: 22 xx xx xx  	jsl	~~~lasl
 10200 09:9CC8: 85 01        	sta	<R0
 10201 09:9CCA: 86 03        	stx	<R0+2
 10202 09:9CCC: 18           	clc
 10203 09:9CCD: A9 0D 00     	lda	#$d
 10204 09:9CD0: 65 1D        	adc	<L347+current_SuperReloc3_1
 10205 09:9CD2: 85 0D        	sta	<R3
 10206 09:9CD4: A9 00 00     	lda	#$0
 10207 09:9CD7: 65 1F        	adc	<L347+current_SuperReloc3_1+2
 10208 09:9CD9: 85 0F        	sta	<R3+2
 10209 09:9CDB: 18           	clc
 10210 09:9CDC: A5 0D        	lda	<R3
 10211 09:9CDE: 65 01        	adc	<R0
 10212 09:9CE0: 85 11        	sta	<17
 10213 09:9CE2: A5 0F        	lda	<R3+2
 10214 09:9CE4: 65 03        	adc	<R0+2
 10215 09:9CE6: 85 13        	sta	<17+2
 10216 09:9CE8: A0 02 00     	ldy	#$2
 10217 09:9CEB: B7 11        	lda	[<17],Y
 10218 09:9CED: 48           	pha
 10219 09:9CEE: A7 11        	lda	[<17]
 10220 09:9CF0: 48           	pha
 10221 09:9CF1: A0 0A 00     	ldy	#$a
 10222 09:9CF4: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10223 09:9CF6: 48           	pha
 10224 09:9CF7: A0 09 00     	ldy	#$9
 10225 09:9CFA: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10226 09:9CFC: 48           	pha
 10227 09:9CFD: 22 33 AC 09  	jsl	~~AddReloc
 10228                        ;        }
 10229                        	.line	1465
 10230                        L10250:
 10231 09:9D01: E6 19        	inc	<L347+i_1
 10232                        L10253:
 10233 09:9D03: 38           	sec
 10234 09:9D04: A5 19        	lda	<L347+i_1
 10235 09:9D06: A0 0B 00     	ldy	#$b
 10236 09:9D09: F7 1D        	sbc	[<L347+current_SuperReloc3_1],Y
 10237 09:9D0B: 70 03        	bvs	L363
 10238 09:9D0D: 49 00 80     	eor	#$8000
 10239                        L363:
 10240 09:9D10: 30 03        	bmi	L364
 10241 09:9D12: 82 A5 FD     	brl	L10252
 10242                        L364:
 10243                        L10251:
 10244                        ;
 10245                        ;      /* Page suivante */
 10246                        ;      *page_rtn = *page_rtn + 1;
  Thu Dec  3 2020 22:25                                                Page 190


 10247                        	.line	1468
 10248 09:9D15: E2 20        	sep	#$20
 10249                        	longa	off
 10250 09:9D17: A7 2E        	lda	[<L346+page_rtn_0]
 10251 09:9D19: 1A           	ina
 10252 09:9D1A: C2 20        	rep	#$20
 10253                        	longa	on
 10254 09:9D1C: E2 20        	sep	#$20
 10255                        	longa	off
 10256 09:9D1E: 87 2E        	sta	[<L346+page_rtn_0]
 10257 09:9D20: C2 20        	rep	#$20
 10258                        	longa	on
 10259                        ;
 10260                        ;      /* Longueur du SubRecord */
 10261                        ;      *length_rtn = 1 + current_SuperReloc3->nb_a
                    ddress*sizeof(BYTE);
 10262                        	.line	1471
 10263 09:9D22: A0 0B 00     	ldy	#$b
 10264 09:9D25: B7 1D        	lda	[<L347+current_SuperReloc3_1],Y
 10265 09:9D27: 1A           	ina
 10266 09:9D28: 87 32        	sta	[<L346+length_rtn_0]
 10267                        ;    }
 10268                        	.line	1472
 10269                        L10249:
 10270                        ;
 10271                        ;  /* Renvoie la structure */
 10272                        ;  return(current_SuperReloc3);
 10273                        	.line	1475
 10274 09:9D2A: A6 1F        	ldx	<L347+current_SuperReloc3_1+2
 10275 09:9D2C: A5 1D        	lda	<L347+current_SuperReloc3_1
 10276 09:9D2E: 82 07 FD     	brl	L350
 10277                        ;}
 10278                        	.line	1476
 10279                        	.endblock	1476
 10280             00000020   L346	equ	32
 10281             00000019   L347	equ	25
 10282 09:9D31:              	ends
 10283                        	efunc
 10284                        	.endfunc	1476,25,32
 10285                        	.line	1476
 10286                        ;
 10287                        ;
 10288                        ;/************************************************
                    **********************/
 10289                        ;/*  DecodeSuperInterseg1() :  Décodage d'un SubRe
                    cord SuperInterseg1. */
 10290                        ;/************************************************
                    **********************/
 10291                        ;static struct subrecord_SuperInterseg1 *DecodeSup
                    erInterseg1(unsigned char *data, unsigned char *lconst, int 
                    lconst_length, BYTE *page_rtn, int *length_rtn, struct omf_s
                    egment *current_segment)
 10292                        ;{
 10293                        	.line	1482
 10294                        	.line	1483
 10295                        	LOADER
 10296                        	func
 10297                        	.function	1483
  Thu Dec  3 2020 22:25                                                Page 191


 10298                        ~~DecodeSuperInterseg1:
 10299                        	longa	on
 10300                        	longi	on
 10301 09:9D31: 3B           	tsc
 10302 09:9D32: 38           	sec
 10303 09:9D33: E9 20 00     	sbc	#L365
 10304 09:9D36: 1B           	tcs
 10305 09:9D37: 0B           	phd
 10306 09:9D38: 5B           	tcd
 10307             00000004   data_0	set	4
 10308             00000008   lconst_0	set	8
 10309             0000000C   lconst_length_0	set	12
 10310             0000000E   page_rtn_0	set	14
 10311             00000012   length_rtn_0	set	18
 10312             00000016   current_segment_0	set	22
 10313                        	.block	1483
 10314                        ;  int i;
 10315                        ;  WORD one_word;
 10316                        ;  struct subrecord_SuperInterseg1 *current_SuperI
                    nterseg1;
 10317                        ;
 10318                        ;  /* Allocation mémoire */
 10319                        ;  current_SuperInterseg1 = (struct subrecord_Supe
                    rInterseg1 *) k_calloc(1,sizeof(struct subrecord_SuperInters
                    eg1));
 10320             00000000   i_1	set	0
 10321             00000002   one_word_1	set	2
 10322             00000004   current_SuperInterseg1_1	set	4
 10323                        	.sym	i,0,5,1,16
 10324                        	.sym	one_word,2,5,1,16
 10325                        	.sym	current_SuperInterseg1,4,138,1,32,70
 10326                        	.sym	data,4,142,6,32
 10327                        	.sym	lconst,8,142,6,32
 10328                        	.sym	lconst_length,12,5,6,16
 10329                        	.sym	page_rtn,14,142,6,32
 10330                        	.sym	length_rtn,18,133,6,32
 10331                        	.sym	current_segment,22,138,6,32,65
 10332                        	.line	1489
 10333 09:9D39: F4 13 0A     	pea	#<$a13
 10334 09:9D3C: F4 01 00     	pea	#<$1
 10335 09:9D3F: 22 xx xx xx  	jsl	~~k_calloc
 10336 09:9D43: 85 1D        	sta	<L366+current_SuperInterseg1_1
 10337 09:9D45: 86 1F        	stx	<L366+current_SuperInterseg1_1+2
 10338                        ;  if(current_SuperInterseg1 == NULL)
 10339                        	.line	1490
 10340                        ;    {
 10341 09:9D47: A5 1D        	lda	<L366+current_SuperInterseg1_1
 10342 09:9D49: 05 1F        	ora	<L366+current_SuperInterseg1_1+2
 10343 09:9D4B: F0 03        	beq	L368
 10344 09:9D4D: 82 19 00     	brl	L10256
 10345                        L368:
 10346                        	.line	1491
 10347                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg1.\n");
 10348                        ;      return(NULL);
 10349                        	.line	1493
 10350 09:9D50: A9 00 00     	lda	#$0
 10351 09:9D53: AA           	tax
  Thu Dec  3 2020 22:25                                                Page 192


 10352 09:9D54: A9 00 00     	lda	#$0
 10353                        L369:
 10354 09:9D57: A8           	tay
 10355 09:9D58: A5 22        	lda	<L365+2
 10356 09:9D5A: 85 38        	sta	<L365+2+22
 10357 09:9D5C: A5 21        	lda	<L365+1
 10358 09:9D5E: 85 37        	sta	<L365+1+22
 10359 09:9D60: 2B           	pld
 10360 09:9D61: 3B           	tsc
 10361 09:9D62: 18           	clc
 10362 09:9D63: 69 36 00     	adc	#L365+22
 10363 09:9D66: 1B           	tcs
 10364 09:9D67: 98           	tya
 10365 09:9D68: 6B           	rtl
 10366                        ;    }
 10367                        	.line	1494
 10368                        ;
 10369                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 10370                        ;  current_SuperInterseg1->Count = data[0];
 10371                        L10256:
 10372                        	.line	1497
 10373 09:9D69: E2 20        	sep	#$20
 10374                        	longa	off
 10375 09:9D6B: A7 24        	lda	[<L365+data_0]
 10376 09:9D6D: A0 08 00     	ldy	#$8
 10377 09:9D70: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10378 09:9D72: C2 20        	rep	#$20
 10379                        	longa	on
 10380                        ;
 10381                        ;  /** Saut de Page **/
 10382                        ;  if((current_SuperInterseg1->Count & 0x80) == 0x
                    80)
 10383                        	.line	1500
 10384                        ;    {
 10385 09:9D74: A0 08 00     	ldy	#$8
 10386 09:9D77: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10387 09:9D79: 29 80 00     	and	#<$80
 10388 09:9D7C: 85 01        	sta	<R0
 10389 09:9D7E: A5 01        	lda	<R0
 10390 09:9D80: C9 80 00     	cmp	#<$80
 10391 09:9D83: F0 03        	beq	L370
 10392 09:9D85: 82 24 00     	brl	L10257
 10393                        L370:
 10394                        	.line	1501
 10395                        ;      /* On saute X pages */
 10396                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg1->Count & 0x7F);
 10397                        	.line	1503
 10398 09:9D88: E2 20        	sep	#$20
 10399                        	longa	off
 10400 09:9D8A: A0 08 00     	ldy	#$8
 10401 09:9D8D: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10402 09:9D8F: 29 7F        	and	#<$7f
 10403 09:9D91: 85 01        	sta	<R0
 10404 09:9D93: C2 20        	rep	#$20
 10405                        	longa	on
 10406 09:9D95: E2 20        	sep	#$20
 10407                        	longa	off
  Thu Dec  3 2020 22:25                                                Page 193


 10408 09:9D97: 18           	clc
 10409 09:9D98: A7 2E        	lda	[<L365+page_rtn_0]
 10410 09:9D9A: 65 01        	adc	<R0
 10411 09:9D9C: C2 20        	rep	#$20
 10412                        	longa	on
 10413 09:9D9E: E2 20        	sep	#$20
 10414                        	longa	off
 10415 09:9DA0: 87 2E        	sta	[<L365+page_rtn_0]
 10416 09:9DA2: C2 20        	rep	#$20
 10417                        	longa	on
 10418                        ;
 10419                        ;      /* Longueur du SubRecord */
 10420                        ;      *length_rtn = 1;
 10421                        	.line	1506
 10422 09:9DA4: A9 01 00     	lda	#$1
 10423 09:9DA7: 87 32        	sta	[<L365+length_rtn_0]
 10424                        ;    }
 10425                        	.line	1507
 10426                        ;  else
 10427 09:9DA9: 82 BD 03     	brl	L10258
 10428                        L10257:
 10429                        ;    {
 10430                        	.line	1509
 10431                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
 10432                        ;      current_SuperInterseg1->ByteCnt = 0x03;
 10433                        	.line	1511
 10434 09:9DAC: E2 20        	sep	#$20
 10435                        	longa	off
 10436 09:9DAE: A9 03        	lda	#$3
 10437 09:9DB0: A0 09 00     	ldy	#$9
 10438 09:9DB3: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10439 09:9DB5: C2 20        	rep	#$20
 10440                        	longa	on
 10441                        ;
 10442                        ;      /* Opérations >> ou << = Toujours à 0  */
 10443                        ;      current_SuperInterseg1->BitShiftCnt = 0x00;
 10444                        	.line	1514
 10445 09:9DB7: E2 20        	sep	#$20
 10446                        	longa	off
 10447 09:9DB9: A9 00        	lda	#$0
 10448 09:9DBB: A0 0A 00     	ldy	#$a
 10449 09:9DBE: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10450 09:9DC0: C2 20        	rep	#$20
 10451                        	longa	on
 10452                        ;
 10453                        ;      /* File Number toujours à 1 */
 10454                        ;      current_SuperInterseg1->FileNum = 1;
 10455                        	.line	1517
 10456 09:9DC2: A9 01 00     	lda	#$1
 10457 09:9DC5: A0 0B 00     	ldy	#$b
 10458 09:9DC8: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10459                        ;
 10460                        ;      /* Nombre d'adresse */
 10461                        ;      current_SuperInterseg1->nb_address = curren
                    t_SuperInterseg1->Count + 1;
 10462                        	.line	1520
 10463 09:9DCA: A0 08 00     	ldy	#$8
  Thu Dec  3 2020 22:25                                                Page 194


 10464 09:9DCD: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10465 09:9DCF: 29 FF 00     	and	#$ff
 10466 09:9DD2: 85 01        	sta	<R0
 10467 09:9DD4: A5 01        	lda	<R0
 10468 09:9DD6: 1A           	ina
 10469 09:9DD7: A0 0D 00     	ldy	#$d
 10470 09:9DDA: 97 1D        	sta	[<L366+current_SuperInterseg1_1],Y
 10471                        ;
 10472                        ;      /** Copie les adresses **/
 10473                        ;      for(i=0; i<current_SuperInterseg1->nb_addre
                    ss; i++)
 10474                        	.line	1523
 10475 09:9DDC: 64 19        	stz	<L366+i_1
 10476 09:9DDE: 82 61 03     	brl	L10262
 10477                        L10261:
 10478                        ;        {
 10479                        	.line	1524
 10480                        ;          /* Décode OffsetPath et OffsetReference
                     */
 10481                        ;          current_SuperInterseg1->OffsetPatch[i] 
                    = ((WORD)(*page_rtn)) << 8 | data[1+i];
 10482                        	.line	1526
 10483 09:9DE1: A0 00 00     	ldy	#$0
 10484 09:9DE4: A5 19        	lda	<L366+i_1
 10485 09:9DE6: 10 01        	bpl	L371
 10486 09:9DE8: 88           	dey
 10487                        L371:
 10488 09:9DE9: 85 05        	sta	<R1
 10489 09:9DEB: 84 07        	sty	<R1+2
 10490 09:9DED: D4 07        	pei	<R1+2
 10491 09:9DEF: D4 05        	pei	<R1
 10492 09:9DF1: A9 02 00     	lda	#$2
 10493                        	xref	~~~lasl
 10494 09:9DF4: 22 xx xx xx  	jsl	~~~lasl
 10495 09:9DF8: 85 01        	sta	<R0
 10496 09:9DFA: 86 03        	stx	<R0+2
 10497 09:9DFC: 18           	clc
 10498 09:9DFD: A9 0F 00     	lda	#$f
 10499 09:9E00: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10500 09:9E02: 85 09        	sta	<R2
 10501 09:9E04: A9 00 00     	lda	#$0
 10502 09:9E07: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10503 09:9E09: 85 0B        	sta	<R2+2
 10504 09:9E0B: 18           	clc
 10505 09:9E0C: A5 09        	lda	<R2
 10506 09:9E0E: 65 01        	adc	<R0
 10507 09:9E10: 85 0D        	sta	<R3
 10508 09:9E12: A5 0B        	lda	<R2+2
 10509 09:9E14: 65 03        	adc	<R0+2
 10510 09:9E16: 85 0F        	sta	<R3+2
 10511 09:9E18: A5 19        	lda	<L366+i_1
 10512 09:9E1A: 1A           	ina
 10513 09:9E1B: 85 01        	sta	<R0
 10514 09:9E1D: A4 01        	ldy	<R0
 10515 09:9E1F: B7 24        	lda	[<L365+data_0],Y
 10516 09:9E21: 29 FF 00     	and	#$ff
 10517 09:9E24: 85 09        	sta	<R2
 10518 09:9E26: A7 2E        	lda	[<L365+page_rtn_0]
  Thu Dec  3 2020 22:25                                                Page 195


 10519 09:9E28: 29 FF 00     	and	#$ff
 10520 09:9E2B: 85 15        	sta	<21
 10521 09:9E2D: A5 15        	lda	<21
 10522 09:9E2F: EB           	xba
 10523 09:9E30: 29 00 FF     	and	#$ff00
 10524 09:9E33: 85 11        	sta	<17
 10525 09:9E35: A5 11        	lda	<17
 10526 09:9E37: 05 09        	ora	<R2
 10527 09:9E39: 85 15        	sta	<21
 10528 09:9E3B: A0 00 00     	ldy	#$0
 10529 09:9E3E: A5 15        	lda	<21
 10530 09:9E40: 10 01        	bpl	L372
 10531 09:9E42: 88           	dey
 10532                        L372:
 10533 09:9E43: 85 09        	sta	<R2
 10534 09:9E45: 84 0B        	sty	<R2+2
 10535 09:9E47: A5 09        	lda	<R2
 10536 09:9E49: 87 0D        	sta	[<R3]
 10537 09:9E4B: A5 0B        	lda	<R2+2
 10538 09:9E4D: A0 02 00     	ldy	#$2
 10539 09:9E50: 97 0D        	sta	[<R3],Y
 10540                        ;          
 10541                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 10542                        ;          if(current_SuperInterseg1->OffsetPatch[
                    i] > (DWORD) lconst_length)
 10543                        	.line	1529
 10544                        ;            {
 10545 09:9E52: A0 00 00     	ldy	#$0
 10546 09:9E55: A5 2C        	lda	<L365+lconst_length_0
 10547 09:9E57: 10 01        	bpl	L373
 10548 09:9E59: 88           	dey
 10549                        L373:
 10550 09:9E5A: 85 01        	sta	<R0
 10551 09:9E5C: 84 03        	sty	<R0+2
 10552 09:9E5E: A0 00 00     	ldy	#$0
 10553 09:9E61: A5 19        	lda	<L366+i_1
 10554 09:9E63: 10 01        	bpl	L374
 10555 09:9E65: 88           	dey
 10556                        L374:
 10557 09:9E66: 85 09        	sta	<R2
 10558 09:9E68: 84 0B        	sty	<R2+2
 10559 09:9E6A: D4 0B        	pei	<R2+2
 10560 09:9E6C: D4 09        	pei	<R2
 10561 09:9E6E: A9 02 00     	lda	#$2
 10562                        	xref	~~~lasl
 10563 09:9E71: 22 xx xx xx  	jsl	~~~lasl
 10564 09:9E75: 85 05        	sta	<R1
 10565 09:9E77: 86 07        	stx	<R1+2
 10566 09:9E79: 18           	clc
 10567 09:9E7A: A9 0F 00     	lda	#$f
 10568 09:9E7D: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10569 09:9E7F: 85 0D        	sta	<R3
 10570 09:9E81: A9 00 00     	lda	#$0
 10571 09:9E84: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10572 09:9E86: 85 0F        	sta	<R3+2
 10573 09:9E88: 18           	clc
 10574 09:9E89: A5 0D        	lda	<R3
  Thu Dec  3 2020 22:25                                                Page 196


 10575 09:9E8B: 65 05        	adc	<R1
 10576 09:9E8D: 85 11        	sta	<17
 10577 09:9E8F: A5 0F        	lda	<R3+2
 10578 09:9E91: 65 07        	adc	<R1+2
 10579 09:9E93: 85 13        	sta	<17+2
 10580 09:9E95: A5 01        	lda	<R0
 10581 09:9E97: C7 11        	cmp	[<17]
 10582 09:9E99: A5 03        	lda	<R0+2
 10583 09:9E9B: A0 02 00     	ldy	#$2
 10584 09:9E9E: F7 11        	sbc	[<17],Y
 10585 09:9EA0: 90 03        	bcc	L375
 10586 09:9EA2: 82 83 00     	brl	L10263
 10587                        L375:
 10588                        	.line	1530
 10589                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg1 for Offset %04X in Segment #%02X.\n
                    ",current_SuperInterseg1->OffsetPatch[i],current_segment->he
                    ader.SegNum);
 10590                        ;              current_SuperInterseg1->OffsetRefer
                    ence[i] = 0xFFFF;   /* Erreur */
 10591                        	.line	1532
 10592 09:9EA5: A0 00 00     	ldy	#$0
 10593 09:9EA8: A5 19        	lda	<L366+i_1
 10594 09:9EAA: 10 01        	bpl	L376
 10595 09:9EAC: 88           	dey
 10596                        L376:
 10597 09:9EAD: 85 05        	sta	<R1
 10598 09:9EAF: 84 07        	sty	<R1+2
 10599 09:9EB1: D4 07        	pei	<R1+2
 10600 09:9EB3: D4 05        	pei	<R1
 10601 09:9EB5: A9 02 00     	lda	#$2
 10602                        	xref	~~~lasl
 10603 09:9EB8: 22 xx xx xx  	jsl	~~~lasl
 10604 09:9EBC: 85 01        	sta	<R0
 10605 09:9EBE: 86 03        	stx	<R0+2
 10606 09:9EC0: 18           	clc
 10607 09:9EC1: A9 0F 04     	lda	#$40f
 10608 09:9EC4: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10609 09:9EC6: 85 09        	sta	<R2
 10610 09:9EC8: A9 00 00     	lda	#$0
 10611 09:9ECB: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10612 09:9ECD: 85 0B        	sta	<R2+2
 10613 09:9ECF: 18           	clc
 10614 09:9ED0: A5 09        	lda	<R2
 10615 09:9ED2: 65 01        	adc	<R0
 10616 09:9ED4: 85 0D        	sta	<R3
 10617 09:9ED6: A5 0B        	lda	<R2+2
 10618 09:9ED8: 65 03        	adc	<R0+2
 10619 09:9EDA: 85 0F        	sta	<R3+2
 10620 09:9EDC: A9 FF FF     	lda	#$ffff
 10621 09:9EDF: 87 0D        	sta	[<R3]
 10622 09:9EE1: A9 00 00     	lda	#$0
 10623 09:9EE4: A0 02 00     	ldy	#$2
 10624 09:9EE7: 97 0D        	sta	[<R3],Y
 10625                        ;              current_SuperInterseg1->SegNum[i] =
                     0xFF;              /* Erreur */
 10626                        	.line	1533
 10627 09:9EE9: A0 00 00     	ldy	#$0
  Thu Dec  3 2020 22:25                                                Page 197


 10628 09:9EEC: A5 19        	lda	<L366+i_1
 10629 09:9EEE: 10 01        	bpl	L377
 10630 09:9EF0: 88           	dey
 10631                        L377:
 10632 09:9EF1: 85 05        	sta	<R1
 10633 09:9EF3: 84 07        	sty	<R1+2
 10634 09:9EF5: D4 07        	pei	<R1+2
 10635 09:9EF7: D4 05        	pei	<R1
 10636 09:9EF9: A9 01 00     	lda	#$1
 10637                        	xref	~~~lasl
 10638 09:9EFC: 22 xx xx xx  	jsl	~~~lasl
 10639 09:9F00: 85 01        	sta	<R0
 10640 09:9F02: 86 03        	stx	<R0+2
 10641 09:9F04: 18           	clc
 10642 09:9F05: A9 0F 08     	lda	#$80f
 10643 09:9F08: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10644 09:9F0A: 85 09        	sta	<R2
 10645 09:9F0C: A9 00 00     	lda	#$0
 10646 09:9F0F: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10647 09:9F11: 85 0B        	sta	<R2+2
 10648 09:9F13: 18           	clc
 10649 09:9F14: A5 09        	lda	<R2
 10650 09:9F16: 65 01        	adc	<R0
 10651 09:9F18: 85 0D        	sta	<R3
 10652 09:9F1A: A5 0B        	lda	<R2+2
 10653 09:9F1C: 65 03        	adc	<R0+2
 10654 09:9F1E: 85 0F        	sta	<R3+2
 10655 09:9F20: A9 FF 00     	lda	#$ff
 10656 09:9F23: 87 0D        	sta	[<R3]
 10657                        ;            }
 10658                        	.line	1534
 10659                        ;          else
 10660 09:9F25: 82 45 01     	brl	L10264
 10661                        L10263:
 10662                        ;            {          
 10663                        	.line	1536
 10664                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg1->OffsetPatch[i]],sizeof(WORD));
 10665                        	.line	1537
 10666 09:9F28: F4 02 00     	pea	#<$2
 10667 09:9F2B: A0 00 00     	ldy	#$0
 10668 09:9F2E: A5 19        	lda	<L366+i_1
 10669 09:9F30: 10 01        	bpl	L378
 10670 09:9F32: 88           	dey
 10671                        L378:
 10672 09:9F33: 85 05        	sta	<R1
 10673 09:9F35: 84 07        	sty	<R1+2
 10674 09:9F37: D4 07        	pei	<R1+2
 10675 09:9F39: D4 05        	pei	<R1
 10676 09:9F3B: A9 02 00     	lda	#$2
 10677                        	xref	~~~lasl
 10678 09:9F3E: 22 xx xx xx  	jsl	~~~lasl
 10679 09:9F42: 85 01        	sta	<R0
 10680 09:9F44: 86 03        	stx	<R0+2
 10681 09:9F46: 18           	clc
 10682 09:9F47: A9 0F 00     	lda	#$f
 10683 09:9F4A: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10684 09:9F4C: 85 09        	sta	<R2
  Thu Dec  3 2020 22:25                                                Page 198


 10685 09:9F4E: A9 00 00     	lda	#$0
 10686 09:9F51: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10687 09:9F53: 85 0B        	sta	<R2+2
 10688 09:9F55: 18           	clc
 10689 09:9F56: A5 09        	lda	<R2
 10690 09:9F58: 65 01        	adc	<R0
 10691 09:9F5A: 85 0D        	sta	<R3
 10692 09:9F5C: A5 0B        	lda	<R2+2
 10693 09:9F5E: 65 03        	adc	<R0+2
 10694 09:9F60: 85 0F        	sta	<R3+2
 10695 09:9F62: 18           	clc
 10696 09:9F63: A5 28        	lda	<L365+lconst_0
 10697 09:9F65: 67 0D        	adc	[<R3]
 10698 09:9F67: 85 01        	sta	<R0
 10699 09:9F69: A5 2A        	lda	<L365+lconst_0+2
 10700 09:9F6B: A0 02 00     	ldy	#$2
 10701 09:9F6E: 77 0D        	adc	[<R3],Y
 10702 09:9F70: 85 03        	sta	<R0+2
 10703 09:9F72: D4 03        	pei	<R0+2
 10704 09:9F74: D4 01        	pei	<R0
 10705 09:9F76: F4 00 00     	pea	#0
 10706 09:9F79: 18           	clc
 10707 09:9F7A: 7B           	tdc
 10708 09:9F7B: 69 1B 00     	adc	#<L366+one_word_1
 10709 09:9F7E: 48           	pha
 10710 09:9F7F: 22 xx xx xx  	jsl	~~memcpy
 10711                        ;              current_SuperInterseg1->OffsetRefer
                    ence[i] = (DWORD) one_word;
 10712                        	.line	1538
 10713 09:9F83: A0 00 00     	ldy	#$0
 10714 09:9F86: A5 19        	lda	<L366+i_1
 10715 09:9F88: 10 01        	bpl	L379
 10716 09:9F8A: 88           	dey
 10717                        L379:
 10718 09:9F8B: 85 05        	sta	<R1
 10719 09:9F8D: 84 07        	sty	<R1+2
 10720 09:9F8F: D4 07        	pei	<R1+2
 10721 09:9F91: D4 05        	pei	<R1
 10722 09:9F93: A9 02 00     	lda	#$2
 10723                        	xref	~~~lasl
 10724 09:9F96: 22 xx xx xx  	jsl	~~~lasl
 10725 09:9F9A: 85 01        	sta	<R0
 10726 09:9F9C: 86 03        	stx	<R0+2
 10727 09:9F9E: 18           	clc
 10728 09:9F9F: A9 0F 04     	lda	#$40f
 10729 09:9FA2: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10730 09:9FA4: 85 09        	sta	<R2
 10731 09:9FA6: A9 00 00     	lda	#$0
 10732 09:9FA9: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10733 09:9FAB: 85 0B        	sta	<R2+2
 10734 09:9FAD: 18           	clc
 10735 09:9FAE: A5 09        	lda	<R2
 10736 09:9FB0: 65 01        	adc	<R0
 10737 09:9FB2: 85 0D        	sta	<R3
 10738 09:9FB4: A5 0B        	lda	<R2+2
 10739 09:9FB6: 65 03        	adc	<R0+2
 10740 09:9FB8: 85 0F        	sta	<R3+2
 10741 09:9FBA: A0 00 00     	ldy	#$0
  Thu Dec  3 2020 22:25                                                Page 199


 10742 09:9FBD: A5 1B        	lda	<L366+one_word_1
 10743 09:9FBF: 10 01        	bpl	L380
 10744 09:9FC1: 88           	dey
 10745                        L380:
 10746 09:9FC2: 85 01        	sta	<R0
 10747 09:9FC4: 84 03        	sty	<R0+2
 10748 09:9FC6: A5 01        	lda	<R0
 10749 09:9FC8: 87 0D        	sta	[<R3]
 10750 09:9FCA: A5 03        	lda	<R0+2
 10751 09:9FCC: A0 02 00     	ldy	#$2
 10752 09:9FCF: 97 0D        	sta	[<R3],Y
 10753                        ;              current_SuperInterseg1->SegNum[i] =
                     (WORD) lconst[current_SuperInterseg1->OffsetPatch[i]+2];
 10754                        	.line	1539
 10755 09:9FD1: A0 00 00     	ldy	#$0
 10756 09:9FD4: A5 19        	lda	<L366+i_1
 10757 09:9FD6: 10 01        	bpl	L381
 10758 09:9FD8: 88           	dey
 10759                        L381:
 10760 09:9FD9: 85 05        	sta	<R1
 10761 09:9FDB: 84 07        	sty	<R1+2
 10762 09:9FDD: D4 07        	pei	<R1+2
 10763 09:9FDF: D4 05        	pei	<R1
 10764 09:9FE1: A9 01 00     	lda	#$1
 10765                        	xref	~~~lasl
 10766 09:9FE4: 22 xx xx xx  	jsl	~~~lasl
 10767 09:9FE8: 85 01        	sta	<R0
 10768 09:9FEA: 86 03        	stx	<R0+2
 10769 09:9FEC: 18           	clc
 10770 09:9FED: A9 0F 08     	lda	#$80f
 10771 09:9FF0: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10772 09:9FF2: 85 09        	sta	<R2
 10773 09:9FF4: A9 00 00     	lda	#$0
 10774 09:9FF7: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10775 09:9FF9: 85 0B        	sta	<R2+2
 10776 09:9FFB: 18           	clc
 10777 09:9FFC: A5 09        	lda	<R2
 10778 09:9FFE: 65 01        	adc	<R0
 10779 09:A000: 85 0D        	sta	<R3
 10780 09:A002: A5 0B        	lda	<R2+2
 10781 09:A004: 65 03        	adc	<R0+2
 10782 09:A006: 85 0F        	sta	<R3+2
 10783 09:A008: A0 00 00     	ldy	#$0
 10784 09:A00B: A5 19        	lda	<L366+i_1
 10785 09:A00D: 10 01        	bpl	L382
 10786 09:A00F: 88           	dey
 10787                        L382:
 10788 09:A010: 85 09        	sta	<R2
 10789 09:A012: 84 0B        	sty	<R2+2
 10790 09:A014: D4 0B        	pei	<R2+2
 10791 09:A016: D4 09        	pei	<R2
 10792 09:A018: A9 02 00     	lda	#$2
 10793                        	xref	~~~lasl
 10794 09:A01B: 22 xx xx xx  	jsl	~~~lasl
 10795 09:A01F: 85 01        	sta	<R0
 10796 09:A021: 86 03        	stx	<R0+2
 10797 09:A023: 18           	clc
 10798 09:A024: A9 0F 00     	lda	#$f
  Thu Dec  3 2020 22:25                                                Page 200


 10799 09:A027: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10800 09:A029: 85 11        	sta	<17
 10801 09:A02B: A9 00 00     	lda	#$0
 10802 09:A02E: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10803 09:A030: 85 13        	sta	<17+2
 10804 09:A032: 18           	clc
 10805 09:A033: A5 11        	lda	<17
 10806 09:A035: 65 01        	adc	<R0
 10807 09:A037: 85 15        	sta	<21
 10808 09:A039: A5 13        	lda	<17+2
 10809 09:A03B: 65 03        	adc	<R0+2
 10810 09:A03D: 85 17        	sta	<21+2
 10811 09:A03F: A7 15        	lda	[<21]
 10812 09:A041: 85 01        	sta	<R0
 10813 09:A043: A0 02 00     	ldy	#$2
 10814 09:A046: B7 15        	lda	[<21],Y
 10815 09:A048: 85 03        	sta	<R0+2
 10816 09:A04A: 18           	clc
 10817 09:A04B: A9 02 00     	lda	#$2
 10818 09:A04E: 65 28        	adc	<L365+lconst_0
 10819 09:A050: 85 11        	sta	<17
 10820 09:A052: A9 00 00     	lda	#$0
 10821 09:A055: 65 2A        	adc	<L365+lconst_0+2
 10822 09:A057: 85 13        	sta	<17+2
 10823 09:A059: 18           	clc
 10824 09:A05A: A5 11        	lda	<17
 10825 09:A05C: 65 01        	adc	<R0
 10826 09:A05E: 85 15        	sta	<21
 10827 09:A060: A5 13        	lda	<17+2
 10828 09:A062: 65 03        	adc	<R0+2
 10829 09:A064: 85 17        	sta	<21+2
 10830 09:A066: A7 15        	lda	[<21]
 10831 09:A068: 29 FF 00     	and	#$ff
 10832 09:A06B: 87 0D        	sta	[<R3]
 10833                        ;            }
 10834                        	.line	1540
 10835                        L10264:
 10836                        ;            
 10837                        ;          /* Conserve ce INTERSEG */
 10838                        ;          AddInterseg(current_SuperInterseg1->Byt
                    eCnt,current_SuperInterseg1->BitShiftCnt,current_SuperInters
                    eg1->OffsetPatch[i],current_SuperInterseg1->OffsetReference[
                    i],current_SuperInterseg1->FileNum,current_SuperInterseg1->S
                    egNum[i],RECORD_SUPER_INTERSEG1);
 10839                        	.line	1543
 10840 09:A06D: F4 07 00     	pea	#<$7
 10841 09:A070: A0 00 00     	ldy	#$0
 10842 09:A073: A5 19        	lda	<L366+i_1
 10843 09:A075: 10 01        	bpl	L383
 10844 09:A077: 88           	dey
 10845                        L383:
 10846 09:A078: 85 05        	sta	<R1
 10847 09:A07A: 84 07        	sty	<R1+2
 10848 09:A07C: D4 07        	pei	<R1+2
 10849 09:A07E: D4 05        	pei	<R1
 10850 09:A080: A9 01 00     	lda	#$1
 10851                        	xref	~~~lasl
 10852 09:A083: 22 xx xx xx  	jsl	~~~lasl
  Thu Dec  3 2020 22:25                                                Page 201


 10853 09:A087: 85 01        	sta	<R0
 10854 09:A089: 86 03        	stx	<R0+2
 10855 09:A08B: 18           	clc
 10856 09:A08C: A9 0F 08     	lda	#$80f
 10857 09:A08F: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10858 09:A091: 85 09        	sta	<R2
 10859 09:A093: A9 00 00     	lda	#$0
 10860 09:A096: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10861 09:A098: 85 0B        	sta	<R2+2
 10862 09:A09A: 18           	clc
 10863 09:A09B: A5 09        	lda	<R2
 10864 09:A09D: 65 01        	adc	<R0
 10865 09:A09F: 85 0D        	sta	<R3
 10866 09:A0A1: A5 0B        	lda	<R2+2
 10867 09:A0A3: 65 03        	adc	<R0+2
 10868 09:A0A5: 85 0F        	sta	<R3+2
 10869 09:A0A7: A7 0D        	lda	[<R3]
 10870 09:A0A9: 48           	pha
 10871 09:A0AA: A0 0B 00     	ldy	#$b
 10872 09:A0AD: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10873 09:A0AF: 48           	pha
 10874 09:A0B0: A0 00 00     	ldy	#$0
 10875 09:A0B3: A5 19        	lda	<L366+i_1
 10876 09:A0B5: 10 01        	bpl	L384
 10877 09:A0B7: 88           	dey
 10878                        L384:
 10879 09:A0B8: 85 09        	sta	<R2
 10880 09:A0BA: 84 0B        	sty	<R2+2
 10881 09:A0BC: D4 0B        	pei	<R2+2
 10882 09:A0BE: D4 09        	pei	<R2
 10883 09:A0C0: A9 02 00     	lda	#$2
 10884                        	xref	~~~lasl
 10885 09:A0C3: 22 xx xx xx  	jsl	~~~lasl
 10886 09:A0C7: 85 01        	sta	<R0
 10887 09:A0C9: 86 03        	stx	<R0+2
 10888 09:A0CB: 18           	clc
 10889 09:A0CC: A9 0F 04     	lda	#$40f
 10890 09:A0CF: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10891 09:A0D1: 85 0D        	sta	<R3
 10892 09:A0D3: A9 00 00     	lda	#$0
 10893 09:A0D6: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10894 09:A0D8: 85 0F        	sta	<R3+2
 10895 09:A0DA: 18           	clc
 10896 09:A0DB: A5 0D        	lda	<R3
 10897 09:A0DD: 65 01        	adc	<R0
 10898 09:A0DF: 85 11        	sta	<17
 10899 09:A0E1: A5 0F        	lda	<R3+2
 10900 09:A0E3: 65 03        	adc	<R0+2
 10901 09:A0E5: 85 13        	sta	<17+2
 10902 09:A0E7: A0 02 00     	ldy	#$2
 10903 09:A0EA: B7 11        	lda	[<17],Y
 10904 09:A0EC: 48           	pha
 10905 09:A0ED: A7 11        	lda	[<17]
 10906 09:A0EF: 48           	pha
 10907 09:A0F0: A0 00 00     	ldy	#$0
 10908 09:A0F3: A5 19        	lda	<L366+i_1
 10909 09:A0F5: 10 01        	bpl	L385
 10910 09:A0F7: 88           	dey
  Thu Dec  3 2020 22:25                                                Page 202


 10911                        L385:
 10912 09:A0F8: 85 0D        	sta	<R3
 10913 09:A0FA: 84 0F        	sty	<R3+2
 10914 09:A0FC: D4 0F        	pei	<R3+2
 10915 09:A0FE: D4 0D        	pei	<R3
 10916 09:A100: A9 02 00     	lda	#$2
 10917                        	xref	~~~lasl
 10918 09:A103: 22 xx xx xx  	jsl	~~~lasl
 10919 09:A107: 85 01        	sta	<R0
 10920 09:A109: 86 03        	stx	<R0+2
 10921 09:A10B: 18           	clc
 10922 09:A10C: A9 0F 00     	lda	#$f
 10923 09:A10F: 65 1D        	adc	<L366+current_SuperInterseg1_1
 10924 09:A111: 85 11        	sta	<17
 10925 09:A113: A9 00 00     	lda	#$0
 10926 09:A116: 65 1F        	adc	<L366+current_SuperInterseg1_1+2
 10927 09:A118: 85 13        	sta	<17+2
 10928 09:A11A: 18           	clc
 10929 09:A11B: A5 11        	lda	<17
 10930 09:A11D: 65 01        	adc	<R0
 10931 09:A11F: 85 15        	sta	<21
 10932 09:A121: A5 13        	lda	<17+2
 10933 09:A123: 65 03        	adc	<R0+2
 10934 09:A125: 85 17        	sta	<21+2
 10935 09:A127: A0 02 00     	ldy	#$2
 10936 09:A12A: B7 15        	lda	[<21],Y
 10937 09:A12C: 48           	pha
 10938 09:A12D: A7 15        	lda	[<21]
 10939 09:A12F: 48           	pha
 10940 09:A130: A0 0A 00     	ldy	#$a
 10941 09:A133: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10942 09:A135: 48           	pha
 10943 09:A136: A0 09 00     	ldy	#$9
 10944 09:A139: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10945 09:A13B: 48           	pha
 10946 09:A13C: 22 A9 AC 09  	jsl	~~AddInterseg
 10947                        ;        }
 10948                        	.line	1544
 10949                        L10259:
 10950 09:A140: E6 19        	inc	<L366+i_1
 10951                        L10262:
 10952 09:A142: 38           	sec
 10953 09:A143: A5 19        	lda	<L366+i_1
 10954 09:A145: A0 0D 00     	ldy	#$d
 10955 09:A148: F7 1D        	sbc	[<L366+current_SuperInterseg1_1],Y
 10956 09:A14A: 70 03        	bvs	L386
 10957 09:A14C: 49 00 80     	eor	#$8000
 10958                        L386:
 10959 09:A14F: 30 03        	bmi	L387
 10960 09:A151: 82 8D FC     	brl	L10261
 10961                        L387:
 10962                        L10260:
 10963                        ;
 10964                        ;      /* Page suivante */
 10965                        ;      *page_rtn = *page_rtn + 1;
 10966                        	.line	1547
 10967 09:A154: E2 20        	sep	#$20
 10968                        	longa	off
  Thu Dec  3 2020 22:25                                                Page 203


 10969 09:A156: A7 2E        	lda	[<L365+page_rtn_0]
 10970 09:A158: 1A           	ina
 10971 09:A159: C2 20        	rep	#$20
 10972                        	longa	on
 10973 09:A15B: E2 20        	sep	#$20
 10974                        	longa	off
 10975 09:A15D: 87 2E        	sta	[<L365+page_rtn_0]
 10976 09:A15F: C2 20        	rep	#$20
 10977                        	longa	on
 10978                        ;
 10979                        ;      /* Longueur du SubRecord */
 10980                        ;      *length_rtn = 1 + current_SuperInterseg1->n
                    b_address*sizeof(BYTE);
 10981                        	.line	1550
 10982 09:A161: A0 0D 00     	ldy	#$d
 10983 09:A164: B7 1D        	lda	[<L366+current_SuperInterseg1_1],Y
 10984 09:A166: 1A           	ina
 10985 09:A167: 87 32        	sta	[<L365+length_rtn_0]
 10986                        ;    }
 10987                        	.line	1551
 10988                        L10258:
 10989                        ;
 10990                        ;  /* Renvoie la structure */
 10991                        ;  return(current_SuperInterseg1);
 10992                        	.line	1554
 10993 09:A169: A6 1F        	ldx	<L366+current_SuperInterseg1_1+2
 10994 09:A16B: A5 1D        	lda	<L366+current_SuperInterseg1_1
 10995 09:A16D: 82 E7 FB     	brl	L369
 10996                        ;}
 10997                        	.line	1555
 10998                        	.endblock	1555
 10999             00000020   L365	equ	32
 11000             00000019   L366	equ	25
 11001 09:A170:              	ends
 11002                        	efunc
 11003                        	.endfunc	1555,25,32
 11004                        	.line	1555
 11005                        ;
 11006                        ;
 11007                        ;/************************************************
                    **************************/
 11008                        ;/*  DecodeSuperInterseg212() :  Décodage d'un Sub
                    Record SuperInterseg212. */
 11009                        ;/************************************************
                    **************************/
 11010                        ;static struct subrecord_SuperInterseg212 *DecodeS
                    uperInterseg212(unsigned char *data, BYTE FileNum, unsigned 
                    char *lconst, int lconst_length, BYTE *page_rtn, int *length
                    _rtn, struct omf_segment *current_segment)
 11011                        ;{
 11012                        	.line	1561
 11013                        	.line	1562
 11014                        	LOADER
 11015                        	func
 11016                        	.function	1562
 11017                        ~~DecodeSuperInterseg212:
 11018                        	longa	on
 11019                        	longi	on
  Thu Dec  3 2020 22:25                                                Page 204


 11020 09:A170: 3B           	tsc
 11021 09:A171: 38           	sec
 11022 09:A172: E9 20 00     	sbc	#L388
 11023 09:A175: 1B           	tcs
 11024 09:A176: 0B           	phd
 11025 09:A177: 5B           	tcd
 11026             00000004   data_0	set	4
 11027             00000008   FileNum_0	set	8
 11028             0000000A   lconst_0	set	10
 11029             0000000E   lconst_length_0	set	14
 11030             00000010   page_rtn_0	set	16
 11031             00000014   length_rtn_0	set	20
 11032             00000018   current_segment_0	set	24
 11033                        	.block	1562
 11034                        ;  int i;
 11035                        ;  WORD one_word;
 11036                        ;  struct subrecord_SuperInterseg212 *current_Supe
                    rInterseg212;
 11037                        ;
 11038                        ;  /* Allocation mémoire */
 11039                        ;  current_SuperInterseg212 = (struct subrecord_Su
                    perInterseg212 *) k_calloc(1,sizeof(struct subrecord_SuperIn
                    terseg212));
 11040             00000000   i_1	set	0
 11041             00000002   one_word_1	set	2
 11042             00000004   current_SuperInterseg212_1	set	4
 11043                        	.sym	i,0,5,1,16
 11044                        	.sym	one_word,2,5,1,16
 11045                        	.sym	current_SuperInterseg212,4,138,1,32,71
 11046                        	.sym	data,4,142,6,32
 11047                        	.sym	FileNum,8,14,6,8
 11048                        	.sym	lconst,10,142,6,32
 11049                        	.sym	lconst_length,14,5,6,16
 11050                        	.sym	page_rtn,16,142,6,32
 11051                        	.sym	length_rtn,20,133,6,32
 11052                        	.sym	current_segment,24,138,6,32,65
 11053                        	.line	1568
 11054 09:A178: F4 13 0A     	pea	#<$a13
 11055 09:A17B: F4 01 00     	pea	#<$1
 11056 09:A17E: 22 xx xx xx  	jsl	~~k_calloc
 11057 09:A182: 85 1D        	sta	<L389+current_SuperInterseg212_1
 11058 09:A184: 86 1F        	stx	<L389+current_SuperInterseg212_1+2
 11059                        ;  if(current_SuperInterseg212 == NULL)
 11060                        	.line	1569
 11061                        ;    {
 11062 09:A186: A5 1D        	lda	<L389+current_SuperInterseg212_1
 11063 09:A188: 05 1F        	ora	<L389+current_SuperInterseg212_1+2
 11064 09:A18A: F0 03        	beq	L391
 11065 09:A18C: 82 19 00     	brl	L10265
 11066                        L391:
 11067                        	.line	1570
 11068                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg212.\n");
 11069                        ;      return(NULL);
 11070                        	.line	1572
 11071 09:A18F: A9 00 00     	lda	#$0
 11072 09:A192: AA           	tax
 11073 09:A193: A9 00 00     	lda	#$0
  Thu Dec  3 2020 22:25                                                Page 205


 11074                        L392:
 11075 09:A196: A8           	tay
 11076 09:A197: A5 22        	lda	<L388+2
 11077 09:A199: 85 3A        	sta	<L388+2+24
 11078 09:A19B: A5 21        	lda	<L388+1
 11079 09:A19D: 85 39        	sta	<L388+1+24
 11080 09:A19F: 2B           	pld
 11081 09:A1A0: 3B           	tsc
 11082 09:A1A1: 18           	clc
 11083 09:A1A2: 69 38 00     	adc	#L388+24
 11084 09:A1A5: 1B           	tcs
 11085 09:A1A6: 98           	tya
 11086 09:A1A7: 6B           	rtl
 11087                        ;    }
 11088                        	.line	1573
 11089                        ;
 11090                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 11091                        ;  current_SuperInterseg212->Count = data[0];
 11092                        L10265:
 11093                        	.line	1576
 11094 09:A1A8: E2 20        	sep	#$20
 11095                        	longa	off
 11096 09:A1AA: A7 24        	lda	[<L388+data_0]
 11097 09:A1AC: A0 08 00     	ldy	#$8
 11098 09:A1AF: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11099 09:A1B1: C2 20        	rep	#$20
 11100                        	longa	on
 11101                        ;
 11102                        ;  /** Saut de Page **/
 11103                        ;  if((current_SuperInterseg212->Count & 0x80) == 
                    0x80)
 11104                        	.line	1579
 11105                        ;    {
 11106 09:A1B3: A0 08 00     	ldy	#$8
 11107 09:A1B6: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11108 09:A1B8: 29 80 00     	and	#<$80
 11109 09:A1BB: 85 01        	sta	<R0
 11110 09:A1BD: A5 01        	lda	<R0
 11111 09:A1BF: C9 80 00     	cmp	#<$80
 11112 09:A1C2: F0 03        	beq	L393
 11113 09:A1C4: 82 24 00     	brl	L10266
 11114                        L393:
 11115                        	.line	1580
 11116                        ;      /* On saute X pages */
 11117                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg212->Count & 0x7F);
 11118                        	.line	1582
 11119 09:A1C7: E2 20        	sep	#$20
 11120                        	longa	off
 11121 09:A1C9: A0 08 00     	ldy	#$8
 11122 09:A1CC: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11123 09:A1CE: 29 7F        	and	#<$7f
 11124 09:A1D0: 85 01        	sta	<R0
 11125 09:A1D2: C2 20        	rep	#$20
 11126                        	longa	on
 11127 09:A1D4: E2 20        	sep	#$20
 11128                        	longa	off
 11129 09:A1D6: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 206


 11130 09:A1D7: A7 30        	lda	[<L388+page_rtn_0]
 11131 09:A1D9: 65 01        	adc	<R0
 11132 09:A1DB: C2 20        	rep	#$20
 11133                        	longa	on
 11134 09:A1DD: E2 20        	sep	#$20
 11135                        	longa	off
 11136 09:A1DF: 87 30        	sta	[<L388+page_rtn_0]
 11137 09:A1E1: C2 20        	rep	#$20
 11138                        	longa	on
 11139                        ;
 11140                        ;      /* Longueur du SubRecord */
 11141                        ;      *length_rtn = 1;
 11142                        	.line	1585
 11143 09:A1E3: A9 01 00     	lda	#$1
 11144 09:A1E6: 87 34        	sta	[<L388+length_rtn_0]
 11145                        ;    }
 11146                        	.line	1586
 11147                        ;  else
 11148 09:A1E8: 82 BF 03     	brl	L10267
 11149                        L10266:
 11150                        ;    {
 11151                        	.line	1588
 11152                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 3 */
 11153                        ;      current_SuperInterseg212->ByteCnt = 0x03;
 11154                        	.line	1590
 11155 09:A1EB: E2 20        	sep	#$20
 11156                        	longa	off
 11157 09:A1ED: A9 03        	lda	#$3
 11158 09:A1EF: A0 09 00     	ldy	#$9
 11159 09:A1F2: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11160 09:A1F4: C2 20        	rep	#$20
 11161                        	longa	on
 11162                        ;
 11163                        ;      /* Opérations >> ou << = Toujours à 0  */
 11164                        ;      current_SuperInterseg212->BitShiftCnt = 0x0
                    0;
 11165                        	.line	1593
 11166 09:A1F6: E2 20        	sep	#$20
 11167                        	longa	off
 11168 09:A1F8: A9 00        	lda	#$0
 11169 09:A1FA: A0 0A 00     	ldy	#$a
 11170 09:A1FD: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11171 09:A1FF: C2 20        	rep	#$20
 11172                        	longa	on
 11173                        ;
 11174                        ;      /* File Number */
 11175                        ;      current_SuperInterseg212->FileNum = FileNum
                    ;
 11176                        	.line	1596
 11177 09:A201: A5 28        	lda	<L388+FileNum_0
 11178 09:A203: 29 FF 00     	and	#$ff
 11179 09:A206: A0 0B 00     	ldy	#$b
 11180 09:A209: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11181                        ;
 11182                        ;      /* Nombre d'adresse */
 11183                        ;      current_SuperInterseg212->nb_address = curr
                    ent_SuperInterseg212->Count + 1;
  Thu Dec  3 2020 22:25                                                Page 207


 11184                        	.line	1599
 11185 09:A20B: A0 08 00     	ldy	#$8
 11186 09:A20E: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11187 09:A210: 29 FF 00     	and	#$ff
 11188 09:A213: 85 01        	sta	<R0
 11189 09:A215: A5 01        	lda	<R0
 11190 09:A217: 1A           	ina
 11191 09:A218: A0 0D 00     	ldy	#$d
 11192 09:A21B: 97 1D        	sta	[<L389+current_SuperInterseg212_1],Y
 11193                        ;
 11194                        ;      /** Copie les adresses **/
 11195                        ;      for(i=0; i<current_SuperInterseg212->nb_add
                    ress; i++)
 11196                        	.line	1602
 11197 09:A21D: 64 19        	stz	<L389+i_1
 11198 09:A21F: 82 61 03     	brl	L10271
 11199                        L10270:
 11200                        ;        {
 11201                        	.line	1603
 11202                        ;          /* Décode OffsetPath et OffsetReference
                     */
 11203                        ;          current_SuperInterseg212->OffsetPatch[i
                    ] = ((WORD)*page_rtn) << 8 | data[1+i];
 11204                        	.line	1605
 11205 09:A222: A0 00 00     	ldy	#$0
 11206 09:A225: A5 19        	lda	<L389+i_1
 11207 09:A227: 10 01        	bpl	L394
 11208 09:A229: 88           	dey
 11209                        L394:
 11210 09:A22A: 85 05        	sta	<R1
 11211 09:A22C: 84 07        	sty	<R1+2
 11212 09:A22E: D4 07        	pei	<R1+2
 11213 09:A230: D4 05        	pei	<R1
 11214 09:A232: A9 02 00     	lda	#$2
 11215                        	xref	~~~lasl
 11216 09:A235: 22 xx xx xx  	jsl	~~~lasl
 11217 09:A239: 85 01        	sta	<R0
 11218 09:A23B: 86 03        	stx	<R0+2
 11219 09:A23D: 18           	clc
 11220 09:A23E: A9 0F 00     	lda	#$f
 11221 09:A241: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11222 09:A243: 85 09        	sta	<R2
 11223 09:A245: A9 00 00     	lda	#$0
 11224 09:A248: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11225 09:A24A: 85 0B        	sta	<R2+2
 11226 09:A24C: 18           	clc
 11227 09:A24D: A5 09        	lda	<R2
 11228 09:A24F: 65 01        	adc	<R0
 11229 09:A251: 85 0D        	sta	<R3
 11230 09:A253: A5 0B        	lda	<R2+2
 11231 09:A255: 65 03        	adc	<R0+2
 11232 09:A257: 85 0F        	sta	<R3+2
 11233 09:A259: A5 19        	lda	<L389+i_1
 11234 09:A25B: 1A           	ina
 11235 09:A25C: 85 01        	sta	<R0
 11236 09:A25E: A4 01        	ldy	<R0
 11237 09:A260: B7 24        	lda	[<L388+data_0],Y
 11238 09:A262: 29 FF 00     	and	#$ff
  Thu Dec  3 2020 22:25                                                Page 208


 11239 09:A265: 85 09        	sta	<R2
 11240 09:A267: A7 30        	lda	[<L388+page_rtn_0]
 11241 09:A269: 29 FF 00     	and	#$ff
 11242 09:A26C: 85 15        	sta	<21
 11243 09:A26E: A5 15        	lda	<21
 11244 09:A270: EB           	xba
 11245 09:A271: 29 00 FF     	and	#$ff00
 11246 09:A274: 85 11        	sta	<17
 11247 09:A276: A5 11        	lda	<17
 11248 09:A278: 05 09        	ora	<R2
 11249 09:A27A: 85 15        	sta	<21
 11250 09:A27C: A0 00 00     	ldy	#$0
 11251 09:A27F: A5 15        	lda	<21
 11252 09:A281: 10 01        	bpl	L395
 11253 09:A283: 88           	dey
 11254                        L395:
 11255 09:A284: 85 09        	sta	<R2
 11256 09:A286: 84 0B        	sty	<R2+2
 11257 09:A288: A5 09        	lda	<R2
 11258 09:A28A: 87 0D        	sta	[<R3]
 11259 09:A28C: A5 0B        	lda	<R2+2
 11260 09:A28E: A0 02 00     	ldy	#$2
 11261 09:A291: 97 0D        	sta	[<R3],Y
 11262                        ;          
 11263                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 11264                        ;          if(current_SuperInterseg212->OffsetPatc
                    h[i] > (DWORD) lconst_length)
 11265                        	.line	1608
 11266                        ;            {
 11267 09:A293: A0 00 00     	ldy	#$0
 11268 09:A296: A5 2E        	lda	<L388+lconst_length_0
 11269 09:A298: 10 01        	bpl	L396
 11270 09:A29A: 88           	dey
 11271                        L396:
 11272 09:A29B: 85 01        	sta	<R0
 11273 09:A29D: 84 03        	sty	<R0+2
 11274 09:A29F: A0 00 00     	ldy	#$0
 11275 09:A2A2: A5 19        	lda	<L389+i_1
 11276 09:A2A4: 10 01        	bpl	L397
 11277 09:A2A6: 88           	dey
 11278                        L397:
 11279 09:A2A7: 85 09        	sta	<R2
 11280 09:A2A9: 84 0B        	sty	<R2+2
 11281 09:A2AB: D4 0B        	pei	<R2+2
 11282 09:A2AD: D4 09        	pei	<R2
 11283 09:A2AF: A9 02 00     	lda	#$2
 11284                        	xref	~~~lasl
 11285 09:A2B2: 22 xx xx xx  	jsl	~~~lasl
 11286 09:A2B6: 85 05        	sta	<R1
 11287 09:A2B8: 86 07        	stx	<R1+2
 11288 09:A2BA: 18           	clc
 11289 09:A2BB: A9 0F 00     	lda	#$f
 11290 09:A2BE: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11291 09:A2C0: 85 0D        	sta	<R3
 11292 09:A2C2: A9 00 00     	lda	#$0
 11293 09:A2C5: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11294 09:A2C7: 85 0F        	sta	<R3+2
  Thu Dec  3 2020 22:25                                                Page 209


 11295 09:A2C9: 18           	clc
 11296 09:A2CA: A5 0D        	lda	<R3
 11297 09:A2CC: 65 05        	adc	<R1
 11298 09:A2CE: 85 11        	sta	<17
 11299 09:A2D0: A5 0F        	lda	<R3+2
 11300 09:A2D2: 65 07        	adc	<R1+2
 11301 09:A2D4: 85 13        	sta	<17+2
 11302 09:A2D6: A5 01        	lda	<R0
 11303 09:A2D8: C7 11        	cmp	[<17]
 11304 09:A2DA: A5 03        	lda	<R0+2
 11305 09:A2DC: A0 02 00     	ldy	#$2
 11306 09:A2DF: F7 11        	sbc	[<17],Y
 11307 09:A2E1: 90 03        	bcc	L398
 11308 09:A2E3: 82 83 00     	brl	L10272
 11309                        L398:
 11310                        	.line	1609
 11311                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg212 for Offset %04X in Segment #%02X.
                    \n",current_SuperInterseg212->OffsetPatch[i],current_segment
                    ->header.SegNum);
 11312                        ;              current_SuperInterseg212->OffsetRef
                    erence[i] = 0xFFFF;   /* Erreur */
 11313                        	.line	1611
 11314 09:A2E6: A0 00 00     	ldy	#$0
 11315 09:A2E9: A5 19        	lda	<L389+i_1
 11316 09:A2EB: 10 01        	bpl	L399
 11317 09:A2ED: 88           	dey
 11318                        L399:
 11319 09:A2EE: 85 05        	sta	<R1
 11320 09:A2F0: 84 07        	sty	<R1+2
 11321 09:A2F2: D4 07        	pei	<R1+2
 11322 09:A2F4: D4 05        	pei	<R1
 11323 09:A2F6: A9 02 00     	lda	#$2
 11324                        	xref	~~~lasl
 11325 09:A2F9: 22 xx xx xx  	jsl	~~~lasl
 11326 09:A2FD: 85 01        	sta	<R0
 11327 09:A2FF: 86 03        	stx	<R0+2
 11328 09:A301: 18           	clc
 11329 09:A302: A9 0F 04     	lda	#$40f
 11330 09:A305: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11331 09:A307: 85 09        	sta	<R2
 11332 09:A309: A9 00 00     	lda	#$0
 11333 09:A30C: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11334 09:A30E: 85 0B        	sta	<R2+2
 11335 09:A310: 18           	clc
 11336 09:A311: A5 09        	lda	<R2
 11337 09:A313: 65 01        	adc	<R0
 11338 09:A315: 85 0D        	sta	<R3
 11339 09:A317: A5 0B        	lda	<R2+2
 11340 09:A319: 65 03        	adc	<R0+2
 11341 09:A31B: 85 0F        	sta	<R3+2
 11342 09:A31D: A9 FF FF     	lda	#$ffff
 11343 09:A320: 87 0D        	sta	[<R3]
 11344 09:A322: A9 00 00     	lda	#$0
 11345 09:A325: A0 02 00     	ldy	#$2
 11346 09:A328: 97 0D        	sta	[<R3],Y
 11347                        ;              current_SuperInterseg212->SegNum[i]
                     = 0xFF;              /* Erreur */
  Thu Dec  3 2020 22:25                                                Page 210


 11348                        	.line	1612
 11349 09:A32A: A0 00 00     	ldy	#$0
 11350 09:A32D: A5 19        	lda	<L389+i_1
 11351 09:A32F: 10 01        	bpl	L400
 11352 09:A331: 88           	dey
 11353                        L400:
 11354 09:A332: 85 05        	sta	<R1
 11355 09:A334: 84 07        	sty	<R1+2
 11356 09:A336: D4 07        	pei	<R1+2
 11357 09:A338: D4 05        	pei	<R1
 11358 09:A33A: A9 01 00     	lda	#$1
 11359                        	xref	~~~lasl
 11360 09:A33D: 22 xx xx xx  	jsl	~~~lasl
 11361 09:A341: 85 01        	sta	<R0
 11362 09:A343: 86 03        	stx	<R0+2
 11363 09:A345: 18           	clc
 11364 09:A346: A9 0F 08     	lda	#$80f
 11365 09:A349: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11366 09:A34B: 85 09        	sta	<R2
 11367 09:A34D: A9 00 00     	lda	#$0
 11368 09:A350: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11369 09:A352: 85 0B        	sta	<R2+2
 11370 09:A354: 18           	clc
 11371 09:A355: A5 09        	lda	<R2
 11372 09:A357: 65 01        	adc	<R0
 11373 09:A359: 85 0D        	sta	<R3
 11374 09:A35B: A5 0B        	lda	<R2+2
 11375 09:A35D: 65 03        	adc	<R0+2
 11376 09:A35F: 85 0F        	sta	<R3+2
 11377 09:A361: A9 FF 00     	lda	#$ff
 11378 09:A364: 87 0D        	sta	[<R3]
 11379                        ;            }
 11380                        	.line	1613
 11381                        ;          else
 11382 09:A366: 82 45 01     	brl	L10273
 11383                        L10272:
 11384                        ;            {
 11385                        	.line	1615
 11386                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg212->OffsetPatch[i]],sizeof(WORD));
 11387                        	.line	1616
 11388 09:A369: F4 02 00     	pea	#<$2
 11389 09:A36C: A0 00 00     	ldy	#$0
 11390 09:A36F: A5 19        	lda	<L389+i_1
 11391 09:A371: 10 01        	bpl	L401
 11392 09:A373: 88           	dey
 11393                        L401:
 11394 09:A374: 85 05        	sta	<R1
 11395 09:A376: 84 07        	sty	<R1+2
 11396 09:A378: D4 07        	pei	<R1+2
 11397 09:A37A: D4 05        	pei	<R1
 11398 09:A37C: A9 02 00     	lda	#$2
 11399                        	xref	~~~lasl
 11400 09:A37F: 22 xx xx xx  	jsl	~~~lasl
 11401 09:A383: 85 01        	sta	<R0
 11402 09:A385: 86 03        	stx	<R0+2
 11403 09:A387: 18           	clc
 11404 09:A388: A9 0F 00     	lda	#$f
  Thu Dec  3 2020 22:25                                                Page 211


 11405 09:A38B: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11406 09:A38D: 85 09        	sta	<R2
 11407 09:A38F: A9 00 00     	lda	#$0
 11408 09:A392: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11409 09:A394: 85 0B        	sta	<R2+2
 11410 09:A396: 18           	clc
 11411 09:A397: A5 09        	lda	<R2
 11412 09:A399: 65 01        	adc	<R0
 11413 09:A39B: 85 0D        	sta	<R3
 11414 09:A39D: A5 0B        	lda	<R2+2
 11415 09:A39F: 65 03        	adc	<R0+2
 11416 09:A3A1: 85 0F        	sta	<R3+2
 11417 09:A3A3: 18           	clc
 11418 09:A3A4: A5 2A        	lda	<L388+lconst_0
 11419 09:A3A6: 67 0D        	adc	[<R3]
 11420 09:A3A8: 85 01        	sta	<R0
 11421 09:A3AA: A5 2C        	lda	<L388+lconst_0+2
 11422 09:A3AC: A0 02 00     	ldy	#$2
 11423 09:A3AF: 77 0D        	adc	[<R3],Y
 11424 09:A3B1: 85 03        	sta	<R0+2
 11425 09:A3B3: D4 03        	pei	<R0+2
 11426 09:A3B5: D4 01        	pei	<R0
 11427 09:A3B7: F4 00 00     	pea	#0
 11428 09:A3BA: 18           	clc
 11429 09:A3BB: 7B           	tdc
 11430 09:A3BC: 69 1B 00     	adc	#<L389+one_word_1
 11431 09:A3BF: 48           	pha
 11432 09:A3C0: 22 xx xx xx  	jsl	~~memcpy
 11433                        ;              current_SuperInterseg212->OffsetRef
                    erence[i] = (DWORD) one_word;
 11434                        	.line	1617
 11435 09:A3C4: A0 00 00     	ldy	#$0
 11436 09:A3C7: A5 19        	lda	<L389+i_1
 11437 09:A3C9: 10 01        	bpl	L402
 11438 09:A3CB: 88           	dey
 11439                        L402:
 11440 09:A3CC: 85 05        	sta	<R1
 11441 09:A3CE: 84 07        	sty	<R1+2
 11442 09:A3D0: D4 07        	pei	<R1+2
 11443 09:A3D2: D4 05        	pei	<R1
 11444 09:A3D4: A9 02 00     	lda	#$2
 11445                        	xref	~~~lasl
 11446 09:A3D7: 22 xx xx xx  	jsl	~~~lasl
 11447 09:A3DB: 85 01        	sta	<R0
 11448 09:A3DD: 86 03        	stx	<R0+2
 11449 09:A3DF: 18           	clc
 11450 09:A3E0: A9 0F 04     	lda	#$40f
 11451 09:A3E3: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11452 09:A3E5: 85 09        	sta	<R2
 11453 09:A3E7: A9 00 00     	lda	#$0
 11454 09:A3EA: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11455 09:A3EC: 85 0B        	sta	<R2+2
 11456 09:A3EE: 18           	clc
 11457 09:A3EF: A5 09        	lda	<R2
 11458 09:A3F1: 65 01        	adc	<R0
 11459 09:A3F3: 85 0D        	sta	<R3
 11460 09:A3F5: A5 0B        	lda	<R2+2
 11461 09:A3F7: 65 03        	adc	<R0+2
  Thu Dec  3 2020 22:25                                                Page 212


 11462 09:A3F9: 85 0F        	sta	<R3+2
 11463 09:A3FB: A0 00 00     	ldy	#$0
 11464 09:A3FE: A5 1B        	lda	<L389+one_word_1
 11465 09:A400: 10 01        	bpl	L403
 11466 09:A402: 88           	dey
 11467                        L403:
 11468 09:A403: 85 01        	sta	<R0
 11469 09:A405: 84 03        	sty	<R0+2
 11470 09:A407: A5 01        	lda	<R0
 11471 09:A409: 87 0D        	sta	[<R3]
 11472 09:A40B: A5 03        	lda	<R0+2
 11473 09:A40D: A0 02 00     	ldy	#$2
 11474 09:A410: 97 0D        	sta	[<R3],Y
 11475                        ;              current_SuperInterseg212->SegNum[i]
                     = (WORD) lconst[current_SuperInterseg212->OffsetPatch[i]+2]
                    ;
 11476                        	.line	1618
 11477 09:A412: A0 00 00     	ldy	#$0
 11478 09:A415: A5 19        	lda	<L389+i_1
 11479 09:A417: 10 01        	bpl	L404
 11480 09:A419: 88           	dey
 11481                        L404:
 11482 09:A41A: 85 05        	sta	<R1
 11483 09:A41C: 84 07        	sty	<R1+2
 11484 09:A41E: D4 07        	pei	<R1+2
 11485 09:A420: D4 05        	pei	<R1
 11486 09:A422: A9 01 00     	lda	#$1
 11487                        	xref	~~~lasl
 11488 09:A425: 22 xx xx xx  	jsl	~~~lasl
 11489 09:A429: 85 01        	sta	<R0
 11490 09:A42B: 86 03        	stx	<R0+2
 11491 09:A42D: 18           	clc
 11492 09:A42E: A9 0F 08     	lda	#$80f
 11493 09:A431: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11494 09:A433: 85 09        	sta	<R2
 11495 09:A435: A9 00 00     	lda	#$0
 11496 09:A438: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11497 09:A43A: 85 0B        	sta	<R2+2
 11498 09:A43C: 18           	clc
 11499 09:A43D: A5 09        	lda	<R2
 11500 09:A43F: 65 01        	adc	<R0
 11501 09:A441: 85 0D        	sta	<R3
 11502 09:A443: A5 0B        	lda	<R2+2
 11503 09:A445: 65 03        	adc	<R0+2
 11504 09:A447: 85 0F        	sta	<R3+2
 11505 09:A449: A0 00 00     	ldy	#$0
 11506 09:A44C: A5 19        	lda	<L389+i_1
 11507 09:A44E: 10 01        	bpl	L405
 11508 09:A450: 88           	dey
 11509                        L405:
 11510 09:A451: 85 09        	sta	<R2
 11511 09:A453: 84 0B        	sty	<R2+2
 11512 09:A455: D4 0B        	pei	<R2+2
 11513 09:A457: D4 09        	pei	<R2
 11514 09:A459: A9 02 00     	lda	#$2
 11515                        	xref	~~~lasl
 11516 09:A45C: 22 xx xx xx  	jsl	~~~lasl
 11517 09:A460: 85 01        	sta	<R0
  Thu Dec  3 2020 22:25                                                Page 213


 11518 09:A462: 86 03        	stx	<R0+2
 11519 09:A464: 18           	clc
 11520 09:A465: A9 0F 00     	lda	#$f
 11521 09:A468: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11522 09:A46A: 85 11        	sta	<17
 11523 09:A46C: A9 00 00     	lda	#$0
 11524 09:A46F: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11525 09:A471: 85 13        	sta	<17+2
 11526 09:A473: 18           	clc
 11527 09:A474: A5 11        	lda	<17
 11528 09:A476: 65 01        	adc	<R0
 11529 09:A478: 85 15        	sta	<21
 11530 09:A47A: A5 13        	lda	<17+2
 11531 09:A47C: 65 03        	adc	<R0+2
 11532 09:A47E: 85 17        	sta	<21+2
 11533 09:A480: A7 15        	lda	[<21]
 11534 09:A482: 85 01        	sta	<R0
 11535 09:A484: A0 02 00     	ldy	#$2
 11536 09:A487: B7 15        	lda	[<21],Y
 11537 09:A489: 85 03        	sta	<R0+2
 11538 09:A48B: 18           	clc
 11539 09:A48C: A9 02 00     	lda	#$2
 11540 09:A48F: 65 2A        	adc	<L388+lconst_0
 11541 09:A491: 85 11        	sta	<17
 11542 09:A493: A9 00 00     	lda	#$0
 11543 09:A496: 65 2C        	adc	<L388+lconst_0+2
 11544 09:A498: 85 13        	sta	<17+2
 11545 09:A49A: 18           	clc
 11546 09:A49B: A5 11        	lda	<17
 11547 09:A49D: 65 01        	adc	<R0
 11548 09:A49F: 85 15        	sta	<21
 11549 09:A4A1: A5 13        	lda	<17+2
 11550 09:A4A3: 65 03        	adc	<R0+2
 11551 09:A4A5: 85 17        	sta	<21+2
 11552 09:A4A7: A7 15        	lda	[<21]
 11553 09:A4A9: 29 FF 00     	and	#$ff
 11554 09:A4AC: 87 0D        	sta	[<R3]
 11555                        ;            }
 11556                        	.line	1619
 11557                        L10273:
 11558                        ;
 11559                        ;          /* Conserve ce INTERSEG */
 11560                        ;          AddInterseg(current_SuperInterseg212->B
                    yteCnt,current_SuperInterseg212->BitShiftCnt,current_SuperIn
                    terseg212->OffsetPatch[i],current_SuperInterseg212->OffsetRe
                    ference[i],current_SuperInterseg212->FileNum,current_SuperIn
                    terseg212->SegNum[i],RECORD_SUPER_INTERSEG212);
 11561                        	.line	1622
 11562 09:A4AE: F4 08 00     	pea	#<$8
 11563 09:A4B1: A0 00 00     	ldy	#$0
 11564 09:A4B4: A5 19        	lda	<L389+i_1
 11565 09:A4B6: 10 01        	bpl	L406
 11566 09:A4B8: 88           	dey
 11567                        L406:
 11568 09:A4B9: 85 05        	sta	<R1
 11569 09:A4BB: 84 07        	sty	<R1+2
 11570 09:A4BD: D4 07        	pei	<R1+2
 11571 09:A4BF: D4 05        	pei	<R1
  Thu Dec  3 2020 22:25                                                Page 214


 11572 09:A4C1: A9 01 00     	lda	#$1
 11573                        	xref	~~~lasl
 11574 09:A4C4: 22 xx xx xx  	jsl	~~~lasl
 11575 09:A4C8: 85 01        	sta	<R0
 11576 09:A4CA: 86 03        	stx	<R0+2
 11577 09:A4CC: 18           	clc
 11578 09:A4CD: A9 0F 08     	lda	#$80f
 11579 09:A4D0: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11580 09:A4D2: 85 09        	sta	<R2
 11581 09:A4D4: A9 00 00     	lda	#$0
 11582 09:A4D7: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11583 09:A4D9: 85 0B        	sta	<R2+2
 11584 09:A4DB: 18           	clc
 11585 09:A4DC: A5 09        	lda	<R2
 11586 09:A4DE: 65 01        	adc	<R0
 11587 09:A4E0: 85 0D        	sta	<R3
 11588 09:A4E2: A5 0B        	lda	<R2+2
 11589 09:A4E4: 65 03        	adc	<R0+2
 11590 09:A4E6: 85 0F        	sta	<R3+2
 11591 09:A4E8: A7 0D        	lda	[<R3]
 11592 09:A4EA: 48           	pha
 11593 09:A4EB: A0 0B 00     	ldy	#$b
 11594 09:A4EE: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11595 09:A4F0: 48           	pha
 11596 09:A4F1: A0 00 00     	ldy	#$0
 11597 09:A4F4: A5 19        	lda	<L389+i_1
 11598 09:A4F6: 10 01        	bpl	L407
 11599 09:A4F8: 88           	dey
 11600                        L407:
 11601 09:A4F9: 85 09        	sta	<R2
 11602 09:A4FB: 84 0B        	sty	<R2+2
 11603 09:A4FD: D4 0B        	pei	<R2+2
 11604 09:A4FF: D4 09        	pei	<R2
 11605 09:A501: A9 02 00     	lda	#$2
 11606                        	xref	~~~lasl
 11607 09:A504: 22 xx xx xx  	jsl	~~~lasl
 11608 09:A508: 85 01        	sta	<R0
 11609 09:A50A: 86 03        	stx	<R0+2
 11610 09:A50C: 18           	clc
 11611 09:A50D: A9 0F 04     	lda	#$40f
 11612 09:A510: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11613 09:A512: 85 0D        	sta	<R3
 11614 09:A514: A9 00 00     	lda	#$0
 11615 09:A517: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11616 09:A519: 85 0F        	sta	<R3+2
 11617 09:A51B: 18           	clc
 11618 09:A51C: A5 0D        	lda	<R3
 11619 09:A51E: 65 01        	adc	<R0
 11620 09:A520: 85 11        	sta	<17
 11621 09:A522: A5 0F        	lda	<R3+2
 11622 09:A524: 65 03        	adc	<R0+2
 11623 09:A526: 85 13        	sta	<17+2
 11624 09:A528: A0 02 00     	ldy	#$2
 11625 09:A52B: B7 11        	lda	[<17],Y
 11626 09:A52D: 48           	pha
 11627 09:A52E: A7 11        	lda	[<17]
 11628 09:A530: 48           	pha
 11629 09:A531: A0 00 00     	ldy	#$0
  Thu Dec  3 2020 22:25                                                Page 215


 11630 09:A534: A5 19        	lda	<L389+i_1
 11631 09:A536: 10 01        	bpl	L408
 11632 09:A538: 88           	dey
 11633                        L408:
 11634 09:A539: 85 0D        	sta	<R3
 11635 09:A53B: 84 0F        	sty	<R3+2
 11636 09:A53D: D4 0F        	pei	<R3+2
 11637 09:A53F: D4 0D        	pei	<R3
 11638 09:A541: A9 02 00     	lda	#$2
 11639                        	xref	~~~lasl
 11640 09:A544: 22 xx xx xx  	jsl	~~~lasl
 11641 09:A548: 85 01        	sta	<R0
 11642 09:A54A: 86 03        	stx	<R0+2
 11643 09:A54C: 18           	clc
 11644 09:A54D: A9 0F 00     	lda	#$f
 11645 09:A550: 65 1D        	adc	<L389+current_SuperInterseg212_1
 11646 09:A552: 85 11        	sta	<17
 11647 09:A554: A9 00 00     	lda	#$0
 11648 09:A557: 65 1F        	adc	<L389+current_SuperInterseg212_1+2
 11649 09:A559: 85 13        	sta	<17+2
 11650 09:A55B: 18           	clc
 11651 09:A55C: A5 11        	lda	<17
 11652 09:A55E: 65 01        	adc	<R0
 11653 09:A560: 85 15        	sta	<21
 11654 09:A562: A5 13        	lda	<17+2
 11655 09:A564: 65 03        	adc	<R0+2
 11656 09:A566: 85 17        	sta	<21+2
 11657 09:A568: A0 02 00     	ldy	#$2
 11658 09:A56B: B7 15        	lda	[<21],Y
 11659 09:A56D: 48           	pha
 11660 09:A56E: A7 15        	lda	[<21]
 11661 09:A570: 48           	pha
 11662 09:A571: A0 0A 00     	ldy	#$a
 11663 09:A574: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11664 09:A576: 48           	pha
 11665 09:A577: A0 09 00     	ldy	#$9
 11666 09:A57A: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11667 09:A57C: 48           	pha
 11668 09:A57D: 22 A9 AC 09  	jsl	~~AddInterseg
 11669                        ;        }
 11670                        	.line	1623
 11671                        L10268:
 11672 09:A581: E6 19        	inc	<L389+i_1
 11673                        L10271:
 11674 09:A583: 38           	sec
 11675 09:A584: A5 19        	lda	<L389+i_1
 11676 09:A586: A0 0D 00     	ldy	#$d
 11677 09:A589: F7 1D        	sbc	[<L389+current_SuperInterseg212_1],Y
 11678 09:A58B: 70 03        	bvs	L409
 11679 09:A58D: 49 00 80     	eor	#$8000
 11680                        L409:
 11681 09:A590: 30 03        	bmi	L410
 11682 09:A592: 82 8D FC     	brl	L10270
 11683                        L410:
 11684                        L10269:
 11685                        ;
 11686                        ;      /* Page suivante */
 11687                        ;      *page_rtn = *page_rtn + 1;
  Thu Dec  3 2020 22:25                                                Page 216


 11688                        	.line	1626
 11689 09:A595: E2 20        	sep	#$20
 11690                        	longa	off
 11691 09:A597: A7 30        	lda	[<L388+page_rtn_0]
 11692 09:A599: 1A           	ina
 11693 09:A59A: C2 20        	rep	#$20
 11694                        	longa	on
 11695 09:A59C: E2 20        	sep	#$20
 11696                        	longa	off
 11697 09:A59E: 87 30        	sta	[<L388+page_rtn_0]
 11698 09:A5A0: C2 20        	rep	#$20
 11699                        	longa	on
 11700                        ;
 11701                        ;      /* Longueur du SubRecord */
 11702                        ;      *length_rtn = 1 + current_SuperInterseg212-
                    >nb_address*sizeof(BYTE);
 11703                        	.line	1629
 11704 09:A5A2: A0 0D 00     	ldy	#$d
 11705 09:A5A5: B7 1D        	lda	[<L389+current_SuperInterseg212_1],Y
 11706 09:A5A7: 1A           	ina
 11707 09:A5A8: 87 34        	sta	[<L388+length_rtn_0]
 11708                        ;    }
 11709                        	.line	1630
 11710                        L10267:
 11711                        ;
 11712                        ;  /* Renvoie la structure */
 11713                        ;  return(current_SuperInterseg212);
 11714                        	.line	1633
 11715 09:A5AA: A6 1F        	ldx	<L389+current_SuperInterseg212_1+2
 11716 09:A5AC: A5 1D        	lda	<L389+current_SuperInterseg212_1
 11717 09:A5AE: 82 E5 FB     	brl	L392
 11718                        ;}
 11719                        	.line	1634
 11720                        	.endblock	1634
 11721             00000020   L388	equ	32
 11722             00000019   L389	equ	25
 11723 09:A5B1:              	ends
 11724                        	efunc
 11725                        	.endfunc	1634,25,32
 11726                        	.line	1634
 11727                        ;
 11728                        ;
 11729                        ;/************************************************
                    ****************************/
 11730                        ;/*  DecodeSuperInterseg1324() :  Décodage d'un Su
                    bRecord SuperInterseg1324. */
 11731                        ;/************************************************
                    ****************************/
 11732                        ;static struct subrecord_SuperInterseg1324 *Decode
                    SuperInterseg1324(unsigned char *data, BYTE SegNum, unsigned
                     char *lconst, int lconst_length, BYTE *page_rtn, int *lengt
                    h_rtn, struct omf_segment *current_segment)
 11733                        ;{
 11734                        	.line	1640
 11735                        	.line	1641
 11736                        	LOADER
 11737                        	func
 11738                        	.function	1641
  Thu Dec  3 2020 22:25                                                Page 217


 11739                        ~~DecodeSuperInterseg1324:
 11740                        	longa	on
 11741                        	longi	on
 11742 09:A5B1: 3B           	tsc
 11743 09:A5B2: 38           	sec
 11744 09:A5B3: E9 20 00     	sbc	#L411
 11745 09:A5B6: 1B           	tcs
 11746 09:A5B7: 0B           	phd
 11747 09:A5B8: 5B           	tcd
 11748             00000004   data_0	set	4
 11749             00000008   SegNum_0	set	8
 11750             0000000A   lconst_0	set	10
 11751             0000000E   lconst_length_0	set	14
 11752             00000010   page_rtn_0	set	16
 11753             00000014   length_rtn_0	set	20
 11754             00000018   current_segment_0	set	24
 11755                        	.block	1641
 11756                        ;  int i;
 11757                        ;  WORD one_word;
 11758                        ;  struct subrecord_SuperInterseg1324 *current_Sup
                    erInterseg1324;
 11759                        ;
 11760                        ;  /* Allocation mémoire */
 11761                        ;  current_SuperInterseg1324 = (struct subrecord_S
                    uperInterseg1324 *) k_calloc(1,sizeof(struct subrecord_Super
                    Interseg1324));
 11762             00000000   i_1	set	0
 11763             00000002   one_word_1	set	2
 11764             00000004   current_SuperInterseg1324_1	set	4
 11765                        	.sym	i,0,5,1,16
 11766                        	.sym	one_word,2,5,1,16
 11767                        	.sym	current_SuperInterseg1324,4,138,1,32,72
 11768                        	.sym	data,4,142,6,32
 11769                        	.sym	SegNum,8,14,6,8
 11770                        	.sym	lconst,10,142,6,32
 11771                        	.sym	lconst_length,14,5,6,16
 11772                        	.sym	page_rtn,16,142,6,32
 11773                        	.sym	length_rtn,20,133,6,32
 11774                        	.sym	current_segment,24,138,6,32,65
 11775                        	.line	1647
 11776 09:A5B9: F4 14 08     	pea	#<$814
 11777 09:A5BC: F4 01 00     	pea	#<$1
 11778 09:A5BF: 22 xx xx xx  	jsl	~~k_calloc
 11779 09:A5C3: 85 1D        	sta	<L412+current_SuperInterseg1324_1
 11780 09:A5C5: 86 1F        	stx	<L412+current_SuperInterseg1324_1+2
 11781                        ;  if(current_SuperInterseg1324 == NULL)
 11782                        	.line	1648
 11783                        ;    {
 11784 09:A5C7: A5 1D        	lda	<L412+current_SuperInterseg1324_1
 11785 09:A5C9: 05 1F        	ora	<L412+current_SuperInterseg1324_1+2
 11786 09:A5CB: F0 03        	beq	L414
 11787 09:A5CD: 82 19 00     	brl	L10274
 11788                        L414:
 11789                        	.line	1649
 11790                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg1324.\n");
 11791                        ;      return(NULL);
 11792                        	.line	1651
  Thu Dec  3 2020 22:25                                                Page 218


 11793 09:A5D0: A9 00 00     	lda	#$0
 11794 09:A5D3: AA           	tax
 11795 09:A5D4: A9 00 00     	lda	#$0
 11796                        L415:
 11797 09:A5D7: A8           	tay
 11798 09:A5D8: A5 22        	lda	<L411+2
 11799 09:A5DA: 85 3A        	sta	<L411+2+24
 11800 09:A5DC: A5 21        	lda	<L411+1
 11801 09:A5DE: 85 39        	sta	<L411+1+24
 11802 09:A5E0: 2B           	pld
 11803 09:A5E1: 3B           	tsc
 11804 09:A5E2: 18           	clc
 11805 09:A5E3: 69 38 00     	adc	#L411+24
 11806 09:A5E6: 1B           	tcs
 11807 09:A5E7: 98           	tya
 11808 09:A5E8: 6B           	rtl
 11809                        ;    }
 11810                        	.line	1652
 11811                        ;
 11812                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 11813                        ;  current_SuperInterseg1324->Count = data[0];
 11814                        L10274:
 11815                        	.line	1655
 11816 09:A5E9: E2 20        	sep	#$20
 11817                        	longa	off
 11818 09:A5EB: A7 24        	lda	[<L411+data_0]
 11819 09:A5ED: A0 08 00     	ldy	#$8
 11820 09:A5F0: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 11821 09:A5F2: C2 20        	rep	#$20
 11822                        	longa	on
 11823                        ;
 11824                        ;  /** Saut de Page **/
 11825                        ;  if((current_SuperInterseg1324->Count & 0x80) ==
                     0x80)
 11826                        	.line	1658
 11827                        ;    {
 11828 09:A5F4: A0 08 00     	ldy	#$8
 11829 09:A5F7: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 11830 09:A5F9: 29 80 00     	and	#<$80
 11831 09:A5FC: 85 01        	sta	<R0
 11832 09:A5FE: A5 01        	lda	<R0
 11833 09:A600: C9 80 00     	cmp	#<$80
 11834 09:A603: F0 03        	beq	L416
 11835 09:A605: 82 24 00     	brl	L10275
 11836                        L416:
 11837                        	.line	1659
 11838                        ;      /* On saute X pages */
 11839                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg1324->Count & 0x7F);
 11840                        	.line	1661
 11841 09:A608: E2 20        	sep	#$20
 11842                        	longa	off
 11843 09:A60A: A0 08 00     	ldy	#$8
 11844 09:A60D: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 11845 09:A60F: 29 7F        	and	#<$7f
 11846 09:A611: 85 01        	sta	<R0
 11847 09:A613: C2 20        	rep	#$20
 11848                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 219


 11849 09:A615: E2 20        	sep	#$20
 11850                        	longa	off
 11851 09:A617: 18           	clc
 11852 09:A618: A7 30        	lda	[<L411+page_rtn_0]
 11853 09:A61A: 65 01        	adc	<R0
 11854 09:A61C: C2 20        	rep	#$20
 11855                        	longa	on
 11856 09:A61E: E2 20        	sep	#$20
 11857                        	longa	off
 11858 09:A620: 87 30        	sta	[<L411+page_rtn_0]
 11859 09:A622: C2 20        	rep	#$20
 11860                        	longa	on
 11861                        ;
 11862                        ;      /* Longueur du SubRecord */
 11863                        ;      *length_rtn = 1;
 11864                        	.line	1664
 11865 09:A624: A9 01 00     	lda	#$1
 11866 09:A627: 87 34        	sta	[<L411+length_rtn_0]
 11867                        ;    }
 11868                        	.line	1665
 11869                        ;  else
 11870 09:A629: 82 BF 02     	brl	L10276
 11871                        L10275:
 11872                        ;    {
 11873                        	.line	1667
 11874                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
 11875                        ;      current_SuperInterseg1324->ByteCnt = 0x02;
 11876                        	.line	1669
 11877 09:A62C: E2 20        	sep	#$20
 11878                        	longa	off
 11879 09:A62E: A9 02        	lda	#$2
 11880 09:A630: A0 09 00     	ldy	#$9
 11881 09:A633: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 11882 09:A635: C2 20        	rep	#$20
 11883                        	longa	on
 11884                        ;
 11885                        ;      /* Opérations >> ou << = Toujours à 0  */
 11886                        ;      current_SuperInterseg1324->BitShiftCnt = 0x
                    00;
 11887                        	.line	1672
 11888 09:A637: E2 20        	sep	#$20
 11889                        	longa	off
 11890 09:A639: A9 00        	lda	#$0
 11891 09:A63B: A0 0A 00     	ldy	#$a
 11892 09:A63E: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 11893 09:A640: C2 20        	rep	#$20
 11894                        	longa	on
 11895                        ;
 11896                        ;      /* Segment Number */
 11897                        ;      current_SuperInterseg1324->SegNum = SegNum;
 11898                        	.line	1675
 11899 09:A642: E2 20        	sep	#$20
 11900                        	longa	off
 11901 09:A644: A5 28        	lda	<L411+SegNum_0
 11902 09:A646: A0 0B 00     	ldy	#$b
 11903 09:A649: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 11904 09:A64B: C2 20        	rep	#$20
  Thu Dec  3 2020 22:25                                                Page 220


 11905                        	longa	on
 11906                        ;
 11907                        ;      /* File Number toujours à 1 */
 11908                        ;      current_SuperInterseg1324->FileNum = 1;
 11909                        	.line	1678
 11910 09:A64D: A9 01 00     	lda	#$1
 11911 09:A650: A0 0C 00     	ldy	#$c
 11912 09:A653: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 11913                        ;
 11914                        ;      /* Nombre d'adresse */
 11915                        ;      current_SuperInterseg1324->nb_address = cur
                    rent_SuperInterseg1324->Count + 1;
 11916                        	.line	1681
 11917 09:A655: A0 08 00     	ldy	#$8
 11918 09:A658: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 11919 09:A65A: 29 FF 00     	and	#$ff
 11920 09:A65D: 85 01        	sta	<R0
 11921 09:A65F: A5 01        	lda	<R0
 11922 09:A661: 1A           	ina
 11923 09:A662: A0 0E 00     	ldy	#$e
 11924 09:A665: 97 1D        	sta	[<L412+current_SuperInterseg1324_1],Y
 11925                        ;
 11926                        ;      /** Copie les adresses **/
 11927                        ;      for(i=0; i<current_SuperInterseg1324->nb_ad
                    dress; i++)
 11928                        	.line	1684
 11929 09:A667: 64 19        	stz	<L412+i_1
 11930 09:A669: 82 58 02     	brl	L10280
 11931                        L10279:
 11932                        ;        {
 11933                        	.line	1685
 11934                        ;          /* Décode OffsetPath et OffsetReference
                     */
 11935                        ;          current_SuperInterseg1324->OffsetPatch[
                    i] = ((WORD)*page_rtn) << 8 | data[1+i];
 11936                        	.line	1687
 11937 09:A66C: A0 00 00     	ldy	#$0
 11938 09:A66F: A5 19        	lda	<L412+i_1
 11939 09:A671: 10 01        	bpl	L417
 11940 09:A673: 88           	dey
 11941                        L417:
 11942 09:A674: 85 05        	sta	<R1
 11943 09:A676: 84 07        	sty	<R1+2
 11944 09:A678: D4 07        	pei	<R1+2
 11945 09:A67A: D4 05        	pei	<R1
 11946 09:A67C: A9 02 00     	lda	#$2
 11947                        	xref	~~~lasl
 11948 09:A67F: 22 xx xx xx  	jsl	~~~lasl
 11949 09:A683: 85 01        	sta	<R0
 11950 09:A685: 86 03        	stx	<R0+2
 11951 09:A687: 18           	clc
 11952 09:A688: A9 10 00     	lda	#$10
 11953 09:A68B: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 11954 09:A68D: 85 09        	sta	<R2
 11955 09:A68F: A9 00 00     	lda	#$0
 11956 09:A692: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 11957 09:A694: 85 0B        	sta	<R2+2
 11958 09:A696: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 221


 11959 09:A697: A5 09        	lda	<R2
 11960 09:A699: 65 01        	adc	<R0
 11961 09:A69B: 85 0D        	sta	<R3
 11962 09:A69D: A5 0B        	lda	<R2+2
 11963 09:A69F: 65 03        	adc	<R0+2
 11964 09:A6A1: 85 0F        	sta	<R3+2
 11965 09:A6A3: A5 19        	lda	<L412+i_1
 11966 09:A6A5: 1A           	ina
 11967 09:A6A6: 85 01        	sta	<R0
 11968 09:A6A8: A4 01        	ldy	<R0
 11969 09:A6AA: B7 24        	lda	[<L411+data_0],Y
 11970 09:A6AC: 29 FF 00     	and	#$ff
 11971 09:A6AF: 85 09        	sta	<R2
 11972 09:A6B1: A7 30        	lda	[<L411+page_rtn_0]
 11973 09:A6B3: 29 FF 00     	and	#$ff
 11974 09:A6B6: 85 15        	sta	<21
 11975 09:A6B8: A5 15        	lda	<21
 11976 09:A6BA: EB           	xba
 11977 09:A6BB: 29 00 FF     	and	#$ff00
 11978 09:A6BE: 85 11        	sta	<17
 11979 09:A6C0: A5 11        	lda	<17
 11980 09:A6C2: 05 09        	ora	<R2
 11981 09:A6C4: 85 15        	sta	<21
 11982 09:A6C6: A0 00 00     	ldy	#$0
 11983 09:A6C9: A5 15        	lda	<21
 11984 09:A6CB: 10 01        	bpl	L418
 11985 09:A6CD: 88           	dey
 11986                        L418:
 11987 09:A6CE: 85 09        	sta	<R2
 11988 09:A6D0: 84 0B        	sty	<R2+2
 11989 09:A6D2: A5 09        	lda	<R2
 11990 09:A6D4: 87 0D        	sta	[<R3]
 11991 09:A6D6: A5 0B        	lda	<R2+2
 11992 09:A6D8: A0 02 00     	ldy	#$2
 11993 09:A6DB: 97 0D        	sta	[<R3],Y
 11994                        ;          
 11995                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 11996                        ;          if(current_SuperInterseg1324->OffsetPat
                    ch[i] > (DWORD) lconst_length)
 11997                        	.line	1690
 11998                        ;            {
 11999 09:A6DD: A0 00 00     	ldy	#$0
 12000 09:A6E0: A5 2E        	lda	<L411+lconst_length_0
 12001 09:A6E2: 10 01        	bpl	L419
 12002 09:A6E4: 88           	dey
 12003                        L419:
 12004 09:A6E5: 85 01        	sta	<R0
 12005 09:A6E7: 84 03        	sty	<R0+2
 12006 09:A6E9: A0 00 00     	ldy	#$0
 12007 09:A6EC: A5 19        	lda	<L412+i_1
 12008 09:A6EE: 10 01        	bpl	L420
 12009 09:A6F0: 88           	dey
 12010                        L420:
 12011 09:A6F1: 85 09        	sta	<R2
 12012 09:A6F3: 84 0B        	sty	<R2+2
 12013 09:A6F5: D4 0B        	pei	<R2+2
 12014 09:A6F7: D4 09        	pei	<R2
  Thu Dec  3 2020 22:25                                                Page 222


 12015 09:A6F9: A9 02 00     	lda	#$2
 12016                        	xref	~~~lasl
 12017 09:A6FC: 22 xx xx xx  	jsl	~~~lasl
 12018 09:A700: 85 05        	sta	<R1
 12019 09:A702: 86 07        	stx	<R1+2
 12020 09:A704: 18           	clc
 12021 09:A705: A9 10 00     	lda	#$10
 12022 09:A708: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12023 09:A70A: 85 0D        	sta	<R3
 12024 09:A70C: A9 00 00     	lda	#$0
 12025 09:A70F: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12026 09:A711: 85 0F        	sta	<R3+2
 12027 09:A713: 18           	clc
 12028 09:A714: A5 0D        	lda	<R3
 12029 09:A716: 65 05        	adc	<R1
 12030 09:A718: 85 11        	sta	<17
 12031 09:A71A: A5 0F        	lda	<R3+2
 12032 09:A71C: 65 07        	adc	<R1+2
 12033 09:A71E: 85 13        	sta	<17+2
 12034 09:A720: A5 01        	lda	<R0
 12035 09:A722: C7 11        	cmp	[<17]
 12036 09:A724: A5 03        	lda	<R0+2
 12037 09:A726: A0 02 00     	ldy	#$2
 12038 09:A729: F7 11        	sbc	[<17],Y
 12039 09:A72B: 90 03        	bcc	L421
 12040 09:A72D: 82 47 00     	brl	L10281
 12041                        L421:
 12042                        	.line	1691
 12043                        ;              current_SuperInterseg1324->OffsetRe
                    ference[i] = 0xFFFF;     /* Erreur */
 12044                        	.line	1692
 12045 09:A730: A0 00 00     	ldy	#$0
 12046 09:A733: A5 19        	lda	<L412+i_1
 12047 09:A735: 10 01        	bpl	L422
 12048 09:A737: 88           	dey
 12049                        L422:
 12050 09:A738: 85 05        	sta	<R1
 12051 09:A73A: 84 07        	sty	<R1+2
 12052 09:A73C: D4 07        	pei	<R1+2
 12053 09:A73E: D4 05        	pei	<R1
 12054 09:A740: A9 02 00     	lda	#$2
 12055                        	xref	~~~lasl
 12056 09:A743: 22 xx xx xx  	jsl	~~~lasl
 12057 09:A747: 85 01        	sta	<R0
 12058 09:A749: 86 03        	stx	<R0+2
 12059 09:A74B: 18           	clc
 12060 09:A74C: A9 10 04     	lda	#$410
 12061 09:A74F: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12062 09:A751: 85 09        	sta	<R2
 12063 09:A753: A9 00 00     	lda	#$0
 12064 09:A756: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12065 09:A758: 85 0B        	sta	<R2+2
 12066 09:A75A: 18           	clc
 12067 09:A75B: A5 09        	lda	<R2
 12068 09:A75D: 65 01        	adc	<R0
 12069 09:A75F: 85 0D        	sta	<R3
 12070 09:A761: A5 0B        	lda	<R2+2
 12071 09:A763: 65 03        	adc	<R0+2
  Thu Dec  3 2020 22:25                                                Page 223


 12072 09:A765: 85 0F        	sta	<R3+2
 12073 09:A767: A9 FF FF     	lda	#$ffff
 12074 09:A76A: 87 0D        	sta	[<R3]
 12075 09:A76C: A9 00 00     	lda	#$0
 12076 09:A76F: A0 02 00     	ldy	#$2
 12077 09:A772: 97 0D        	sta	[<R3],Y
 12078                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg1324 for Offset %04X in Segment #%02X
                    .\n",current_SuperInterseg1324->OffsetPatch[i],current_segme
                    nt->header.SegNum);
 12079                        ;            }
 12080                        	.line	1694
 12081                        ;          else
 12082 09:A774: 82 A9 00     	brl	L10282
 12083                        L10281:
 12084                        ;            {
 12085                        	.line	1696
 12086                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg1324->OffsetPatch[i]],sizeof(WORD));
 12087                        	.line	1697
 12088 09:A777: F4 02 00     	pea	#<$2
 12089 09:A77A: A0 00 00     	ldy	#$0
 12090 09:A77D: A5 19        	lda	<L412+i_1
 12091 09:A77F: 10 01        	bpl	L423
 12092 09:A781: 88           	dey
 12093                        L423:
 12094 09:A782: 85 05        	sta	<R1
 12095 09:A784: 84 07        	sty	<R1+2
 12096 09:A786: D4 07        	pei	<R1+2
 12097 09:A788: D4 05        	pei	<R1
 12098 09:A78A: A9 02 00     	lda	#$2
 12099                        	xref	~~~lasl
 12100 09:A78D: 22 xx xx xx  	jsl	~~~lasl
 12101 09:A791: 85 01        	sta	<R0
 12102 09:A793: 86 03        	stx	<R0+2
 12103 09:A795: 18           	clc
 12104 09:A796: A9 10 00     	lda	#$10
 12105 09:A799: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12106 09:A79B: 85 09        	sta	<R2
 12107 09:A79D: A9 00 00     	lda	#$0
 12108 09:A7A0: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12109 09:A7A2: 85 0B        	sta	<R2+2
 12110 09:A7A4: 18           	clc
 12111 09:A7A5: A5 09        	lda	<R2
 12112 09:A7A7: 65 01        	adc	<R0
 12113 09:A7A9: 85 0D        	sta	<R3
 12114 09:A7AB: A5 0B        	lda	<R2+2
 12115 09:A7AD: 65 03        	adc	<R0+2
 12116 09:A7AF: 85 0F        	sta	<R3+2
 12117 09:A7B1: 18           	clc
 12118 09:A7B2: A5 2A        	lda	<L411+lconst_0
 12119 09:A7B4: 67 0D        	adc	[<R3]
 12120 09:A7B6: 85 01        	sta	<R0
 12121 09:A7B8: A5 2C        	lda	<L411+lconst_0+2
 12122 09:A7BA: A0 02 00     	ldy	#$2
 12123 09:A7BD: 77 0D        	adc	[<R3],Y
 12124 09:A7BF: 85 03        	sta	<R0+2
 12125 09:A7C1: D4 03        	pei	<R0+2
  Thu Dec  3 2020 22:25                                                Page 224


 12126 09:A7C3: D4 01        	pei	<R0
 12127 09:A7C5: F4 00 00     	pea	#0
 12128 09:A7C8: 18           	clc
 12129 09:A7C9: 7B           	tdc
 12130 09:A7CA: 69 1B 00     	adc	#<L412+one_word_1
 12131 09:A7CD: 48           	pha
 12132 09:A7CE: 22 xx xx xx  	jsl	~~memcpy
 12133                        ;              current_SuperInterseg1324->OffsetRe
                    ference[i] = (DWORD) one_word;
 12134                        	.line	1698
 12135 09:A7D2: A0 00 00     	ldy	#$0
 12136 09:A7D5: A5 19        	lda	<L412+i_1
 12137 09:A7D7: 10 01        	bpl	L424
 12138 09:A7D9: 88           	dey
 12139                        L424:
 12140 09:A7DA: 85 05        	sta	<R1
 12141 09:A7DC: 84 07        	sty	<R1+2
 12142 09:A7DE: D4 07        	pei	<R1+2
 12143 09:A7E0: D4 05        	pei	<R1
 12144 09:A7E2: A9 02 00     	lda	#$2
 12145                        	xref	~~~lasl
 12146 09:A7E5: 22 xx xx xx  	jsl	~~~lasl
 12147 09:A7E9: 85 01        	sta	<R0
 12148 09:A7EB: 86 03        	stx	<R0+2
 12149 09:A7ED: 18           	clc
 12150 09:A7EE: A9 10 04     	lda	#$410
 12151 09:A7F1: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12152 09:A7F3: 85 09        	sta	<R2
 12153 09:A7F5: A9 00 00     	lda	#$0
 12154 09:A7F8: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12155 09:A7FA: 85 0B        	sta	<R2+2
 12156 09:A7FC: 18           	clc
 12157 09:A7FD: A5 09        	lda	<R2
 12158 09:A7FF: 65 01        	adc	<R0
 12159 09:A801: 85 0D        	sta	<R3
 12160 09:A803: A5 0B        	lda	<R2+2
 12161 09:A805: 65 03        	adc	<R0+2
 12162 09:A807: 85 0F        	sta	<R3+2
 12163 09:A809: A0 00 00     	ldy	#$0
 12164 09:A80C: A5 1B        	lda	<L412+one_word_1
 12165 09:A80E: 10 01        	bpl	L425
 12166 09:A810: 88           	dey
 12167                        L425:
 12168 09:A811: 85 01        	sta	<R0
 12169 09:A813: 84 03        	sty	<R0+2
 12170 09:A815: A5 01        	lda	<R0
 12171 09:A817: 87 0D        	sta	[<R3]
 12172 09:A819: A5 03        	lda	<R0+2
 12173 09:A81B: A0 02 00     	ldy	#$2
 12174 09:A81E: 97 0D        	sta	[<R3],Y
 12175                        ;            }
 12176                        	.line	1699
 12177                        L10282:
 12178                        ;
 12179                        ;          /* Conserve ce INTERSEG */
 12180                        ;          AddInterseg(current_SuperInterseg1324->
                    ByteCnt,current_SuperInterseg1324->BitShiftCnt,current_Super
                    Interseg1324->OffsetPatch[i],current_SuperInterseg1324->Offs
  Thu Dec  3 2020 22:25                                                Page 225


                    etReference[i],current_SuperInterseg1324->FileNum,current_Su
                    perInterseg1324->SegNum,RECORD_SUPER_INTERSEG1324);
 12181                        	.line	1702
 12182 09:A820: F4 09 00     	pea	#<$9
 12183 09:A823: A0 0B 00     	ldy	#$b
 12184 09:A826: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12185 09:A828: 29 FF 00     	and	#$ff
 12186 09:A82B: 48           	pha
 12187 09:A82C: A0 0C 00     	ldy	#$c
 12188 09:A82F: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12189 09:A831: 48           	pha
 12190 09:A832: A0 00 00     	ldy	#$0
 12191 09:A835: A5 19        	lda	<L412+i_1
 12192 09:A837: 10 01        	bpl	L426
 12193 09:A839: 88           	dey
 12194                        L426:
 12195 09:A83A: 85 05        	sta	<R1
 12196 09:A83C: 84 07        	sty	<R1+2
 12197 09:A83E: D4 07        	pei	<R1+2
 12198 09:A840: D4 05        	pei	<R1
 12199 09:A842: A9 02 00     	lda	#$2
 12200                        	xref	~~~lasl
 12201 09:A845: 22 xx xx xx  	jsl	~~~lasl
 12202 09:A849: 85 01        	sta	<R0
 12203 09:A84B: 86 03        	stx	<R0+2
 12204 09:A84D: 18           	clc
 12205 09:A84E: A9 10 04     	lda	#$410
 12206 09:A851: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12207 09:A853: 85 09        	sta	<R2
 12208 09:A855: A9 00 00     	lda	#$0
 12209 09:A858: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12210 09:A85A: 85 0B        	sta	<R2+2
 12211 09:A85C: 18           	clc
 12212 09:A85D: A5 09        	lda	<R2
 12213 09:A85F: 65 01        	adc	<R0
 12214 09:A861: 85 0D        	sta	<R3
 12215 09:A863: A5 0B        	lda	<R2+2
 12216 09:A865: 65 03        	adc	<R0+2
 12217 09:A867: 85 0F        	sta	<R3+2
 12218 09:A869: A0 02 00     	ldy	#$2
 12219 09:A86C: B7 0D        	lda	[<R3],Y
 12220 09:A86E: 48           	pha
 12221 09:A86F: A7 0D        	lda	[<R3]
 12222 09:A871: 48           	pha
 12223 09:A872: A0 00 00     	ldy	#$0
 12224 09:A875: A5 19        	lda	<L412+i_1
 12225 09:A877: 10 01        	bpl	L427
 12226 09:A879: 88           	dey
 12227                        L427:
 12228 09:A87A: 85 09        	sta	<R2
 12229 09:A87C: 84 0B        	sty	<R2+2
 12230 09:A87E: D4 0B        	pei	<R2+2
 12231 09:A880: D4 09        	pei	<R2
 12232 09:A882: A9 02 00     	lda	#$2
 12233                        	xref	~~~lasl
 12234 09:A885: 22 xx xx xx  	jsl	~~~lasl
 12235 09:A889: 85 01        	sta	<R0
 12236 09:A88B: 86 03        	stx	<R0+2
  Thu Dec  3 2020 22:25                                                Page 226


 12237 09:A88D: 18           	clc
 12238 09:A88E: A9 10 00     	lda	#$10
 12239 09:A891: 65 1D        	adc	<L412+current_SuperInterseg1324_1
 12240 09:A893: 85 0D        	sta	<R3
 12241 09:A895: A9 00 00     	lda	#$0
 12242 09:A898: 65 1F        	adc	<L412+current_SuperInterseg1324_1+2
 12243 09:A89A: 85 0F        	sta	<R3+2
 12244 09:A89C: 18           	clc
 12245 09:A89D: A5 0D        	lda	<R3
 12246 09:A89F: 65 01        	adc	<R0
 12247 09:A8A1: 85 11        	sta	<17
 12248 09:A8A3: A5 0F        	lda	<R3+2
 12249 09:A8A5: 65 03        	adc	<R0+2
 12250 09:A8A7: 85 13        	sta	<17+2
 12251 09:A8A9: A0 02 00     	ldy	#$2
 12252 09:A8AC: B7 11        	lda	[<17],Y
 12253 09:A8AE: 48           	pha
 12254 09:A8AF: A7 11        	lda	[<17]
 12255 09:A8B1: 48           	pha
 12256 09:A8B2: A0 0A 00     	ldy	#$a
 12257 09:A8B5: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12258 09:A8B7: 48           	pha
 12259 09:A8B8: A0 09 00     	ldy	#$9
 12260 09:A8BB: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12261 09:A8BD: 48           	pha
 12262 09:A8BE: 22 A9 AC 09  	jsl	~~AddInterseg
 12263                        ;        }
 12264                        	.line	1703
 12265                        L10277:
 12266 09:A8C2: E6 19        	inc	<L412+i_1
 12267                        L10280:
 12268 09:A8C4: 38           	sec
 12269 09:A8C5: A5 19        	lda	<L412+i_1
 12270 09:A8C7: A0 0E 00     	ldy	#$e
 12271 09:A8CA: F7 1D        	sbc	[<L412+current_SuperInterseg1324_1],Y
 12272 09:A8CC: 70 03        	bvs	L428
 12273 09:A8CE: 49 00 80     	eor	#$8000
 12274                        L428:
 12275 09:A8D1: 30 03        	bmi	L429
 12276 09:A8D3: 82 96 FD     	brl	L10279
 12277                        L429:
 12278                        L10278:
 12279                        ;
 12280                        ;      /* Page suivante */
 12281                        ;      *page_rtn = *page_rtn + 1;
 12282                        	.line	1706
 12283 09:A8D6: E2 20        	sep	#$20
 12284                        	longa	off
 12285 09:A8D8: A7 30        	lda	[<L411+page_rtn_0]
 12286 09:A8DA: 1A           	ina
 12287 09:A8DB: C2 20        	rep	#$20
 12288                        	longa	on
 12289 09:A8DD: E2 20        	sep	#$20
 12290                        	longa	off
 12291 09:A8DF: 87 30        	sta	[<L411+page_rtn_0]
 12292 09:A8E1: C2 20        	rep	#$20
 12293                        	longa	on
 12294                        ;
  Thu Dec  3 2020 22:25                                                Page 227


 12295                        ;      /* Longueur du SubRecord */
 12296                        ;      *length_rtn = 1 + current_SuperInterseg1324
                    ->nb_address*sizeof(BYTE);
 12297                        	.line	1709
 12298 09:A8E3: A0 0E 00     	ldy	#$e
 12299 09:A8E6: B7 1D        	lda	[<L412+current_SuperInterseg1324_1],Y
 12300 09:A8E8: 1A           	ina
 12301 09:A8E9: 87 34        	sta	[<L411+length_rtn_0]
 12302                        ;    }
 12303                        	.line	1710
 12304                        L10276:
 12305                        ;
 12306                        ;  /* Renvoie la structure */
 12307                        ;  return(current_SuperInterseg1324);
 12308                        	.line	1713
 12309 09:A8EB: A6 1F        	ldx	<L412+current_SuperInterseg1324_1+2
 12310 09:A8ED: A5 1D        	lda	<L412+current_SuperInterseg1324_1
 12311 09:A8EF: 82 E5 FC     	brl	L415
 12312                        ;}
 12313                        	.line	1714
 12314                        	.endblock	1714
 12315             00000020   L411	equ	32
 12316             00000019   L412	equ	25
 12317 09:A8F2:              	ends
 12318                        	efunc
 12319                        	.endfunc	1714,25,32
 12320                        	.line	1714
 12321                        ;
 12322                        ;
 12323                        ;/************************************************
                    ****************************/
 12324                        ;/*  DecodeSuperInterseg2536() :  Décodage d'un Su
                    bRecord SuperInterseg2536. */
 12325                        ;/************************************************
                    ****************************/
 12326                        ;static struct subrecord_SuperInterseg2536 *Decode
                    SuperInterseg2536(unsigned char *data, BYTE SegNum, unsigned
                     char *lconst, int lconst_length, BYTE *page_rtn, int *lengt
                    h_rtn, struct omf_segment *current_segment)
 12327                        ;{
 12328                        	.line	1720
 12329                        	.line	1721
 12330                        	LOADER
 12331                        	func
 12332                        	.function	1721
 12333                        ~~DecodeSuperInterseg2536:
 12334                        	longa	on
 12335                        	longi	on
 12336 09:A8F2: 3B           	tsc
 12337 09:A8F3: 38           	sec
 12338 09:A8F4: E9 20 00     	sbc	#L430
 12339 09:A8F7: 1B           	tcs
 12340 09:A8F8: 0B           	phd
 12341 09:A8F9: 5B           	tcd
 12342             00000004   data_0	set	4
 12343             00000008   SegNum_0	set	8
 12344             0000000A   lconst_0	set	10
 12345             0000000E   lconst_length_0	set	14
  Thu Dec  3 2020 22:25                                                Page 228


 12346             00000010   page_rtn_0	set	16
 12347             00000014   length_rtn_0	set	20
 12348             00000018   current_segment_0	set	24
 12349                        	.block	1721
 12350                        ;  int i;
 12351                        ;  WORD one_word;
 12352                        ;  struct subrecord_SuperInterseg2536 *current_Sup
                    erInterseg2536;
 12353                        ;
 12354                        ;  /* Allocation mémoire */
 12355                        ;  current_SuperInterseg2536 = (struct subrecord_S
                    uperInterseg2536 *) k_calloc(1,sizeof(struct subrecord_Super
                    Interseg2536));
 12356             00000000   i_1	set	0
 12357             00000002   one_word_1	set	2
 12358             00000004   current_SuperInterseg2536_1	set	4
 12359                        	.sym	i,0,5,1,16
 12360                        	.sym	one_word,2,5,1,16
 12361                        	.sym	current_SuperInterseg2536,4,138,1,32,73
 12362                        	.sym	data,4,142,6,32
 12363                        	.sym	SegNum,8,14,6,8
 12364                        	.sym	lconst,10,142,6,32
 12365                        	.sym	lconst_length,14,5,6,16
 12366                        	.sym	page_rtn,16,142,6,32
 12367                        	.sym	length_rtn,20,133,6,32
 12368                        	.sym	current_segment,24,138,6,32,65
 12369                        	.line	1727
 12370 09:A8FA: F4 14 08     	pea	#<$814
 12371 09:A8FD: F4 01 00     	pea	#<$1
 12372 09:A900: 22 xx xx xx  	jsl	~~k_calloc
 12373 09:A904: 85 1D        	sta	<L431+current_SuperInterseg2536_1
 12374 09:A906: 86 1F        	stx	<L431+current_SuperInterseg2536_1+2
 12375                        ;  if(current_SuperInterseg2536 == NULL)
 12376                        	.line	1728
 12377                        ;    {
 12378 09:A908: A5 1D        	lda	<L431+current_SuperInterseg2536_1
 12379 09:A90A: 05 1F        	ora	<L431+current_SuperInterseg2536_1+2
 12380 09:A90C: F0 03        	beq	L433
 12381 09:A90E: 82 19 00     	brl	L10283
 12382                        L433:
 12383                        	.line	1729
 12384                        ;      //printf("Error : Impossible to allocate me
                    mory for SubRecord SuperInterseg2536.\n");
 12385                        ;      return(NULL);
 12386                        	.line	1731
 12387 09:A911: A9 00 00     	lda	#$0
 12388 09:A914: AA           	tax
 12389 09:A915: A9 00 00     	lda	#$0
 12390                        L434:
 12391 09:A918: A8           	tay
 12392 09:A919: A5 22        	lda	<L430+2
 12393 09:A91B: 85 3A        	sta	<L430+2+24
 12394 09:A91D: A5 21        	lda	<L430+1
 12395 09:A91F: 85 39        	sta	<L430+1+24
 12396 09:A921: 2B           	pld
 12397 09:A922: 3B           	tsc
 12398 09:A923: 18           	clc
 12399 09:A924: 69 38 00     	adc	#L430+24
  Thu Dec  3 2020 22:25                                                Page 229


 12400 09:A927: 1B           	tcs
 12401 09:A928: 98           	tya
 12402 09:A929: 6B           	rtl
 12403                        ;    }
 12404                        	.line	1732
 12405                        ;
 12406                        ;  /* Nombre d'adresse-1 ou Saut de Page */
 12407                        ;  current_SuperInterseg2536->Count = data[0];
 12408                        L10283:
 12409                        	.line	1735
 12410 09:A92A: E2 20        	sep	#$20
 12411                        	longa	off
 12412 09:A92C: A7 24        	lda	[<L430+data_0]
 12413 09:A92E: A0 08 00     	ldy	#$8
 12414 09:A931: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12415 09:A933: C2 20        	rep	#$20
 12416                        	longa	on
 12417                        ;
 12418                        ;  /** Saut de Page **/
 12419                        ;  if((current_SuperInterseg2536->Count & 0x80) ==
                     0x80)
 12420                        	.line	1738
 12421                        ;    {
 12422 09:A935: A0 08 00     	ldy	#$8
 12423 09:A938: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12424 09:A93A: 29 80 00     	and	#<$80
 12425 09:A93D: 85 01        	sta	<R0
 12426 09:A93F: A5 01        	lda	<R0
 12427 09:A941: C9 80 00     	cmp	#<$80
 12428 09:A944: F0 03        	beq	L435
 12429 09:A946: 82 24 00     	brl	L10284
 12430                        L435:
 12431                        	.line	1739
 12432                        ;      /* On saute X pages */
 12433                        ;      *page_rtn = *page_rtn + (current_SuperInter
                    seg2536->Count & 0x7F);
 12434                        	.line	1741
 12435 09:A949: E2 20        	sep	#$20
 12436                        	longa	off
 12437 09:A94B: A0 08 00     	ldy	#$8
 12438 09:A94E: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12439 09:A950: 29 7F        	and	#<$7f
 12440 09:A952: 85 01        	sta	<R0
 12441 09:A954: C2 20        	rep	#$20
 12442                        	longa	on
 12443 09:A956: E2 20        	sep	#$20
 12444                        	longa	off
 12445 09:A958: 18           	clc
 12446 09:A959: A7 30        	lda	[<L430+page_rtn_0]
 12447 09:A95B: 65 01        	adc	<R0
 12448 09:A95D: C2 20        	rep	#$20
 12449                        	longa	on
 12450 09:A95F: E2 20        	sep	#$20
 12451                        	longa	off
 12452 09:A961: 87 30        	sta	[<L430+page_rtn_0]
 12453 09:A963: C2 20        	rep	#$20
 12454                        	longa	on
 12455                        ;
  Thu Dec  3 2020 22:25                                                Page 230


 12456                        ;      /* Longueur du SubRecord */
 12457                        ;      *length_rtn = 1;
 12458                        	.line	1744
 12459 09:A965: A9 01 00     	lda	#$1
 12460 09:A968: 87 34        	sta	[<L430+length_rtn_0]
 12461                        ;    }
 12462                        	.line	1745
 12463                        ;  else
 12464 09:A96A: 82 BF 02     	brl	L10285
 12465                        L10284:
 12466                        ;    {
 12467                        	.line	1747
 12468                        ;      /* Number of Bytes to be relocated = Toujou
                    rs à 2 */
 12469                        ;      current_SuperInterseg2536->ByteCnt = 0x02;
 12470                        	.line	1749
 12471 09:A96D: E2 20        	sep	#$20
 12472                        	longa	off
 12473 09:A96F: A9 02        	lda	#$2
 12474 09:A971: A0 09 00     	ldy	#$9
 12475 09:A974: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12476 09:A976: C2 20        	rep	#$20
 12477                        	longa	on
 12478                        ;
 12479                        ;      /* Opérations >> ou << = Toujours à 0xF0  *
                    /
 12480                        ;      current_SuperInterseg2536->BitShiftCnt = 0x
                    F0;
 12481                        	.line	1752
 12482 09:A978: E2 20        	sep	#$20
 12483                        	longa	off
 12484 09:A97A: A9 F0        	lda	#$f0
 12485 09:A97C: A0 0A 00     	ldy	#$a
 12486 09:A97F: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12487 09:A981: C2 20        	rep	#$20
 12488                        	longa	on
 12489                        ;
 12490                        ;      /* Segment Number */
 12491                        ;      current_SuperInterseg2536->SegNum = SegNum;
 12492                        	.line	1755
 12493 09:A983: E2 20        	sep	#$20
 12494                        	longa	off
 12495 09:A985: A5 28        	lda	<L430+SegNum_0
 12496 09:A987: A0 0B 00     	ldy	#$b
 12497 09:A98A: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12498 09:A98C: C2 20        	rep	#$20
 12499                        	longa	on
 12500                        ;
 12501                        ;      /* File Number toujours à 1 */
 12502                        ;      current_SuperInterseg2536->FileNum = 1;
 12503                        	.line	1758
 12504 09:A98E: A9 01 00     	lda	#$1
 12505 09:A991: A0 0C 00     	ldy	#$c
 12506 09:A994: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12507                        ;
 12508                        ;      /* Nombre d'adresse */
 12509                        ;      current_SuperInterseg2536->nb_address = cur
                    rent_SuperInterseg2536->Count + 1;
  Thu Dec  3 2020 22:25                                                Page 231


 12510                        	.line	1761
 12511 09:A996: A0 08 00     	ldy	#$8
 12512 09:A999: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12513 09:A99B: 29 FF 00     	and	#$ff
 12514 09:A99E: 85 01        	sta	<R0
 12515 09:A9A0: A5 01        	lda	<R0
 12516 09:A9A2: 1A           	ina
 12517 09:A9A3: A0 0E 00     	ldy	#$e
 12518 09:A9A6: 97 1D        	sta	[<L431+current_SuperInterseg2536_1],Y
 12519                        ;
 12520                        ;      /** Copie les adresses **/
 12521                        ;      for(i=0; i<current_SuperInterseg2536->nb_ad
                    dress; i++)
 12522                        	.line	1764
 12523 09:A9A8: 64 19        	stz	<L431+i_1
 12524 09:A9AA: 82 58 02     	brl	L10289
 12525                        L10288:
 12526                        ;        {
 12527                        	.line	1765
 12528                        ;          /* Décode OffsetPath et OffsetReference
                     */
 12529                        ;          current_SuperInterseg2536->OffsetPatch[
                    i] = ((WORD)*page_rtn) << 8 | data[1+i];
 12530                        	.line	1767
 12531 09:A9AD: A0 00 00     	ldy	#$0
 12532 09:A9B0: A5 19        	lda	<L431+i_1
 12533 09:A9B2: 10 01        	bpl	L436
 12534 09:A9B4: 88           	dey
 12535                        L436:
 12536 09:A9B5: 85 05        	sta	<R1
 12537 09:A9B7: 84 07        	sty	<R1+2
 12538 09:A9B9: D4 07        	pei	<R1+2
 12539 09:A9BB: D4 05        	pei	<R1
 12540 09:A9BD: A9 02 00     	lda	#$2
 12541                        	xref	~~~lasl
 12542 09:A9C0: 22 xx xx xx  	jsl	~~~lasl
 12543 09:A9C4: 85 01        	sta	<R0
 12544 09:A9C6: 86 03        	stx	<R0+2
 12545 09:A9C8: 18           	clc
 12546 09:A9C9: A9 10 00     	lda	#$10
 12547 09:A9CC: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12548 09:A9CE: 85 09        	sta	<R2
 12549 09:A9D0: A9 00 00     	lda	#$0
 12550 09:A9D3: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12551 09:A9D5: 85 0B        	sta	<R2+2
 12552 09:A9D7: 18           	clc
 12553 09:A9D8: A5 09        	lda	<R2
 12554 09:A9DA: 65 01        	adc	<R0
 12555 09:A9DC: 85 0D        	sta	<R3
 12556 09:A9DE: A5 0B        	lda	<R2+2
 12557 09:A9E0: 65 03        	adc	<R0+2
 12558 09:A9E2: 85 0F        	sta	<R3+2
 12559 09:A9E4: A5 19        	lda	<L431+i_1
 12560 09:A9E6: 1A           	ina
 12561 09:A9E7: 85 01        	sta	<R0
 12562 09:A9E9: A4 01        	ldy	<R0
 12563 09:A9EB: B7 24        	lda	[<L430+data_0],Y
 12564 09:A9ED: 29 FF 00     	and	#$ff
  Thu Dec  3 2020 22:25                                                Page 232


 12565 09:A9F0: 85 09        	sta	<R2
 12566 09:A9F2: A7 30        	lda	[<L430+page_rtn_0]
 12567 09:A9F4: 29 FF 00     	and	#$ff
 12568 09:A9F7: 85 15        	sta	<21
 12569 09:A9F9: A5 15        	lda	<21
 12570 09:A9FB: EB           	xba
 12571 09:A9FC: 29 00 FF     	and	#$ff00
 12572 09:A9FF: 85 11        	sta	<17
 12573 09:AA01: A5 11        	lda	<17
 12574 09:AA03: 05 09        	ora	<R2
 12575 09:AA05: 85 15        	sta	<21
 12576 09:AA07: A0 00 00     	ldy	#$0
 12577 09:AA0A: A5 15        	lda	<21
 12578 09:AA0C: 10 01        	bpl	L437
 12579 09:AA0E: 88           	dey
 12580                        L437:
 12581 09:AA0F: 85 09        	sta	<R2
 12582 09:AA11: 84 0B        	sty	<R2+2
 12583 09:AA13: A5 09        	lda	<R2
 12584 09:AA15: 87 0D        	sta	[<R3]
 12585 09:AA17: A5 0B        	lda	<R2+2
 12586 09:AA19: A0 02 00     	ldy	#$2
 12587 09:AA1C: 97 0D        	sta	[<R3],Y
 12588                        ;          
 12589                        ;          /* On vérifie qu'on reste dans les limi
                    te du LCONST */
 12590                        ;          if(current_SuperInterseg2536->OffsetPat
                    ch[i] > (DWORD) lconst_length)
 12591                        	.line	1770
 12592                        ;            {
 12593 09:AA1E: A0 00 00     	ldy	#$0
 12594 09:AA21: A5 2E        	lda	<L430+lconst_length_0
 12595 09:AA23: 10 01        	bpl	L438
 12596 09:AA25: 88           	dey
 12597                        L438:
 12598 09:AA26: 85 01        	sta	<R0
 12599 09:AA28: 84 03        	sty	<R0+2
 12600 09:AA2A: A0 00 00     	ldy	#$0
 12601 09:AA2D: A5 19        	lda	<L431+i_1
 12602 09:AA2F: 10 01        	bpl	L439
 12603 09:AA31: 88           	dey
 12604                        L439:
 12605 09:AA32: 85 09        	sta	<R2
 12606 09:AA34: 84 0B        	sty	<R2+2
 12607 09:AA36: D4 0B        	pei	<R2+2
 12608 09:AA38: D4 09        	pei	<R2
 12609 09:AA3A: A9 02 00     	lda	#$2
 12610                        	xref	~~~lasl
 12611 09:AA3D: 22 xx xx xx  	jsl	~~~lasl
 12612 09:AA41: 85 05        	sta	<R1
 12613 09:AA43: 86 07        	stx	<R1+2
 12614 09:AA45: 18           	clc
 12615 09:AA46: A9 10 00     	lda	#$10
 12616 09:AA49: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12617 09:AA4B: 85 0D        	sta	<R3
 12618 09:AA4D: A9 00 00     	lda	#$0
 12619 09:AA50: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12620 09:AA52: 85 0F        	sta	<R3+2
  Thu Dec  3 2020 22:25                                                Page 233


 12621 09:AA54: 18           	clc
 12622 09:AA55: A5 0D        	lda	<R3
 12623 09:AA57: 65 05        	adc	<R1
 12624 09:AA59: 85 11        	sta	<17
 12625 09:AA5B: A5 0F        	lda	<R3+2
 12626 09:AA5D: 65 07        	adc	<R1+2
 12627 09:AA5F: 85 13        	sta	<17+2
 12628 09:AA61: A5 01        	lda	<R0
 12629 09:AA63: C7 11        	cmp	[<17]
 12630 09:AA65: A5 03        	lda	<R0+2
 12631 09:AA67: A0 02 00     	ldy	#$2
 12632 09:AA6A: F7 11        	sbc	[<17],Y
 12633 09:AA6C: 90 03        	bcc	L440
 12634 09:AA6E: 82 47 00     	brl	L10290
 12635                        L440:
 12636                        	.line	1771
 12637                        ;              current_SuperInterseg2536->OffsetRe
                    ference[i] = 0xFFFF;     /* Erreur */
 12638                        	.line	1772
 12639 09:AA71: A0 00 00     	ldy	#$0
 12640 09:AA74: A5 19        	lda	<L431+i_1
 12641 09:AA76: 10 01        	bpl	L441
 12642 09:AA78: 88           	dey
 12643                        L441:
 12644 09:AA79: 85 05        	sta	<R1
 12645 09:AA7B: 84 07        	sty	<R1+2
 12646 09:AA7D: D4 07        	pei	<R1+2
 12647 09:AA7F: D4 05        	pei	<R1
 12648 09:AA81: A9 02 00     	lda	#$2
 12649                        	xref	~~~lasl
 12650 09:AA84: 22 xx xx xx  	jsl	~~~lasl
 12651 09:AA88: 85 01        	sta	<R0
 12652 09:AA8A: 86 03        	stx	<R0+2
 12653 09:AA8C: 18           	clc
 12654 09:AA8D: A9 10 04     	lda	#$410
 12655 09:AA90: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12656 09:AA92: 85 09        	sta	<R2
 12657 09:AA94: A9 00 00     	lda	#$0
 12658 09:AA97: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12659 09:AA99: 85 0B        	sta	<R2+2
 12660 09:AA9B: 18           	clc
 12661 09:AA9C: A5 09        	lda	<R2
 12662 09:AA9E: 65 01        	adc	<R0
 12663 09:AAA0: 85 0D        	sta	<R3
 12664 09:AAA2: A5 0B        	lda	<R2+2
 12665 09:AAA4: 65 03        	adc	<R0+2
 12666 09:AAA6: 85 0F        	sta	<R3+2
 12667 09:AAA8: A9 FF FF     	lda	#$ffff
 12668 09:AAAB: 87 0D        	sta	[<R3]
 12669 09:AAAD: A9 00 00     	lda	#$0
 12670 09:AAB0: A0 02 00     	ldy	#$2
 12671 09:AAB3: 97 0D        	sta	[<R3],Y
 12672                        ;              //printf("  Error : Bad Reference A
                    ddress in SuperInterseg2536 for Offset %04X in Segment #%02X
                    .\n",current_SuperInterseg2536->OffsetPatch[i],current_segme
                    nt->header.SegNum);
 12673                        ;            }
 12674                        	.line	1774
  Thu Dec  3 2020 22:25                                                Page 234


 12675                        ;          else
 12676 09:AAB5: 82 A9 00     	brl	L10291
 12677                        L10290:
 12678                        ;            {          
 12679                        	.line	1776
 12680                        ;              memcpy(&one_word,&lconst[current_Su
                    perInterseg2536->OffsetPatch[i]],sizeof(WORD));
 12681                        	.line	1777
 12682 09:AAB8: F4 02 00     	pea	#<$2
 12683 09:AABB: A0 00 00     	ldy	#$0
 12684 09:AABE: A5 19        	lda	<L431+i_1
 12685 09:AAC0: 10 01        	bpl	L442
 12686 09:AAC2: 88           	dey
 12687                        L442:
 12688 09:AAC3: 85 05        	sta	<R1
 12689 09:AAC5: 84 07        	sty	<R1+2
 12690 09:AAC7: D4 07        	pei	<R1+2
 12691 09:AAC9: D4 05        	pei	<R1
 12692 09:AACB: A9 02 00     	lda	#$2
 12693                        	xref	~~~lasl
 12694 09:AACE: 22 xx xx xx  	jsl	~~~lasl
 12695 09:AAD2: 85 01        	sta	<R0
 12696 09:AAD4: 86 03        	stx	<R0+2
 12697 09:AAD6: 18           	clc
 12698 09:AAD7: A9 10 00     	lda	#$10
 12699 09:AADA: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12700 09:AADC: 85 09        	sta	<R2
 12701 09:AADE: A9 00 00     	lda	#$0
 12702 09:AAE1: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12703 09:AAE3: 85 0B        	sta	<R2+2
 12704 09:AAE5: 18           	clc
 12705 09:AAE6: A5 09        	lda	<R2
 12706 09:AAE8: 65 01        	adc	<R0
 12707 09:AAEA: 85 0D        	sta	<R3
 12708 09:AAEC: A5 0B        	lda	<R2+2
 12709 09:AAEE: 65 03        	adc	<R0+2
 12710 09:AAF0: 85 0F        	sta	<R3+2
 12711 09:AAF2: 18           	clc
 12712 09:AAF3: A5 2A        	lda	<L430+lconst_0
 12713 09:AAF5: 67 0D        	adc	[<R3]
 12714 09:AAF7: 85 01        	sta	<R0
 12715 09:AAF9: A5 2C        	lda	<L430+lconst_0+2
 12716 09:AAFB: A0 02 00     	ldy	#$2
 12717 09:AAFE: 77 0D        	adc	[<R3],Y
 12718 09:AB00: 85 03        	sta	<R0+2
 12719 09:AB02: D4 03        	pei	<R0+2
 12720 09:AB04: D4 01        	pei	<R0
 12721 09:AB06: F4 00 00     	pea	#0
 12722 09:AB09: 18           	clc
 12723 09:AB0A: 7B           	tdc
 12724 09:AB0B: 69 1B 00     	adc	#<L431+one_word_1
 12725 09:AB0E: 48           	pha
 12726 09:AB0F: 22 xx xx xx  	jsl	~~memcpy
 12727                        ;              current_SuperInterseg2536->OffsetRe
                    ference[i] = (DWORD) one_word;
 12728                        	.line	1778
 12729 09:AB13: A0 00 00     	ldy	#$0
 12730 09:AB16: A5 19        	lda	<L431+i_1
  Thu Dec  3 2020 22:25                                                Page 235


 12731 09:AB18: 10 01        	bpl	L443
 12732 09:AB1A: 88           	dey
 12733                        L443:
 12734 09:AB1B: 85 05        	sta	<R1
 12735 09:AB1D: 84 07        	sty	<R1+2
 12736 09:AB1F: D4 07        	pei	<R1+2
 12737 09:AB21: D4 05        	pei	<R1
 12738 09:AB23: A9 02 00     	lda	#$2
 12739                        	xref	~~~lasl
 12740 09:AB26: 22 xx xx xx  	jsl	~~~lasl
 12741 09:AB2A: 85 01        	sta	<R0
 12742 09:AB2C: 86 03        	stx	<R0+2
 12743 09:AB2E: 18           	clc
 12744 09:AB2F: A9 10 04     	lda	#$410
 12745 09:AB32: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12746 09:AB34: 85 09        	sta	<R2
 12747 09:AB36: A9 00 00     	lda	#$0
 12748 09:AB39: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12749 09:AB3B: 85 0B        	sta	<R2+2
 12750 09:AB3D: 18           	clc
 12751 09:AB3E: A5 09        	lda	<R2
 12752 09:AB40: 65 01        	adc	<R0
 12753 09:AB42: 85 0D        	sta	<R3
 12754 09:AB44: A5 0B        	lda	<R2+2
 12755 09:AB46: 65 03        	adc	<R0+2
 12756 09:AB48: 85 0F        	sta	<R3+2
 12757 09:AB4A: A0 00 00     	ldy	#$0
 12758 09:AB4D: A5 1B        	lda	<L431+one_word_1
 12759 09:AB4F: 10 01        	bpl	L444
 12760 09:AB51: 88           	dey
 12761                        L444:
 12762 09:AB52: 85 01        	sta	<R0
 12763 09:AB54: 84 03        	sty	<R0+2
 12764 09:AB56: A5 01        	lda	<R0
 12765 09:AB58: 87 0D        	sta	[<R3]
 12766 09:AB5A: A5 03        	lda	<R0+2
 12767 09:AB5C: A0 02 00     	ldy	#$2
 12768 09:AB5F: 97 0D        	sta	[<R3],Y
 12769                        ;            }
 12770                        	.line	1779
 12771                        L10291:
 12772                        ;             
 12773                        ;          /* Conserve ce INTERSEG */
 12774                        ;          AddInterseg(current_SuperInterseg2536->
                    ByteCnt,current_SuperInterseg2536->BitShiftCnt,current_Super
                    Interseg2536->OffsetPatch[i],current_SuperInterseg2536->Offs
                    etReference[i],current_SuperInterseg2536->FileNum,current_Su
                    perInterseg2536->SegNum,RECORD_SUPER_INTERSEG2536);
 12775                        	.line	1782
 12776 09:AB61: F4 0A 00     	pea	#<$a
 12777 09:AB64: A0 0B 00     	ldy	#$b
 12778 09:AB67: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12779 09:AB69: 29 FF 00     	and	#$ff
 12780 09:AB6C: 48           	pha
 12781 09:AB6D: A0 0C 00     	ldy	#$c
 12782 09:AB70: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12783 09:AB72: 48           	pha
 12784 09:AB73: A0 00 00     	ldy	#$0
  Thu Dec  3 2020 22:25                                                Page 236


 12785 09:AB76: A5 19        	lda	<L431+i_1
 12786 09:AB78: 10 01        	bpl	L445
 12787 09:AB7A: 88           	dey
 12788                        L445:
 12789 09:AB7B: 85 05        	sta	<R1
 12790 09:AB7D: 84 07        	sty	<R1+2
 12791 09:AB7F: D4 07        	pei	<R1+2
 12792 09:AB81: D4 05        	pei	<R1
 12793 09:AB83: A9 02 00     	lda	#$2
 12794                        	xref	~~~lasl
 12795 09:AB86: 22 xx xx xx  	jsl	~~~lasl
 12796 09:AB8A: 85 01        	sta	<R0
 12797 09:AB8C: 86 03        	stx	<R0+2
 12798 09:AB8E: 18           	clc
 12799 09:AB8F: A9 10 04     	lda	#$410
 12800 09:AB92: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12801 09:AB94: 85 09        	sta	<R2
 12802 09:AB96: A9 00 00     	lda	#$0
 12803 09:AB99: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12804 09:AB9B: 85 0B        	sta	<R2+2
 12805 09:AB9D: 18           	clc
 12806 09:AB9E: A5 09        	lda	<R2
 12807 09:ABA0: 65 01        	adc	<R0
 12808 09:ABA2: 85 0D        	sta	<R3
 12809 09:ABA4: A5 0B        	lda	<R2+2
 12810 09:ABA6: 65 03        	adc	<R0+2
 12811 09:ABA8: 85 0F        	sta	<R3+2
 12812 09:ABAA: A0 02 00     	ldy	#$2
 12813 09:ABAD: B7 0D        	lda	[<R3],Y
 12814 09:ABAF: 48           	pha
 12815 09:ABB0: A7 0D        	lda	[<R3]
 12816 09:ABB2: 48           	pha
 12817 09:ABB3: A0 00 00     	ldy	#$0
 12818 09:ABB6: A5 19        	lda	<L431+i_1
 12819 09:ABB8: 10 01        	bpl	L446
 12820 09:ABBA: 88           	dey
 12821                        L446:
 12822 09:ABBB: 85 09        	sta	<R2
 12823 09:ABBD: 84 0B        	sty	<R2+2
 12824 09:ABBF: D4 0B        	pei	<R2+2
 12825 09:ABC1: D4 09        	pei	<R2
 12826 09:ABC3: A9 02 00     	lda	#$2
 12827                        	xref	~~~lasl
 12828 09:ABC6: 22 xx xx xx  	jsl	~~~lasl
 12829 09:ABCA: 85 01        	sta	<R0
 12830 09:ABCC: 86 03        	stx	<R0+2
 12831 09:ABCE: 18           	clc
 12832 09:ABCF: A9 10 00     	lda	#$10
 12833 09:ABD2: 65 1D        	adc	<L431+current_SuperInterseg2536_1
 12834 09:ABD4: 85 0D        	sta	<R3
 12835 09:ABD6: A9 00 00     	lda	#$0
 12836 09:ABD9: 65 1F        	adc	<L431+current_SuperInterseg2536_1+2
 12837 09:ABDB: 85 0F        	sta	<R3+2
 12838 09:ABDD: 18           	clc
 12839 09:ABDE: A5 0D        	lda	<R3
 12840 09:ABE0: 65 01        	adc	<R0
 12841 09:ABE2: 85 11        	sta	<17
 12842 09:ABE4: A5 0F        	lda	<R3+2
  Thu Dec  3 2020 22:25                                                Page 237


 12843 09:ABE6: 65 03        	adc	<R0+2
 12844 09:ABE8: 85 13        	sta	<17+2
 12845 09:ABEA: A0 02 00     	ldy	#$2
 12846 09:ABED: B7 11        	lda	[<17],Y
 12847 09:ABEF: 48           	pha
 12848 09:ABF0: A7 11        	lda	[<17]
 12849 09:ABF2: 48           	pha
 12850 09:ABF3: A0 0A 00     	ldy	#$a
 12851 09:ABF6: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12852 09:ABF8: 48           	pha
 12853 09:ABF9: A0 09 00     	ldy	#$9
 12854 09:ABFC: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12855 09:ABFE: 48           	pha
 12856 09:ABFF: 22 A9 AC 09  	jsl	~~AddInterseg
 12857                        ;        }
 12858                        	.line	1783
 12859                        L10286:
 12860 09:AC03: E6 19        	inc	<L431+i_1
 12861                        L10289:
 12862 09:AC05: 38           	sec
 12863 09:AC06: A5 19        	lda	<L431+i_1
 12864 09:AC08: A0 0E 00     	ldy	#$e
 12865 09:AC0B: F7 1D        	sbc	[<L431+current_SuperInterseg2536_1],Y
 12866 09:AC0D: 70 03        	bvs	L447
 12867 09:AC0F: 49 00 80     	eor	#$8000
 12868                        L447:
 12869 09:AC12: 30 03        	bmi	L448
 12870 09:AC14: 82 96 FD     	brl	L10288
 12871                        L448:
 12872                        L10287:
 12873                        ;
 12874                        ;      /* Page suivante */
 12875                        ;      *page_rtn = *page_rtn + 1;
 12876                        	.line	1786
 12877 09:AC17: E2 20        	sep	#$20
 12878                        	longa	off
 12879 09:AC19: A7 30        	lda	[<L430+page_rtn_0]
 12880 09:AC1B: 1A           	ina
 12881 09:AC1C: C2 20        	rep	#$20
 12882                        	longa	on
 12883 09:AC1E: E2 20        	sep	#$20
 12884                        	longa	off
 12885 09:AC20: 87 30        	sta	[<L430+page_rtn_0]
 12886 09:AC22: C2 20        	rep	#$20
 12887                        	longa	on
 12888                        ;
 12889                        ;      /* Longueur du SubRecord */
 12890                        ;      *length_rtn = 1 + current_SuperInterseg2536
                    ->nb_address*sizeof(BYTE);
 12891                        	.line	1789
 12892 09:AC24: A0 0E 00     	ldy	#$e
 12893 09:AC27: B7 1D        	lda	[<L431+current_SuperInterseg2536_1],Y
 12894 09:AC29: 1A           	ina
 12895 09:AC2A: 87 34        	sta	[<L430+length_rtn_0]
 12896                        ;    }
 12897                        	.line	1790
 12898                        L10285:
 12899                        ;
  Thu Dec  3 2020 22:25                                                Page 238


 12900                        ;  /* Renvoie la structure */
 12901                        ;  return(current_SuperInterseg2536);
 12902                        	.line	1793
 12903 09:AC2C: A6 1F        	ldx	<L431+current_SuperInterseg2536_1+2
 12904 09:AC2E: A5 1D        	lda	<L431+current_SuperInterseg2536_1
 12905 09:AC30: 82 E5 FC     	brl	L434
 12906                        ;}
 12907                        	.line	1794
 12908                        	.endblock	1794
 12909             00000020   L430	equ	32
 12910             00000019   L431	equ	25
 12911 09:AC33:              	ends
 12912                        	efunc
 12913                        	.endfunc	1794,25,32
 12914                        	.line	1794
 12915                        ;
 12916                        ;
 12917                        ;/************************************************
                    *******/
 12918                        ;/*  AddReloc() :  On conserve les RELOC de ce Seg
                    ment. */
 12919                        ;/************************************************
                    *******/
 12920                        ;static void AddReloc(BYTE ByteCnt, BYTE BitShiftC
                    nt, DWORD OffsetPatch, DWORD OffsetReference, int origin)
 12921                        ;{
 12922                        	.line	1800
 12923                        	.line	1801
 12924                        	LOADER
 12925                        	func
 12926                        	.function	1801
 12927                        ~~AddReloc:
 12928                        	longa	on
 12929                        	longi	on
 12930 09:AC33: 3B           	tsc
 12931 09:AC34: 38           	sec
 12932 09:AC35: E9 04 00     	sbc	#L449
 12933 09:AC38: 1B           	tcs
 12934 09:AC39: 0B           	phd
 12935 09:AC3A: 5B           	tcd
 12936             00000004   ByteCnt_0	set	4
 12937             00000006   BitShiftCnt_0	set	6
 12938             00000008   OffsetPatch_0	set	8
 12939             0000000C   OffsetReference_0	set	12
 12940             00000010   origin_0	set	16
 12941                        	.block	1801
 12942                        ;  struct omf_reloc *current_reloc;
 12943                        ;
 12944                        ;  /* Allocation d'une structure Reloc */
 12945                        ;  current_reloc = (struct omf_reloc *) k_calloc(1
                    ,sizeof(struct omf_reloc));
 12946             00000000   current_reloc_1	set	0
 12947                        	.sym	current_reloc,0,138,1,32,100
 12948                        	.sym	ByteCnt,4,14,6,8
 12949                        	.sym	BitShiftCnt,6,14,6,8
 12950                        	.sym	OffsetPatch,8,18,6,32
 12951                        	.sym	OffsetReference,12,18,6,32
 12952                        	.sym	origin,16,5,6,16
  Thu Dec  3 2020 22:25                                                Page 239


 12953                        	.line	1805
 12954 09:AC3B: F4 10 00     	pea	#<$10
 12955 09:AC3E: F4 01 00     	pea	#<$1
 12956 09:AC41: 22 xx xx xx  	jsl	~~k_calloc
 12957 09:AC45: 85 01        	sta	<L450+current_reloc_1
 12958 09:AC47: 86 03        	stx	<L450+current_reloc_1+2
 12959                        ;  if(current_reloc == NULL)
 12960                        	.line	1806
 12961                        ;    ;
 12962 09:AC49: A5 01        	lda	<L450+current_reloc_1
 12963 09:AC4B: 05 03        	ora	<L450+current_reloc_1+2
 12964 09:AC4D: F0 03        	beq	L452
 12965 09:AC4F: 82 00 00     	brl	L10292
 12966                        L452:
 12967                        	.line	1807
 12968                        ;
 12969                        ;  /* Ajoute des valeurs */
 12970                        ;  current_reloc->ByteCnt = ByteCnt;
 12971                        L10292:
 12972                        	.line	1810
 12973 09:AC52: E2 20        	sep	#$20
 12974                        	longa	off
 12975 09:AC54: A5 08        	lda	<L449+ByteCnt_0
 12976 09:AC56: 87 01        	sta	[<L450+current_reloc_1]
 12977 09:AC58: C2 20        	rep	#$20
 12978                        	longa	on
 12979                        ;  current_reloc->BitShiftCnt = BitShiftCnt;
 12980                        	.line	1811
 12981 09:AC5A: E2 20        	sep	#$20
 12982                        	longa	off
 12983 09:AC5C: A5 0A        	lda	<L449+BitShiftCnt_0
 12984 09:AC5E: A0 01 00     	ldy	#$1
 12985 09:AC61: 97 01        	sta	[<L450+current_reloc_1],Y
 12986 09:AC63: C2 20        	rep	#$20
 12987                        	longa	on
 12988                        ;  current_reloc->OffsetPatch = OffsetPatch;
 12989                        	.line	1812
 12990 09:AC65: A5 0C        	lda	<L449+OffsetPatch_0
 12991 09:AC67: A0 02 00     	ldy	#$2
 12992 09:AC6A: 97 01        	sta	[<L450+current_reloc_1],Y
 12993 09:AC6C: A5 0E        	lda	<L449+OffsetPatch_0+2
 12994 09:AC6E: A0 04 00     	ldy	#$4
 12995 09:AC71: 97 01        	sta	[<L450+current_reloc_1],Y
 12996                        ;  current_reloc->OffsetReference = OffsetReferenc
                    e;
 12997                        	.line	1813
 12998 09:AC73: A5 10        	lda	<L449+OffsetReference_0
 12999 09:AC75: A0 06 00     	ldy	#$6
 13000 09:AC78: 97 01        	sta	[<L450+current_reloc_1],Y
 13001 09:AC7A: A5 12        	lda	<L449+OffsetReference_0+2
 13002 09:AC7C: A0 08 00     	ldy	#$8
 13003 09:AC7F: 97 01        	sta	[<L450+current_reloc_1],Y
 13004                        ;
 13005                        ;  /* Origine du Reloc */
 13006                        ;  current_reloc->origin = origin;
 13007                        	.line	1816
 13008 09:AC81: A5 14        	lda	<L449+origin_0
 13009 09:AC83: A0 0A 00     	ldy	#$a
  Thu Dec  3 2020 22:25                                                Page 240


 13010 09:AC86: 97 01        	sta	[<L450+current_reloc_1],Y
 13011                        ;
 13012                        ;  /* Conserve la structure */
 13013                        ;  my_Memory(MEMORY_ADD_RELOC,current_reloc,NULL);
 13014                        	.line	1819
 13015 09:AC88: F4 00 00     	pea	#^$0
 13016 09:AC8B: F4 00 00     	pea	#<$0
 13017 09:AC8E: D4 03        	pei	<L450+current_reloc_1+2
 13018 09:AC90: D4 01        	pei	<L450+current_reloc_1
 13019 09:AC92: F4 0A 00     	pea	#<$a
 13020 09:AC95: 22 xx xx xx  	jsl	~~my_Memory
 13021                        ;}
 13022                        	.line	1820
 13023                        L453:
 13024 09:AC99: A5 06        	lda	<L449+2
 13025 09:AC9B: 85 14        	sta	<L449+2+14
 13026 09:AC9D: A5 05        	lda	<L449+1
 13027 09:AC9F: 85 13        	sta	<L449+1+14
 13028 09:ACA1: 2B           	pld
 13029 09:ACA2: 3B           	tsc
 13030 09:ACA3: 18           	clc
 13031 09:ACA4: 69 12 00     	adc	#L449+14
 13032 09:ACA7: 1B           	tcs
 13033 09:ACA8: 6B           	rtl
 13034                        	.endblock	1820
 13035             00000004   L449	equ	4
 13036             00000001   L450	equ	1
 13037 09:ACA9:              	ends
 13038                        	efunc
 13039                        	.endfunc	1820,1,4
 13040                        	.line	1820
 13041                        ;
 13042                        ;
 13043                        ;/************************************************
                    *************/
 13044                        ;/*  AddInterseg() :  On conserve les INTERSEG de 
                    ce Segment. */
 13045                        ;/************************************************
                    *************/
 13046                        ;static void AddInterseg(BYTE ByteCnt, BYTE BitShi
                    ftCnt, DWORD OffsetPatch, DWORD OffsetReference, WORD FileNu
                    m, WORD SegNum, int origin)
 13047                        ;{
 13048                        	.line	1826
 13049                        	.line	1827
 13050                        	LOADER
 13051                        	func
 13052                        	.function	1827
 13053                        ~~AddInterseg:
 13054                        	longa	on
 13055                        	longi	on
 13056 09:ACA9: 3B           	tsc
 13057 09:ACAA: 38           	sec
 13058 09:ACAB: E9 04 00     	sbc	#L454
 13059 09:ACAE: 1B           	tcs
 13060 09:ACAF: 0B           	phd
 13061 09:ACB0: 5B           	tcd
 13062             00000004   ByteCnt_0	set	4
  Thu Dec  3 2020 22:25                                                Page 241


 13063             00000006   BitShiftCnt_0	set	6
 13064             00000008   OffsetPatch_0	set	8
 13065             0000000C   OffsetReference_0	set	12
 13066             00000010   FileNum_0	set	16
 13067             00000012   SegNum_0	set	18
 13068             00000014   origin_0	set	20
 13069                        	.block	1827
 13070                        ;  struct omf_interseg *current_interseg;
 13071                        ;
 13072                        ;  /* Allocation d'une structure Reloc */
 13073                        ;  current_interseg = (struct omf_interseg *) k_ca
                    lloc(1,sizeof(struct omf_interseg));
 13074             00000000   current_interseg_1	set	0
 13075                        	.sym	current_interseg,0,138,1,32,101
 13076                        	.sym	ByteCnt,4,14,6,8
 13077                        	.sym	BitShiftCnt,6,14,6,8
 13078                        	.sym	OffsetPatch,8,18,6,32
 13079                        	.sym	OffsetReference,12,18,6,32
 13080                        	.sym	FileNum,16,5,6,16
 13081                        	.sym	SegNum,18,5,6,16
 13082                        	.sym	origin,20,5,6,16
 13083                        	.line	1831
 13084 09:ACB1: F4 14 00     	pea	#<$14
 13085 09:ACB4: F4 01 00     	pea	#<$1
 13086 09:ACB7: 22 xx xx xx  	jsl	~~k_calloc
 13087 09:ACBB: 85 01        	sta	<L455+current_interseg_1
 13088 09:ACBD: 86 03        	stx	<L455+current_interseg_1+2
 13089                        ;  if(current_interseg == NULL)
 13090                        	.line	1832
 13091                        ;    ;
 13092 09:ACBF: A5 01        	lda	<L455+current_interseg_1
 13093 09:ACC1: 05 03        	ora	<L455+current_interseg_1+2
 13094 09:ACC3: F0 03        	beq	L457
 13095 09:ACC5: 82 00 00     	brl	L10293
 13096                        L457:
 13097                        	.line	1833
 13098                        ;
 13099                        ;  /* Ajoute des valeurs */
 13100                        ;  current_interseg->ByteCnt = ByteCnt;
 13101                        L10293:
 13102                        	.line	1836
 13103 09:ACC8: E2 20        	sep	#$20
 13104                        	longa	off
 13105 09:ACCA: A5 08        	lda	<L454+ByteCnt_0
 13106 09:ACCC: 87 01        	sta	[<L455+current_interseg_1]
 13107 09:ACCE: C2 20        	rep	#$20
 13108                        	longa	on
 13109                        ;  current_interseg->BitShiftCnt = BitShiftCnt;
 13110                        	.line	1837
 13111 09:ACD0: E2 20        	sep	#$20
 13112                        	longa	off
 13113 09:ACD2: A5 0A        	lda	<L454+BitShiftCnt_0
 13114 09:ACD4: A0 01 00     	ldy	#$1
 13115 09:ACD7: 97 01        	sta	[<L455+current_interseg_1],Y
 13116 09:ACD9: C2 20        	rep	#$20
 13117                        	longa	on
 13118                        ;  current_interseg->OffsetPatch = OffsetPatch;
 13119                        	.line	1838
  Thu Dec  3 2020 22:25                                                Page 242


 13120 09:ACDB: A5 0C        	lda	<L454+OffsetPatch_0
 13121 09:ACDD: A0 02 00     	ldy	#$2
 13122 09:ACE0: 97 01        	sta	[<L455+current_interseg_1],Y
 13123 09:ACE2: A5 0E        	lda	<L454+OffsetPatch_0+2
 13124 09:ACE4: A0 04 00     	ldy	#$4
 13125 09:ACE7: 97 01        	sta	[<L455+current_interseg_1],Y
 13126                        ;  current_interseg->OffsetReference = OffsetRefer
                    ence;
 13127                        	.line	1839
 13128 09:ACE9: A5 10        	lda	<L454+OffsetReference_0
 13129 09:ACEB: A0 06 00     	ldy	#$6
 13130 09:ACEE: 97 01        	sta	[<L455+current_interseg_1],Y
 13131 09:ACF0: A5 12        	lda	<L454+OffsetReference_0+2
 13132 09:ACF2: A0 08 00     	ldy	#$8
 13133 09:ACF5: 97 01        	sta	[<L455+current_interseg_1],Y
 13134                        ;  current_interseg->FileNum = FileNum;
 13135                        	.line	1840
 13136 09:ACF7: A5 14        	lda	<L454+FileNum_0
 13137 09:ACF9: A0 0A 00     	ldy	#$a
 13138 09:ACFC: 97 01        	sta	[<L455+current_interseg_1],Y
 13139                        ;  current_interseg->SegNum = SegNum;
 13140                        	.line	1841
 13141 09:ACFE: A5 16        	lda	<L454+SegNum_0
 13142 09:AD00: A0 0C 00     	ldy	#$c
 13143 09:AD03: 97 01        	sta	[<L455+current_interseg_1],Y
 13144                        ;
 13145                        ;  /* Origine du Reloc */
 13146                        ;  current_interseg->origin = origin;
 13147                        	.line	1844
 13148 09:AD05: A5 18        	lda	<L454+origin_0
 13149 09:AD07: A0 0E 00     	ldy	#$e
 13150 09:AD0A: 97 01        	sta	[<L455+current_interseg_1],Y
 13151                        ;
 13152                        ;  /* Conserve la structure */
 13153                        ;  my_Memory(MEMORY_ADD_INTERSEG,current_interseg,
                    NULL);
 13154                        	.line	1847
 13155 09:AD0C: F4 00 00     	pea	#^$0
 13156 09:AD0F: F4 00 00     	pea	#<$0
 13157 09:AD12: D4 03        	pei	<L455+current_interseg_1+2
 13158 09:AD14: D4 01        	pei	<L455+current_interseg_1
 13159 09:AD16: F4 14 00     	pea	#<$14
 13160 09:AD19: 22 xx xx xx  	jsl	~~my_Memory
 13161                        ;}
 13162                        	.line	1848
 13163                        L458:
 13164 09:AD1D: A5 06        	lda	<L454+2
 13165 09:AD1F: 85 18        	sta	<L454+2+18
 13166 09:AD21: A5 05        	lda	<L454+1
 13167 09:AD23: 85 17        	sta	<L454+1+18
 13168 09:AD25: 2B           	pld
 13169 09:AD26: 3B           	tsc
 13170 09:AD27: 18           	clc
 13171 09:AD28: 69 16 00     	adc	#L454+18
 13172 09:AD2B: 1B           	tcs
 13173 09:AD2C: 6B           	rtl
 13174                        	.endblock	1848
 13175             00000004   L454	equ	4
  Thu Dec  3 2020 22:25                                                Page 243


 13176             00000001   L455	equ	1
 13177 09:AD2D:              	ends
 13178                        	efunc
 13179                        	.endfunc	1848,1,4
 13180                        	.line	1848
 13181                        ;
 13182                        ;
 13183                        ;/************************************************
                    *********************/
 13184                        ;/*  mem_free_END() :  Libération mémoire de la st
                    ructure record_END. */
 13185                        ;/************************************************
                    *********************/
 13186                        ;static void mem_free_END(struct record_END *curre
                    nt_record)
 13187                        ;{
 13188                        	.line	1854
 13189                        	.line	1855
 13190                        	LOADER
 13191                        	func
 13192                        	.function	1855
 13193                        ~~mem_free_END:
 13194                        	longa	on
 13195                        	longi	on
 13196 09:AD2D: 3B           	tsc
 13197 09:AD2E: 38           	sec
 13198 09:AD2F: E9 00 00     	sbc	#L459
 13199 09:AD32: 1B           	tcs
 13200 09:AD33: 0B           	phd
 13201 09:AD34: 5B           	tcd
 13202             00000004   current_record_0	set	4
 13203                        	.block	1855
 13204                        ;  if(current_record)
 13205                        	.sym	current_record,4,138,6,32,74
 13206                        	.line	1856
 13207                        ;    {
 13208 09:AD35: A5 04        	lda	<L459+current_record_0
 13209 09:AD37: 05 06        	ora	<L459+current_record_0+2
 13210 09:AD39: D0 03        	bne	L462
 13211 09:AD3B: 82 08 00     	brl	L10294
 13212                        L462:
 13213                        	.line	1857
 13214                        ;      k_free(current_record);
 13215                        	.line	1858
 13216 09:AD3E: D4 06        	pei	<L459+current_record_0+2
 13217 09:AD40: D4 04        	pei	<L459+current_record_0
 13218 09:AD42: 22 xx xx xx  	jsl	~~k_free
 13219                        ;    }
 13220                        	.line	1859
 13221                        ;}
 13222                        L10294:
 13223                        	.line	1860
 13224                        L463:
 13225 09:AD46: A5 02        	lda	<L459+2
 13226 09:AD48: 85 06        	sta	<L459+2+4
 13227 09:AD4A: A5 01        	lda	<L459+1
 13228 09:AD4C: 85 05        	sta	<L459+1+4
 13229 09:AD4E: 2B           	pld
  Thu Dec  3 2020 22:25                                                Page 244


 13230 09:AD4F: 3B           	tsc
 13231 09:AD50: 18           	clc
 13232 09:AD51: 69 04 00     	adc	#L459+4
 13233 09:AD54: 1B           	tcs
 13234 09:AD55: 6B           	rtl
 13235                        	.endblock	1860
 13236             00000000   L459	equ	0
 13237             00000001   L460	equ	1
 13238 09:AD56:              	ends
 13239                        	efunc
 13240                        	.endfunc	1860,1,0
 13241                        	.line	1860
 13242                        ;
 13243                        ;
 13244                        ;/************************************************
                    *************************/
 13245                        ;/*  mem_free_CONST() :  Libération mémoire de la 
                    structure record_CONST. */
 13246                        ;/************************************************
                    *************************/
 13247                        ;static void mem_free_CONST(struct record_CONST *c
                    urrent_record)
 13248                        ;{
 13249                        	.line	1866
 13250                        	.line	1867
 13251                        	LOADER
 13252                        	func
 13253                        	.function	1867
 13254                        ~~mem_free_CONST:
 13255                        	longa	on
 13256                        	longi	on
 13257 09:AD56: 3B           	tsc
 13258 09:AD57: 38           	sec
 13259 09:AD58: E9 00 00     	sbc	#L464
 13260 09:AD5B: 1B           	tcs
 13261 09:AD5C: 0B           	phd
 13262 09:AD5D: 5B           	tcd
 13263             00000004   current_record_0	set	4
 13264                        	.block	1867
 13265                        ;  if(current_record)
 13266                        	.sym	current_record,4,138,6,32,75
 13267                        	.line	1868
 13268                        ;    {
 13269 09:AD5E: A5 04        	lda	<L464+current_record_0
 13270 09:AD60: 05 06        	ora	<L464+current_record_0+2
 13271 09:AD62: D0 03        	bne	L467
 13272 09:AD64: 82 27 00     	brl	L10295
 13273                        L467:
 13274                        	.line	1869
 13275                        ;      if(current_record->data)
 13276                        	.line	1870
 13277                        ;        k_free(current_record->data);
 13278 09:AD67: A0 0A 00     	ldy	#$a
 13279 09:AD6A: B7 04        	lda	[<L464+current_record_0],Y
 13280 09:AD6C: A0 0C 00     	ldy	#$c
 13281 09:AD6F: 17 04        	ora	[<L464+current_record_0],Y
 13282 09:AD71: D0 03        	bne	L468
 13283 09:AD73: 82 10 00     	brl	L10296
  Thu Dec  3 2020 22:25                                                Page 245


 13284                        L468:
 13285                        	.line	1871
 13286 09:AD76: A0 0C 00     	ldy	#$c
 13287 09:AD79: B7 04        	lda	[<L464+current_record_0],Y
 13288 09:AD7B: 48           	pha
 13289 09:AD7C: A0 0A 00     	ldy	#$a
 13290 09:AD7F: B7 04        	lda	[<L464+current_record_0],Y
 13291 09:AD81: 48           	pha
 13292 09:AD82: 22 xx xx xx  	jsl	~~k_free
 13293                        ;
 13294                        ;      k_free(current_record);
 13295                        L10296:
 13296                        	.line	1873
 13297 09:AD86: D4 06        	pei	<L464+current_record_0+2
 13298 09:AD88: D4 04        	pei	<L464+current_record_0
 13299 09:AD8A: 22 xx xx xx  	jsl	~~k_free
 13300                        ;    }
 13301                        	.line	1874
 13302                        ;}
 13303                        L10295:
 13304                        	.line	1875
 13305                        L469:
 13306 09:AD8E: A5 02        	lda	<L464+2
 13307 09:AD90: 85 06        	sta	<L464+2+4
 13308 09:AD92: A5 01        	lda	<L464+1
 13309 09:AD94: 85 05        	sta	<L464+1+4
 13310 09:AD96: 2B           	pld
 13311 09:AD97: 3B           	tsc
 13312 09:AD98: 18           	clc
 13313 09:AD99: 69 04 00     	adc	#L464+4
 13314 09:AD9C: 1B           	tcs
 13315 09:AD9D: 6B           	rtl
 13316                        	.endblock	1875
 13317             00000000   L464	equ	0
 13318             00000001   L465	equ	1
 13319 09:AD9E:              	ends
 13320                        	efunc
 13321                        	.endfunc	1875,1,0
 13322                        	.line	1875
 13323                        ;
 13324                        ;
 13325                        ;/************************************************
                    *************************/
 13326                        ;/*  mem_free_ALIGN() :  Libération mémoire de la 
                    structure record_ALIGN. */
 13327                        ;/************************************************
                    *************************/
 13328                        ;static void mem_free_ALIGN(struct record_ALIGN *c
                    urrent_record)
 13329                        ;{
 13330                        	.line	1881
 13331                        	.line	1882
 13332                        	LOADER
 13333                        	func
 13334                        	.function	1882
 13335                        ~~mem_free_ALIGN:
 13336                        	longa	on
 13337                        	longi	on
  Thu Dec  3 2020 22:25                                                Page 246


 13338 09:AD9E: 3B           	tsc
 13339 09:AD9F: 38           	sec
 13340 09:ADA0: E9 00 00     	sbc	#L470
 13341 09:ADA3: 1B           	tcs
 13342 09:ADA4: 0B           	phd
 13343 09:ADA5: 5B           	tcd
 13344             00000004   current_record_0	set	4
 13345                        	.block	1882
 13346                        ;  if(current_record)
 13347                        	.sym	current_record,4,138,6,32,76
 13348                        	.line	1883
 13349                        ;    {
 13350 09:ADA6: A5 04        	lda	<L470+current_record_0
 13351 09:ADA8: 05 06        	ora	<L470+current_record_0+2
 13352 09:ADAA: D0 03        	bne	L473
 13353 09:ADAC: 82 08 00     	brl	L10297
 13354                        L473:
 13355                        	.line	1884
 13356                        ;      k_free(current_record);
 13357                        	.line	1885
 13358 09:ADAF: D4 06        	pei	<L470+current_record_0+2
 13359 09:ADB1: D4 04        	pei	<L470+current_record_0
 13360 09:ADB3: 22 xx xx xx  	jsl	~~k_free
 13361                        ;    }
 13362                        	.line	1886
 13363                        ;}
 13364                        L10297:
 13365                        	.line	1887
 13366                        L474:
 13367 09:ADB7: A5 02        	lda	<L470+2
 13368 09:ADB9: 85 06        	sta	<L470+2+4
 13369 09:ADBB: A5 01        	lda	<L470+1
 13370 09:ADBD: 85 05        	sta	<L470+1+4
 13371 09:ADBF: 2B           	pld
 13372 09:ADC0: 3B           	tsc
 13373 09:ADC1: 18           	clc
 13374 09:ADC2: 69 04 00     	adc	#L470+4
 13375 09:ADC5: 1B           	tcs
 13376 09:ADC6: 6B           	rtl
 13377                        	.endblock	1887
 13378             00000000   L470	equ	0
 13379             00000001   L471	equ	1
 13380 09:ADC7:              	ends
 13381                        	efunc
 13382                        	.endfunc	1887,1,0
 13383                        	.line	1887
 13384                        ;
 13385                        ;
 13386                        ;/************************************************
                    *********************/
 13387                        ;/*  mem_free_ORG() :  Libération mémoire de la st
                    ructure record_ORG. */
 13388                        ;/************************************************
                    *********************/
 13389                        ;static void mem_free_ORG(struct record_ORG *curre
                    nt_record)
 13390                        ;{
 13391                        	.line	1893
  Thu Dec  3 2020 22:25                                                Page 247


 13392                        	.line	1894
 13393                        	LOADER
 13394                        	func
 13395                        	.function	1894
 13396                        ~~mem_free_ORG:
 13397                        	longa	on
 13398                        	longi	on
 13399 09:ADC7: 3B           	tsc
 13400 09:ADC8: 38           	sec
 13401 09:ADC9: E9 00 00     	sbc	#L475
 13402 09:ADCC: 1B           	tcs
 13403 09:ADCD: 0B           	phd
 13404 09:ADCE: 5B           	tcd
 13405             00000004   current_record_0	set	4
 13406                        	.block	1894
 13407                        ;  if(current_record)
 13408                        	.sym	current_record,4,138,6,32,77
 13409                        	.line	1895
 13410                        ;    {
 13411 09:ADCF: A5 04        	lda	<L475+current_record_0
 13412 09:ADD1: 05 06        	ora	<L475+current_record_0+2
 13413 09:ADD3: D0 03        	bne	L478
 13414 09:ADD5: 82 08 00     	brl	L10298
 13415                        L478:
 13416                        	.line	1896
 13417                        ;      k_free(current_record);
 13418                        	.line	1897
 13419 09:ADD8: D4 06        	pei	<L475+current_record_0+2
 13420 09:ADDA: D4 04        	pei	<L475+current_record_0
 13421 09:ADDC: 22 xx xx xx  	jsl	~~k_free
 13422                        ;    }
 13423                        	.line	1898
 13424                        ;}
 13425                        L10298:
 13426                        	.line	1899
 13427                        L479:
 13428 09:ADE0: A5 02        	lda	<L475+2
 13429 09:ADE2: 85 06        	sta	<L475+2+4
 13430 09:ADE4: A5 01        	lda	<L475+1
 13431 09:ADE6: 85 05        	sta	<L475+1+4
 13432 09:ADE8: 2B           	pld
 13433 09:ADE9: 3B           	tsc
 13434 09:ADEA: 18           	clc
 13435 09:ADEB: 69 04 00     	adc	#L475+4
 13436 09:ADEE: 1B           	tcs
 13437 09:ADEF: 6B           	rtl
 13438                        	.endblock	1899
 13439             00000000   L475	equ	0
 13440             00000001   L476	equ	1
 13441 09:ADF0:              	ends
 13442                        	efunc
 13443                        	.endfunc	1899,1,0
 13444                        	.line	1899
 13445                        ;
 13446                        ;
 13447                        ;/************************************************
                    *************************/
 13448                        ;/*  mem_free_RELOC() :  Libération mémoire de la 
  Thu Dec  3 2020 22:25                                                Page 248


                    structure record_RELOC. */
 13449                        ;/************************************************
                    *************************/
 13450                        ;static void mem_free_RELOC(struct record_RELOC *c
                    urrent_record)
 13451                        ;{
 13452                        	.line	1905
 13453                        	.line	1906
 13454                        	LOADER
 13455                        	func
 13456                        	.function	1906
 13457                        ~~mem_free_RELOC:
 13458                        	longa	on
 13459                        	longi	on
 13460 09:ADF0: 3B           	tsc
 13461 09:ADF1: 38           	sec
 13462 09:ADF2: E9 00 00     	sbc	#L480
 13463 09:ADF5: 1B           	tcs
 13464 09:ADF6: 0B           	phd
 13465 09:ADF7: 5B           	tcd
 13466             00000004   current_record_0	set	4
 13467                        	.block	1906
 13468                        ;  if(current_record)
 13469                        	.sym	current_record,4,138,6,32,78
 13470                        	.line	1907
 13471                        ;    {
 13472 09:ADF8: A5 04        	lda	<L480+current_record_0
 13473 09:ADFA: 05 06        	ora	<L480+current_record_0+2
 13474 09:ADFC: D0 03        	bne	L483
 13475 09:ADFE: 82 08 00     	brl	L10299
 13476                        L483:
 13477                        	.line	1908
 13478                        ;      k_free(current_record);
 13479                        	.line	1909
 13480 09:AE01: D4 06        	pei	<L480+current_record_0+2
 13481 09:AE03: D4 04        	pei	<L480+current_record_0
 13482 09:AE05: 22 xx xx xx  	jsl	~~k_free
 13483                        ;    }
 13484                        	.line	1910
 13485                        ;}
 13486                        L10299:
 13487                        	.line	1911
 13488                        L484:
 13489 09:AE09: A5 02        	lda	<L480+2
 13490 09:AE0B: 85 06        	sta	<L480+2+4
 13491 09:AE0D: A5 01        	lda	<L480+1
 13492 09:AE0F: 85 05        	sta	<L480+1+4
 13493 09:AE11: 2B           	pld
 13494 09:AE12: 3B           	tsc
 13495 09:AE13: 18           	clc
 13496 09:AE14: 69 04 00     	adc	#L480+4
 13497 09:AE17: 1B           	tcs
 13498 09:AE18: 6B           	rtl
 13499                        	.endblock	1911
 13500             00000000   L480	equ	0
 13501             00000001   L481	equ	1
 13502 09:AE19:              	ends
 13503                        	efunc
  Thu Dec  3 2020 22:25                                                Page 249


 13504                        	.endfunc	1911,1,0
 13505                        	.line	1911
 13506                        ;
 13507                        ;
 13508                        ;/************************************************
                    *******************************/
 13509                        ;/*  mem_free_INTERSEG() :  Libération mémoire de 
                    la structure record_INTERSEG. */
 13510                        ;/************************************************
                    *******************************/
 13511                        ;static void mem_free_INTERSEG(struct record_INTER
                    SEG *current_record)
 13512                        ;{
 13513                        	.line	1917
 13514                        	.line	1918
 13515                        	LOADER
 13516                        	func
 13517                        	.function	1918
 13518                        ~~mem_free_INTERSEG:
 13519                        	longa	on
 13520                        	longi	on
 13521 09:AE19: 3B           	tsc
 13522 09:AE1A: 38           	sec
 13523 09:AE1B: E9 00 00     	sbc	#L485
 13524 09:AE1E: 1B           	tcs
 13525 09:AE1F: 0B           	phd
 13526 09:AE20: 5B           	tcd
 13527             00000004   current_record_0	set	4
 13528                        	.block	1918
 13529                        ;  if(current_record)
 13530                        	.sym	current_record,4,138,6,32,79
 13531                        	.line	1919
 13532                        ;    {
 13533 09:AE21: A5 04        	lda	<L485+current_record_0
 13534 09:AE23: 05 06        	ora	<L485+current_record_0+2
 13535 09:AE25: D0 03        	bne	L488
 13536 09:AE27: 82 08 00     	brl	L10300
 13537                        L488:
 13538                        	.line	1920
 13539                        ;      k_free(current_record);
 13540                        	.line	1921
 13541 09:AE2A: D4 06        	pei	<L485+current_record_0+2
 13542 09:AE2C: D4 04        	pei	<L485+current_record_0
 13543 09:AE2E: 22 xx xx xx  	jsl	~~k_free
 13544                        ;    }
 13545                        	.line	1922
 13546                        ;}
 13547                        L10300:
 13548                        	.line	1923
 13549                        L489:
 13550 09:AE32: A5 02        	lda	<L485+2
 13551 09:AE34: 85 06        	sta	<L485+2+4
 13552 09:AE36: A5 01        	lda	<L485+1
 13553 09:AE38: 85 05        	sta	<L485+1+4
 13554 09:AE3A: 2B           	pld
 13555 09:AE3B: 3B           	tsc
 13556 09:AE3C: 18           	clc
 13557 09:AE3D: 69 04 00     	adc	#L485+4
  Thu Dec  3 2020 22:25                                                Page 250


 13558 09:AE40: 1B           	tcs
 13559 09:AE41: 6B           	rtl
 13560                        	.endblock	1923
 13561             00000000   L485	equ	0
 13562             00000001   L486	equ	1
 13563 09:AE42:              	ends
 13564                        	efunc
 13565                        	.endfunc	1923,1,0
 13566                        	.line	1923
 13567                        ;
 13568                        ;
 13569                        ;/************************************************
                    *************************/
 13570                        ;/*  mem_free_USING() :  Libération mémoire de la 
                    structure record_USING. */
 13571                        ;/************************************************
                    *************************/
 13572                        ;static void mem_free_USING(struct record_USING *c
                    urrent_record)
 13573                        ;{
 13574                        	.line	1929
 13575                        	.line	1930
 13576                        	LOADER
 13577                        	func
 13578                        	.function	1930
 13579                        ~~mem_free_USING:
 13580                        	longa	on
 13581                        	longi	on
 13582 09:AE42: 3B           	tsc
 13583 09:AE43: 38           	sec
 13584 09:AE44: E9 00 00     	sbc	#L490
 13585 09:AE47: 1B           	tcs
 13586 09:AE48: 0B           	phd
 13587 09:AE49: 5B           	tcd
 13588             00000004   current_record_0	set	4
 13589                        	.block	1930
 13590                        ;  if(current_record)
 13591                        	.sym	current_record,4,138,6,32,80
 13592                        	.line	1931
 13593                        ;    {
 13594 09:AE4A: A5 04        	lda	<L490+current_record_0
 13595 09:AE4C: 05 06        	ora	<L490+current_record_0+2
 13596 09:AE4E: D0 03        	bne	L493
 13597 09:AE50: 82 08 00     	brl	L10301
 13598                        L493:
 13599                        	.line	1932
 13600                        ;      k_free(current_record);
 13601                        	.line	1933
 13602 09:AE53: D4 06        	pei	<L490+current_record_0+2
 13603 09:AE55: D4 04        	pei	<L490+current_record_0
 13604 09:AE57: 22 xx xx xx  	jsl	~~k_free
 13605                        ;    }
 13606                        	.line	1934
 13607                        ;}
 13608                        L10301:
 13609                        	.line	1935
 13610                        L494:
 13611 09:AE5B: A5 02        	lda	<L490+2
  Thu Dec  3 2020 22:25                                                Page 251


 13612 09:AE5D: 85 06        	sta	<L490+2+4
 13613 09:AE5F: A5 01        	lda	<L490+1
 13614 09:AE61: 85 05        	sta	<L490+1+4
 13615 09:AE63: 2B           	pld
 13616 09:AE64: 3B           	tsc
 13617 09:AE65: 18           	clc
 13618 09:AE66: 69 04 00     	adc	#L490+4
 13619 09:AE69: 1B           	tcs
 13620 09:AE6A: 6B           	rtl
 13621                        	.endblock	1935
 13622             00000000   L490	equ	0
 13623             00000001   L491	equ	1
 13624 09:AE6B:              	ends
 13625                        	efunc
 13626                        	.endfunc	1935,1,0
 13627                        	.line	1935
 13628                        ;
 13629                        ;
 13630                        ;/************************************************
                    ***************************/
 13631                        ;/*  mem_free_STRONG() :  Libération mémoire de la
                     structure record_STRONG. */
 13632                        ;/************************************************
                    ***************************/
 13633                        ;static void mem_free_STRONG(struct record_STRONG 
                    *current_record)
 13634                        ;{
 13635                        	.line	1941
 13636                        	.line	1942
 13637                        	LOADER
 13638                        	func
 13639                        	.function	1942
 13640                        ~~mem_free_STRONG:
 13641                        	longa	on
 13642                        	longi	on
 13643 09:AE6B: 3B           	tsc
 13644 09:AE6C: 38           	sec
 13645 09:AE6D: E9 00 00     	sbc	#L495
 13646 09:AE70: 1B           	tcs
 13647 09:AE71: 0B           	phd
 13648 09:AE72: 5B           	tcd
 13649             00000004   current_record_0	set	4
 13650                        	.block	1942
 13651                        ;  if(current_record)
 13652                        	.sym	current_record,4,138,6,32,81
 13653                        	.line	1943
 13654                        ;    {
 13655 09:AE73: A5 04        	lda	<L495+current_record_0
 13656 09:AE75: 05 06        	ora	<L495+current_record_0+2
 13657 09:AE77: D0 03        	bne	L498
 13658 09:AE79: 82 08 00     	brl	L10302
 13659                        L498:
 13660                        	.line	1944
 13661                        ;      k_free(current_record);
 13662                        	.line	1945
 13663 09:AE7C: D4 06        	pei	<L495+current_record_0+2
 13664 09:AE7E: D4 04        	pei	<L495+current_record_0
 13665 09:AE80: 22 xx xx xx  	jsl	~~k_free
  Thu Dec  3 2020 22:25                                                Page 252


 13666                        ;    }
 13667                        	.line	1946
 13668                        ;}
 13669                        L10302:
 13670                        	.line	1947
 13671                        L499:
 13672 09:AE84: A5 02        	lda	<L495+2
 13673 09:AE86: 85 06        	sta	<L495+2+4
 13674 09:AE88: A5 01        	lda	<L495+1
 13675 09:AE8A: 85 05        	sta	<L495+1+4
 13676 09:AE8C: 2B           	pld
 13677 09:AE8D: 3B           	tsc
 13678 09:AE8E: 18           	clc
 13679 09:AE8F: 69 04 00     	adc	#L495+4
 13680 09:AE92: 1B           	tcs
 13681 09:AE93: 6B           	rtl
 13682                        	.endblock	1947
 13683             00000000   L495	equ	0
 13684             00000001   L496	equ	1
 13685 09:AE94:              	ends
 13686                        	efunc
 13687                        	.endfunc	1947,1,0
 13688                        	.line	1947
 13689                        ;
 13690                        ;
 13691                        ;/************************************************
                    ***************************/
 13692                        ;/*  mem_free_GLOBAL() :  Libération mémoire de la
                     structure record_GLOBAL. */
 13693                        ;/************************************************
                    ***************************/
 13694                        ;static void mem_free_GLOBAL(struct record_GLOBAL 
                    *current_record)
 13695                        ;{
 13696                        	.line	1953
 13697                        	.line	1954
 13698                        	LOADER
 13699                        	func
 13700                        	.function	1954
 13701                        ~~mem_free_GLOBAL:
 13702                        	longa	on
 13703                        	longi	on
 13704 09:AE94: 3B           	tsc
 13705 09:AE95: 38           	sec
 13706 09:AE96: E9 00 00     	sbc	#L500
 13707 09:AE99: 1B           	tcs
 13708 09:AE9A: 0B           	phd
 13709 09:AE9B: 5B           	tcd
 13710             00000004   current_record_0	set	4
 13711                        	.block	1954
 13712                        ;  if(current_record)
 13713                        	.sym	current_record,4,138,6,32,82
 13714                        	.line	1955
 13715                        ;    {
 13716 09:AE9C: A5 04        	lda	<L500+current_record_0
 13717 09:AE9E: 05 06        	ora	<L500+current_record_0+2
 13718 09:AEA0: D0 03        	bne	L503
 13719 09:AEA2: 82 08 00     	brl	L10303
  Thu Dec  3 2020 22:25                                                Page 253


 13720                        L503:
 13721                        	.line	1956
 13722                        ;      k_free(current_record);
 13723                        	.line	1957
 13724 09:AEA5: D4 06        	pei	<L500+current_record_0+2
 13725 09:AEA7: D4 04        	pei	<L500+current_record_0
 13726 09:AEA9: 22 xx xx xx  	jsl	~~k_free
 13727                        ;    }
 13728                        	.line	1958
 13729                        ;}
 13730                        L10303:
 13731                        	.line	1959
 13732                        L504:
 13733 09:AEAD: A5 02        	lda	<L500+2
 13734 09:AEAF: 85 06        	sta	<L500+2+4
 13735 09:AEB1: A5 01        	lda	<L500+1
 13736 09:AEB3: 85 05        	sta	<L500+1+4
 13737 09:AEB5: 2B           	pld
 13738 09:AEB6: 3B           	tsc
 13739 09:AEB7: 18           	clc
 13740 09:AEB8: 69 04 00     	adc	#L500+4
 13741 09:AEBB: 1B           	tcs
 13742 09:AEBC: 6B           	rtl
 13743                        	.endblock	1959
 13744             00000000   L500	equ	0
 13745             00000001   L501	equ	1
 13746 09:AEBD:              	ends
 13747                        	efunc
 13748                        	.endfunc	1959,1,0
 13749                        	.line	1959
 13750                        ;
 13751                        ;
 13752                        ;/************************************************
                    ***********************/
 13753                        ;/*  mem_free_GEQU() :  Libération mémoire de la s
                    tructure record_GEQU. */
 13754                        ;/************************************************
                    ***********************/
 13755                        ;static void mem_free_GEQU(struct record_GEQU *cur
                    rent_record)
 13756                        ;{
 13757                        	.line	1965
 13758                        	.line	1966
 13759                        	LOADER
 13760                        	func
 13761                        	.function	1966
 13762                        ~~mem_free_GEQU:
 13763                        	longa	on
 13764                        	longi	on
 13765 09:AEBD: 3B           	tsc
 13766 09:AEBE: 38           	sec
 13767 09:AEBF: E9 00 00     	sbc	#L505
 13768 09:AEC2: 1B           	tcs
 13769 09:AEC3: 0B           	phd
 13770 09:AEC4: 5B           	tcd
 13771             00000004   current_record_0	set	4
 13772                        	.block	1966
 13773                        ;  if(current_record)
  Thu Dec  3 2020 22:25                                                Page 254


 13774                        	.sym	current_record,4,138,6,32,83
 13775                        	.line	1967
 13776                        ;    {
 13777 09:AEC5: A5 04        	lda	<L505+current_record_0
 13778 09:AEC7: 05 06        	ora	<L505+current_record_0+2
 13779 09:AEC9: D0 03        	bne	L508
 13780 09:AECB: 82 08 00     	brl	L10304
 13781                        L508:
 13782                        	.line	1968
 13783                        ;      k_free(current_record);
 13784                        	.line	1969
 13785 09:AECE: D4 06        	pei	<L505+current_record_0+2
 13786 09:AED0: D4 04        	pei	<L505+current_record_0
 13787 09:AED2: 22 xx xx xx  	jsl	~~k_free
 13788                        ;    }
 13789                        	.line	1970
 13790                        ;}
 13791                        L10304:
 13792                        	.line	1971
 13793                        L509:
 13794 09:AED6: A5 02        	lda	<L505+2
 13795 09:AED8: 85 06        	sta	<L505+2+4
 13796 09:AEDA: A5 01        	lda	<L505+1
 13797 09:AEDC: 85 05        	sta	<L505+1+4
 13798 09:AEDE: 2B           	pld
 13799 09:AEDF: 3B           	tsc
 13800 09:AEE0: 18           	clc
 13801 09:AEE1: 69 04 00     	adc	#L505+4
 13802 09:AEE4: 1B           	tcs
 13803 09:AEE5: 6B           	rtl
 13804                        	.endblock	1971
 13805             00000000   L505	equ	0
 13806             00000001   L506	equ	1
 13807 09:AEE6:              	ends
 13808                        	efunc
 13809                        	.endfunc	1971,1,0
 13810                        	.line	1971
 13811                        ;
 13812                        ;
 13813                        ;/************************************************
                    *********************/
 13814                        ;/*  mem_free_MEM() :  Libération mémoire de la st
                    ructure record_MEM. */
 13815                        ;/************************************************
                    *********************/
 13816                        ;static void mem_free_MEM(struct record_MEM *curre
                    nt_record)
 13817                        ;{
 13818                        	.line	1977
 13819                        	.line	1978
 13820                        	LOADER
 13821                        	func
 13822                        	.function	1978
 13823                        ~~mem_free_MEM:
 13824                        	longa	on
 13825                        	longi	on
 13826 09:AEE6: 3B           	tsc
 13827 09:AEE7: 38           	sec
  Thu Dec  3 2020 22:25                                                Page 255


 13828 09:AEE8: E9 00 00     	sbc	#L510
 13829 09:AEEB: 1B           	tcs
 13830 09:AEEC: 0B           	phd
 13831 09:AEED: 5B           	tcd
 13832             00000004   current_record_0	set	4
 13833                        	.block	1978
 13834                        ;  if(current_record)
 13835                        	.sym	current_record,4,138,6,32,84
 13836                        	.line	1979
 13837                        ;    {
 13838 09:AEEE: A5 04        	lda	<L510+current_record_0
 13839 09:AEF0: 05 06        	ora	<L510+current_record_0+2
 13840 09:AEF2: D0 03        	bne	L513
 13841 09:AEF4: 82 08 00     	brl	L10305
 13842                        L513:
 13843                        	.line	1980
 13844                        ;      k_free(current_record);
 13845                        	.line	1981
 13846 09:AEF7: D4 06        	pei	<L510+current_record_0+2
 13847 09:AEF9: D4 04        	pei	<L510+current_record_0
 13848 09:AEFB: 22 xx xx xx  	jsl	~~k_free
 13849                        ;    }
 13850                        	.line	1982
 13851                        ;}
 13852                        L10305:
 13853                        	.line	1983
 13854                        L514:
 13855 09:AEFF: A5 02        	lda	<L510+2
 13856 09:AF01: 85 06        	sta	<L510+2+4
 13857 09:AF03: A5 01        	lda	<L510+1
 13858 09:AF05: 85 05        	sta	<L510+1+4
 13859 09:AF07: 2B           	pld
 13860 09:AF08: 3B           	tsc
 13861 09:AF09: 18           	clc
 13862 09:AF0A: 69 04 00     	adc	#L510+4
 13863 09:AF0D: 1B           	tcs
 13864 09:AF0E: 6B           	rtl
 13865                        	.endblock	1983
 13866             00000000   L510	equ	0
 13867             00000001   L511	equ	1
 13868 09:AF0F:              	ends
 13869                        	efunc
 13870                        	.endfunc	1983,1,0
 13871                        	.line	1983
 13872                        ;
 13873                        ;
 13874                        ;/************************************************
                    ***********************/
 13875                        ;/*  mem_free_EXPR() :  Libération mémoire de la s
                    tructure record_EXPR. */
 13876                        ;/************************************************
                    ***********************/
 13877                        ;static void mem_free_EXPR(struct record_EXPR *cur
                    rent_record)
 13878                        ;{
 13879                        	.line	1989
 13880                        	.line	1990
 13881                        	LOADER
  Thu Dec  3 2020 22:25                                                Page 256


 13882                        	func
 13883                        	.function	1990
 13884                        ~~mem_free_EXPR:
 13885                        	longa	on
 13886                        	longi	on
 13887 09:AF0F: 3B           	tsc
 13888 09:AF10: 38           	sec
 13889 09:AF11: E9 00 00     	sbc	#L515
 13890 09:AF14: 1B           	tcs
 13891 09:AF15: 0B           	phd
 13892 09:AF16: 5B           	tcd
 13893             00000004   current_record_0	set	4
 13894                        	.block	1990
 13895                        ;  if(current_record)
 13896                        	.sym	current_record,4,138,6,32,85
 13897                        	.line	1991
 13898                        ;    {
 13899 09:AF17: A5 04        	lda	<L515+current_record_0
 13900 09:AF19: 05 06        	ora	<L515+current_record_0+2
 13901 09:AF1B: D0 03        	bne	L518
 13902 09:AF1D: 82 08 00     	brl	L10306
 13903                        L518:
 13904                        	.line	1992
 13905                        ;      k_free(current_record);
 13906                        	.line	1993
 13907 09:AF20: D4 06        	pei	<L515+current_record_0+2
 13908 09:AF22: D4 04        	pei	<L515+current_record_0
 13909 09:AF24: 22 xx xx xx  	jsl	~~k_free
 13910                        ;    }
 13911                        	.line	1994
 13912                        ;}
 13913                        L10306:
 13914                        	.line	1995
 13915                        L519:
 13916 09:AF28: A5 02        	lda	<L515+2
 13917 09:AF2A: 85 06        	sta	<L515+2+4
 13918 09:AF2C: A5 01        	lda	<L515+1
 13919 09:AF2E: 85 05        	sta	<L515+1+4
 13920 09:AF30: 2B           	pld
 13921 09:AF31: 3B           	tsc
 13922 09:AF32: 18           	clc
 13923 09:AF33: 69 04 00     	adc	#L515+4
 13924 09:AF36: 1B           	tcs
 13925 09:AF37: 6B           	rtl
 13926                        	.endblock	1995
 13927             00000000   L515	equ	0
 13928             00000001   L516	equ	1
 13929 09:AF38:              	ends
 13930                        	efunc
 13931                        	.endfunc	1995,1,0
 13932                        	.line	1995
 13933                        ;
 13934                        ;
 13935                        ;/************************************************
                    *************************/
 13936                        ;/*  mem_free_ZEXPR() :  Libération mémoire de la 
                    structure record_ZEXPR. */
 13937                        ;/************************************************
  Thu Dec  3 2020 22:25                                                Page 257


                    *************************/
 13938                        ;static void mem_free_ZEXPR(struct record_ZEXPR *c
                    urrent_record)
 13939                        ;{
 13940                        	.line	2001
 13941                        	.line	2002
 13942                        	LOADER
 13943                        	func
 13944                        	.function	2002
 13945                        ~~mem_free_ZEXPR:
 13946                        	longa	on
 13947                        	longi	on
 13948 09:AF38: 3B           	tsc
 13949 09:AF39: 38           	sec
 13950 09:AF3A: E9 00 00     	sbc	#L520
 13951 09:AF3D: 1B           	tcs
 13952 09:AF3E: 0B           	phd
 13953 09:AF3F: 5B           	tcd
 13954             00000004   current_record_0	set	4
 13955                        	.block	2002
 13956                        ;  if(current_record)
 13957                        	.sym	current_record,4,138,6,32,86
 13958                        	.line	2003
 13959                        ;    {
 13960 09:AF40: A5 04        	lda	<L520+current_record_0
 13961 09:AF42: 05 06        	ora	<L520+current_record_0+2
 13962 09:AF44: D0 03        	bne	L523
 13963 09:AF46: 82 08 00     	brl	L10307
 13964                        L523:
 13965                        	.line	2004
 13966                        ;      k_free(current_record);
 13967                        	.line	2005
 13968 09:AF49: D4 06        	pei	<L520+current_record_0+2
 13969 09:AF4B: D4 04        	pei	<L520+current_record_0
 13970 09:AF4D: 22 xx xx xx  	jsl	~~k_free
 13971                        ;    }
 13972                        	.line	2006
 13973                        ;}
 13974                        L10307:
 13975                        	.line	2007
 13976                        L524:
 13977 09:AF51: A5 02        	lda	<L520+2
 13978 09:AF53: 85 06        	sta	<L520+2+4
 13979 09:AF55: A5 01        	lda	<L520+1
 13980 09:AF57: 85 05        	sta	<L520+1+4
 13981 09:AF59: 2B           	pld
 13982 09:AF5A: 3B           	tsc
 13983 09:AF5B: 18           	clc
 13984 09:AF5C: 69 04 00     	adc	#L520+4
 13985 09:AF5F: 1B           	tcs
 13986 09:AF60: 6B           	rtl
 13987                        	.endblock	2007
 13988             00000000   L520	equ	0
 13989             00000001   L521	equ	1
 13990 09:AF61:              	ends
 13991                        	efunc
 13992                        	.endfunc	2007,1,0
 13993                        	.line	2007
  Thu Dec  3 2020 22:25                                                Page 258


 13994                        ;
 13995                        ;
 13996                        ;/************************************************
                    *************************/
 13997                        ;/*  mem_free_BEXPR() :  Libération mémoire de la 
                    structure record_BEXPR. */
 13998                        ;/************************************************
                    *************************/
 13999                        ;static void mem_free_BEXPR(struct record_BEXPR *c
                    urrent_record)
 14000                        ;{
 14001                        	.line	2013
 14002                        	.line	2014
 14003                        	LOADER
 14004                        	func
 14005                        	.function	2014
 14006                        ~~mem_free_BEXPR:
 14007                        	longa	on
 14008                        	longi	on
 14009 09:AF61: 3B           	tsc
 14010 09:AF62: 38           	sec
 14011 09:AF63: E9 00 00     	sbc	#L525
 14012 09:AF66: 1B           	tcs
 14013 09:AF67: 0B           	phd
 14014 09:AF68: 5B           	tcd
 14015             00000004   current_record_0	set	4
 14016                        	.block	2014
 14017                        ;  if(current_record)
 14018                        	.sym	current_record,4,138,6,32,87
 14019                        	.line	2015
 14020                        ;    {
 14021 09:AF69: A5 04        	lda	<L525+current_record_0
 14022 09:AF6B: 05 06        	ora	<L525+current_record_0+2
 14023 09:AF6D: D0 03        	bne	L528
 14024 09:AF6F: 82 08 00     	brl	L10308
 14025                        L528:
 14026                        	.line	2016
 14027                        ;      k_free(current_record);
 14028                        	.line	2017
 14029 09:AF72: D4 06        	pei	<L525+current_record_0+2
 14030 09:AF74: D4 04        	pei	<L525+current_record_0
 14031 09:AF76: 22 xx xx xx  	jsl	~~k_free
 14032                        ;    }
 14033                        	.line	2018
 14034                        ;}
 14035                        L10308:
 14036                        	.line	2019
 14037                        L529:
 14038 09:AF7A: A5 02        	lda	<L525+2
 14039 09:AF7C: 85 06        	sta	<L525+2+4
 14040 09:AF7E: A5 01        	lda	<L525+1
 14041 09:AF80: 85 05        	sta	<L525+1+4
 14042 09:AF82: 2B           	pld
 14043 09:AF83: 3B           	tsc
 14044 09:AF84: 18           	clc
 14045 09:AF85: 69 04 00     	adc	#L525+4
 14046 09:AF88: 1B           	tcs
 14047 09:AF89: 6B           	rtl
  Thu Dec  3 2020 22:25                                                Page 259


 14048                        	.endblock	2019
 14049             00000000   L525	equ	0
 14050             00000001   L526	equ	1
 14051 09:AF8A:              	ends
 14052                        	efunc
 14053                        	.endfunc	2019,1,0
 14054                        	.line	2019
 14055                        ;
 14056                        ;
 14057                        ;/************************************************
                    *****************************/
 14058                        ;/*  mem_free_RELEXPR() :  Libération mémoire de l
                    a structure record_RELEXPR. */
 14059                        ;/************************************************
                    *****************************/
 14060                        ;static void mem_free_RELEXPR(struct record_RELEXP
                    R *current_record)
 14061                        ;{
 14062                        	.line	2025
 14063                        	.line	2026
 14064                        	LOADER
 14065                        	func
 14066                        	.function	2026
 14067                        ~~mem_free_RELEXPR:
 14068                        	longa	on
 14069                        	longi	on
 14070 09:AF8A: 3B           	tsc
 14071 09:AF8B: 38           	sec
 14072 09:AF8C: E9 00 00     	sbc	#L530
 14073 09:AF8F: 1B           	tcs
 14074 09:AF90: 0B           	phd
 14075 09:AF91: 5B           	tcd
 14076             00000004   current_record_0	set	4
 14077                        	.block	2026
 14078                        ;  if(current_record)
 14079                        	.sym	current_record,4,138,6,32,88
 14080                        	.line	2027
 14081                        ;    {
 14082 09:AF92: A5 04        	lda	<L530+current_record_0
 14083 09:AF94: 05 06        	ora	<L530+current_record_0+2
 14084 09:AF96: D0 03        	bne	L533
 14085 09:AF98: 82 08 00     	brl	L10309
 14086                        L533:
 14087                        	.line	2028
 14088                        ;      k_free(current_record);
 14089                        	.line	2029
 14090 09:AF9B: D4 06        	pei	<L530+current_record_0+2
 14091 09:AF9D: D4 04        	pei	<L530+current_record_0
 14092 09:AF9F: 22 xx xx xx  	jsl	~~k_free
 14093                        ;    }
 14094                        	.line	2030
 14095                        ;}
 14096                        L10309:
 14097                        	.line	2031
 14098                        L534:
 14099 09:AFA3: A5 02        	lda	<L530+2
 14100 09:AFA5: 85 06        	sta	<L530+2+4
 14101 09:AFA7: A5 01        	lda	<L530+1
  Thu Dec  3 2020 22:25                                                Page 260


 14102 09:AFA9: 85 05        	sta	<L530+1+4
 14103 09:AFAB: 2B           	pld
 14104 09:AFAC: 3B           	tsc
 14105 09:AFAD: 18           	clc
 14106 09:AFAE: 69 04 00     	adc	#L530+4
 14107 09:AFB1: 1B           	tcs
 14108 09:AFB2: 6B           	rtl
 14109                        	.endblock	2031
 14110             00000000   L530	equ	0
 14111             00000001   L531	equ	1
 14112 09:AFB3:              	ends
 14113                        	efunc
 14114                        	.endfunc	2031,1,0
 14115                        	.line	2031
 14116                        ;
 14117                        ;
 14118                        ;/************************************************
                    *************************/
 14119                        ;/*  mem_free_LOCAL() :  Libération mémoire de la 
                    structure record_LOCAL. */
 14120                        ;/************************************************
                    *************************/
 14121                        ;static void mem_free_LOCAL(struct record_LOCAL *c
                    urrent_record)
 14122                        ;{
 14123                        	.line	2037
 14124                        	.line	2038
 14125                        	LOADER
 14126                        	func
 14127                        	.function	2038
 14128                        ~~mem_free_LOCAL:
 14129                        	longa	on
 14130                        	longi	on
 14131 09:AFB3: 3B           	tsc
 14132 09:AFB4: 38           	sec
 14133 09:AFB5: E9 00 00     	sbc	#L535
 14134 09:AFB8: 1B           	tcs
 14135 09:AFB9: 0B           	phd
 14136 09:AFBA: 5B           	tcd
 14137             00000004   current_record_0	set	4
 14138                        	.block	2038
 14139                        ;  if(current_record)
 14140                        	.sym	current_record,4,138,6,32,89
 14141                        	.line	2039
 14142                        ;    {
 14143 09:AFBB: A5 04        	lda	<L535+current_record_0
 14144 09:AFBD: 05 06        	ora	<L535+current_record_0+2
 14145 09:AFBF: D0 03        	bne	L538
 14146 09:AFC1: 82 08 00     	brl	L10310
 14147                        L538:
 14148                        	.line	2040
 14149                        ;      k_free(current_record);
 14150                        	.line	2041
 14151 09:AFC4: D4 06        	pei	<L535+current_record_0+2
 14152 09:AFC6: D4 04        	pei	<L535+current_record_0
 14153 09:AFC8: 22 xx xx xx  	jsl	~~k_free
 14154                        ;    }
 14155                        	.line	2042
  Thu Dec  3 2020 22:25                                                Page 261


 14156                        ;}
 14157                        L10310:
 14158                        	.line	2043
 14159                        L539:
 14160 09:AFCC: A5 02        	lda	<L535+2
 14161 09:AFCE: 85 06        	sta	<L535+2+4
 14162 09:AFD0: A5 01        	lda	<L535+1
 14163 09:AFD2: 85 05        	sta	<L535+1+4
 14164 09:AFD4: 2B           	pld
 14165 09:AFD5: 3B           	tsc
 14166 09:AFD6: 18           	clc
 14167 09:AFD7: 69 04 00     	adc	#L535+4
 14168 09:AFDA: 1B           	tcs
 14169 09:AFDB: 6B           	rtl
 14170                        	.endblock	2043
 14171             00000000   L535	equ	0
 14172             00000001   L536	equ	1
 14173 09:AFDC:              	ends
 14174                        	efunc
 14175                        	.endfunc	2043,1,0
 14176                        	.line	2043
 14177                        ;
 14178                        ;
 14179                        ;/************************************************
                    *********************/
 14180                        ;/*  mem_free_EQU() :  Libération mémoire de la st
                    ructure record_EQU. */
 14181                        ;/************************************************
                    *********************/
 14182                        ;static void mem_free_EQU(struct record_EQU *curre
                    nt_record)
 14183                        ;{
 14184                        	.line	2049
 14185                        	.line	2050
 14186                        	LOADER
 14187                        	func
 14188                        	.function	2050
 14189                        ~~mem_free_EQU:
 14190                        	longa	on
 14191                        	longi	on
 14192 09:AFDC: 3B           	tsc
 14193 09:AFDD: 38           	sec
 14194 09:AFDE: E9 00 00     	sbc	#L540
 14195 09:AFE1: 1B           	tcs
 14196 09:AFE2: 0B           	phd
 14197 09:AFE3: 5B           	tcd
 14198             00000004   current_record_0	set	4
 14199                        	.block	2050
 14200                        ;  if(current_record)
 14201                        	.sym	current_record,4,138,6,32,90
 14202                        	.line	2051
 14203                        ;    {
 14204 09:AFE4: A5 04        	lda	<L540+current_record_0
 14205 09:AFE6: 05 06        	ora	<L540+current_record_0+2
 14206 09:AFE8: D0 03        	bne	L543
 14207 09:AFEA: 82 08 00     	brl	L10311
 14208                        L543:
 14209                        	.line	2052
  Thu Dec  3 2020 22:25                                                Page 262


 14210                        ;      k_free(current_record);
 14211                        	.line	2053
 14212 09:AFED: D4 06        	pei	<L540+current_record_0+2
 14213 09:AFEF: D4 04        	pei	<L540+current_record_0
 14214 09:AFF1: 22 xx xx xx  	jsl	~~k_free
 14215                        ;    }
 14216                        	.line	2054
 14217                        ;}
 14218                        L10311:
 14219                        	.line	2055
 14220                        L544:
 14221 09:AFF5: A5 02        	lda	<L540+2
 14222 09:AFF7: 85 06        	sta	<L540+2+4
 14223 09:AFF9: A5 01        	lda	<L540+1
 14224 09:AFFB: 85 05        	sta	<L540+1+4
 14225 09:AFFD: 2B           	pld
 14226 09:AFFE: 3B           	tsc
 14227 09:AFFF: 18           	clc
 14228 09:B000: 69 04 00     	adc	#L540+4
 14229 09:B003: 1B           	tcs
 14230 09:B004: 6B           	rtl
 14231                        	.endblock	2055
 14232             00000000   L540	equ	0
 14233             00000001   L541	equ	1
 14234 09:B005:              	ends
 14235                        	efunc
 14236                        	.endfunc	2055,1,0
 14237                        	.line	2055
 14238                        ;
 14239                        ;
 14240                        ;/************************************************
                    *******************/
 14241                        ;/*  mem_free_DS() :  Libération mémoire de la str
                    ucture record_DS. */
 14242                        ;/************************************************
                    *******************/
 14243                        ;static void mem_free_DS(struct record_DS *current
                    _record)
 14244                        ;{
 14245                        	.line	2061
 14246                        	.line	2062
 14247                        	LOADER
 14248                        	func
 14249                        	.function	2062
 14250                        ~~mem_free_DS:
 14251                        	longa	on
 14252                        	longi	on
 14253 09:B005: 3B           	tsc
 14254 09:B006: 38           	sec
 14255 09:B007: E9 00 00     	sbc	#L545
 14256 09:B00A: 1B           	tcs
 14257 09:B00B: 0B           	phd
 14258 09:B00C: 5B           	tcd
 14259             00000004   current_record_0	set	4
 14260                        	.block	2062
 14261                        ;  if(current_record)
 14262                        	.sym	current_record,4,138,6,32,91
 14263                        	.line	2063
  Thu Dec  3 2020 22:25                                                Page 263


 14264                        ;    {
 14265 09:B00D: A5 04        	lda	<L545+current_record_0
 14266 09:B00F: 05 06        	ora	<L545+current_record_0+2
 14267 09:B011: D0 03        	bne	L548
 14268 09:B013: 82 08 00     	brl	L10312
 14269                        L548:
 14270                        	.line	2064
 14271                        ;      k_free(current_record);
 14272                        	.line	2065
 14273 09:B016: D4 06        	pei	<L545+current_record_0+2
 14274 09:B018: D4 04        	pei	<L545+current_record_0
 14275 09:B01A: 22 xx xx xx  	jsl	~~k_free
 14276                        ;    }
 14277                        	.line	2066
 14278                        ;}
 14279                        L10312:
 14280                        	.line	2067
 14281                        L549:
 14282 09:B01E: A5 02        	lda	<L545+2
 14283 09:B020: 85 06        	sta	<L545+2+4
 14284 09:B022: A5 01        	lda	<L545+1
 14285 09:B024: 85 05        	sta	<L545+1+4
 14286 09:B026: 2B           	pld
 14287 09:B027: 3B           	tsc
 14288 09:B028: 18           	clc
 14289 09:B029: 69 04 00     	adc	#L545+4
 14290 09:B02C: 1B           	tcs
 14291 09:B02D: 6B           	rtl
 14292                        	.endblock	2067
 14293             00000000   L545	equ	0
 14294             00000001   L546	equ	1
 14295 09:B02E:              	ends
 14296                        	efunc
 14297                        	.endfunc	2067,1,0
 14298                        	.line	2067
 14299                        ;
 14300                        ;
 14301                        ;/************************************************
                    ***************************/
 14302                        ;/*  mem_free_LCONST() :  Libération mémoire de la
                     structure record_LCONST. */
 14303                        ;/************************************************
                    ***************************/
 14304                        ;static void mem_free_LCONST(struct record_LCONST 
                    *current_record)
 14305                        ;{
 14306                        	.line	2073
 14307                        	.line	2074
 14308                        	LOADER
 14309                        	func
 14310                        	.function	2074
 14311                        ~~mem_free_LCONST:
 14312                        	longa	on
 14313                        	longi	on
 14314 09:B02E: 3B           	tsc
 14315 09:B02F: 38           	sec
 14316 09:B030: E9 00 00     	sbc	#L550
 14317 09:B033: 1B           	tcs
  Thu Dec  3 2020 22:25                                                Page 264


 14318 09:B034: 0B           	phd
 14319 09:B035: 5B           	tcd
 14320             00000004   current_record_0	set	4
 14321                        	.block	2074
 14322                        ;  if(current_record)
 14323                        	.sym	current_record,4,138,6,32,92
 14324                        	.line	2075
 14325                        ;    {
 14326 09:B036: A5 04        	lda	<L550+current_record_0
 14327 09:B038: 05 06        	ora	<L550+current_record_0+2
 14328 09:B03A: D0 03        	bne	L553
 14329 09:B03C: 82 27 00     	brl	L10313
 14330                        L553:
 14331                        	.line	2076
 14332                        ;      if(current_record->data)
 14333                        	.line	2077
 14334                        ;        k_free(current_record->data);
 14335 09:B03F: A0 0D 00     	ldy	#$d
 14336 09:B042: B7 04        	lda	[<L550+current_record_0],Y
 14337 09:B044: A0 0F 00     	ldy	#$f
 14338 09:B047: 17 04        	ora	[<L550+current_record_0],Y
 14339 09:B049: D0 03        	bne	L554
 14340 09:B04B: 82 10 00     	brl	L10314
 14341                        L554:
 14342                        	.line	2078
 14343 09:B04E: A0 0F 00     	ldy	#$f
 14344 09:B051: B7 04        	lda	[<L550+current_record_0],Y
 14345 09:B053: 48           	pha
 14346 09:B054: A0 0D 00     	ldy	#$d
 14347 09:B057: B7 04        	lda	[<L550+current_record_0],Y
 14348 09:B059: 48           	pha
 14349 09:B05A: 22 xx xx xx  	jsl	~~k_free
 14350                        ;
 14351                        ;      k_free(current_record);
 14352                        L10314:
 14353                        	.line	2080
 14354 09:B05E: D4 06        	pei	<L550+current_record_0+2
 14355 09:B060: D4 04        	pei	<L550+current_record_0
 14356 09:B062: 22 xx xx xx  	jsl	~~k_free
 14357                        ;    }
 14358                        	.line	2081
 14359                        ;}
 14360                        L10313:
 14361                        	.line	2082
 14362                        L555:
 14363 09:B066: A5 02        	lda	<L550+2
 14364 09:B068: 85 06        	sta	<L550+2+4
 14365 09:B06A: A5 01        	lda	<L550+1
 14366 09:B06C: 85 05        	sta	<L550+1+4
 14367 09:B06E: 2B           	pld
 14368 09:B06F: 3B           	tsc
 14369 09:B070: 18           	clc
 14370 09:B071: 69 04 00     	adc	#L550+4
 14371 09:B074: 1B           	tcs
 14372 09:B075: 6B           	rtl
 14373                        	.endblock	2082
 14374             00000000   L550	equ	0
 14375             00000001   L551	equ	1
  Thu Dec  3 2020 22:25                                                Page 265


 14376 09:B076:              	ends
 14377                        	efunc
 14378                        	.endfunc	2082,1,0
 14379                        	.line	2082
 14380                        ;
 14381                        ;
 14382                        ;/************************************************
                    *************************/
 14383                        ;/*  mem_free_LEXPR() :  Libération mémoire de la 
                    structure record_LEXPR. */
 14384                        ;/************************************************
                    *************************/
 14385                        ;static void mem_free_LEXPR(struct record_LEXPR *c
                    urrent_record)
 14386                        ;{
 14387                        	.line	2088
 14388                        	.line	2089
 14389                        	LOADER
 14390                        	func
 14391                        	.function	2089
 14392                        ~~mem_free_LEXPR:
 14393                        	longa	on
 14394                        	longi	on
 14395 09:B076: 3B           	tsc
 14396 09:B077: 38           	sec
 14397 09:B078: E9 00 00     	sbc	#L556
 14398 09:B07B: 1B           	tcs
 14399 09:B07C: 0B           	phd
 14400 09:B07D: 5B           	tcd
 14401             00000004   current_record_0	set	4
 14402                        	.block	2089
 14403                        ;  if(current_record)
 14404                        	.sym	current_record,4,138,6,32,93
 14405                        	.line	2090
 14406                        ;    {
 14407 09:B07E: A5 04        	lda	<L556+current_record_0
 14408 09:B080: 05 06        	ora	<L556+current_record_0+2
 14409 09:B082: D0 03        	bne	L559
 14410 09:B084: 82 08 00     	brl	L10315
 14411                        L559:
 14412                        	.line	2091
 14413                        ;      k_free(current_record);
 14414                        	.line	2092
 14415 09:B087: D4 06        	pei	<L556+current_record_0+2
 14416 09:B089: D4 04        	pei	<L556+current_record_0
 14417 09:B08B: 22 xx xx xx  	jsl	~~k_free
 14418                        ;    }
 14419                        	.line	2093
 14420                        ;}
 14421                        L10315:
 14422                        	.line	2094
 14423                        L560:
 14424 09:B08F: A5 02        	lda	<L556+2
 14425 09:B091: 85 06        	sta	<L556+2+4
 14426 09:B093: A5 01        	lda	<L556+1
 14427 09:B095: 85 05        	sta	<L556+1+4
 14428 09:B097: 2B           	pld
 14429 09:B098: 3B           	tsc
  Thu Dec  3 2020 22:25                                                Page 266


 14430 09:B099: 18           	clc
 14431 09:B09A: 69 04 00     	adc	#L556+4
 14432 09:B09D: 1B           	tcs
 14433 09:B09E: 6B           	rtl
 14434                        	.endblock	2094
 14435             00000000   L556	equ	0
 14436             00000001   L557	equ	1
 14437 09:B09F:              	ends
 14438                        	efunc
 14439                        	.endfunc	2094,1,0
 14440                        	.line	2094
 14441                        ;
 14442                        ;
 14443                        ;/************************************************
                    *************************/
 14444                        ;/*  mem_free_ENTRY() :  Libération mémoire de la 
                    structure record_ENTRY. */
 14445                        ;/************************************************
                    *************************/
 14446                        ;static void mem_free_ENTRY(struct record_ENTRY *c
                    urrent_record)
 14447                        ;{
 14448                        	.line	2100
 14449                        	.line	2101
 14450                        	LOADER
 14451                        	func
 14452                        	.function	2101
 14453                        ~~mem_free_ENTRY:
 14454                        	longa	on
 14455                        	longi	on
 14456 09:B09F: 3B           	tsc
 14457 09:B0A0: 38           	sec
 14458 09:B0A1: E9 00 00     	sbc	#L561
 14459 09:B0A4: 1B           	tcs
 14460 09:B0A5: 0B           	phd
 14461 09:B0A6: 5B           	tcd
 14462             00000004   current_record_0	set	4
 14463                        	.block	2101
 14464                        ;  if(current_record)
 14465                        	.sym	current_record,4,138,6,32,94
 14466                        	.line	2102
 14467                        ;    {
 14468 09:B0A7: A5 04        	lda	<L561+current_record_0
 14469 09:B0A9: 05 06        	ora	<L561+current_record_0+2
 14470 09:B0AB: D0 03        	bne	L564
 14471 09:B0AD: 82 08 00     	brl	L10316
 14472                        L564:
 14473                        	.line	2103
 14474                        ;      k_free(current_record);
 14475                        	.line	2104
 14476 09:B0B0: D4 06        	pei	<L561+current_record_0+2
 14477 09:B0B2: D4 04        	pei	<L561+current_record_0
 14478 09:B0B4: 22 xx xx xx  	jsl	~~k_free
 14479                        ;    }
 14480                        	.line	2105
 14481                        ;}
 14482                        L10316:
 14483                        	.line	2106
  Thu Dec  3 2020 22:25                                                Page 267


 14484                        L565:
 14485 09:B0B8: A5 02        	lda	<L561+2
 14486 09:B0BA: 85 06        	sta	<L561+2+4
 14487 09:B0BC: A5 01        	lda	<L561+1
 14488 09:B0BE: 85 05        	sta	<L561+1+4
 14489 09:B0C0: 2B           	pld
 14490 09:B0C1: 3B           	tsc
 14491 09:B0C2: 18           	clc
 14492 09:B0C3: 69 04 00     	adc	#L561+4
 14493 09:B0C6: 1B           	tcs
 14494 09:B0C7: 6B           	rtl
 14495                        	.endblock	2106
 14496             00000000   L561	equ	0
 14497             00000001   L562	equ	1
 14498 09:B0C8:              	ends
 14499                        	efunc
 14500                        	.endfunc	2106,1,0
 14501                        	.line	2106
 14502                        ;
 14503                        ;
 14504                        ;/************************************************
                    ***************************/
 14505                        ;/*  mem_free_cRELOC() :  Libération mémoire de la
                     structure record_cRELOC. */
 14506                        ;/************************************************
                    ***************************/
 14507                        ;static void mem_free_cRELOC(struct record_cRELOC 
                    *current_record)
 14508                        ;{
 14509                        	.line	2112
 14510                        	.line	2113
 14511                        	LOADER
 14512                        	func
 14513                        	.function	2113
 14514                        ~~mem_free_cRELOC:
 14515                        	longa	on
 14516                        	longi	on
 14517 09:B0C8: 3B           	tsc
 14518 09:B0C9: 38           	sec
 14519 09:B0CA: E9 00 00     	sbc	#L566
 14520 09:B0CD: 1B           	tcs
 14521 09:B0CE: 0B           	phd
 14522 09:B0CF: 5B           	tcd
 14523             00000004   current_record_0	set	4
 14524                        	.block	2113
 14525                        ;  if(current_record)
 14526                        	.sym	current_record,4,138,6,32,95
 14527                        	.line	2114
 14528                        ;    {
 14529 09:B0D0: A5 04        	lda	<L566+current_record_0
 14530 09:B0D2: 05 06        	ora	<L566+current_record_0+2
 14531 09:B0D4: D0 03        	bne	L569
 14532 09:B0D6: 82 08 00     	brl	L10317
 14533                        L569:
 14534                        	.line	2115
 14535                        ;      k_free(current_record);
 14536                        	.line	2116
 14537 09:B0D9: D4 06        	pei	<L566+current_record_0+2
  Thu Dec  3 2020 22:25                                                Page 268


 14538 09:B0DB: D4 04        	pei	<L566+current_record_0
 14539 09:B0DD: 22 xx xx xx  	jsl	~~k_free
 14540                        ;    }
 14541                        	.line	2117
 14542                        ;}
 14543                        L10317:
 14544                        	.line	2118
 14545                        L570:
 14546 09:B0E1: A5 02        	lda	<L566+2
 14547 09:B0E3: 85 06        	sta	<L566+2+4
 14548 09:B0E5: A5 01        	lda	<L566+1
 14549 09:B0E7: 85 05        	sta	<L566+1+4
 14550 09:B0E9: 2B           	pld
 14551 09:B0EA: 3B           	tsc
 14552 09:B0EB: 18           	clc
 14553 09:B0EC: 69 04 00     	adc	#L566+4
 14554 09:B0EF: 1B           	tcs
 14555 09:B0F0: 6B           	rtl
 14556                        	.endblock	2118
 14557             00000000   L566	equ	0
 14558             00000001   L567	equ	1
 14559 09:B0F1:              	ends
 14560                        	efunc
 14561                        	.endfunc	2118,1,0
 14562                        	.line	2118
 14563                        ;
 14564                        ;
 14565                        ;/************************************************
                    *********************************/
 14566                        ;/*  mem_free_cINTERSEG() :  Libération mémoire de
                     la structure record_cINTERSEG. */
 14567                        ;/************************************************
                    *********************************/
 14568                        ;static void mem_free_cINTERSEG(struct record_cINT
                    ERSEG *current_record)
 14569                        ;{
 14570                        	.line	2124
 14571                        	.line	2125
 14572                        	LOADER
 14573                        	func
 14574                        	.function	2125
 14575                        ~~mem_free_cINTERSEG:
 14576                        	longa	on
 14577                        	longi	on
 14578 09:B0F1: 3B           	tsc
 14579 09:B0F2: 38           	sec
 14580 09:B0F3: E9 00 00     	sbc	#L571
 14581 09:B0F6: 1B           	tcs
 14582 09:B0F7: 0B           	phd
 14583 09:B0F8: 5B           	tcd
 14584             00000004   current_record_0	set	4
 14585                        	.block	2125
 14586                        ;  if(current_record)
 14587                        	.sym	current_record,4,138,6,32,96
 14588                        	.line	2126
 14589                        ;    {
 14590 09:B0F9: A5 04        	lda	<L571+current_record_0
 14591 09:B0FB: 05 06        	ora	<L571+current_record_0+2
  Thu Dec  3 2020 22:25                                                Page 269


 14592 09:B0FD: D0 03        	bne	L574
 14593 09:B0FF: 82 08 00     	brl	L10318
 14594                        L574:
 14595                        	.line	2127
 14596                        ;      k_free(current_record);
 14597                        	.line	2128
 14598 09:B102: D4 06        	pei	<L571+current_record_0+2
 14599 09:B104: D4 04        	pei	<L571+current_record_0
 14600 09:B106: 22 xx xx xx  	jsl	~~k_free
 14601                        ;    }
 14602                        	.line	2129
 14603                        ;}
 14604                        L10318:
 14605                        	.line	2130
 14606                        L575:
 14607 09:B10A: A5 02        	lda	<L571+2
 14608 09:B10C: 85 06        	sta	<L571+2+4
 14609 09:B10E: A5 01        	lda	<L571+1
 14610 09:B110: 85 05        	sta	<L571+1+4
 14611 09:B112: 2B           	pld
 14612 09:B113: 3B           	tsc
 14613 09:B114: 18           	clc
 14614 09:B115: 69 04 00     	adc	#L571+4
 14615 09:B118: 1B           	tcs
 14616 09:B119: 6B           	rtl
 14617                        	.endblock	2130
 14618             00000000   L571	equ	0
 14619             00000001   L572	equ	1
 14620 09:B11A:              	ends
 14621                        	efunc
 14622                        	.endfunc	2130,1,0
 14623                        	.line	2130
 14624                        ;
 14625                        ;
 14626                        ;/************************************************
                    *************************/
 14627                        ;/*  mem_free_SUPER() :  Libération mémoire de la 
                    structure record_SUPER. */
 14628                        ;/************************************************
                    *************************/
 14629                        ;static void mem_free_SUPER(struct record_SUPER *c
                    urrent_record)
 14630                        ;{
 14631                        	.line	2136
 14632                        	.line	2137
 14633                        	LOADER
 14634                        	func
 14635                        	.function	2137
 14636                        ~~mem_free_SUPER:
 14637                        	longa	on
 14638                        	longi	on
 14639 09:B11A: 3B           	tsc
 14640 09:B11B: 38           	sec
 14641 09:B11C: E9 08 00     	sbc	#L576
 14642 09:B11F: 1B           	tcs
 14643 09:B120: 0B           	phd
 14644 09:B121: 5B           	tcd
 14645             00000004   current_record_0	set	4
  Thu Dec  3 2020 22:25                                                Page 270


 14646                        	.block	2137
 14647                        ;  struct subrecord_SuperReloc2 *current_SuperRelo
                    c2;
 14648                        ;  struct subrecord_SuperReloc2 *next_SuperReloc2;
 14649                        ;
 14650                        ;  if(current_record)
 14651             00000000   current_SuperReloc2_1	set	0
 14652             00000004   next_SuperReloc2_1	set	4
 14653                        	.sym	current_SuperReloc2,0,138,1,32,68
 14654                        	.sym	next_SuperReloc2,4,138,1,32,68
 14655                        	.sym	current_record,4,138,6,32,97
 14656                        	.line	2141
 14657                        ;    {
 14658 09:B122: A5 0C        	lda	<L576+current_record_0
 14659 09:B124: 05 0E        	ora	<L576+current_record_0+2
 14660 09:B126: D0 03        	bne	L579
 14661 09:B128: 82 40 00     	brl	L10319
 14662                        L579:
 14663                        	.line	2142
 14664                        ;      for(current_SuperReloc2=current_record->fir
                    st_SuperReloc2; current_SuperReloc2; )
 14665                        	.line	2143
 14666 09:B12B: A0 10 00     	ldy	#$10
 14667 09:B12E: B7 0C        	lda	[<L576+current_record_0],Y
 14668 09:B130: 85 01        	sta	<L577+current_SuperReloc2_1
 14669 09:B132: A0 12 00     	ldy	#$12
 14670 09:B135: B7 0C        	lda	[<L576+current_record_0],Y
 14671 09:B137: 85 03        	sta	<L577+current_SuperReloc2_1+2
 14672 09:B139: 82 1E 00     	brl	L10323
 14673                        L10322:
 14674                        ;        {
 14675                        	.line	2144
 14676                        ;          next_SuperReloc2 = current_SuperReloc2-
                    >next;
 14677                        	.line	2145
 14678 09:B13C: A0 0D 08     	ldy	#$80d
 14679 09:B13F: B7 01        	lda	[<L577+current_SuperReloc2_1],Y
 14680 09:B141: 85 05        	sta	<L577+next_SuperReloc2_1
 14681 09:B143: A0 0F 08     	ldy	#$80f
 14682 09:B146: B7 01        	lda	[<L577+current_SuperReloc2_1],Y
 14683 09:B148: 85 07        	sta	<L577+next_SuperReloc2_1+2
 14684                        ;          k_free(current_SuperReloc2);
 14685                        	.line	2146
 14686 09:B14A: D4 03        	pei	<L577+current_SuperReloc2_1+2
 14687 09:B14C: D4 01        	pei	<L577+current_SuperReloc2_1
 14688 09:B14E: 22 xx xx xx  	jsl	~~k_free
 14689                        ;          current_SuperReloc2 = next_SuperReloc2;
 14690                        	.line	2147
 14691 09:B152: A5 05        	lda	<L577+next_SuperReloc2_1
 14692 09:B154: 85 01        	sta	<L577+current_SuperReloc2_1
 14693 09:B156: A5 07        	lda	<L577+next_SuperReloc2_1+2
 14694 09:B158: 85 03        	sta	<L577+current_SuperReloc2_1+2
 14695                        ;        }
 14696                        	.line	2148
 14697                        L10320:
 14698                        L10323:
 14699 09:B15A: A5 01        	lda	<L577+current_SuperReloc2_1
 14700 09:B15C: 05 03        	ora	<L577+current_SuperReloc2_1+2
  Thu Dec  3 2020 22:25                                                Page 271


 14701 09:B15E: F0 03        	beq	L580
 14702 09:B160: 82 D9 FF     	brl	L10322
 14703                        L580:
 14704                        L10321:
 14705                        ;
 14706                        ;      k_free(current_record);
 14707                        	.line	2150
 14708 09:B163: D4 0E        	pei	<L576+current_record_0+2
 14709 09:B165: D4 0C        	pei	<L576+current_record_0
 14710 09:B167: 22 xx xx xx  	jsl	~~k_free
 14711                        ;    }
 14712                        	.line	2151
 14713                        ;}
 14714                        L10319:
 14715                        	.line	2152
 14716                        L581:
 14717 09:B16B: A5 0A        	lda	<L576+2
 14718 09:B16D: 85 0E        	sta	<L576+2+4
 14719 09:B16F: A5 09        	lda	<L576+1
 14720 09:B171: 85 0D        	sta	<L576+1+4
 14721 09:B173: 2B           	pld
 14722 09:B174: 3B           	tsc
 14723 09:B175: 18           	clc
 14724 09:B176: 69 0C 00     	adc	#L576+4
 14725 09:B179: 1B           	tcs
 14726 09:B17A: 6B           	rtl
 14727                        	.endblock	2152
 14728             00000008   L576	equ	8
 14729             00000001   L577	equ	1
 14730 09:B17B:              	ends
 14731                        	efunc
 14732                        	.endfunc	2152,1,8
 14733                        	.line	2152
 14734                        ;
 14735                        ;
 14736                        ;/************************************************
                    *****************************/
 14737                        ;/*  mem_free_General() :  Libération mémoire de l
                    a structure record_General. */
 14738                        ;/************************************************
                    *****************************/
 14739                        ;static void mem_free_General(struct record_Genera
                    l *current_record)
 14740                        ;{
 14741                        	.line	2158
 14742                        	.line	2159
 14743                        	LOADER
 14744                        	func
 14745                        	.function	2159
 14746                        ~~mem_free_General:
 14747                        	longa	on
 14748                        	longi	on
 14749 09:B17B: 3B           	tsc
 14750 09:B17C: 38           	sec
 14751 09:B17D: E9 00 00     	sbc	#L582
 14752 09:B180: 1B           	tcs
 14753 09:B181: 0B           	phd
 14754 09:B182: 5B           	tcd
  Thu Dec  3 2020 22:25                                                Page 272


 14755             00000004   current_record_0	set	4
 14756                        	.block	2159
 14757                        ;  if(current_record)
 14758                        	.sym	current_record,4,138,6,32,98
 14759                        	.line	2160
 14760                        ;    {
 14761 09:B183: A5 04        	lda	<L582+current_record_0
 14762 09:B185: 05 06        	ora	<L582+current_record_0+2
 14763 09:B187: D0 03        	bne	L585
 14764 09:B189: 82 08 00     	brl	L10324
 14765                        L585:
 14766                        	.line	2161
 14767                        ;      k_free(current_record);
 14768                        	.line	2162
 14769 09:B18C: D4 06        	pei	<L582+current_record_0+2
 14770 09:B18E: D4 04        	pei	<L582+current_record_0
 14771 09:B190: 22 xx xx xx  	jsl	~~k_free
 14772                        ;    }
 14773                        	.line	2163
 14774                        ;}
 14775                        L10324:
 14776                        	.line	2164
 14777                        L586:
 14778 09:B194: A5 02        	lda	<L582+2
 14779 09:B196: 85 06        	sta	<L582+2+4
 14780 09:B198: A5 01        	lda	<L582+1
 14781 09:B19A: 85 05        	sta	<L582+1+4
 14782 09:B19C: 2B           	pld
 14783 09:B19D: 3B           	tsc
 14784 09:B19E: 18           	clc
 14785 09:B19F: 69 04 00     	adc	#L582+4
 14786 09:B1A2: 1B           	tcs
 14787 09:B1A3: 6B           	rtl
 14788                        	.endblock	2164
 14789             00000000   L582	equ	0
 14790             00000001   L583	equ	1
 14791 09:B1A4:              	ends
 14792                        	efunc
 14793                        	.endfunc	2164,1,0
 14794                        	.line	2164
 14795                        ;
 14796                        ;
 14797                        ;/************************************************
                    ***************************************/
 14798                        ;/*  mem_free_Experimental() :  Libération mémoire
                     de la structure record_Experimental. */
 14799                        ;/************************************************
                    ***************************************/
 14800                        ;static void mem_free_Experimental(struct record_E
                    xperimental *current_record)
 14801                        ;{
 14802                        	.line	2170
 14803                        	.line	2171
 14804                        	LOADER
 14805                        	func
 14806                        	.function	2171
 14807                        ~~mem_free_Experimental:
 14808                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 273


 14809                        	longi	on
 14810 09:B1A4: 3B           	tsc
 14811 09:B1A5: 38           	sec
 14812 09:B1A6: E9 00 00     	sbc	#L587
 14813 09:B1A9: 1B           	tcs
 14814 09:B1AA: 0B           	phd
 14815 09:B1AB: 5B           	tcd
 14816             00000004   current_record_0	set	4
 14817                        	.block	2171
 14818                        ;  if(current_record)
 14819                        	.sym	current_record,4,138,6,32,99
 14820                        	.line	2172
 14821                        ;    {
 14822 09:B1AC: A5 04        	lda	<L587+current_record_0
 14823 09:B1AE: 05 06        	ora	<L587+current_record_0+2
 14824 09:B1B0: D0 03        	bne	L590
 14825 09:B1B2: 82 08 00     	brl	L10325
 14826                        L590:
 14827                        	.line	2173
 14828                        ;      k_free(current_record);
 14829                        	.line	2174
 14830 09:B1B5: D4 06        	pei	<L587+current_record_0+2
 14831 09:B1B7: D4 04        	pei	<L587+current_record_0
 14832 09:B1B9: 22 xx xx xx  	jsl	~~k_free
 14833                        ;    }
 14834                        	.line	2175
 14835                        ;}
 14836                        L10325:
 14837                        	.line	2176
 14838                        L591:
 14839 09:B1BD: A5 02        	lda	<L587+2
 14840 09:B1BF: 85 06        	sta	<L587+2+4
 14841 09:B1C1: A5 01        	lda	<L587+1
 14842 09:B1C3: 85 05        	sta	<L587+1+4
 14843 09:B1C5: 2B           	pld
 14844 09:B1C6: 3B           	tsc
 14845 09:B1C7: 18           	clc
 14846 09:B1C8: 69 04 00     	adc	#L587+4
 14847 09:B1CB: 1B           	tcs
 14848 09:B1CC: 6B           	rtl
 14849                        	.endblock	2176
 14850             00000000   L587	equ	0
 14851             00000001   L588	equ	1
 14852 09:B1CD:              	ends
 14853                        	efunc
 14854                        	.endfunc	2176,1,0
 14855                        	.line	2176
 14856                        ;
 14857                        ;/************************************************
                    ************************/
 14858                        ;
 14859                        	.line	2178
 14860                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\OMF_Record.c",2170
 14861                        	xref	~~my_Memory
 14862                        	xref	~~k_free
 14863                        	xref	~~k_calloc
 14864                        	xref	~~strcpy
  Thu Dec  3 2020 22:25                                                Page 274


 14865                        	xref	~~memcpy
 14866                        	.sym	~~mem_free_Experimental,~~mem_free_Exper
                    imental,65,3,0
 14867                        	.sym	~~mem_free_General,~~mem_free_General,65
                    ,3,0
 14868                        	.sym	~~mem_free_SUPER,~~mem_free_SUPER,65,3,0
 14869                        	.sym	~~mem_free_cINTERSEG,~~mem_free_cINTERSE
                    G,65,3,0
 14870                        	.sym	~~mem_free_cRELOC,~~mem_free_cRELOC,65,3
                    ,0
 14871                        	.sym	~~mem_free_ENTRY,~~mem_free_ENTRY,65,3,0
 14872                        	.sym	~~mem_free_LEXPR,~~mem_free_LEXPR,65,3,0
 14873                        	.sym	~~mem_free_LCONST,~~mem_free_LCONST,65,3
                    ,0
 14874                        	.sym	~~mem_free_DS,~~mem_free_DS,65,3,0
 14875                        	.sym	~~mem_free_EQU,~~mem_free_EQU,65,3,0
 14876                        	.sym	~~mem_free_LOCAL,~~mem_free_LOCAL,65,3,0
 14877                        	.sym	~~mem_free_RELEXPR,~~mem_free_RELEXPR,65
                    ,3,0
 14878                        	.sym	~~mem_free_BEXPR,~~mem_free_BEXPR,65,3,0
 14879                        	.sym	~~mem_free_ZEXPR,~~mem_free_ZEXPR,65,3,0
 14880                        	.sym	~~mem_free_EXPR,~~mem_free_EXPR,65,3,0
 14881                        	.sym	~~mem_free_MEM,~~mem_free_MEM,65,3,0
 14882                        	.sym	~~mem_free_GEQU,~~mem_free_GEQU,65,3,0
 14883                        	.sym	~~mem_free_GLOBAL,~~mem_free_GLOBAL,65,3
                    ,0
 14884                        	.sym	~~mem_free_STRONG,~~mem_free_STRONG,65,3
                    ,0
 14885                        	.sym	~~mem_free_USING,~~mem_free_USING,65,3,0
 14886                        	.sym	~~mem_free_INTERSEG,~~mem_free_INTERSEG,
                    65,3,0
 14887                        	.sym	~~mem_free_RELOC,~~mem_free_RELOC,65,3,0
 14888                        	.sym	~~mem_free_ORG,~~mem_free_ORG,65,3,0
 14889                        	.sym	~~mem_free_ALIGN,~~mem_free_ALIGN,65,3,0
 14890                        	.sym	~~mem_free_CONST,~~mem_free_CONST,65,3,0
 14891                        	.sym	~~mem_free_END,~~mem_free_END,65,3,0
 14892                        	.sym	~~AddInterseg,~~AddInterseg,65,3,0
 14893                        	.sym	~~AddReloc,~~AddReloc,65,3,0
 14894                        	.sym	~~DecodeSuperInterseg2536,~~DecodeSuperI
                    nterseg2536,1098,3,32,73
 14895                        	.sym	~~DecodeSuperInterseg1324,~~DecodeSuperI
                    nterseg1324,1098,3,32,72
 14896                        	.sym	~~DecodeSuperInterseg212,~~DecodeSuperIn
                    terseg212,1098,3,32,71
 14897                        	.sym	~~DecodeSuperInterseg1,~~DecodeSuperInte
                    rseg1,1098,3,32,70
 14898                        	.sym	~~DecodeSuperReloc3,~~DecodeSuperReloc3,
                    1098,3,32,69
 14899                        	.sym	~~DecodeSuperReloc2,~~DecodeSuperReloc2,
                    1098,3,32,68
 14900                        	.sym	~~DecodeRecordExperimental,~~DecodeRecor
                    dExperimental,1089,3,32
 14901                        	.sym	~~DecodeRecordGeneral,~~DecodeRecordGene
                    ral,1089,3,32
 14902                        	.sym	~~DecodeRecordSUPER,~~DecodeRecordSUPER,
                    1089,3,32
 14903                        	.sym	~~DecodeRecordcINTERSEG,~~DecodeRecordcI
                    NTERSEG,1089,3,32
  Thu Dec  3 2020 22:25                                                Page 275


 14904                        	.sym	~~DecodeRecordcRELOC,~~DecodeRecordcRELO
                    C,1089,3,32
 14905                        	.sym	~~DecodeRecordENTRY,~~DecodeRecordENTRY,
                    1089,3,32
 14906                        	.sym	~~DecodeRecordLEXPR,~~DecodeRecordLEXPR,
                    1089,3,32
 14907                        	.sym	~~DecodeRecordLCONST,~~DecodeRecordLCONS
                    T,1089,3,32
 14908                        	.sym	~~DecodeRecordDS,~~DecodeRecordDS,1089,3
                    ,32
 14909                        	.sym	~~DecodeRecordEQU,~~DecodeRecordEQU,1089
                    ,3,32
 14910                        	.sym	~~DecodeRecordLOCAL,~~DecodeRecordLOCAL,
                    1089,3,32
 14911                        	.sym	~~DecodeRecordRELEXPR,~~DecodeRecordRELE
                    XPR,1089,3,32
 14912                        	.sym	~~DecodeRecordBEXPR,~~DecodeRecordBEXPR,
                    1089,3,32
 14913                        	.sym	~~DecodeRecordZEXPR,~~DecodeRecordZEXPR,
                    1089,3,32
 14914                        	.sym	~~DecodeRecordEXPR,~~DecodeRecordEXPR,10
                    89,3,32
 14915                        	.sym	~~DecodeRecordMEM,~~DecodeRecordMEM,1089
                    ,3,32
 14916                        	.sym	~~DecodeRecordGEQU,~~DecodeRecordGEQU,10
                    89,3,32
 14917                        	.sym	~~DecodeRecordGLOBAL,~~DecodeRecordGLOBA
                    L,1089,3,32
 14918                        	.sym	~~DecodeRecordSTRONG,~~DecodeRecordSTRON
                    G,1089,3,32
 14919                        	.sym	~~DecodeRecordUSING,~~DecodeRecordUSING,
                    1089,3,32
 14920                        	.sym	~~DecodeRecordINTERSEG,~~DecodeRecordINT
                    ERSEG,1089,3,32
 14921                        	.sym	~~DecodeRecordRELOC,~~DecodeRecordRELOC,
                    1089,3,32
 14922                        	.sym	~~DecodeRecordORG,~~DecodeRecordORG,1089
                    ,3,32
 14923                        	.sym	~~DecodeRecordALIGN,~~DecodeRecordALIGN,
                    1089,3,32
 14924                        	.sym	~~DecodeRecordCONST,~~DecodeRecordCONST,
                    1089,3,32
 14925                        	.sym	~~DecodeRecordEND,~~DecodeRecordEND,1089
                    ,3,32
 14926                        	.sym	~~mem_free_record,~~mem_free_record,65,2
                    ,0
 14927                        	.sym	~~GetSUPERType,~~GetSUPERType,1102,2,32
 14928                        	.sym	~~GetRecordName,~~GetRecordName,1102,2,3
                    2
 14929                        	.sym	~~DecodeOneRecord,~~DecodeOneRecord,1098
                    ,2,32,67
 14930                        	.sym	~~my_Memory,~~my_Memory,65,18,0
 14931                        	.sym	PCOMMANDARGS,0,138,14,32,63
 14932                        	.sym	COMMANDARGS,0,10,14,64,63
 14933                        	.sym	PTOKENIZESTATE,0,133,14,32
 14934                        	.sym	TOKENIZESTATE,0,5,14,16
 14935                        	.sym	PTOKEN,0,138,14,32,62
 14936                        	.sym	TOKEN,0,10,14,64,62
  Thu Dec  3 2020 22:25                                                Page 276


 14937                        	.sym	PTOKENTYPE,0,133,14,32
 14938                        	.sym	TOKENTYPE,0,5,14,16
 14939                        	.sym	FXCommandHandler,0,656,14,32
 14940                        	.sym	PCONSOLECTX,0,138,14,32,61
 14941                        	.sym	CONSOLECTX,0,10,14,1144,61
 14942                        	.sym	PSPINNERCTX,0,138,14,32,60
 14943                        	.sym	SPINNERCTX,0,10,14,48,60
 14944                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,59
 14945                        	.sym	MOUSE_MSG_STATE,0,10,14,184,59
 14946                        	.sym	PFXEVENTPROCESS,0,138,14,32,58
 14947                        	.sym	FXEVENTPROCESS,0,10,14,64,58
 14948                        	.sym	FXEventProc,0,641,14,32
 14949                        	.sym	PMOUSEMSGDATA,0,138,14,32,57
 14950                        	.sym	MOUSEMSGDATA,0,10,14,64,57
 14951                        	.sym	MSGIRQ,0,5,14,16
 14952                        	.sym	MAINLOOPARGS,0,10,14,16,56
 14953                        	.sym	PEACHCHILD_MSG,0,138,14,32,55
 14954                        	.sym	EACHCHILD_MSG,0,10,14,64,55
 14955                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,54
 14956                        	.sym	CUR_PALETTE_MAP,0,10,14,400,54
 14957                        	.sym	PCLICKDETECTED,0,138,14,32,53
 14958                        	.sym	CLICKDETECTED,0,10,14,64,53
 14959                        	.sym	OBJECTCLICKED,0,641,14,32
 14960                        	.sym	~~k_free,~~k_free,65,18,0
 14961                        	.sym	~~k_calloc,~~k_calloc,1089,18,32
 14962                        	.sym	MemoryCallback,0,641,14,32
 14963                        	.sym	PFXMEMORYMAP,0,138,14,32,52
 14964                        	.sym	FXMEMORYMAP,0,10,14,2072,52
 14965                        	.sym	UMM_HEAP_INFO,0,10,14,256,51
 14966                        	.sym	PFXSTRING,0,138,14,32,50
 14967                        	.sym	FXSTRING,0,10,14,64,50
 14968                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
 14969                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
 14970                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
 14971                        	.sym	DEVICEDRIVER_READ,0,656,14,32
 14972                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
 14973                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,49
 14974                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,1448,49
 14975                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,48
 14976                        	.sym	FX_DEVICE_DRIVER,0,10,14,1416,48
 14977                        	.sym	PDEBUGBYTEBITS,0,138,14,32,47
 14978                        	.sym	DEBUGBYTEBITS,0,10,14,8,47
 14979                        	.sym	PFXENVIRONMENT,0,138,14,32,46
 14980                        	.sym	FXENVIRONMENT,0,10,14,96,46
 14981                        	.sym	PFXZERPOPAGE,0,138,14,32,45
 14982                        	.sym	FXZERPOPAGE,0,10,14,448,45
 14983                        	.sym	KERNELTRAPCALL,0,641,14,32
 14984                        	.sym	FOREACHNODEUNTIL,0,654,14,32
 14985                        	.sym	FOREACHNODE,0,641,14,32
 14986                        	.sym	PFXCOMBUFFER,0,138,14,32,44
 14987                        	.sym	FXCOMBUFFER,0,10,14,2080,44
 14988                        	.sym	PSUBMENULIST,0,138,14,32,43
 14989                        	.sym	SUBMENULIST,0,10,14,40,43
 14990                        	.sym	HSUBMENU,0,7,14,32
 14991                        	.sym	PSUBMENU,0,138,14,32,42
 14992                        	.sym	SUBMENU,0,10,14,64,42
 14993                        	.sym	MenuAction,0,641,14,32
 14994                        	.sym	PMENUANCHOR,0,138,14,32,41
  Thu Dec  3 2020 22:25                                                Page 277


 14995                        	.sym	MENUANCHOR,0,10,14,144,41
 14996                        	.sym	PTEXTBOX,0,138,14,32,40
 14997                        	.sym	TEXTBOX,0,10,14,144,40
 14998                        	.sym	PLISTBOX,0,138,14,32,39
 14999                        	.sym	LISTBOX,0,10,14,240,39
 15000                        	.sym	PSCROLLBAR,0,138,14,32,38
 15001                        	.sym	SCROLLBAR,0,10,14,192,38
 15002                        	.sym	PBUTTON,0,138,14,32,37
 15003                        	.sym	BUTTON,0,10,14,80,37
 15004                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,36
 15005                        	.sym	MENUDROPDOWNDATA,0,10,14,3568,36
 15006                        	.sym	PMENUTAG,0,138,14,32,35
 15007                        	.sym	MENUTAG,0,10,14,112,35
 15008                        	.sym	PMENU,0,138,14,32,34
 15009                        	.sym	MENU,0,10,14,248,34
 15010                        	.sym	HMENURESOURCE,0,129,14,32
 15011                        	.sym	HTEXTBOX,0,7,14,32
 15012                        	.sym	PTEXTBOXX,0,138,14,32,33
 15013                        	.sym	TEXTBOXX,0,10,14,112,33
 15014                        	.sym	FONTMETRIC,0,10,14,32,32
 15015                        	.sym	TITLE,0,142,14,32
 15016                        	.sym	PHANDLE,0,1153,14,32
 15017                        	.sym	HANDLE,0,129,14,32
 15018                        	.sym	PWINDOWEX,0,138,14,32,31
 15019                        	.sym	WINDOWEX,0,10,14,2704,31
 15020                        	.sym	PWINDOW,0,138,14,32,30
 15021                        	.sym	WINDOW,0,10,14,2808,30
 15022                        	.sym	PDRAGDATA,0,138,14,32,29
 15023                        	.sym	DRAGDATA,0,10,14,136,29
 15024                        	.sym	PNCCLICKABLE,0,138,14,32,28
 15025                        	.sym	NCCLICKABLE,0,10,14,88,28
 15026                        	.sym	HCLICKABLE,0,7,14,32
 15027                        	.sym	PCLICKABLE,0,138,14,32,27
 15028                        	.sym	CLICKABLE,0,10,14,88,27
 15029                        	.sym	PWNDCLASS,0,138,14,32,26
 15030                        	.sym	WNDCLASS,0,10,14,256,26
 15031                        	.sym	HBRUSH,0,129,14,32
 15032                        	.sym	HCURSOR,0,129,14,32
 15033                        	.sym	HICON,0,129,14,32
 15034                        	.sym	HINSTANCE,0,129,14,32
 15035                        	.sym	FXWndProc,0,654,14,32
 15036                        	.sym	PRECT,0,138,14,32,25
 15037                        	.sym	RECT,0,10,14,64,25
 15038                        	.sym	PPOINT,0,138,14,32,24
 15039                        	.sym	POINT,0,10,14,32,24
 15040                        	.sym	PFXPROPERTY,0,138,14,32,22
 15041                        	.sym	FXPROPERTY,0,10,14,384,22
 15042                        	.sym	SCANCODE,0,14,14,8
 15043                        	.sym	KEYCODE,0,14,14,8
 15044                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
 15045                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
 15046                        	.sym	PFXPROCESS,0,138,14,32,20
 15047                        	.sym	FXPROCESS,0,10,14,800,20
 15048                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
 15049                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
 15050                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
 15051                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
 15052                        	.sym	FXProcessProc,0,641,14,32
  Thu Dec  3 2020 22:25                                                Page 278


 15053                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
 15054                        	.sym	FXCMDMESSAGE,0,10,14,304,17
 15055                        	.sym	PFXOSMESSAGE,0,138,14,32,16
 15056                        	.sym	FXOSMESSAGE,0,10,14,304,16
 15057                        	.sym	PINT_REGS,0,138,14,32,15
 15058                        	.sym	INT_REGS,0,10,14,104,15
 15059                        	.sym	TASK_STACK,0,10,14,32,14
 15060                        	.sym	TASK,0,10,14,48,13
 15061                        	.sym	PIRQDATA,0,138,14,32,12
 15062                        	.sym	IRQDATA,0,10,14,48,12
 15063                        	.sym	HMENU,0,129,14,32
 15064                        	.sym	HWND,0,129,14,32
 15065                        	.sym	MSGDATA,0,14,14,8
 15066                        	.sym	MSGDEST,0,18,14,32
 15067                        	.sym	MSGSRC,0,18,14,32
 15068                        	.sym	MSGTYPE,0,16,14,16
 15069                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
 15070                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
 15071                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
 15072                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
 15073                        	.sym	FILE_PATH_LIST,0,138,14,32,6
 15074                        	.sym	PROCEDURE_LIST,0,138,14,32,6
 15075                        	.sym	FILE_HANDLE,0,138,14,32,11
 15076                        	.sym	FILE_BLOCK,0,10,14,552,11
 15077                        	.sym	SEMAPHORE,0,10,14,16,10
 15078                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
 15079                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
 15080                        	.sym	KRESULT,0,18,14,32
 15081                        	.sym	PKERNEL_ERROR,0,138,14,32,8
 15082                        	.sym	KERNEL_ERROR,0,10,14,32,8
 15083                        	.sym	PROCESS_STATUS,0,16,14,16
 15084                        	.sym	FILE_PATH_NAME,0,142,14,32
 15085                        	.sym	PROCESS_RESOURCE,0,129,14,32
 15086                        	.sym	PROCESS_TLS,0,129,14,32
 15087                        	.sym	PROCESS_CTX,0,129,14,32
 15088                        	.sym	USERID,0,16,14,16
 15089                        	.sym	PROCESS_ID,0,18,14,32
 15090                        	.sym	PROCESS_BANK,0,14,14,8
 15091                        	.sym	PFXQUEUE,0,138,14,32,7
 15092                        	.sym	FXQUEUE,0,10,14,80,7
 15093                        	.sym	PFXNODELIST,0,138,14,32,6
 15094                        	.sym	FXNODELIST,0,10,14,96,6
 15095                        	.sym	NodeListDeallocator,0,641,14,32
 15096                        	.sym	PFXNODE,0,138,14,32,5
 15097                        	.sym	FXNODE,0,10,14,384,5
 15098                        	.sym	PBYTEBITS,0,138,14,32,4
 15099                        	.sym	BYTEBITS,0,10,14,8,4
 15100                        	.sym	HCOLOR,0,129,14,32
 15101                        	.sym	HFONT,0,129,14,32
 15102                        	.sym	HDC,0,129,14,32
 15103                        	.sym	HPOINTER,0,129,14,32
 15104                        	.sym	uint32_t,0,18,14,32
 15105                        	.sym	uint8_t,0,14,14,8
 15106                        	.sym	PFAR,0,142,14,32
 15107                        	.sym	LPBOOL,0,142,14,32
 15108                        	.sym	BOOL,0,14,14,8
 15109                        	.sym	DWORD,0,18,14,32
 15110                        	.sym	ULONG,0,18,14,32
  Thu Dec  3 2020 22:25                                                Page 279


 15111                        	.sym	LPLONG,0,135,14,32
 15112                        	.sym	LONG,0,7,14,32
 15113                        	.sym	PUINT,0,144,14,32
 15114                        	.sym	USHORT,0,16,14,16
 15115                        	.sym	UINT,0,16,14,16
 15116                        	.sym	INT,0,5,14,16
 15117                        	.sym	WORD,0,5,14,16
 15118                        	.sym	PBYTE,0,142,14,32
 15119                        	.sym	BYTE,0,14,14,8
 15120                        	.sym	UCHAR,0,14,14,8
 15121                        	.sym	LPWCSTR,0,142,14,32
 15122                        	.sym	LPCSTR,0,142,14,32
 15123                        	.sym	LPSTR,0,142,14,32
 15124                        	.sym	LPCHAR,0,142,14,32
 15125                        	.sym	CHAR,0,14,14,8
 15126                        	.sym	LPVOID,0,129,14,32
 15127                        	.sym	VOID,0,1,14,32
 15128                        	.sym	~~strcpy,~~strcpy,1102,18,32
 15129                        	.sym	~~memcpy,~~memcpy,1089,18,32
 15130                        	.sym	Boolean_T,0,5,14,16
 15131                        	.sym	ldiv_t,0,10,14,64,2
 15132                        	.sym	div_t,0,10,14,32,1
 15133                        	.sym	wctype_t,0,16,14,16
 15134                        	.sym	wint_t,0,16,14,16
 15135                        	.sym	wchar_t,0,14,14,8
 15136                        	.sym	ptrdiff_t,0,7,14,32
 15137                        	.sym	size_t,0,16,14,16
 15138                        	end


      Lines assembled: 15138
      Errors: 0
