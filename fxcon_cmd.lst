  Thu Dec  3 2020 22:25                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxcon_cmd.c",0
     7                        ;
     8                        ;#include "fxconsole.h"
     9                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
    10                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    11                        	.line	134
    12                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
    13                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    15                        	.line	88
    16                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    17                        	.stag	fake1_,32,1
    18                        	.member	quot,0,5,8,16
    19                        	.member	rem,16,5,8,16
    20                        	.eos
    21                        	.stag	fake2_,64,2
    22                        	.member	quot,0,7,8,32
    23                        	.member	rem,32,7,8,32
    24                        	.eos
    25                        	.stag	int_sqrt,32,3
    26                        	.member	sqrt,0,16,8,16
    27                        	.member	frac,16,16,8,16
    28                        	.eos
    29                        	.line	205
    30                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    32                        	.stag	_fx_bytebits,8,4
    33                        	.member	b7,0,14,17,1
    34                        	.member	b6,1,14,17,1
    35                        	.member	b5,2,14,17,1
    36                        	.member	b4,3,14,17,1
    37                        	.member	b3,4,14,17,1
    38                        	.member	b2,5,14,17,1
    39                        	.member	b1,6,14,17,1
    40                        	.member	b0,7,14,17,1
    41                        	.eos
    42                        	.stag	_fx_node,384,5
    43                        	.member	type,0,14,8,8
  Thu Dec  3 2020 22:25                                                Page 2


    44                        	.member	Reserved0,8,14,8,8
    45                        	.member	data,16,129,8,32
    46                        	.member	last,48,138,8,32,5
    47                        	.member	next,80,138,8,32,5
    48                        	.member	name,112,110,8,0,32
    49                        	.member	Reserved1,368,16,8,16
    50                        	.eos
    51                        	.stag	_fx_nodelist,96,6
    52                        	.member	listhead,0,138,8,32,5
    53                        	.member	listData,32,129,8,32
    54                        	.member	deallocator,64,641,8,32
    55                        	.eos
    56                        	.stag	_fx_queue,80,7
    57                        	.member	count,0,5,8,16
    58                        	.member	front,16,138,8,32,5
    59                        	.member	rear,48,138,8,32,5
    60                        	.eos
    61                        	.stag	fake8_,32,8
    62                        	.member	subsystem,0,14,8,8
    63                        	.member	level,8,14,8,8
    64                        	.member	error,16,16,8,16
    65                        	.eos
    66                        	.stag	_fx_process_signal,16,9
    67                        	.member	cbSize,0,16,8,16
    68                        	.eos
    69                        	.stag	_fx_semaphore,16,10
    70                        	.member	reserved,0,5,8,16
    71                        	.eos
    72                        	.stag	_fx_fileBlock,552,11
    73                        	.member	openCount,0,16,8,16
    74                        	.member	lockCount,16,16,8,16
    75                        	.member	dirty,32,14,8,8
    76                        	.member	fileBuffer,40,110,8,0,64
    77                        	.eos
    78                        	.stag	_fx_irq_data,48,12
    79                        	.member	line,0,5,8,16
    80                        	.member	keycode,16,142,8,32
    81                        	.eos
    82                        	.stag	_task,48,13
    83                        	.member	SPL,0,14,8,8
    84                        	.member	SPH,8,14,8,8
    85                        	.member	pstack,16,142,8,32
    86                        	.eos
    87                        	.stag	_task_stack,32,14
    88                        	.member	SS,0,142,8,32
    89                        	.eos
    90                        	.stag	int_regs,104,15
    91                        	.member	PB,0,14,8,8
    92                        	.member	PH,8,14,8,8
    93                        	.member	PL,16,14,8,8
    94                        	.member	PP,24,14,8,8
    95                        	.member	DB,32,14,8,8
    96                        	.member	DH,40,14,8,8
    97                        	.member	DL,48,14,8,8
    98                        	.member	AH,56,14,8,8
    99                        	.member	AL,64,14,8,8
   100                        	.member	XH,72,14,8,8
   101                        	.member	XL,80,14,8,8
  Thu Dec  3 2020 22:25                                                Page 3


   102                        	.member	YH,88,14,8,8
   103                        	.member	YL,96,14,8,8
   104                        	.eos
   105                        	.stag	_fx_eventMessage,304,16
   106                        	.member	src,0,18,8,32
   107                        	.member	dest,32,18,8,32
   108                        	.member	type,64,16,8,16
   109                        	.member	hwnd,80,129,8,32
   110                        	.member	pheap,112,129,8,32
   111                        	.member	msgTime,144,18,8,32
   112                        	.member	data,176,110,8,0,16
   113                        	.eos
   114                        	.stag	_fx_cmdMessage,304,17
   115                        	.member	src,0,18,8,32
   116                        	.member	dest,32,18,8,32
   117                        	.member	type,64,16,8,16
   118                        	.member	hwnd,80,129,8,32
   119                        	.member	pheap,112,129,8,32
   120                        	.member	msgTime,144,18,8,32
   121                        	.member	cmdCId,176,16,8,16
   122                        	.member	cmdMId,192,16,8,16
   123                        	.member	parameter1,208,18,8,32
   124                        	.member	parameter2,240,18,8,32
   125                        	.member	parameter3,272,18,8,32
   126                        	.eos
   127                        	.stag	_fx_console_ctl,448,18
   128                        	.member	maxCols,0,5,8,16
   129                        	.member	maxRows,16,5,8,16
   130                        	.member	curX,32,5,8,16
   131                        	.member	curY,48,5,8,16
   132                        	.member	fgColor,64,5,8,16
   133                        	.member	bgColor,80,5,8,16
   134                        	.member	mode,96,14,8,8
   135                        	.member	kbBuffer,104,101,8,0,16
   136                        	.member	screenBuffer,360,142,8,32
   137                        	.member	desktopMode,392,14,8,8
   138                        	.member	lastMouseButton,400,5,8,16
   139                        	.member	lastMouseX,416,5,8,16
   140                        	.member	lastMouseY,432,5,8,16
   141                        	.eos
   142                        	.stag	_fx_desktop_ctl,392,19
   143                        	.member	desktopMode,0,14,8,8
   144                        	.member	cursorCtl,8,5,8,16
   145                        	.member	cursorState,24,5,8,16
   146                        	.member	backgroundColor,40,5,8,16
   147                        	.member	foregroundColor,56,5,8,16
   148                        	.member	menuMode,72,5,8,16
   149                        	.member	lastMouseButton,88,5,8,16
   150                        	.member	lastMouseX,104,5,8,16
   151                        	.member	lastMouseY,120,5,8,16
   152                        	.member	currentDiskName,136,142,8,32
   153                        	.member	diskNodes,168,129,8,32
   154                        	.member	titleNodes,200,129,8,32
   155                        	.member	menuNodes,232,129,8,32
   156                        	.member	iconNodes,264,129,8,32
   157                        	.member	windowNodes,296,129,8,32
   158                        	.member	fontNodes,328,129,8,32
   159                        	.member	wndProc,360,138,8,32,6
  Thu Dec  3 2020 22:25                                                Page 4


   160                        	.eos
   161                        	.stag	_fx_process,800,20
   162                        	.member	cbSize,0,5,8,16
   163                        	.member	procId,16,18,8,32
   164                        	.member	parentId,48,18,8,32
   165                        	.member	ctx,80,129,8,32
   166                        	.member	userId,112,16,8,16
   167                        	.member	status,128,16,8,16
   168                        	.member	foregroundActive,144,14,8,8
   169                        	.member	tls,152,1121,8,32,8
   170                        	.member	commandLine,408,142,8,32
   171                        	.member	semaphores,440,138,8,32,6
   172                        	.member	fileHandles,472,138,8,32,6
   173                        	.member	pathList,504,138,8,32,6
   174                        	.member	resources,536,138,8,32,6
   175                        	.member	timerAware,568,14,8,8
   176                        	.member	timerTicks,576,112,8,0,2
   177                        	.member	timerTickCount,608,112,8,0,2
   178                        	.member	kernelError,640,10,8,32,8
   179                        	.member	consoleCtl,672,138,8,32,18
   180                        	.member	desktopCtl,704,138,8,32,19
   181                        	.member	execProc,736,641,8,32
   182                        	.member	startupArgs,768,129,8,32
   183                        	.eos
   184                        	.stag	_fxProcessMessage,112,21
   185                        	.member	src,0,18,8,32
   186                        	.member	dest,32,18,8,32
   187                        	.member	type,64,16,8,16
   188                        	.member	processInfo,80,138,8,32,20
   189                        	.eos
   190                        	.stag	_fx_property,384,22
   191                        	.member	name,0,110,8,0,16
   192                        	.member	value,128,110,8,0,32
   193                        	.eos
   194                        	.utag	_24bitPointer,32,23
   195                        	.member	address,0,142,11,32
   196                        	.member	bytes,0,110,11,0,4
   197                        	.eos
   198                        	.stag	_PointStruct,32,24
   199                        	.member	x,0,5,8,16
   200                        	.member	y,16,5,8,16
   201                        	.eos
   202                        	.stag	_RectStruct,64,25
   203                        	.member	x,0,5,8,16
   204                        	.member	y,16,5,8,16
   205                        	.member	width,32,5,8,16
   206                        	.member	height,48,5,8,16
   207                        	.eos
   208                        	.stag	_k_WindowClass,256,26
   209                        	.member	cbSize,0,16,8,16
   210                        	.member	style,16,16,8,16
   211                        	.member	pWndProc,32,654,8,32
   212                        	.member	hInstance,64,129,8,32
   213                        	.member	hIcon,96,129,8,32
   214                        	.member	hCursor,128,129,8,32
   215                        	.member	hbrBackground,160,129,8,32
   216                        	.member	lpszMenuName,192,142,8,32
   217                        	.member	lpszClassName,224,142,8,32
  Thu Dec  3 2020 22:25                                                Page 5


   218                        	.eos
   219                        	.stag	_ClickableRect,88,27
   220                        	.member	area,0,10,8,64,25
   221                        	.member	z,64,5,8,16
   222                        	.member	enabled,80,14,8,8
   223                        	.eos
   224                        	.stag	_NCClickableRect,88,28
   225                        	.member	area,0,10,8,64,25
   226                        	.member	msgType,64,16,8,16
   227                        	.member	enabled,80,14,8,8
   228                        	.eos
   229                        	.stag	_DragData,136,29
   230                        	.member	area,0,10,8,64,25
   231                        	.member	xoffset,64,5,8,16
   232                        	.member	yoffset,80,5,8,16
   233                        	.member	msgType,96,16,8,16
   234                        	.member	isDrag,112,14,8,8
   235                        	.member	canDrag,120,14,8,8
   236                        	.member	canDrop,128,14,8,8
   237                        	.eos
   238                        	.stag	_k_WindowStruct,2808,30
   239                        	.member	cbSize,0,16,8,16
   240                        	.member	style,16,18,8,32
   241                        	.member	win_id,48,5,8,16
   242                        	.member	win_x,64,5,8,16
   243                        	.member	win_y,80,5,8,16
   244                        	.member	win_width,96,5,8,16
   245                        	.member	win_height,112,5,8,16
   246                        	.member	wndRect,128,10,8,64,25
   247                        	.member	clientRect,192,10,8,64,25
   248                        	.member	nonclientGadgets,256,106,8,0,28,16
   249                        	.member	clickable,1664,129,8,32
   250                        	.member	win_title,1696,110,8,0,32
   251                        	.member	Reserved0,1952,16,8,16
   252                        	.member	win_class,1968,110,8,0,16
   253                        	.member	win_class_name,2096,110,8,0,32
   254                        	.member	nBitmapLayer,2352,16,8,16
   255                        	.member	procid,2368,18,8,32
   256                        	.member	pWndClass,2400,138,8,32,26
   257                        	.member	pParentWindow,2432,129,8,32
   258                        	.member	hMenu,2464,129,8,32
   259                        	.member	pChildWindows,2496,138,8,32,6
   260                        	.member	pChildHitList,2528,138,8,32,6
   261                        	.member	isVisible,2560,14,8,8
   262                        	.member	windowData,2568,129,8,32
   263                        	.member	clientData,2600,1121,8,32,6
   264                        	.member	isClosed,2792,14,8,8
   265                        	.member	isClosing,2800,14,8,8
   266                        	.eos
   267                        	.stag	_k_WindowStructEx,2704,31
   268                        	.member	cbSize,0,16,8,16
   269                        	.member	style,16,18,8,32
   270                        	.member	win_id,48,5,8,16
   271                        	.member	win_x,64,5,8,16
   272                        	.member	win_y,80,5,8,16
   273                        	.member	win_width,96,5,8,16
   274                        	.member	win_height,112,5,8,16
   275                        	.member	wndRect,128,10,8,64,25
  Thu Dec  3 2020 22:25                                                Page 6


   276                        	.member	clientRect,192,10,8,64,25
   277                        	.member	nonclientGadgets,256,106,8,0,28,16
   278                        	.member	clickable,1664,129,8,32
   279                        	.member	win_title,1696,110,8,0,32
   280                        	.member	Reserved0,1952,16,8,16
   281                        	.member	win_class,1968,110,8,0,16
   282                        	.member	nBitmapLayer,2096,16,8,16
   283                        	.member	procid,2112,18,8,32
   284                        	.member	pWndClass,2144,138,8,32,26
   285                        	.member	pParentWindow,2176,129,8,32
   286                        	.member	hMenu,2208,129,8,32
   287                        	.member	pChildWindows,2240,138,8,32,6
   288                        	.member	pChildHitList,2272,138,8,32,6
   289                        	.member	isVisible,2304,14,8,8
   290                        	.member	windowData,2312,129,8,32
   291                        	.member	clientData,2344,1121,8,32,4
   292                        	.member	isClosed,2472,14,8,8
   293                        	.member	hWnd,2480,129,8,32
   294                        	.member	localRect,2512,10,8,64,25
   295                        	.member	globalRect,2576,10,8,64,25
   296                        	.member	clientOffsetRect,2640,10,8,64,25
   297                        	.eos
   298                        	.stag	_FontMetric,32,32
   299                        	.member	width,0,5,8,16
   300                        	.member	height,16,5,8,16
   301                        	.eos
   302                        	.stag	_ctl_Textbox,112,33
   303                        	.member	win_id,0,5,8,16
   304                        	.member	win_x,16,5,8,16
   305                        	.member	win_y,32,5,8,16
   306                        	.member	win_width,48,5,8,16
   307                        	.member	win_height,64,5,8,16
   308                        	.member	content,80,1166,8,32
   309                        	.eos
   310                        	.stag	_MenuStruct,248,34
   311                        	.member	cx,0,5,8,16
   312                        	.member	cy,16,5,8,16
   313                        	.member	width,32,5,8,16
   314                        	.member	height,48,5,8,16
   315                        	.member	fcolor,64,14,8,8
   316                        	.member	bcolor,72,14,8,8
   317                        	.member	chromeLeft,80,14,8,8
   318                        	.member	chromeRight1,88,14,8,8
   319                        	.member	chromeRight2,96,14,8,8
   320                        	.member	itemId,104,16,8,16
   321                        	.member	pCaption,120,142,8,32
   322                        	.member	subMenus,152,138,8,32,6
   323                        	.member	pBackground,184,129,8,32
   324                        	.member	hWndOwner,216,129,8,32
   325                        	.eos
   326                        	.stag	fake35_,112,35
   327                        	.member	menuId,0,16,8,16
   328                        	.member	caption,16,142,8,32
   329                        	.member	rect,48,10,8,64,25
   330                        	.eos
   331                        	.stag	fake36_,3568,36
   332                        	.member	pParent,0,138,8,32,30
   333                        	.member	rect,32,10,8,64,25
  Thu Dec  3 2020 22:25                                                Page 7


   334                        	.member	captions,96,1134,8,32,24
   335                        	.member	chrome,864,110,8,0,24
   336                        	.member	ids,1056,112,8,0,24
   337                        	.member	clickable,1440,106,8,0,27,24
   338                        	.member	selected,3552,16,8,16
   339                        	.eos
   340                        	.stag	_fx_button_t,80,37
   341                        	.member	pCaption,0,142,8,32
   342                        	.member	data,32,129,8,32
   343                        	.member	captionPixelWidth,64,16,8,16
   344                        	.eos
   345                        	.stag	_fx_scrollbar_t,192,38
   346                        	.member	min,0,16,8,16
   347                        	.member	max,16,16,8,16
   348                        	.member	increment,32,16,8,16
   349                        	.member	stopsize,48,16,8,16
   350                        	.member	location,64,5,8,16
   351                        	.member	state,80,5,8,16
   352                        	.member	rectThumb,96,10,8,64,25
   353                        	.member	data,160,129,8,32
   354                        	.eos
   355                        	.stag	_fx_listbox_t,240,39
   356                        	.member	pos,0,5,8,16
   357                        	.member	selected,16,16,8,16
   358                        	.member	offsetX,32,5,8,16
   359                        	.member	offsetY,48,5,8,16
   360                        	.member	inc,64,5,8,16
   361                        	.member	direction,80,5,8,16
   362                        	.member	top,96,5,8,16
   363                        	.member	bottom,112,5,8,16
   364                        	.member	indexTop,128,5,8,16
   365                        	.member	indexBottom,144,5,8,16
   366                        	.member	maxItems,160,16,8,16
   367                        	.member	fontSet,176,142,8,32
   368                        	.member	data,208,129,8,32
   369                        	.eos
   370                        	.stag	_fx_textbox_t,144,40
   371                        	.member	pos,0,5,8,16
   372                        	.member	selected,16,16,8,16
   373                        	.member	offsetX,32,5,8,16
   374                        	.member	offsetY,48,5,8,16
   375                        	.member	isShifted,64,14,8,8
   376                        	.member	cursorState,72,14,8,8
   377                        	.member	fontSet,80,142,8,32
   378                        	.member	data,112,129,8,32
   379                        	.eos
   380                        	.stag	_fx_menuAnchor_t,144,41
   381                        	.member	pCaption,0,142,8,32
   382                        	.member	renderLayoutX,32,16,8,16
   383                        	.member	renderLayoutY,48,16,8,16
   384                        	.member	captionPixelWidth,64,16,8,16
   385                        	.member	data,80,129,8,32
   386                        	.member	droppedWindow,112,138,8,32,30
   387                        	.eos
   388                        	.stag	_SubMenuStruct,64,42
   389                        	.member	caption,0,142,8,32
   390                        	.member	action,32,641,8,32
   391                        	.eos
  Thu Dec  3 2020 22:25                                                Page 8


   392                        	.stag	_SubMenuListStruct,40,43
   393                        	.member	cMenus,0,14,8,8
   394                        	.member	psubmenus,8,9354,8,32,42
   395                        	.eos
   396                        	.stag	_fx_ComBuffer,2080,44
   397                        	.member	cbSize,0,16,8,16
   398                        	.member	cbBuffer,16,16,8,16
   399                        	.member	buffer,32,110,8,0,256
   400                        	.eos
   401                        	.line	708
   402                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   403                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",0
   404                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   405                        	.line	708
   406                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",5
   407                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   408                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   409                        	.line	708
   410                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   411                        	.line	72
   412                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",6
   413                        	.line	1325
   414                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",10
   415                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   416                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   417                        	.line	205
   418                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   419                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   420                        	.line	134
   421                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   422                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   423                        	.line	708
   424                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   425                        	.stag	_fx_string,64,45
   426                        	.member	size,0,16,8,16
   427                        	.member	pos,16,5,8,16
   428                        	.member	buffer,32,142,8,32
   429                        	.eos
   430                        	.line	71
   431                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",15
   432                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Dec  3 2020 22:25                                                Page 9


                    space\FXOSv1\src\fxeventmanager.h",0
   433                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   434                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   435                        	.line	205
   436                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
   437                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   438                        	.line	134
   439                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
   440                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
   441                        	.line	103
   442                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
   443                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   444                        	.line	708
   445                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   446                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   447                        	.line	89
   448                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   449                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",0
   450                        	.line	1325
   451                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",13
   452                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   453                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   454                        	.line	25
   455                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   456                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   457                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   458                        	.line	708
   459                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",5
   460                        	.line	61
   461                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   462                        	.stag	_fx_zero_page,448,46
   463                        	.member	fxos_mouse_byte_0,0,14,8,8
   464                        	.member	fxos_mouse_byte_1,8,14,8,8
   465                        	.member	fxos_mouse_byte_2,16,14,8,8
   466                        	.member	fxos_mouse_byte_t,24,14,8,8
   467                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   468                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   469                        	.member	fxos_mouse_byte_y_l,48,14,8,8
  Thu Dec  3 2020 22:25                                                Page 10


   470                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   471                        	.member	fxos_key_byte_0,64,14,8,8
   472                        	.member	fxos_key_byte_1,72,14,8,8
   473                        	.member	fxos_key_byte_2,80,14,8,8
   474                        	.member	fxos_mouse_ctl,88,14,8,8
   475                        	.member	fxos_mouse_index,96,14,8,8
   476                        	.member	fxos_mouse_status,104,14,8,8
   477                        	.member	VersionMajor,112,16,8,16
   478                        	.member	VersionMinor,128,16,8,16
   479                        	.member	VersionRelease,144,16,8,16
   480                        	.member	topMemory,160,18,8,32
   481                        	.member	bottomMemory,192,18,8,32
   482                        	.member	availableMemory,224,18,8,32
   483                        	.member	availableMemoryK,256,18,8,32
   484                        	.member	availableHeapMemory,288,18,8,32
   485                        	.member	availableHeapMemoryK,320,18,8,32
   486                        	.member	kernelFunctionCallId,352,16,8,16
   487                        	.member	kernelFunctionCallBank,368,14,8,8
   488                        	.member	kernelFunctionCallReserved,376,14,8,8
   489                        	.member	kernelFunctionCallParameter,384,129,8,32
   490                        	.member	kernelFunctionCallReturn,416,129,8,32
   491                        	.eos
   492                        	.stag	_fx_environment,96,47
   493                        	.member	variables,0,142,8,32
   494                        	.member	reserved1,32,5,8,16
   495                        	.member	reserved2,48,5,8,16
   496                        	.member	reserved3,64,5,8,16
   497                        	.member	reserved4,80,5,8,16
   498                        	.eos
   499                        	.stag	_debug_byte_bits,8,48
   500                        	.member	bit7,0,14,17,1
   501                        	.member	bit6,1,14,17,1
   502                        	.member	bit5,2,14,17,1
   503                        	.member	bit4,3,14,17,1
   504                        	.member	bit3,4,14,17,1
   505                        	.member	bit2,5,14,17,1
   506                        	.member	bit1,6,14,17,1
   507                        	.member	bit0,7,14,17,1
   508                        	.eos
   509                        	.stag	_fx_device_driver,1416,49
   510                        	.member	name,0,110,8,0,64
   511                        	.member	version,512,110,8,0,64
   512                        	.member	hmajor,1024,110,8,0,16
   513                        	.member	hminor,1152,110,8,0,16
   514                        	.member	type,1280,14,8,8
   515                        	.member	f_driver_load,1288,129,8,32
   516                        	.member	f_driver_read,1320,129,8,32
   517                        	.member	f_driver_write,1352,129,8,32
   518                        	.member	f_driver_unload,1384,129,8,32
   519                        	.eos
   520                        	.stag	_fx_block_device_driver,1448,50
   521                        	.member	name,0,110,8,0,64
   522                        	.member	version,512,110,8,0,64
   523                        	.member	hmajor,1024,110,8,0,16
   524                        	.member	hminor,1152,110,8,0,16
   525                        	.member	type,1280,14,8,8
   526                        	.member	f_driver_load,1288,129,8,32
   527                        	.member	f_driver_read,1320,129,8,32
  Thu Dec  3 2020 22:25                                                Page 11


   528                        	.member	f_driver_write,1352,129,8,32
   529                        	.member	f_driver_unload,1384,129,8,32
   530                        	.member	f_driver_command,1416,129,8,32
   531                        	.eos
   532                        	.line	270
   533                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",19
   534                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   535                        	.line	171
   536                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",20
   537                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   538                        	.line	71
   539                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",21
   540                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   541                        	.line	61
   542                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   543                        	.line	25
   544                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   545                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   546                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   547                        	.line	708
   548                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   549                        	.line	52
   550                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   551                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   552                        	.line	61
   553                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   554                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   555                        	.line	171
   556                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   557                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   558                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   559                        	.line	708
   560                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   561                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   562                        	.line	25
   563                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   564                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Dec  3 2020 22:25                                                Page 12


                    space\FXOSv1\src\fxmemorymanager.h",0
   565                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   566                        	.line	25
   567                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   568                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   569                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   570                        	.line	32
   571                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   572                        	.stag	UMM_HEAP_INFO_t,256,51
   573                        	.member	totalEntries,0,18,8,32
   574                        	.member	usedEntries,32,18,8,32
   575                        	.member	freeEntries,64,18,8,32
   576                        	.member	totalBlocks,96,18,8,32
   577                        	.member	usedBlocks,128,18,8,32
   578                        	.member	freeBlocks,160,18,8,32
   579                        	.member	maxFreeContiguousBlocks,192,18,8,32
   580                        	.member	blockSize,224,18,8,32
   581                        	.eos
   582                        	.line	199
   583                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   584                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   585                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   586                        	.line	708
   587                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
   588                        	.line	24
   589                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   590                        	.stag	_fx_memory_map,2072,52
   591                        	.member	availableMemory,0,18,8,32
   592                        	.member	valid_segments,32,110,8,0,255
   593                        	.eos
   594                        	.line	39
   595                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   596                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   597                        	.line	743
   598                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   599                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   600                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   601                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   602                        	.line	708
   603                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   604                        	.line	64
  Thu Dec  3 2020 22:25                                                Page 13


   605                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",4
   606                        	.stag	_click_detected,64,53
   607                        	.member	window,0,138,8,32,30
   608                        	.member	handler,32,641,8,32
   609                        	.eos
   610                        	.stag	_current_palette_map,400,54
   611                        	.member	CUR_DESKTOP,0,5,8,16
   612                        	.member	CUR_BACKGROUND,16,5,8,16
   613                        	.member	CUR_FONT,32,5,8,16
   614                        	.member	CUR_SELECTED_FONT,48,5,8,16
   615                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   616                        	.member	CUR_WINDOWFRAME,80,5,8,16
   617                        	.member	CUR_WINDOWBORDER,96,5,8,16
   618                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   619                        	.member	CUR_MENU,128,5,8,16
   620                        	.member	CUR_GADGET,144,5,8,16
   621                        	.member	CUR_COLOR,160,101,8,0,15
   622                        	.eos
   623                        	.line	264
   624                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",9
   625                        	.stag	_childMessage_t,64,55
   626                        	.member	msgType,0,16,8,16
   627                        	.member	msgData,16,129,8,32
   628                        	.member	dataSize,48,16,8,16
   629                        	.eos
   630                        	.line	362
   631                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   632                        	.stag	_fx_main_loopvars,16,56
   633                        	.member	dummy,0,5,8,16
   634                        	.eos
   635                        	.stag	_fxMouseMessageData,64,57
   636                        	.member	button1,0,14,8,8
   637                        	.member	button2,8,14,8,8
   638                        	.member	button3,16,14,8,8
   639                        	.member	button4,24,14,8,8
   640                        	.member	x,32,16,8,16
   641                        	.member	y,48,16,8,16
   642                        	.eos
   643                        	.stag	_fx_eventProcess,64,58
   644                        	.member	process,0,138,8,32,20
   645                        	.member	eventProc,32,641,8,32
   646                        	.eos
   647                        	.stag	_mouse_msg_state,184,59
   648                        	.member	lastEvent,0,18,8,32
   649                        	.member	buttonLeftDown,32,14,8,8
   650                        	.member	lastLeftDown,40,18,8,32
   651                        	.member	buttonRightDown,72,14,8,8
   652                        	.member	lastRightDown,80,18,8,32
   653                        	.member	buttonMiddleDown,112,14,8,8
   654                        	.member	lastMiddleDown,120,18,8,32
   655                        	.member	lastX,152,16,8,16
   656                        	.member	lastY,168,16,8,16
   657                        	.eos
   658                        	.line	743
   659                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Dec  3 2020 22:25                                                Page 14


                    space\FXOSv1\src\fxconsole.h",16
   660                        	.stag	_fx_spinner_ctx,48,60
   661                        	.member	index,0,5,8,16
   662                        	.member	spinner,16,142,8,32
   663                        	.eos
   664                        	.stag	_fx_console_ctx,1144,61
   665                        	.member	lineBufferIndex,0,5,8,16
   666                        	.member	lineBuffer,16,110,8,0,128
   667                        	.member	isShifted,1040,14,8,8
   668                        	.member	userData,1048,129,8,32
   669                        	.member	screenBuffer,1080,129,8,32
   670                        	.member	Reserved1,1112,129,8,32
   671                        	.eos
   672                        	.stag	_token,64,62
   673                        	.member	type,0,5,8,16
   674                        	.member	depth,16,16,8,16
   675                        	.member	text,32,142,8,32
   676                        	.eos
   677                        	.stag	_command_args,64,63
   678                        	.member	proc,0,656,8,32
   679                        	.member	tokens,32,138,8,32,5
   680                        	.eos
   681                        	.line	171
   682                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxcon_cmd.c",2
   683                        ;#include "fxdos.h"
   684                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",0
   685                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   686                        	.line	708
   687                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",5
   688                        	.stag	_fx_sd_direntry,256,64
   689                        	.member	filename,0,110,8,0,11
   690                        	.member	type,88,14,8,8
   691                        	.member	attrs,96,110,8,0,20
   692                        	.eos
   693                        	.stag	_fx_info,416,65
   694                        	.member	stgName,0,110,8,0,32
   695                        	.member	Reserved1,256,14,8,8
   696                        	.member	stgType,264,16,8,16
   697                        	.member	Reserved2,280,14,8,8
   698                        	.member	stgReserved,288,110,8,0,16
   699                        	.eos
   700                        	.stag	_fx_fileinfo,136,66
   701                        	.member	type,0,14,8,8
   702                        	.member	pFilename,8,142,8,32
   703                        	.member	lSize,40,18,8,32
   704                        	.member	lcreateDate,72,18,8,32
   705                        	.member	lchangeDate,104,18,8,32
   706                        	.eos
   707                        	.stag	_FX_FAT_DIR_INFO,256,67
   708                        	.member	DIR_Name,0,110,8,0,11
   709                        	.member	DIR_Attr,88,14,8,8
   710                        	.member	DIR_NTRes,96,14,8,8
   711                        	.member	DIR_CrtTimeTenth,104,14,8,8
   712                        	.member	DIR_CrtTime,112,16,8,16
  Thu Dec  3 2020 22:25                                                Page 15


   713                        	.member	DIR_CrtDate,128,16,8,16
   714                        	.member	DIR_LstAccDate,144,16,8,16
   715                        	.member	DIR_FstClusHI,160,16,8,16
   716                        	.member	DIR_WrtTime,176,16,8,16
   717                        	.member	DIR_WrtDate,192,16,8,16
   718                        	.member	DIR_FstClusLO,208,16,8,16
   719                        	.member	DIR_FileSize,224,18,8,32
   720                        	.eos
   721                        	.stag	fat_extBS_32,416,68
   722                        	.member	table_size_32,0,18,8,32
   723                        	.member	extended_flags,32,16,8,16
   724                        	.member	fat_version,48,16,8,16
   725                        	.member	root_cluster,64,18,8,32
   726                        	.member	fat_info,96,16,8,16
   727                        	.member	backup_BS_sector,112,16,8,16
   728                        	.member	reserved_0,128,110,8,0,12
   729                        	.member	drive_number,224,14,8,8
   730                        	.member	reserved_1,232,14,8,8
   731                        	.member	boot_signature,240,14,8,8
   732                        	.member	volume_id,248,16,8,16
   733                        	.member	volume_label,264,110,8,0,11
   734                        	.member	fat_type_label,352,110,8,0,8
   735                        	.eos
   736                        	.stag	fat_extBS_16,192,69
   737                        	.member	bios_drive_num,0,14,8,8
   738                        	.member	reserved1,8,14,8,8
   739                        	.member	boot_signature,16,14,8,8
   740                        	.member	volume_id,24,16,8,16
   741                        	.member	volume_label,40,110,8,0,11
   742                        	.member	fat_type_label,128,110,8,0,8
   743                        	.eos
   744                        	.stag	fat_BS,688,70
   745                        	.member	bootjmp,0,110,8,0,3
   746                        	.member	oem_name,24,110,8,0,8
   747                        	.member	bytes_per_sector,88,16,8,16
   748                        	.member	sectors_per_cluster,104,14,8,8
   749                        	.member	reserved_sector_count,112,16,8,16
   750                        	.member	table_count,128,14,8,8
   751                        	.member	root_entry_count,136,16,8,16
   752                        	.member	total_sectors_16,152,16,8,16
   753                        	.member	media_type,168,14,8,8
   754                        	.member	table_size_16,176,16,8,16
   755                        	.member	sectors_per_track,192,16,8,16
   756                        	.member	head_side_count,208,16,8,16
   757                        	.member	hidden_sector_count,224,16,8,16
   758                        	.member	total_sectors_32,240,16,8,16
   759                        	.member	extended_section,256,110,8,0,54
   760                        	.eos
   761                        	.stag	__FATBootSector,928,71
   762                        	.member	bootjmp,0,110,8,0,3
   763                        	.member	oem_name,24,110,8,0,8
   764                        	.member	bytes_per_sector,88,16,8,16
   765                        	.member	sectors_per_cluster,104,14,8,8
   766                        	.member	reserved_sector_count,112,16,8,16
   767                        	.member	fat_table_count,128,14,8,8
   768                        	.member	root_entry_count,136,16,8,16
   769                        	.member	total_sectors_16,152,16,8,16
   770                        	.member	media_type,168,14,8,8
  Thu Dec  3 2020 22:25                                                Page 16


   771                        	.member	sectors_per_fat,176,16,8,16
   772                        	.member	sectors_per_track,192,16,8,16
   773                        	.member	head_side_count,208,16,8,16
   774                        	.member	hidden_sector_count,224,18,8,32
   775                        	.member	total_sectors_32,256,18,8,32
   776                        	.member	drive_number,288,14,8,8
   777                        	.member	reserved1,296,14,8,8
   778                        	.member	boot_sig,304,14,8,8
   779                        	.member	vol_id,312,18,8,32
   780                        	.member	vol_name,344,110,8,0,11
   781                        	.member	file_system_type,432,110,8,0,8
   782                        	.member	extended_section,496,110,8,0,54
   783                        	.eos
   784                        	.stag	__PARTITIONTABLE,128,72
   785                        	.member	first_byte,0,14,8,8
   786                        	.member	start_chs,8,110,8,0,3
   787                        	.member	partition_type,32,14,8,8
   788                        	.member	end_chs,40,110,8,0,3
   789                        	.member	start_sector,64,18,8,32
   790                        	.member	length_sectors,96,18,8,32
   791                        	.eos
   792                        	.stag	fake73_,4096,73
   793                        	.member	jmp,0,110,8,0,3
   794                        	.member	oem,24,110,8,0,8
   795                        	.member	sector_size,88,15,8,16
   796                        	.member	sectors_per_cluster,104,14,8,8
   797                        	.member	reserved_sectors,112,15,8,16
   798                        	.member	number_of_fats,128,14,8,8
   799                        	.member	root_dir_entries,136,15,8,16
   800                        	.member	total_sectors_short,152,15,8,16
   801                        	.member	media_descriptor,168,14,8,8
   802                        	.member	fat_size_sectors,176,15,8,16
   803                        	.member	sectors_per_track,192,15,8,16
   804                        	.member	number_of_heads,208,15,8,16
   805                        	.member	hidden_sectors,224,18,8,32
   806                        	.member	total_sectors_long,256,18,8,32
   807                        	.member	drive_number,288,14,8,8
   808                        	.member	current_head,296,14,8,8
   809                        	.member	boot_signature,304,14,8,8
   810                        	.member	volume_id,312,18,8,32
   811                        	.member	volume_label,344,110,8,0,11
   812                        	.member	fs_type,432,110,8,0,8
   813                        	.member	boot_code,496,110,8,0,448
   814                        	.member	boot_sector_signature,4080,15,8,16
   815                        	.eos
   816                        	.stag	__FAT16ENTRY,256,74
   817                        	.member	filename,0,110,8,0,8
   818                        	.member	ext,64,110,8,0,3
   819                        	.member	attributes,88,14,8,8
   820                        	.member	reserved,96,110,8,0,10
   821                        	.member	modify_time,176,16,8,16
   822                        	.member	modify_date,192,16,8,16
   823                        	.member	starting_cluster,208,16,8,16
   824                        	.member	file_size,224,18,8,32
   825                        	.eos
   826                        	.stag	__FAT16ENTRYLONG,288,75
   827                        	.member	filename,0,110,8,0,8
   828                        	.member	ext,64,110,8,0,3
  Thu Dec  3 2020 22:25                                                Page 17


   829                        	.member	attributes,88,14,8,8
   830                        	.member	reserved,96,110,8,0,10
   831                        	.member	modify_time,176,16,8,16
   832                        	.member	modify_date,192,16,8,16
   833                        	.member	starting_cluster,208,16,8,16
   834                        	.member	file_size,224,18,8,32
   835                        	.member	plongfileName,256,142,8,32
   836                        	.eos
   837                        	.stag	_LongFileName,256,76
   838                        	.member	sequenceNo,0,14,8,8
   839                        	.member	fileName_Part1,8,110,8,0,10
   840                        	.member	fileattribute,88,14,8,8
   841                        	.member	type,96,14,8,8
   842                        	.member	checksum,104,14,8,8
   843                        	.member	fileName_Part2,112,110,8,0,12
   844                        	.member	fstclusLO,208,5,8,16
   845                        	.member	fileName_Part3,224,110,8,0,4
   846                        	.eos
   847                        	.stag	_IDSECTOR,2048,77
   848                        	.member	wGenConfig,0,16,8,16
   849                        	.member	wNumCyls,16,16,8,16
   850                        	.member	wReserved,32,16,8,16
   851                        	.member	wNumHeads,48,16,8,16
   852                        	.member	wBytesPerTrack,64,16,8,16
   853                        	.member	wBytesPerSector,80,16,8,16
   854                        	.member	wSectorsPerTrack,96,16,8,16
   855                        	.member	wVendorUnique,112,112,8,0,3
   856                        	.member	sSerialNumber,160,110,8,0,20
   857                        	.member	wBufferType,320,16,8,16
   858                        	.member	wBufferSize,336,16,8,16
   859                        	.member	wECCSize,352,16,8,16
   860                        	.member	sFirmwareRev,368,110,8,0,8
   861                        	.member	sModelNumber,432,110,8,0,40
   862                        	.member	wMoreVendorUnique,752,16,8,16
   863                        	.member	wDoubleWordIO,768,16,8,16
   864                        	.member	wCapabilities,784,16,8,16
   865                        	.member	wReserved1,800,16,8,16
   866                        	.member	wPIOTiming,816,16,8,16
   867                        	.member	wDMATiming,832,16,8,16
   868                        	.member	wBS,848,16,8,16
   869                        	.member	wNumCurrentCyls,864,16,8,16
   870                        	.member	wNumCurrentHeads,880,16,8,16
   871                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
   872                        	.member	ulCurrentSectorCapacity,912,18,8,32
   873                        	.member	wMultSectorStuff,944,16,8,16
   874                        	.member	ulTotalAddressableSectors,960,18,8,32
   875                        	.member	wSingleWordDMA,992,16,8,16
   876                        	.member	wMultiWordDMA,1008,16,8,16
   877                        	.member	bReserved,1024,110,8,0,128
   878                        	.eos
   879                        	.stag	fake78_,16,78
   880                        	.member	Reserved1,0,16,17,1
   881                        	.member	Retired3,1,16,17,1
   882                        	.member	ResponseIncomplete,2,16,17,1
   883                        	.member	Retired2,3,16,17,3
   884                        	.member	FixedDevice,6,16,17,1
   885                        	.member	RemovableMedia,7,16,17,1
   886                        	.member	Retired1,8,16,17,7
  Thu Dec  3 2020 22:25                                                Page 18


   887                        	.member	DeviceType,15,16,17,1
   888                        	.eos
   889                        	.stag	fake79_,16,79
   890                        	.member	FeatureSupported,0,16,17,1
   891                        	.member	Reserved,1,16,17,15
   892                        	.eos
   893                        	.stag	fake80_,32,80
   894                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
   895                        	.member	ReservedByte49,2,14,17,6
   896                        	.member	DmaSupported,8,14,17,1
   897                        	.member	LbaSupported,9,14,17,1
   898                        	.member	IordyDisable,10,14,17,1
   899                        	.member	IordySupported,11,14,17,1
   900                        	.member	Reserved1,12,14,17,1
   901                        	.member	StandybyTimerSupport,13,14,17,1
   902                        	.member	Reserved2,14,14,17,2
   903                        	.member	ReservedWord50,16,16,8,16
   904                        	.eos
   905                        	.stag	fake81_,16,81
   906                        	.member	ZonedCapabilities,0,16,17,2
   907                        	.member	NonVolatileWriteCache,2,16,17,1
   908                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
   909                        	.member	DeviceEncryptsAllUserData,4,16,17,1
   910                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
   911                        	.member	Optional28BitCommandsSupported,6,16,17,1
   912                        	.member	IEEE1667,7,16,17,1
   913                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
   914                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
   915                        	.member	WriteBufferDmaSupported,10,16,17,1
   916                        	.member	ReadBufferDmaSupported,11,16,17,1
   917                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
   918                        	.member	LPSAERCSupported,13,16,17,1
   919                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
   920                        	.member	CFastSpecSupported,15,16,17,1
   921                        	.eos
   922                        	.stag	fake82_,32,82
   923                        	.member	Reserved0,0,16,17,1
   924                        	.member	SataGen1,1,16,17,1
   925                        	.member	SataGen2,2,16,17,1
   926                        	.member	SataGen3,3,16,17,1
   927                        	.member	Reserved1,4,16,17,4
   928                        	.member	NCQ,8,16,17,1
   929                        	.member	HIPM,9,16,17,1
   930                        	.member	PhyEvents,10,16,17,1
   931                        	.member	NcqUnload,11,16,17,1
   932                        	.member	NcqPriority,12,16,17,1
   933                        	.member	HostAutoPS,13,16,17,1
   934                        	.member	DeviceAutoPS,14,16,17,1
   935                        	.member	ReadLogDMA,15,16,17,1
   936                        	.member	Reserved2,16,16,17,1
   937                        	.member	CurrentSpeed,17,16,17,3
   938                        	.member	NcqStreaming,20,16,17,1
   939                        	.member	NcqQueueMgmt,21,16,17,1
  Thu Dec  3 2020 22:25                                                Page 19


   940                        	.member	NcqReceiveSend,22,16,17,1
   941                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
   942                        	.member	Reserved3,24,16,17,8
   943                        	.eos
   944                        	.stag	fake83_,16,83
   945                        	.member	Reserved0,0,16,17,1
   946                        	.member	NonZeroOffsets,1,16,17,1
   947                        	.member	DmaSetupAutoActivate,2,16,17,1
   948                        	.member	DIPM,3,16,17,1
   949                        	.member	InOrderData,4,16,17,1
   950                        	.member	HardwareFeatureControl,5,16,17,1
   951                        	.member	SoftwareSettingsPreservation,6,16,17,1
   952                        	.member	NCQAutosense,7,16,17,1
   953                        	.member	DEVSLP,8,16,17,1
   954                        	.member	HybridInformation,9,16,17,1
   955                        	.member	Reserved1,10,16,17,6
   956                        	.eos
   957                        	.stag	fake84_,16,84
   958                        	.member	Reserved0,0,16,17,1
   959                        	.member	NonZeroOffsets,1,16,17,1
   960                        	.member	DmaSetupAutoActivate,2,16,17,1
   961                        	.member	DIPM,3,16,17,1
   962                        	.member	InOrderData,4,16,17,1
   963                        	.member	HardwareFeatureControl,5,16,17,1
   964                        	.member	SoftwareSettingsPreservation,6,16,17,1
   965                        	.member	DeviceAutoPS,7,16,17,1
   966                        	.member	DEVSLP,8,16,17,1
   967                        	.member	HybridInformation,9,16,17,1
   968                        	.member	Reserved1,10,16,17,6
   969                        	.eos
   970                        	.stag	fake85_,48,85
   971                        	.member	SmartCommands,0,16,17,1
   972                        	.member	SecurityMode,1,16,17,1
   973                        	.member	RemovableMediaFeature,2,16,17,1
   974                        	.member	PowerManagement,3,16,17,1
   975                        	.member	Reserved1,4,16,17,1
   976                        	.member	WriteCache,5,16,17,1
   977                        	.member	LookAhead,6,16,17,1
   978                        	.member	ReleaseInterrupt,7,16,17,1
   979                        	.member	ServiceInterrupt,8,16,17,1
   980                        	.member	DeviceReset,9,16,17,1
   981                        	.member	HostProtectedArea,10,16,17,1
   982                        	.member	Obsolete1,11,16,17,1
   983                        	.member	WriteBuffer,12,16,17,1
   984                        	.member	ReadBuffer,13,16,17,1
   985                        	.member	Nop,14,16,17,1
   986                        	.member	Obsolete2,15,16,17,1
   987                        	.member	DownloadMicrocode,16,16,17,1
   988                        	.member	DmaQueued,17,16,17,1
   989                        	.member	Cfa,18,16,17,1
   990                        	.member	AdvancedPm,19,16,17,1
   991                        	.member	Msn,20,16,17,1
   992                        	.member	PowerUpInStandby,21,16,17,1
   993                        	.member	ManualPowerUp,22,16,17,1
   994                        	.member	Reserved2,23,16,17,1
   995                        	.member	SetMax,24,16,17,1
   996                        	.member	Acoustics,25,16,17,1
   997                        	.member	BigLba,26,16,17,1
  Thu Dec  3 2020 22:25                                                Page 20


   998                        	.member	DeviceConfigOverlay,27,16,17,1
   999                        	.member	FlushCache,28,16,17,1
  1000                        	.member	FlushCacheExt,29,16,17,1
  1001                        	.member	WordValid83,30,16,17,2
  1002                        	.member	SmartErrorLog,32,16,17,1
  1003                        	.member	SmartSelfTest,33,16,17,1
  1004                        	.member	MediaSerialNumber,34,16,17,1
  1005                        	.member	MediaCardPassThrough,35,16,17,1
  1006                        	.member	StreamingFeature,36,16,17,1
  1007                        	.member	GpLogging,37,16,17,1
  1008                        	.member	WriteFua,38,16,17,1
  1009                        	.member	WriteQueuedFua,39,16,17,1
  1010                        	.member	WWN64Bit,40,16,17,1
  1011                        	.member	URGReadStream,41,16,17,1
  1012                        	.member	URGWriteStream,42,16,17,1
  1013                        	.member	ReservedForTechReport,43,16,17,2
  1014                        	.member	IdleWithUnloadFeature,45,16,17,1
  1015                        	.member	WordValid,46,16,17,2
  1016                        	.eos
  1017                        	.stag	fake86_,48,86
  1018                        	.member	SmartCommands,0,16,17,1
  1019                        	.member	SecurityMode,1,16,17,1
  1020                        	.member	RemovableMediaFeature,2,16,17,1
  1021                        	.member	PowerManagement,3,16,17,1
  1022                        	.member	Reserved1,4,16,17,1
  1023                        	.member	WriteCache,5,16,17,1
  1024                        	.member	LookAhead,6,16,17,1
  1025                        	.member	ReleaseInterrupt,7,16,17,1
  1026                        	.member	ServiceInterrupt,8,16,17,1
  1027                        	.member	DeviceReset,9,16,17,1
  1028                        	.member	HostProtectedArea,10,16,17,1
  1029                        	.member	Obsolete1,11,16,17,1
  1030                        	.member	WriteBuffer,12,16,17,1
  1031                        	.member	ReadBuffer,13,16,17,1
  1032                        	.member	Nop,14,16,17,1
  1033                        	.member	Obsolete2,15,16,17,1
  1034                        	.member	DownloadMicrocode,16,16,17,1
  1035                        	.member	DmaQueued,17,16,17,1
  1036                        	.member	Cfa,18,16,17,1
  1037                        	.member	AdvancedPm,19,16,17,1
  1038                        	.member	Msn,20,16,17,1
  1039                        	.member	PowerUpInStandby,21,16,17,1
  1040                        	.member	ManualPowerUp,22,16,17,1
  1041                        	.member	Reserved2,23,16,17,1
  1042                        	.member	SetMax,24,16,17,1
  1043                        	.member	Acoustics,25,16,17,1
  1044                        	.member	BigLba,26,16,17,1
  1045                        	.member	DeviceConfigOverlay,27,16,17,1
  1046                        	.member	FlushCache,28,16,17,1
  1047                        	.member	FlushCacheExt,29,16,17,1
  1048                        	.member	Resrved3,30,16,17,1
  1049                        	.member	Words119_120Valid,31,16,17,1
  1050                        	.member	SmartErrorLog,32,16,17,1
  1051                        	.member	SmartSelfTest,33,16,17,1
  1052                        	.member	MediaSerialNumber,34,16,17,1
  1053                        	.member	MediaCardPassThrough,35,16,17,1
  1054                        	.member	StreamingFeature,36,16,17,1
  1055                        	.member	GpLogging,37,16,17,1
  Thu Dec  3 2020 22:25                                                Page 21


  1056                        	.member	WriteFua,38,16,17,1
  1057                        	.member	WriteQueuedFua,39,16,17,1
  1058                        	.member	WWN64Bit,40,16,17,1
  1059                        	.member	URGReadStream,41,16,17,1
  1060                        	.member	URGWriteStream,42,16,17,1
  1061                        	.member	ReservedForTechReport,43,16,17,2
  1062                        	.member	IdleWithUnloadFeature,45,16,17,1
  1063                        	.member	Reserved4,46,16,17,2
  1064                        	.eos
  1065                        	.stag	fake87_,16,87
  1066                        	.member	TimeRequired,0,16,17,15
  1067                        	.member	ExtendedTimeReported,15,16,17,1
  1068                        	.eos
  1069                        	.stag	fake88_,16,88
  1070                        	.member	TimeRequired,0,16,17,15
  1071                        	.member	ExtendedTimeReported,15,16,17,1
  1072                        	.eos
  1073                        	.stag	fake89_,16,89
  1074                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
  1075                        	.member	Reserved0,4,16,17,8
  1076                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
  1077                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
  1078                        	.member	Reserved1,14,16,17,2
  1079                        	.eos
  1080                        	.stag	fake90_,16,90
  1081                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1082                        	.member	WriteReadVerify,1,16,17,1
  1083                        	.member	WriteUncorrectableExt,2,16,17,1
  1084                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1085                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1086                        	.member	FreefallControl,5,16,17,1
  1087                        	.member	SenseDataReporting,6,16,17,1
  1088                        	.member	ExtendedPowerConditions,7,16,17,1
  1089                        	.member	Reserved0,8,16,17,6
  1090                        	.member	WordValid,14,16,17,2
  1091                        	.eos
  1092                        	.stag	fake91_,16,91
  1093                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
  1094                        	.member	WriteReadVerify,1,16,17,1
  1095                        	.member	WriteUncorrectableExt,2,16,17,1
  1096                        	.member	ReadWriteLogDmaExt,3,16,17,1
  1097                        	.member	DownloadMicrocodeMode3,4,16,17,1
  1098                        	.member	FreefallControl,5,16,17,1
  1099                        	.member	SenseDataReporting,6,16,17,1
  1100                        	.member	ExtendedPowerConditions,7,16,17,1
  1101                        	.member	Reserved0,8,16,17,6
  1102                        	.member	Reserved1,14,16,17,2
  1103                        	.eos
  1104                        	.stag	fake92_,16,92
  1105                        	.member	SecuritySupported,0,16,17,1
  1106                        	.member	SecurityEnabled,1,16,17,1
  1107                        	.member	SecurityLocked,2,16,17,1
  1108                        	.member	SecurityFrozen,3,16,17,1
  1109                        	.member	SecurityCountExpired,4,16,17,1
  1110                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
  Thu Dec  3 2020 22:25                                                Page 22


  1111                        	.member	Reserved0,6,16,17,2
  1112                        	.member	SecurityLevel,8,16,17,1
  1113                        	.member	Reserved1,9,16,17,7
  1114                        	.eos
  1115                        	.stag	fake93_,16,93
  1116                        	.member	MaximumCurrentInMA,0,16,17,12
  1117                        	.member	CfaPowerMode1Disabled,12,16,17,1
  1118                        	.member	CfaPowerMode1Required,13,16,17,1
  1119                        	.member	Reserved0,14,16,17,1
  1120                        	.member	Word160Supported,15,16,17,1
  1121                        	.eos
  1122                        	.stag	fake94_,16,94
  1123                        	.member	SupportsTrim,0,16,17,1
  1124                        	.member	Reserved0,1,16,17,15
  1125                        	.eos
  1126                        	.stag	fake95_,16,95
  1127                        	.member	Supported,0,16,17,1
  1128                        	.member	Reserved0,1,16,17,1
  1129                        	.member	WriteSameSuported,2,16,17,1
  1130                        	.member	ErrorRecoveryControlSupported,3,16,17,1
  1131                        	.member	FeatureControlSuported,4,16,17,1
  1132                        	.member	DataTablesSuported,5,16,17,1
  1133                        	.member	Reserved1,6,16,17,6
  1134                        	.member	VendorSpecific,12,16,17,4
  1135                        	.eos
  1136                        	.stag	fake96_,16,96
  1137                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
  1138                        	.member	Word209Supported,14,16,17,1
  1139                        	.member	Reserved0,15,16,17,1
  1140                        	.eos
  1141                        	.stag	fake97_,16,97
  1142                        	.member	NVCachePowerModeEnabled,0,16,17,1
  1143                        	.member	Reserved0,1,16,17,3
  1144                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
  1145                        	.member	Reserved1,5,16,17,3
  1146                        	.member	NVCachePowerModeVersion,8,16,17,4
  1147                        	.member	NVCacheFeatureSetVersion,12,16,17,4
  1148                        	.eos
  1149                        	.stag	fake98_,16,98
  1150                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
  1151                        	.member	Reserved,8,14,8,8
  1152                        	.eos
  1153                        	.stag	fake99_,16,99
  1154                        	.member	MajorVersion,0,16,17,12
  1155                        	.member	TransportType,12,16,17,4
  1156                        	.eos
  1157                        	.stag	_IDENTIFY_DEVICE_DATA,4096,100
  1158                        	.member	GeneralConfiguration,0,10,8,16,78
  1159                        	.member	NumCylinders,16,16,8,16
  1160                        	.member	SpecificConfiguration,32,16,8,16
  1161                        	.member	NumHeads,48,16,8,16
  1162                        	.member	Retired1Bytes,64,110,8,0,4
  1163                        	.member	NumSectorsPerTrack,96,16,8,16
  1164                        	.member	VendorUnique1Bytes,112,110,8,0,6
  1165                        	.member	SerialNumber,160,110,8,0,20
  1166                        	.member	Retired2,320,112,8,0,2
  Thu Dec  3 2020 22:25                                                Page 23


  1167                        	.member	Obsolete1,352,16,8,16
  1168                        	.member	FirmwareRevision,368,110,8,0,8
  1169                        	.member	ModelNumber,432,110,8,0,40
  1170                        	.member	MaximumBlockTransfer,752,14,8,8
  1171                        	.member	VendorUnique2,760,14,8,8
  1172                        	.member	TrustedComputing,768,10,8,16,79
  1173                        	.member	Capabilities,784,10,8,32,80
  1174                        	.member	ObsoleteWords51,816,112,8,0,2
  1175                        	.member	TranslationFieldsValid,848,16,17,3
  1176                        	.member	Reserved3,851,16,17,5
  1177                        	.member	FreeFallControlSensitivity,856,16,17,8
  1178                        	.member	NumberOfCurrentCylinders,864,16,8,16
  1179                        	.member	NumberOfCurrentHeads,880,16,8,16
  1180                        	.member	CurrentSectorsPerTrack,896,16,8,16
  1181                        	.member	CurrentSectorCapacity,912,18,8,32
  1182                        	.member	CurrentMultiSectorSetting,944,14,8,8
  1183                        	.member	MultiSectorSettingValid,952,14,17,1
  1184                        	.member	ReservedByte59,953,14,17,3
  1185                        	.member	SanitizeFeatureSupported,956,14,17,1
  1186                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
  1187                        	.member	OverwriteExtCommandSupported,958,14,17,1
  1188                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
  1189                        	.member	UserAddressableSectors,960,18,8,32
  1190                        	.member	ObsoleteWord62,992,16,8,16
  1191                        	.member	MultiWordDMASupport,1008,16,17,8
  1192                        	.member	MultiWordDMAActive,1016,16,17,8
  1193                        	.member	AdvancedPIOModes,1024,16,17,8
  1194                        	.member	ReservedByte64,1032,16,17,8
  1195                        	.member	MinimumMWXferCycleTime,1040,16,8,16
  1196                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
  1197                        	.member	MinimumPIOCycleTime,1072,16,8,16
  1198                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
  1199                        	.member	AdditionalSupported,1104,10,8,16,81
  1200                        	.member	ReservedWords70,1120,112,8,0,5
  1201                        	.member	QueueDepth,1200,16,17,5
  1202                        	.member	ReservedWord75,1205,16,17,11
  1203                        	.member	SerialAtaCapabilities,1216,10,8,32,82
  1204                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    83
  1205                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,84
  1206                        	.member	MajorRevision,1280,16,8,16
  1207                        	.member	MinorRevision,1296,16,8,16
  1208                        	.member	CommandSetSupport,1312,10,8,48,85
  1209                        	.member	CommandSetActive,1360,10,8,48,86
  1210                        	.member	UltraDMASupport,1408,16,17,8
  1211                        	.member	UltraDMAActive,1416,16,17,8
  1212                        	.member	NormalSecurityEraseUnit,1424,10,8,16,87
  1213                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,8
                    8
  1214                        	.member	CurrentAPMLevel,1456,16,17,8
  1215                        	.member	ReservedWord91,1464,16,17,8
  1216                        	.member	MasterPasswordID,1472,16,8,16
  1217                        	.member	HardwareResetResult,1488,16,8,16
  1218                        	.member	CurrentAcousticValue,1504,16,17,8
  1219                        	.member	RecommendedAcousticValue,1512,16,17,8
  1220                        	.member	StreamMinRequestSize,1520,16,8,16
  Thu Dec  3 2020 22:25                                                Page 24


  1221                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  1222                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
                    6
  1223                        	.member	StreamingPerfGranularity,1568,18,8,32
  1224                        	.member	Max48BitLBA,1600,114,8,0,2
  1225                        	.member	StreamingTransferTime,1664,16,8,16
  1226                        	.member	DsmCap,1680,16,8,16
  1227                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,8
                    9
  1228                        	.member	InterSeekDelay,1712,16,8,16
  1229                        	.member	WorldWideName,1728,112,8,0,4
  1230                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1231                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1232                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1233                        	.member	CommandSetSupportExt,1904,10,8,16,90
  1234                        	.member	CommandSetActiveExt,1920,10,8,16,91
  1235                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1236                        	.member	MsnSupport,2032,16,17,2
  1237                        	.member	ReservedWord127,2034,16,17,14
  1238                        	.member	SecurityStatus,2048,10,8,16,92
  1239                        	.member	ReservedWord129,2064,112,8,0,31
  1240                        	.member	CfaPowerMode1,2560,10,8,16,93
  1241                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1242                        	.member	NominalFormFactor,2688,16,17,4
  1243                        	.member	ReservedWord168,2692,16,17,12
  1244                        	.member	DataSetManagementFeature,2704,10,8,16,94
  1245                        	.member	AdditionalProductID,2720,112,8,0,4
  1246                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  1247                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1248                        	.member	SCTCommandTransport,3296,10,8,16,95
  1249                        	.member	ReservedWord207,3312,112,8,0,2
  1250                        	.member	BlockAlignment,3344,10,8,16,96
  1251                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1252                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1253                        	.member	NVCacheCapabilities,3424,10,8,16,97
  1254                        	.member	NVCacheSizeLSW,3440,16,8,16
  1255                        	.member	NVCacheSizeMSW,3456,16,8,16
  1256                        	.member	NominalMediaRotationRate,3472,16,8,16
  1257                        	.member	ReservedWord218,3488,16,8,16
  1258                        	.member	NVCacheOptions,3504,10,8,16,98
  1259                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1260                        	.member	ReservedWord220,3528,16,17,8
  1261                        	.member	ReservedWord221,3536,16,8,16
  1262                        	.member	TransportMajorVersion,3552,10,8,16,99
  1263                        	.member	TransportMinorVersion,3568,16,8,16
  1264                        	.member	ReservedWord224,3584,112,8,0,6
  1265                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1266                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1267                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  Thu Dec  3 2020 22:25                                                Page 25


  1268                        	.member	ReservedWord236,3776,112,8,0,19
  1269                        	.member	Signature,4080,16,17,8
  1270                        	.member	CheckSum,4088,16,17,8
  1271                        	.eos
  1272                        	.stag	_FXDosDevice,5648,101
  1273                        	.member	type,0,14,8,8
  1274                        	.member	initialized,8,14,8,8
  1275                        	.member	devdata,16,129,8,32
  1276                        	.member	devstatus,48,14,8,8
  1277                        	.member	bootSector,56,10,8,928,71
  1278                        	.member	partitionTable,984,10,8,128,72
  1279                        	.member	fileAllocationTable,1112,110,8,0,512
  1280                        	.member	bsOffset,5208,18,8,32
  1281                        	.member	rootDirSectors,5240,18,8,32
  1282                        	.member	root_entry_count,5272,5,8,16
  1283                        	.member	rootEntriesPerPage,5288,5,8,16
  1284                        	.member	sectors_per_cluster,5304,5,8,16
  1285                        	.member	fatTableOffset,5320,18,8,32
  1286                        	.member	volume_name,5352,110,8,0,12
  1287                        	.member	root_volume_name,5448,110,8,0,12
  1288                        	.member	errorCode,5544,14,8,8
  1289                        	.member	pfInit,5552,641,8,32
  1290                        	.member	pfReader,5584,654,8,32
  1291                        	.member	pfWriter,5616,654,8,32
  1292                        	.eos
  1293                        	.line	705
  1294                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxcon_cmd.c",3
  1295                        ;#include "fxnode.h"
  1296                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
  1297                        	.line	61
  1298                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxcon_cmd.c",4
  1299                        ;#include "fxmemorymanager.h"
  1300                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
  1301                        	.line	39
  1302                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxcon_cmd.c",5
  1303                        ;#include "fxgui.h"
  1304                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
  1305                        	.line	264
  1306                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxcon_cmd.c",6
  1307                        ;
  1308                        ;#pragma section CODE=CONCMD,offset $07:0000
  1309                        CONCMD	section	offset $07:0000
  1310 07:0000:              	ends
  1311                        ;
  1312                        ;static int consoleAppOffset = 10;
  1313                        	data
  1314                        ~~consoleAppOffset:
  1315 00:0000: 0A 00        	dw	$A
  1316 00:0002:              	ends
  1317                        ;
  1318                        ;UINT cmd_TIME(PFXPROCESS process,PFXNODE tokens)
  Thu Dec  3 2020 22:25                                                Page 26


  1319                        ;{
  1320                        	.line	12
  1321                        	.line	13
  1322                        	CONCMD
  1323                        	xdef	~~cmd_TIME
  1324                        	func
  1325                        	.function	13
  1326                        ~~cmd_TIME:
  1327                        	longa	on
  1328                        	longi	on
  1329 07:0000: 3B           	tsc
  1330 07:0001: 38           	sec
  1331 07:0002: E9 2C 00     	sbc	#L2
  1332 07:0005: 1B           	tcs
  1333 07:0006: 0B           	phd
  1334 07:0007: 5B           	tcd
  1335             00000004   process_0	set	4
  1336             00000008   tokens_0	set	8
  1337                        	.block	13
  1338                        ;	BYTE   signature[8];
  1339                        ;	CHAR   time[16];
  1340                        ;	RECT   rect;
  1341                        ;	HANDLE hWin;
  1342                        ;	UINT   seed;
  1343                        ;
  1344                        ;	int random;
  1345                        ;
  1346                        ;	k_debug_string("cmd_TIME\r\n");
  1347             00000000   signature_1	set	0
  1348             00000008   time_1	set	8
  1349             00000018   rect_1	set	24
  1350             00000020   hWin_1	set	32
  1351             00000024   seed_1	set	36
  1352             00000026   random_1	set	38
  1353                        	.sym	signature,0,110,1,0,8
  1354                        	.sym	time,8,110,1,0,16
  1355                        	.sym	rect,24,10,1,64,25
  1356                        	.sym	hWin,32,129,1,32
  1357                        	.sym	seed,36,16,1,16
  1358                        	.sym	random,38,5,1,16
  1359                        	.sym	process,4,138,6,32,20
  1360                        	.sym	tokens,8,138,6,32,5
  1361                        	.line	22
  1362 07:0008: F4 xx xx     	pea	#^L1
  1363 07:000B: F4 xx xx     	pea	#<L1
  1364 07:000E: 22 xx xx xx  	jsl	~~k_debug_string
  1365                        ;
  1366                        ;	getTokenSig(tokens,signature);
  1367                        	.line	24
  1368 07:0012: F4 00 00     	pea	#0
  1369 07:0015: 18           	clc
  1370 07:0016: 7B           	tdc
  1371 07:0017: 69 05 00     	adc	#<L3+signature_1
  1372 07:001A: 48           	pha
  1373 07:001B: D4 36        	pei	<L2+tokens_0+2
  1374 07:001D: D4 34        	pei	<L2+tokens_0
  1375 07:001F: 22 xx xx xx  	jsl	~~getTokenSig
  1376                        ;
  Thu Dec  3 2020 22:25                                                Page 27


  1377                        ;	k_get_localtime_string(time);
  1378                        	.line	26
  1379 07:0023: F4 00 00     	pea	#0
  1380 07:0026: 18           	clc
  1381 07:0027: 7B           	tdc
  1382 07:0028: 69 0D 00     	adc	#<L3+time_1
  1383 07:002B: 48           	pha
  1384 07:002C: 22 xx xx xx  	jsl	~~k_get_localtime_string
  1385                        ;
  1386                        ;
  1387                        ;	seed = k_get_rtc_second();
  1388                        	.line	29
  1389 07:0030: 22 xx xx xx  	jsl	~~k_get_rtc_second
  1390 07:0034: 85 29        	sta	<L3+seed_1
  1391                        ;	srand(seed);
  1392                        	.line	30
  1393 07:0036: D4 29        	pei	<L3+seed_1
  1394 07:0038: 22 xx xx xx  	jsl	~~srand
  1395                        ;	for(seed = 0;seed<5;seed++)
  1396                        	.line	31
  1397 07:003C: 64 29        	stz	<L3+seed_1
  1398                        L10003:
  1399                        ;		k_debug_integer("cmd_TIME::random:",rand
                    ());
  1400                        	.line	32
  1401 07:003E: 22 xx xx xx  	jsl	~~rand
  1402 07:0042: 48           	pha
  1403 07:0043: F4 xx xx     	pea	#^L1+11
  1404 07:0046: F4 xx xx     	pea	#<L1+11
  1405 07:0049: 22 xx xx xx  	jsl	~~k_debug_integer
  1406                        L10001:
  1407 07:004D: E6 29        	inc	<L3+seed_1
  1408 07:004F: A5 29        	lda	<L3+seed_1
  1409 07:0051: C9 05 00     	cmp	#<$5
  1410 07:0054: B0 03        	bcs	L5
  1411 07:0056: 82 E5 FF     	brl	L10003
  1412                        L5:
  1413                        L10002:
  1414                        ;
  1415                        ;
  1416                        ;	k_send_process_command_message(process,FX_CONTRO
                    L_COMMAND,CTL_CMD_CAPTION,0,(ULONG)k_string_copy_string(time
                    ),0L);
  1417                        	.line	35
  1418 07:0059: F4 00 00     	pea	#^$0
  1419 07:005C: F4 00 00     	pea	#<$0
  1420 07:005F: F4 00 00     	pea	#0
  1421 07:0062: 18           	clc
  1422 07:0063: 7B           	tdc
  1423 07:0064: 69 0D 00     	adc	#<L3+time_1
  1424 07:0067: 48           	pha
  1425 07:0068: 22 xx xx xx  	jsl	~~k_string_copy_string
  1426 07:006C: 85 01        	sta	<R0
  1427 07:006E: 86 03        	stx	<R0+2
  1428 07:0070: D4 03        	pei	<R0+2
  1429 07:0072: D4 01        	pei	<R0
  1430 07:0074: F4 00 00     	pea	#<$0
  1431 07:0077: F4 01 00     	pea	#<$1
  Thu Dec  3 2020 22:25                                                Page 28


  1432 07:007A: F4 00 FA     	pea	#<$fa00
  1433 07:007D: D4 32        	pei	<L2+process_0+2
  1434 07:007F: D4 30        	pei	<L2+process_0
  1435 07:0081: 22 xx xx xx  	jsl	~~k_send_process_command_message
  1436                        ;
  1437                        ;
  1438                        ;	k_debug_strings("cmd_TIME::time:",time);
  1439                        	.line	38
  1440 07:0085: F4 00 00     	pea	#0
  1441 07:0088: 18           	clc
  1442 07:0089: 7B           	tdc
  1443 07:008A: 69 0D 00     	adc	#<L3+time_1
  1444 07:008D: 48           	pha
  1445 07:008E: F4 xx xx     	pea	#^L1+29
  1446 07:0091: F4 xx xx     	pea	#<L1+29
  1447 07:0094: 22 xx xx xx  	jsl	~~k_debug_strings
  1448                        ;
  1449                        ;	return 0;
  1450                        	.line	40
  1451 07:0098: A9 00 00     	lda	#$0
  1452                        L6:
  1453 07:009B: A8           	tay
  1454 07:009C: A5 2E        	lda	<L2+2
  1455 07:009E: 85 36        	sta	<L2+2+8
  1456 07:00A0: A5 2D        	lda	<L2+1
  1457 07:00A2: 85 35        	sta	<L2+1+8
  1458 07:00A4: 2B           	pld
  1459 07:00A5: 3B           	tsc
  1460 07:00A6: 18           	clc
  1461 07:00A7: 69 34 00     	adc	#L2+8
  1462 07:00AA: 1B           	tcs
  1463 07:00AB: 98           	tya
  1464 07:00AC: 6B           	rtl
  1465                        ;}
  1466                        	.line	41
  1467                        	.endblock	41
  1468             0000002C   L2	equ	44
  1469             00000005   L3	equ	5
  1470 07:00AD:              	ends
  1471                        	efunc
  1472                        	.endfunc	41,5,44
  1473                        	.line	41
  1474                        	data
  1475                        L1:
  1476 00:0002: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$54,$49,$4D,$45,$0D,$0A,
                    $00,$63,$6D,$64,$5F
       00:0006: 54 49 4D 45 
       00:000A: 0D 0A 00 63 
       00:000E: 6D 64 5F 
  1477 00:0011: 54 49 4D 45  	db	$54,$49,$4D,$45,$3A,$3A,$72,$61,$6E,$64,
                    $6F,$6D,$3A,$00,$63
       00:0015: 3A 3A 72 61 
       00:0019: 6E 64 6F 6D 
       00:001D: 3A 00 63 
  1478 00:0020: 6D 64 5F 54  	db	$6D,$64,$5F,$54,$49,$4D,$45,$3A,$3A,$74,
                    $69,$6D,$65,$3A,$00
       00:0024: 49 4D 45 3A 
       00:0028: 3A 74 69 6D 
  Thu Dec  3 2020 22:25                                                Page 29


       00:002C: 65 3A 00 
  1479 00:002F:              	ends
  1480                        ;
  1481                        ;UINT cmd_Window(PFXPROCESS process,PFXNODE tokens
                    )
  1482                        ;{
  1483                        	.line	43
  1484                        	.line	44
  1485                        	CONCMD
  1486                        	xdef	~~cmd_Window
  1487                        	func
  1488                        	.function	44
  1489                        ~~cmd_Window:
  1490                        	longa	on
  1491                        	longi	on
  1492 07:00AD: 3B           	tsc
  1493 07:00AE: 38           	sec
  1494 07:00AF: E9 14 00     	sbc	#L8
  1495 07:00B2: 1B           	tcs
  1496 07:00B3: 0B           	phd
  1497 07:00B4: 5B           	tcd
  1498             00000004   process_0	set	4
  1499             00000008   tokens_0	set	8
  1500                        	.block	44
  1501                        ;	BYTE 	signature[8];
  1502                        ;	RECT rect;
  1503                        ;	HANDLE hWin;
  1504                        ;
  1505                        ;	k_debug_string("cmd_Window\r\n");
  1506             00000000   signature_1	set	0
  1507             00000008   rect_1	set	8
  1508             00000010   hWin_1	set	16
  1509                        	.sym	signature,0,110,1,0,8
  1510                        	.sym	rect,8,10,1,64,25
  1511                        	.sym	hWin,16,129,1,32
  1512                        	.sym	process,4,138,6,32,20
  1513                        	.sym	tokens,8,138,6,32,5
  1514                        	.line	49
  1515 07:00B5: F4 xx xx     	pea	#^L7
  1516 07:00B8: F4 xx xx     	pea	#<L7
  1517 07:00BB: 22 xx xx xx  	jsl	~~k_debug_string
  1518                        ;
  1519                        ;	getTokenSig(tokens,signature);
  1520                        	.line	51
  1521 07:00BF: F4 00 00     	pea	#0
  1522 07:00C2: 18           	clc
  1523 07:00C3: 7B           	tdc
  1524 07:00C4: 69 01 00     	adc	#<L9+signature_1
  1525 07:00C7: 48           	pha
  1526 07:00C8: D4 1E        	pei	<L8+tokens_0+2
  1527 07:00CA: D4 1C        	pei	<L8+tokens_0
  1528 07:00CC: 22 xx xx xx  	jsl	~~getTokenSig
  1529                        ;
  1530                        ;	rect.x = 0;
  1531                        	.line	53
  1532 07:00D0: 64 09        	stz	<L9+rect_1
  1533                        ;	rect.y = 0;
  1534                        	.line	54
  Thu Dec  3 2020 22:25                                                Page 30


  1535 07:00D2: 64 0B        	stz	<L9+rect_1+2
  1536                        ;	rect.width = 50;
  1537                        	.line	55
  1538 07:00D4: A9 32 00     	lda	#$32
  1539 07:00D7: 85 0D        	sta	<L9+rect_1+4
  1540                        ;	rect.height = 25;
  1541                        	.line	56
  1542 07:00D9: A9 19 00     	lda	#$19
  1543 07:00DC: 85 0F        	sta	<L9+rect_1+6
  1544                        ;	k_create_text_window(&rect,"Text Window",&hWin);
  1545                        	.line	57
  1546 07:00DE: F4 00 00     	pea	#0
  1547 07:00E1: 18           	clc
  1548 07:00E2: 7B           	tdc
  1549 07:00E3: 69 11 00     	adc	#<L9+hWin_1
  1550 07:00E6: 48           	pha
  1551 07:00E7: F4 xx xx     	pea	#^L7+13
  1552 07:00EA: F4 xx xx     	pea	#<L7+13
  1553 07:00ED: F4 00 00     	pea	#0
  1554 07:00F0: 18           	clc
  1555 07:00F1: 7B           	tdc
  1556 07:00F2: 69 09 00     	adc	#<L9+rect_1
  1557 07:00F5: 48           	pha
  1558 07:00F6: 22 xx xx xx  	jsl	~~k_create_text_window
  1559                        ;
  1560                        ;	return 0;
  1561                        	.line	59
  1562 07:00FA: A9 00 00     	lda	#$0
  1563                        L11:
  1564 07:00FD: A8           	tay
  1565 07:00FE: A5 16        	lda	<L8+2
  1566 07:0100: 85 1E        	sta	<L8+2+8
  1567 07:0102: A5 15        	lda	<L8+1
  1568 07:0104: 85 1D        	sta	<L8+1+8
  1569 07:0106: 2B           	pld
  1570 07:0107: 3B           	tsc
  1571 07:0108: 18           	clc
  1572 07:0109: 69 1C 00     	adc	#L8+8
  1573 07:010C: 1B           	tcs
  1574 07:010D: 98           	tya
  1575 07:010E: 6B           	rtl
  1576                        ;}
  1577                        	.line	60
  1578                        	.endblock	60
  1579             00000014   L8	equ	20
  1580             00000001   L9	equ	1
  1581 07:010F:              	ends
  1582                        	efunc
  1583                        	.endfunc	60,1,20
  1584                        	.line	60
  1585                        	data
  1586                        L7:
  1587 00:002F: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$57,$69,$6E,$64,$6F,$77,
                    $0D,$0A,$00,$54,$65
       00:0033: 57 69 6E 64 
       00:0037: 6F 77 0D 0A 
       00:003B: 00 54 65 
  1588 00:003E: 78 74 20 57  	db	$78,$74,$20,$57,$69,$6E,$64,$6F,$77,$00
  Thu Dec  3 2020 22:25                                                Page 31


       00:0042: 69 6E 64 6F 
       00:0046: 77 00 
  1589 00:0048:              	ends
  1590                        ;
  1591                        ;UINT cmd_START(PFXPROCESS process,PFXNODE tokens)
  1592                        ;{
  1593                        	.line	62
  1594                        	.line	63
  1595                        	CONCMD
  1596                        	xdef	~~cmd_START
  1597                        	func
  1598                        	.function	63
  1599                        ~~cmd_START:
  1600                        	longa	on
  1601                        	longi	on
  1602 07:010F: 3B           	tsc
  1603 07:0110: 38           	sec
  1604 07:0111: E9 64 00     	sbc	#L13
  1605 07:0114: 1B           	tcs
  1606 07:0115: 0B           	phd
  1607 07:0116: 5B           	tcd
  1608             00000004   process_0	set	4
  1609             00000008   tokens_0	set	8
  1610                        	.block	63
  1611                        ;	LPCHAR  name = NULL;
  1612                        ;	LPCHAR  offset = NULL;
  1613                        ;	CHAR 	signature[16];
  1614                        ;
  1615                        ;	PFXPROCESS pprocess = NULL;
  1616                        ;
  1617                        ;	CHAR message[64];
  1618                        ;
  1619                        ;	k_debug_string("cmd_START\r\n");
  1620             00000000   name_1	set	0
  1621             00000004   offset_1	set	4
  1622             00000008   signature_1	set	8
  1623             00000018   pprocess_1	set	24
  1624             0000001C   message_1	set	28
  1625                        	.sym	name,0,142,1,32
  1626                        	.sym	offset,4,142,1,32
  1627                        	.sym	signature,8,110,1,0,16
  1628                        	.sym	pprocess,24,138,1,32,20
  1629                        	.sym	message,28,110,1,0,64
  1630                        	.sym	process,4,138,6,32,20
  1631                        	.sym	tokens,8,138,6,32,5
  1632 07:0117: 64 09        	stz	<L14+name_1
  1633 07:0119: 64 0B        	stz	<L14+name_1+2
  1634 07:011B: 64 0D        	stz	<L14+offset_1
  1635 07:011D: 64 0F        	stz	<L14+offset_1+2
  1636 07:011F: 64 21        	stz	<L14+pprocess_1
  1637 07:0121: 64 23        	stz	<L14+pprocess_1+2
  1638                        	.line	72
  1639 07:0123: F4 xx xx     	pea	#^L12
  1640 07:0126: F4 xx xx     	pea	#<L12
  1641 07:0129: 22 xx xx xx  	jsl	~~k_debug_string
  1642                        ;
  1643                        ;	getTokenSig(tokens,signature);
  1644                        	.line	74
  Thu Dec  3 2020 22:25                                                Page 32


  1645 07:012D: F4 00 00     	pea	#0
  1646 07:0130: 18           	clc
  1647 07:0131: 7B           	tdc
  1648 07:0132: 69 11 00     	adc	#<L14+signature_1
  1649 07:0135: 48           	pha
  1650 07:0136: D4 6E        	pei	<L13+tokens_0+2
  1651 07:0138: D4 6C        	pei	<L13+tokens_0
  1652 07:013A: 22 xx xx xx  	jsl	~~getTokenSig
  1653                        ;
  1654                        ;	if(strcmp(signature,"#AAB") == 0)
  1655                        	.line	76
  1656                        ;	{
  1657 07:013E: F4 xx xx     	pea	#^L12+12
  1658 07:0141: F4 xx xx     	pea	#<L12+12
  1659 07:0144: F4 00 00     	pea	#0
  1660 07:0147: 18           	clc
  1661 07:0148: 7B           	tdc
  1662 07:0149: 69 11 00     	adc	#<L14+signature_1
  1663 07:014C: 48           	pha
  1664 07:014D: 22 xx xx xx  	jsl	~~strcmp
  1665 07:0151: AA           	tax
  1666 07:0152: F0 03        	beq	L16
  1667 07:0154: 82 42 01     	brl	L10004
  1668                        L16:
  1669                        	.line	77
  1670                        ;		name    = (LPCHAR)((PTOKEN)k_nodelist_ge
                    t(tokens,3)->data)->text;
  1671                        	.line	78
  1672 07:0157: F4 03 00     	pea	#<$3
  1673 07:015A: D4 6E        	pei	<L13+tokens_0+2
  1674 07:015C: D4 6C        	pei	<L13+tokens_0
  1675 07:015E: 22 xx xx xx  	jsl	~~k_nodelist_get
  1676 07:0162: 85 01        	sta	<R0
  1677 07:0164: 86 03        	stx	<R0+2
  1678 07:0166: A0 02 00     	ldy	#$2
  1679 07:0169: B7 01        	lda	[<R0],Y
  1680 07:016B: 85 05        	sta	<R1
  1681 07:016D: A0 04 00     	ldy	#$4
  1682 07:0170: B7 01        	lda	[<R0],Y
  1683 07:0172: 85 07        	sta	<R1+2
  1684 07:0174: A0 04 00     	ldy	#$4
  1685 07:0177: B7 05        	lda	[<R1],Y
  1686 07:0179: 85 09        	sta	<L14+name_1
  1687 07:017B: A0 06 00     	ldy	#$6
  1688 07:017E: B7 05        	lda	[<R1],Y
  1689 07:0180: 85 0B        	sta	<L14+name_1+2
  1690                        ;		offset  = (LPCHAR)((PTOKEN)k_nodelist_ge
                    t(tokens,4)->data)->text;
  1691                        	.line	79
  1692 07:0182: F4 04 00     	pea	#<$4
  1693 07:0185: D4 6E        	pei	<L13+tokens_0+2
  1694 07:0187: D4 6C        	pei	<L13+tokens_0
  1695 07:0189: 22 xx xx xx  	jsl	~~k_nodelist_get
  1696 07:018D: 85 01        	sta	<R0
  1697 07:018F: 86 03        	stx	<R0+2
  1698 07:0191: A0 02 00     	ldy	#$2
  1699 07:0194: B7 01        	lda	[<R0],Y
  1700 07:0196: 85 05        	sta	<R1
  Thu Dec  3 2020 22:25                                                Page 33


  1701 07:0198: A0 04 00     	ldy	#$4
  1702 07:019B: B7 01        	lda	[<R0],Y
  1703 07:019D: 85 07        	sta	<R1+2
  1704 07:019F: A0 04 00     	ldy	#$4
  1705 07:01A2: B7 05        	lda	[<R1],Y
  1706 07:01A4: 85 0D        	sta	<L14+offset_1
  1707 07:01A6: A0 06 00     	ldy	#$6
  1708 07:01A9: B7 05        	lda	[<R1],Y
  1709 07:01AB: 85 0F        	sta	<L14+offset_1+2
  1710                        ;
  1711                        ;		k_debug_strings("cmd_START::name:",name)
                    ;
  1712                        	.line	81
  1713 07:01AD: D4 0B        	pei	<L14+name_1+2
  1714 07:01AF: D4 09        	pei	<L14+name_1
  1715 07:01B1: F4 xx xx     	pea	#^L12+17
  1716 07:01B4: F4 xx xx     	pea	#<L12+17
  1717 07:01B7: 22 xx xx xx  	jsl	~~k_debug_strings
  1718                        ;		k_debug_strings("cmd_START::name:",offse
                    t);
  1719                        	.line	82
  1720 07:01BB: D4 0F        	pei	<L14+offset_1+2
  1721 07:01BD: D4 0D        	pei	<L14+offset_1
  1722 07:01BF: F4 xx xx     	pea	#^L12+34
  1723 07:01C2: F4 xx xx     	pea	#<L12+34
  1724 07:01C5: 22 xx xx xx  	jsl	~~k_debug_strings
  1725                        ;
  1726                        ;		if(strcmp(name,"consoleapp") == 0)
  1727                        	.line	84
  1728                        ;		{
  1729 07:01C9: F4 xx xx     	pea	#^L12+51
  1730 07:01CC: F4 xx xx     	pea	#<L12+51
  1731 07:01CF: D4 0B        	pei	<L14+name_1+2
  1732 07:01D1: D4 09        	pei	<L14+name_1
  1733 07:01D3: 22 xx xx xx  	jsl	~~strcmp
  1734 07:01D7: AA           	tax
  1735 07:01D8: F0 03        	beq	L17
  1736 07:01DA: 82 BC 00     	brl	L10005
  1737                        L17:
  1738                        	.line	85
  1739                        ;			pprocess =  k_exec_createProcess
                    ("consoleApp",DefConsoleProc2,(LPVOID)consoleAppOffset++);
  1740                        	.line	86
  1741 07:01DD: AD xx xx     	lda	|~~consoleAppOffset
  1742 07:01E0: 85 01        	sta	<R0
  1743 07:01E2: EE xx xx     	inc	|~~consoleAppOffset
  1744 07:01E5: A0 00 00     	ldy	#$0
  1745 07:01E8: A5 01        	lda	<R0
  1746 07:01EA: 10 01        	bpl	L18
  1747 07:01EC: 88           	dey
  1748                        L18:
  1749 07:01ED: 85 01        	sta	<R0
  1750 07:01EF: 84 03        	sty	<R0+2
  1751 07:01F1: D4 03        	pei	<R0+2
  1752 07:01F3: D4 01        	pei	<R0
  1753 07:01F5: F4 xx xx     	pea	#^~~DefConsoleProc2
  1754 07:01F8: F4 xx xx     	pea	#<~~DefConsoleProc2
  1755 07:01FB: F4 xx xx     	pea	#^L12+62
  Thu Dec  3 2020 22:25                                                Page 34


  1756 07:01FE: F4 xx xx     	pea	#<L12+62
  1757 07:0201: 22 xx xx xx  	jsl	~~k_exec_createProcess
  1758 07:0205: 85 21        	sta	<L14+pprocess_1
  1759 07:0207: 86 23        	stx	<L14+pprocess_1+2
  1760                        ;			if(pprocess!=NULL)
  1761                        	.line	87
  1762                        ;			{
  1763 07:0209: A5 21        	lda	<L14+pprocess_1
  1764 07:020B: 05 23        	ora	<L14+pprocess_1+2
  1765 07:020D: D0 03        	bne	L19
  1766 07:020F: 82 87 00     	brl	L10006
  1767                        L19:
  1768                        	.line	88
  1769                        ;				k_attach_process_events(
                    pprocess->execProc,pprocess);
  1770                        	.line	89
  1771 07:0212: D4 23        	pei	<L14+pprocess_1+2
  1772 07:0214: D4 21        	pei	<L14+pprocess_1
  1773 07:0216: A0 5E 00     	ldy	#$5e
  1774 07:0219: B7 21        	lda	[<L14+pprocess_1],Y
  1775 07:021B: 48           	pha
  1776 07:021C: A0 5C 00     	ldy	#$5c
  1777 07:021F: B7 21        	lda	[<L14+pprocess_1],Y
  1778 07:0221: 48           	pha
  1779 07:0222: 22 xx xx xx  	jsl	~~k_attach_process_events
  1780                        ;				k_exec_set_process_foreg
                    round(pprocess,FALSE);
  1781                        	.line	90
  1782 07:0226: F4 00 00     	pea	#<$0
  1783 07:0229: D4 23        	pei	<L14+pprocess_1+2
  1784 07:022B: D4 21        	pei	<L14+pprocess_1
  1785 07:022D: 22 xx xx xx  	jsl	~~k_exec_set_process_foreground
  1786                        ;
  1787                        ;				k_inttodec(pprocess->pro
                    cId,signature);
  1788                        	.line	92
  1789 07:0231: F4 00 00     	pea	#0
  1790 07:0234: 18           	clc
  1791 07:0235: 7B           	tdc
  1792 07:0236: 69 11 00     	adc	#<L14+signature_1
  1793 07:0239: 48           	pha
  1794 07:023A: A0 02 00     	ldy	#$2
  1795 07:023D: B7 21        	lda	[<L14+pprocess_1],Y
  1796 07:023F: 48           	pha
  1797 07:0240: 22 xx xx xx  	jsl	~~k_inttodec
  1798                        ;
  1799                        ;				strcpy(message,"Started 
                    process:");
  1800                        	.line	94
  1801 07:0244: F4 xx xx     	pea	#^L12+73
  1802 07:0247: F4 xx xx     	pea	#<L12+73
  1803 07:024A: F4 00 00     	pea	#0
  1804 07:024D: 18           	clc
  1805 07:024E: 7B           	tdc
  1806 07:024F: 69 25 00     	adc	#<L14+message_1
  1807 07:0252: 48           	pha
  1808 07:0253: 22 xx xx xx  	jsl	~~strcpy
  1809                        ;				strcat(message,signature
  Thu Dec  3 2020 22:25                                                Page 35


                    );
  1810                        	.line	95
  1811 07:0257: F4 00 00     	pea	#0
  1812 07:025A: 18           	clc
  1813 07:025B: 7B           	tdc
  1814 07:025C: 69 11 00     	adc	#<L14+signature_1
  1815 07:025F: 48           	pha
  1816 07:0260: F4 00 00     	pea	#0
  1817 07:0263: 18           	clc
  1818 07:0264: 7B           	tdc
  1819 07:0265: 69 25 00     	adc	#<L14+message_1
  1820 07:0268: 48           	pha
  1821 07:0269: 22 xx xx xx  	jsl	~~strcat
  1822                        ;
  1823                        ;				k_send_process_command_m
                    essage(process,FX_CONTROL_COMMAND,CTL_CMD_CAPTION,0,(ULONG)k
                    _string_copy_string((LPCSTR)message),0L);
  1824                        	.line	97
  1825 07:026D: F4 00 00     	pea	#^$0
  1826 07:0270: F4 00 00     	pea	#<$0
  1827 07:0273: F4 00 00     	pea	#0
  1828 07:0276: 18           	clc
  1829 07:0277: 7B           	tdc
  1830 07:0278: 69 25 00     	adc	#<L14+message_1
  1831 07:027B: 48           	pha
  1832 07:027C: 22 xx xx xx  	jsl	~~k_string_copy_string
  1833 07:0280: 85 01        	sta	<R0
  1834 07:0282: 86 03        	stx	<R0+2
  1835 07:0284: D4 03        	pei	<R0+2
  1836 07:0286: D4 01        	pei	<R0
  1837 07:0288: F4 00 00     	pea	#<$0
  1838 07:028B: F4 01 00     	pea	#<$1
  1839 07:028E: F4 00 FA     	pea	#<$fa00
  1840 07:0291: D4 6A        	pei	<L13+process_0+2
  1841 07:0293: D4 68        	pei	<L13+process_0
  1842 07:0295: 22 xx xx xx  	jsl	~~k_send_process_command_message
  1843                        ;			}
  1844                        	.line	98
  1845                        ;		}
  1846                        L10006:
  1847                        	.line	99
  1848                        ;
  1849                        ;	}
  1850                        L10005:
  1851                        	.line	101
  1852                        ;
  1853                        ;	return 0;
  1854                        L10004:
  1855                        	.line	103
  1856 07:0299: A9 00 00     	lda	#$0
  1857                        L20:
  1858 07:029C: A8           	tay
  1859 07:029D: A5 66        	lda	<L13+2
  1860 07:029F: 85 6E        	sta	<L13+2+8
  1861 07:02A1: A5 65        	lda	<L13+1
  1862 07:02A3: 85 6D        	sta	<L13+1+8
  1863 07:02A5: 2B           	pld
  1864 07:02A6: 3B           	tsc
  Thu Dec  3 2020 22:25                                                Page 36


  1865 07:02A7: 18           	clc
  1866 07:02A8: 69 6C 00     	adc	#L13+8
  1867 07:02AB: 1B           	tcs
  1868 07:02AC: 98           	tya
  1869 07:02AD: 6B           	rtl
  1870                        ;}
  1871                        	.line	104
  1872                        	.endblock	104
  1873             00000064   L13	equ	100
  1874             00000009   L14	equ	9
  1875 07:02AE:              	ends
  1876                        	efunc
  1877                        	.endfunc	104,9,100
  1878                        	.line	104
  1879                        	data
  1880                        L12:
  1881 00:0048: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$53,$54,$41,$52,$54,$0D,
                    $0A,$00,$23,$41,$41
       00:004C: 53 54 41 52 
       00:0050: 54 0D 0A 00 
       00:0054: 23 41 41 
  1882 00:0057: 42 00 63 6D  	db	$42,$00,$63,$6D,$64,$5F,$53,$54,$41,$52,
                    $54,$3A,$3A,$6E,$61
       00:005B: 64 5F 53 54 
       00:005F: 41 52 54 3A 
       00:0063: 3A 6E 61 
  1883 00:0066: 6D 65 3A 00  	db	$6D,$65,$3A,$00,$63,$6D,$64,$5F,$53,$54,
                    $41,$52,$54,$3A,$3A
       00:006A: 63 6D 64 5F 
       00:006E: 53 54 41 52 
       00:0072: 54 3A 3A 
  1884 00:0075: 6E 61 6D 65  	db	$6E,$61,$6D,$65,$3A,$00,$63,$6F,$6E,$73,
                    $6F,$6C,$65,$61,$70
       00:0079: 3A 00 63 6F 
       00:007D: 6E 73 6F 6C 
       00:0081: 65 61 70 
  1885 00:0084: 70 00 63 6F  	db	$70,$00,$63,$6F,$6E,$73,$6F,$6C,$65,$41,
                    $70,$70,$00,$53,$74
       00:0088: 6E 73 6F 6C 
       00:008C: 65 41 70 70 
       00:0090: 00 53 74 
  1886 00:0093: 61 72 74 65  	db	$61,$72,$74,$65,$64,$20,$70,$72,$6F,$63,
                    $65,$73,$73,$3A,$00
       00:0097: 64 20 70 72 
       00:009B: 6F 63 65 73 
       00:009F: 73 3A 00 
  1887 00:00A2:              	ends
  1888                        ;
  1889                        ;UINT cmd_EXIT(PFXPROCESS process,PFXNODE tokens)
  1890                        ;{
  1891                        	.line	106
  1892                        	.line	107
  1893                        	CONCMD
  1894                        	xdef	~~cmd_EXIT
  1895                        	func
  1896                        	.function	107
  1897                        ~~cmd_EXIT:
  1898                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 37


  1899                        	longi	on
  1900 07:02AE: 3B           	tsc
  1901 07:02AF: 38           	sec
  1902 07:02B0: E9 64 00     	sbc	#L22
  1903 07:02B3: 1B           	tcs
  1904 07:02B4: 0B           	phd
  1905 07:02B5: 5B           	tcd
  1906             00000004   process_0	set	4
  1907             00000008   tokens_0	set	8
  1908                        	.block	107
  1909                        ;	LPCHAR  name = NULL;
  1910                        ;	LONG    procId = 0;
  1911                        ;	CHAR 	signature[16];
  1912                        ;
  1913                        ;	PFXPROCESS pprocess = NULL;
  1914                        ;
  1915                        ;	CHAR message[64];
  1916                        ;
  1917                        ;	k_debug_string("cmd_EXIT\r\n");
  1918             00000000   name_1	set	0
  1919             00000004   procId_1	set	4
  1920             00000008   signature_1	set	8
  1921             00000018   pprocess_1	set	24
  1922             0000001C   message_1	set	28
  1923                        	.sym	name,0,142,1,32
  1924                        	.sym	procId,4,7,1,32
  1925                        	.sym	signature,8,110,1,0,16
  1926                        	.sym	pprocess,24,138,1,32,20
  1927                        	.sym	message,28,110,1,0,64
  1928                        	.sym	process,4,138,6,32,20
  1929                        	.sym	tokens,8,138,6,32,5
  1930 07:02B6: 64 09        	stz	<L23+name_1
  1931 07:02B8: 64 0B        	stz	<L23+name_1+2
  1932 07:02BA: 64 0D        	stz	<L23+procId_1
  1933 07:02BC: 64 0F        	stz	<L23+procId_1+2
  1934 07:02BE: 64 21        	stz	<L23+pprocess_1
  1935 07:02C0: 64 23        	stz	<L23+pprocess_1+2
  1936                        	.line	116
  1937 07:02C2: F4 xx xx     	pea	#^L21
  1938 07:02C5: F4 xx xx     	pea	#<L21
  1939 07:02C8: 22 xx xx xx  	jsl	~~k_debug_string
  1940                        ;
  1941                        ;	getTokenSig(tokens,signature);
  1942                        	.line	118
  1943 07:02CC: F4 00 00     	pea	#0
  1944 07:02CF: 18           	clc
  1945 07:02D0: 7B           	tdc
  1946 07:02D1: 69 11 00     	adc	#<L23+signature_1
  1947 07:02D4: 48           	pha
  1948 07:02D5: D4 6E        	pei	<L22+tokens_0+2
  1949 07:02D7: D4 6C        	pei	<L22+tokens_0
  1950 07:02D9: 22 xx xx xx  	jsl	~~getTokenSig
  1951                        ;
  1952                        ;	if(strcmp(signature,"#AB") == 0)
  1953                        	.line	120
  1954                        ;	{
  1955 07:02DD: F4 xx xx     	pea	#^L21+11
  1956 07:02E0: F4 xx xx     	pea	#<L21+11
  Thu Dec  3 2020 22:25                                                Page 38


  1957 07:02E3: F4 00 00     	pea	#0
  1958 07:02E6: 18           	clc
  1959 07:02E7: 7B           	tdc
  1960 07:02E8: 69 11 00     	adc	#<L23+signature_1
  1961 07:02EB: 48           	pha
  1962 07:02EC: 22 xx xx xx  	jsl	~~strcmp
  1963 07:02F0: AA           	tax
  1964 07:02F1: F0 03        	beq	L25
  1965 07:02F3: 82 5B 00     	brl	L10007
  1966                        L25:
  1967                        	.line	121
  1968                        ;		name    = (LPCHAR)((PTOKEN)k_nodelist_ge
                    t(tokens,3)->data)->text;
  1969                        	.line	122
  1970 07:02F6: F4 03 00     	pea	#<$3
  1971 07:02F9: D4 6E        	pei	<L22+tokens_0+2
  1972 07:02FB: D4 6C        	pei	<L22+tokens_0
  1973 07:02FD: 22 xx xx xx  	jsl	~~k_nodelist_get
  1974 07:0301: 85 01        	sta	<R0
  1975 07:0303: 86 03        	stx	<R0+2
  1976 07:0305: A0 02 00     	ldy	#$2
  1977 07:0308: B7 01        	lda	[<R0],Y
  1978 07:030A: 85 05        	sta	<R1
  1979 07:030C: A0 04 00     	ldy	#$4
  1980 07:030F: B7 01        	lda	[<R0],Y
  1981 07:0311: 85 07        	sta	<R1+2
  1982 07:0313: A0 04 00     	ldy	#$4
  1983 07:0316: B7 05        	lda	[<R1],Y
  1984 07:0318: 85 09        	sta	<L23+name_1
  1985 07:031A: A0 06 00     	ldy	#$6
  1986 07:031D: B7 05        	lda	[<R1],Y
  1987 07:031F: 85 0B        	sta	<L23+name_1+2
  1988                        ;
  1989                        ;		k_debug_strings("cmd_EXIT::name:",name);
  1990                        	.line	124
  1991 07:0321: D4 0B        	pei	<L23+name_1+2
  1992 07:0323: D4 09        	pei	<L23+name_1
  1993 07:0325: F4 xx xx     	pea	#^L21+15
  1994 07:0328: F4 xx xx     	pea	#<L21+15
  1995 07:032B: 22 xx xx xx  	jsl	~~k_debug_strings
  1996                        ;
  1997                        ;		procId = atol(name);
  1998                        	.line	126
  1999 07:032F: D4 0B        	pei	<L23+name_1+2
  2000 07:0331: D4 09        	pei	<L23+name_1
  2001 07:0333: 22 xx xx xx  	jsl	~~atol
  2002 07:0337: 85 0D        	sta	<L23+procId_1
  2003 07:0339: 86 0F        	stx	<L23+procId_1+2
  2004                        ;
  2005                        ;		k_debug_long("cmd_EXIT::procid:",procId)
                    ;
  2006                        	.line	128
  2007 07:033B: D4 0F        	pei	<L23+procId_1+2
  2008 07:033D: D4 0D        	pei	<L23+procId_1
  2009 07:033F: F4 xx xx     	pea	#^L21+31
  2010 07:0342: F4 xx xx     	pea	#<L21+31
  2011 07:0345: 22 xx xx xx  	jsl	~~k_debug_long
  2012                        ;
  Thu Dec  3 2020 22:25                                                Page 39


  2013                        ;		k_exec_signal_terminate(procId);
  2014                        	.line	130
  2015 07:0349: D4 0F        	pei	<L23+procId_1+2
  2016 07:034B: D4 0D        	pei	<L23+procId_1
  2017 07:034D: 22 xx xx xx  	jsl	~~k_exec_signal_terminate
  2018                        ;	}
  2019                        	.line	131
  2020                        ;
  2021                        ;	return 0;
  2022                        L10007:
  2023                        	.line	133
  2024 07:0351: A9 00 00     	lda	#$0
  2025                        L26:
  2026 07:0354: A8           	tay
  2027 07:0355: A5 66        	lda	<L22+2
  2028 07:0357: 85 6E        	sta	<L22+2+8
  2029 07:0359: A5 65        	lda	<L22+1
  2030 07:035B: 85 6D        	sta	<L22+1+8
  2031 07:035D: 2B           	pld
  2032 07:035E: 3B           	tsc
  2033 07:035F: 18           	clc
  2034 07:0360: 69 6C 00     	adc	#L22+8
  2035 07:0363: 1B           	tcs
  2036 07:0364: 98           	tya
  2037 07:0365: 6B           	rtl
  2038                        ;}
  2039                        	.line	134
  2040                        	.endblock	134
  2041             00000064   L22	equ	100
  2042             00000009   L23	equ	9
  2043 07:0366:              	ends
  2044                        	efunc
  2045                        	.endfunc	134,9,100
  2046                        	.line	134
  2047                        	data
  2048                        L21:
  2049 00:00A2: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$45,$58,$49,$54,$0D,$0A,
                    $00,$23,$41,$42,$00
       00:00A6: 45 58 49 54 
       00:00AA: 0D 0A 00 23 
       00:00AE: 41 42 00 
  2050 00:00B1: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$45,$58,$49,$54,$3A,$3A,
                    $6E,$61,$6D,$65,$3A
       00:00B5: 45 58 49 54 
       00:00B9: 3A 3A 6E 61 
       00:00BD: 6D 65 3A 
  2051 00:00C0: 00 63 6D 64  	db	$00,$63,$6D,$64,$5F,$45,$58,$49,$54,$3A,
                    $3A,$70,$72,$6F,$63
       00:00C4: 5F 45 58 49 
       00:00C8: 54 3A 3A 70 
       00:00CC: 72 6F 63 
  2052 00:00CF: 69 64 3A 00  	db	$69,$64,$3A,$00
  2053 00:00D3:              	ends
  2054                        ;
  2055                        ;UINT cmd_RESUME(PFXPROCESS process,PFXNODE tokens
                    )
  2056                        ;{
  2057                        	.line	136
  Thu Dec  3 2020 22:25                                                Page 40


  2058                        	.line	137
  2059                        	CONCMD
  2060                        	xdef	~~cmd_RESUME
  2061                        	func
  2062                        	.function	137
  2063                        ~~cmd_RESUME:
  2064                        	longa	on
  2065                        	longi	on
  2066 07:0366: 3B           	tsc
  2067 07:0367: 38           	sec
  2068 07:0368: E9 64 00     	sbc	#L28
  2069 07:036B: 1B           	tcs
  2070 07:036C: 0B           	phd
  2071 07:036D: 5B           	tcd
  2072             00000004   process_0	set	4
  2073             00000008   tokens_0	set	8
  2074                        	.block	137
  2075                        ;	LPCHAR  name = NULL;
  2076                        ;	LONG    procId = 0;
  2077                        ;	CHAR 	signature[16];
  2078                        ;
  2079                        ;	PFXPROCESS pprocess = NULL;
  2080                        ;
  2081                        ;	CHAR message[64];
  2082                        ;
  2083                        ;	k_debug_string("cmd_RESUME\r\n");
  2084             00000000   name_1	set	0
  2085             00000004   procId_1	set	4
  2086             00000008   signature_1	set	8
  2087             00000018   pprocess_1	set	24
  2088             0000001C   message_1	set	28
  2089                        	.sym	name,0,142,1,32
  2090                        	.sym	procId,4,7,1,32
  2091                        	.sym	signature,8,110,1,0,16
  2092                        	.sym	pprocess,24,138,1,32,20
  2093                        	.sym	message,28,110,1,0,64
  2094                        	.sym	process,4,138,6,32,20
  2095                        	.sym	tokens,8,138,6,32,5
  2096 07:036E: 64 09        	stz	<L29+name_1
  2097 07:0370: 64 0B        	stz	<L29+name_1+2
  2098 07:0372: 64 0D        	stz	<L29+procId_1
  2099 07:0374: 64 0F        	stz	<L29+procId_1+2
  2100 07:0376: 64 21        	stz	<L29+pprocess_1
  2101 07:0378: 64 23        	stz	<L29+pprocess_1+2
  2102                        	.line	146
  2103 07:037A: F4 xx xx     	pea	#^L27
  2104 07:037D: F4 xx xx     	pea	#<L27
  2105 07:0380: 22 xx xx xx  	jsl	~~k_debug_string
  2106                        ;
  2107                        ;	getTokenSig(tokens,signature);
  2108                        	.line	148
  2109 07:0384: F4 00 00     	pea	#0
  2110 07:0387: 18           	clc
  2111 07:0388: 7B           	tdc
  2112 07:0389: 69 11 00     	adc	#<L29+signature_1
  2113 07:038C: 48           	pha
  2114 07:038D: D4 6E        	pei	<L28+tokens_0+2
  2115 07:038F: D4 6C        	pei	<L28+tokens_0
  Thu Dec  3 2020 22:25                                                Page 41


  2116 07:0391: 22 xx xx xx  	jsl	~~getTokenSig
  2117                        ;
  2118                        ;	if(strcmp(signature,"#AB") == 0)
  2119                        	.line	150
  2120                        ;	{
  2121 07:0395: F4 xx xx     	pea	#^L27+13
  2122 07:0398: F4 xx xx     	pea	#<L27+13
  2123 07:039B: F4 00 00     	pea	#0
  2124 07:039E: 18           	clc
  2125 07:039F: 7B           	tdc
  2126 07:03A0: 69 11 00     	adc	#<L29+signature_1
  2127 07:03A3: 48           	pha
  2128 07:03A4: 22 xx xx xx  	jsl	~~strcmp
  2129 07:03A8: AA           	tax
  2130 07:03A9: F0 03        	beq	L31
  2131 07:03AB: 82 5B 00     	brl	L10008
  2132                        L31:
  2133                        	.line	151
  2134                        ;		name    = (LPCHAR)((PTOKEN)k_nodelist_ge
                    t(tokens,3)->data)->text;
  2135                        	.line	152
  2136 07:03AE: F4 03 00     	pea	#<$3
  2137 07:03B1: D4 6E        	pei	<L28+tokens_0+2
  2138 07:03B3: D4 6C        	pei	<L28+tokens_0
  2139 07:03B5: 22 xx xx xx  	jsl	~~k_nodelist_get
  2140 07:03B9: 85 01        	sta	<R0
  2141 07:03BB: 86 03        	stx	<R0+2
  2142 07:03BD: A0 02 00     	ldy	#$2
  2143 07:03C0: B7 01        	lda	[<R0],Y
  2144 07:03C2: 85 05        	sta	<R1
  2145 07:03C4: A0 04 00     	ldy	#$4
  2146 07:03C7: B7 01        	lda	[<R0],Y
  2147 07:03C9: 85 07        	sta	<R1+2
  2148 07:03CB: A0 04 00     	ldy	#$4
  2149 07:03CE: B7 05        	lda	[<R1],Y
  2150 07:03D0: 85 09        	sta	<L29+name_1
  2151 07:03D2: A0 06 00     	ldy	#$6
  2152 07:03D5: B7 05        	lda	[<R1],Y
  2153 07:03D7: 85 0B        	sta	<L29+name_1+2
  2154                        ;
  2155                        ;		k_debug_strings("cmd_RESUME::name:",name
                    );
  2156                        	.line	154
  2157 07:03D9: D4 0B        	pei	<L29+name_1+2
  2158 07:03DB: D4 09        	pei	<L29+name_1
  2159 07:03DD: F4 xx xx     	pea	#^L27+17
  2160 07:03E0: F4 xx xx     	pea	#<L27+17
  2161 07:03E3: 22 xx xx xx  	jsl	~~k_debug_strings
  2162                        ;
  2163                        ;		procId = atol(name);
  2164                        	.line	156
  2165 07:03E7: D4 0B        	pei	<L29+name_1+2
  2166 07:03E9: D4 09        	pei	<L29+name_1
  2167 07:03EB: 22 xx xx xx  	jsl	~~atol
  2168 07:03EF: 85 0D        	sta	<L29+procId_1
  2169 07:03F1: 86 0F        	stx	<L29+procId_1+2
  2170                        ;
  2171                        ;		k_debug_long("cmd_RESUME::procid:",procI
  Thu Dec  3 2020 22:25                                                Page 42


                    d);
  2172                        	.line	158
  2173 07:03F3: D4 0F        	pei	<L29+procId_1+2
  2174 07:03F5: D4 0D        	pei	<L29+procId_1
  2175 07:03F7: F4 xx xx     	pea	#^L27+35
  2176 07:03FA: F4 xx xx     	pea	#<L27+35
  2177 07:03FD: 22 xx xx xx  	jsl	~~k_debug_long
  2178                        ;
  2179                        ;		k_exec_signal_start(procId);
  2180                        	.line	160
  2181 07:0401: D4 0F        	pei	<L29+procId_1+2
  2182 07:0403: D4 0D        	pei	<L29+procId_1
  2183 07:0405: 22 xx xx xx  	jsl	~~k_exec_signal_start
  2184                        ;	}
  2185                        	.line	161
  2186                        ;
  2187                        ;	return 0;
  2188                        L10008:
  2189                        	.line	163
  2190 07:0409: A9 00 00     	lda	#$0
  2191                        L32:
  2192 07:040C: A8           	tay
  2193 07:040D: A5 66        	lda	<L28+2
  2194 07:040F: 85 6E        	sta	<L28+2+8
  2195 07:0411: A5 65        	lda	<L28+1
  2196 07:0413: 85 6D        	sta	<L28+1+8
  2197 07:0415: 2B           	pld
  2198 07:0416: 3B           	tsc
  2199 07:0417: 18           	clc
  2200 07:0418: 69 6C 00     	adc	#L28+8
  2201 07:041B: 1B           	tcs
  2202 07:041C: 98           	tya
  2203 07:041D: 6B           	rtl
  2204                        ;}
  2205                        	.line	164
  2206                        	.endblock	164
  2207             00000064   L28	equ	100
  2208             00000009   L29	equ	9
  2209 07:041E:              	ends
  2210                        	efunc
  2211                        	.endfunc	164,9,100
  2212                        	.line	164
  2213                        	data
  2214                        L27:
  2215 00:00D3: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$52,$45,$53,$55,$4D,$45,
                    $0D,$0A,$00,$23,$41
       00:00D7: 52 45 53 55 
       00:00DB: 4D 45 0D 0A 
       00:00DF: 00 23 41 
  2216 00:00E2: 42 00 63 6D  	db	$42,$00,$63,$6D,$64,$5F,$52,$45,$53,$55,
                    $4D,$45,$3A,$3A,$6E
       00:00E6: 64 5F 52 45 
       00:00EA: 53 55 4D 45 
       00:00EE: 3A 3A 6E 
  2217 00:00F1: 61 6D 65 3A  	db	$61,$6D,$65,$3A,$00,$63,$6D,$64,$5F,$52,
                    $45,$53,$55,$4D,$45
       00:00F5: 00 63 6D 64 
       00:00F9: 5F 52 45 53 
  Thu Dec  3 2020 22:25                                                Page 43


       00:00FD: 55 4D 45 
  2218 00:0100: 3A 3A 70 72  	db	$3A,$3A,$70,$72,$6F,$63,$69,$64,$3A,$00
       00:0104: 6F 63 69 64 
       00:0108: 3A 00 
  2219 00:010A:              	ends
  2220                        ;
  2221                        ;UINT cmd_PAUSE(PFXPROCESS process,PFXNODE tokens)
  2222                        ;{
  2223                        	.line	166
  2224                        	.line	167
  2225                        	CONCMD
  2226                        	xdef	~~cmd_PAUSE
  2227                        	func
  2228                        	.function	167
  2229                        ~~cmd_PAUSE:
  2230                        	longa	on
  2231                        	longi	on
  2232 07:041E: 3B           	tsc
  2233 07:041F: 38           	sec
  2234 07:0420: E9 64 00     	sbc	#L34
  2235 07:0423: 1B           	tcs
  2236 07:0424: 0B           	phd
  2237 07:0425: 5B           	tcd
  2238             00000004   process_0	set	4
  2239             00000008   tokens_0	set	8
  2240                        	.block	167
  2241                        ;	LPCHAR  name = NULL;
  2242                        ;	LONG    procId = 0;
  2243                        ;	CHAR 	signature[16];
  2244                        ;
  2245                        ;	PFXPROCESS pprocess = NULL;
  2246                        ;
  2247                        ;	CHAR message[64];
  2248                        ;
  2249                        ;	k_debug_string("cmd_PAUSE\r\n");
  2250             00000000   name_1	set	0
  2251             00000004   procId_1	set	4
  2252             00000008   signature_1	set	8
  2253             00000018   pprocess_1	set	24
  2254             0000001C   message_1	set	28
  2255                        	.sym	name,0,142,1,32
  2256                        	.sym	procId,4,7,1,32
  2257                        	.sym	signature,8,110,1,0,16
  2258                        	.sym	pprocess,24,138,1,32,20
  2259                        	.sym	message,28,110,1,0,64
  2260                        	.sym	process,4,138,6,32,20
  2261                        	.sym	tokens,8,138,6,32,5
  2262 07:0426: 64 09        	stz	<L35+name_1
  2263 07:0428: 64 0B        	stz	<L35+name_1+2
  2264 07:042A: 64 0D        	stz	<L35+procId_1
  2265 07:042C: 64 0F        	stz	<L35+procId_1+2
  2266 07:042E: 64 21        	stz	<L35+pprocess_1
  2267 07:0430: 64 23        	stz	<L35+pprocess_1+2
  2268                        	.line	176
  2269 07:0432: F4 xx xx     	pea	#^L33
  2270 07:0435: F4 xx xx     	pea	#<L33
  2271 07:0438: 22 xx xx xx  	jsl	~~k_debug_string
  2272                        ;
  Thu Dec  3 2020 22:25                                                Page 44


  2273                        ;	getTokenSig(tokens,signature);
  2274                        	.line	178
  2275 07:043C: F4 00 00     	pea	#0
  2276 07:043F: 18           	clc
  2277 07:0440: 7B           	tdc
  2278 07:0441: 69 11 00     	adc	#<L35+signature_1
  2279 07:0444: 48           	pha
  2280 07:0445: D4 6E        	pei	<L34+tokens_0+2
  2281 07:0447: D4 6C        	pei	<L34+tokens_0
  2282 07:0449: 22 xx xx xx  	jsl	~~getTokenSig
  2283                        ;
  2284                        ;	if(strcmp(signature,"#AB") == 0)
  2285                        	.line	180
  2286                        ;	{
  2287 07:044D: F4 xx xx     	pea	#^L33+12
  2288 07:0450: F4 xx xx     	pea	#<L33+12
  2289 07:0453: F4 00 00     	pea	#0
  2290 07:0456: 18           	clc
  2291 07:0457: 7B           	tdc
  2292 07:0458: 69 11 00     	adc	#<L35+signature_1
  2293 07:045B: 48           	pha
  2294 07:045C: 22 xx xx xx  	jsl	~~strcmp
  2295 07:0460: AA           	tax
  2296 07:0461: F0 03        	beq	L37
  2297 07:0463: 82 5B 00     	brl	L10009
  2298                        L37:
  2299                        	.line	181
  2300                        ;		name    = (LPCHAR)((PTOKEN)k_nodelist_ge
                    t(tokens,3)->data)->text;
  2301                        	.line	182
  2302 07:0466: F4 03 00     	pea	#<$3
  2303 07:0469: D4 6E        	pei	<L34+tokens_0+2
  2304 07:046B: D4 6C        	pei	<L34+tokens_0
  2305 07:046D: 22 xx xx xx  	jsl	~~k_nodelist_get
  2306 07:0471: 85 01        	sta	<R0
  2307 07:0473: 86 03        	stx	<R0+2
  2308 07:0475: A0 02 00     	ldy	#$2
  2309 07:0478: B7 01        	lda	[<R0],Y
  2310 07:047A: 85 05        	sta	<R1
  2311 07:047C: A0 04 00     	ldy	#$4
  2312 07:047F: B7 01        	lda	[<R0],Y
  2313 07:0481: 85 07        	sta	<R1+2
  2314 07:0483: A0 04 00     	ldy	#$4
  2315 07:0486: B7 05        	lda	[<R1],Y
  2316 07:0488: 85 09        	sta	<L35+name_1
  2317 07:048A: A0 06 00     	ldy	#$6
  2318 07:048D: B7 05        	lda	[<R1],Y
  2319 07:048F: 85 0B        	sta	<L35+name_1+2
  2320                        ;
  2321                        ;		k_debug_strings("cmd_PAUSE::name:",name)
                    ;
  2322                        	.line	184
  2323 07:0491: D4 0B        	pei	<L35+name_1+2
  2324 07:0493: D4 09        	pei	<L35+name_1
  2325 07:0495: F4 xx xx     	pea	#^L33+16
  2326 07:0498: F4 xx xx     	pea	#<L33+16
  2327 07:049B: 22 xx xx xx  	jsl	~~k_debug_strings
  2328                        ;
  Thu Dec  3 2020 22:25                                                Page 45


  2329                        ;		procId = atol(name);
  2330                        	.line	186
  2331 07:049F: D4 0B        	pei	<L35+name_1+2
  2332 07:04A1: D4 09        	pei	<L35+name_1
  2333 07:04A3: 22 xx xx xx  	jsl	~~atol
  2334 07:04A7: 85 0D        	sta	<L35+procId_1
  2335 07:04A9: 86 0F        	stx	<L35+procId_1+2
  2336                        ;
  2337                        ;		k_debug_long("cmd_PAUSE::procid:",procId
                    );
  2338                        	.line	188
  2339 07:04AB: D4 0F        	pei	<L35+procId_1+2
  2340 07:04AD: D4 0D        	pei	<L35+procId_1
  2341 07:04AF: F4 xx xx     	pea	#^L33+33
  2342 07:04B2: F4 xx xx     	pea	#<L33+33
  2343 07:04B5: 22 xx xx xx  	jsl	~~k_debug_long
  2344                        ;
  2345                        ;		k_exec_signal_sleep(procId);
  2346                        	.line	190
  2347 07:04B9: D4 0F        	pei	<L35+procId_1+2
  2348 07:04BB: D4 0D        	pei	<L35+procId_1
  2349 07:04BD: 22 xx xx xx  	jsl	~~k_exec_signal_sleep
  2350                        ;	}
  2351                        	.line	191
  2352                        ;
  2353                        ;	return 0;
  2354                        L10009:
  2355                        	.line	193
  2356 07:04C1: A9 00 00     	lda	#$0
  2357                        L38:
  2358 07:04C4: A8           	tay
  2359 07:04C5: A5 66        	lda	<L34+2
  2360 07:04C7: 85 6E        	sta	<L34+2+8
  2361 07:04C9: A5 65        	lda	<L34+1
  2362 07:04CB: 85 6D        	sta	<L34+1+8
  2363 07:04CD: 2B           	pld
  2364 07:04CE: 3B           	tsc
  2365 07:04CF: 18           	clc
  2366 07:04D0: 69 6C 00     	adc	#L34+8
  2367 07:04D3: 1B           	tcs
  2368 07:04D4: 98           	tya
  2369 07:04D5: 6B           	rtl
  2370                        ;}
  2371                        	.line	194
  2372                        	.endblock	194
  2373             00000064   L34	equ	100
  2374             00000009   L35	equ	9
  2375 07:04D6:              	ends
  2376                        	efunc
  2377                        	.endfunc	194,9,100
  2378                        	.line	194
  2379                        	data
  2380                        L33:
  2381 00:010A: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$50,$41,$55,$53,$45,$0D,
                    $0A,$00,$23,$41,$42
       00:010E: 50 41 55 53 
       00:0112: 45 0D 0A 00 
       00:0116: 23 41 42 
  Thu Dec  3 2020 22:25                                                Page 46


  2382 00:0119: 00 63 6D 64  	db	$00,$63,$6D,$64,$5F,$50,$41,$55,$53,$45,
                    $3A,$3A,$6E,$61,$6D
       00:011D: 5F 50 41 55 
       00:0121: 53 45 3A 3A 
       00:0125: 6E 61 6D 
  2383 00:0128: 65 3A 00 63  	db	$65,$3A,$00,$63,$6D,$64,$5F,$50,$41,$55,
                    $53,$45,$3A,$3A,$70
       00:012C: 6D 64 5F 50 
       00:0130: 41 55 53 45 
       00:0134: 3A 3A 70 
  2384 00:0137: 72 6F 63 69  	db	$72,$6F,$63,$69,$64,$3A,$00
       00:013B: 64 3A 00 
  2385 00:013E:              	ends
  2386                        ;
  2387                        ;
  2388                        ;UINT cmd_DIR(PFXPROCESS process,PFXNODE tokens)
  2389                        ;{
  2390                        	.line	197
  2391                        	.line	198
  2392                        	CONCMD
  2393                        	xdef	~~cmd_DIR
  2394                        	func
  2395                        	.function	198
  2396                        ~~cmd_DIR:
  2397                        	longa	on
  2398                        	longi	on
  2399 07:04D6: 3B           	tsc
  2400 07:04D7: 38           	sec
  2401 07:04D8: E9 4C 00     	sbc	#L40
  2402 07:04DB: 1B           	tcs
  2403 07:04DC: 0B           	phd
  2404 07:04DD: 5B           	tcd
  2405             00000004   process_0	set	4
  2406             00000008   tokens_0	set	8
  2407                        	.block	198
  2408                        ;	BYTE 	signature[8];
  2409                        ;
  2410                        ;	PFXNODE dirList = NULL;
  2411                        ;	LPCHAR  drive   = NULL;
  2412                        ;	LPCHAR  path   = NULL;
  2413                        ;	LPCHAR	diskName = NULL;
  2414                        ;
  2415                        ;	DISKINFO diskInfo;
  2416                        ;
  2417                        ;	k_debug_string("cmd_DIR\r\n");
  2418             00000000   signature_1	set	0
  2419             00000008   dirList_1	set	8
  2420             0000000C   drive_1	set	12
  2421             00000010   path_1	set	16
  2422             00000014   diskName_1	set	20
  2423             00000018   diskInfo_1	set	24
  2424                        	.sym	signature,0,110,1,0,8
  2425                        	.sym	dirList,8,138,1,32,5
  2426                        	.sym	drive,12,142,1,32
  2427                        	.sym	path,16,142,1,32
  2428                        	.sym	diskName,20,142,1,32
  2429                        	.sym	diskInfo,24,10,1,416,65
  2430                        	.sym	process,4,138,6,32,20
  Thu Dec  3 2020 22:25                                                Page 47


  2431                        	.sym	tokens,8,138,6,32,5
  2432 07:04DE: 64 09        	stz	<L41+dirList_1
  2433 07:04E0: 64 0B        	stz	<L41+dirList_1+2
  2434 07:04E2: 64 0D        	stz	<L41+drive_1
  2435 07:04E4: 64 0F        	stz	<L41+drive_1+2
  2436 07:04E6: 64 11        	stz	<L41+path_1
  2437 07:04E8: 64 13        	stz	<L41+path_1+2
  2438 07:04EA: 64 15        	stz	<L41+diskName_1
  2439 07:04EC: 64 17        	stz	<L41+diskName_1+2
  2440                        	.line	208
  2441 07:04EE: F4 xx xx     	pea	#^L39
  2442 07:04F1: F4 xx xx     	pea	#<L39
  2443 07:04F4: 22 xx xx xx  	jsl	~~k_debug_string
  2444                        ;
  2445                        ;	getTokenSig(tokens,signature);
  2446                        	.line	210
  2447 07:04F8: F4 00 00     	pea	#0
  2448 07:04FB: 18           	clc
  2449 07:04FC: 7B           	tdc
  2450 07:04FD: 69 01 00     	adc	#<L41+signature_1
  2451 07:0500: 48           	pha
  2452 07:0501: D4 56        	pei	<L40+tokens_0+2
  2453 07:0503: D4 54        	pei	<L40+tokens_0
  2454 07:0505: 22 xx xx xx  	jsl	~~getTokenSig
  2455                        ;
  2456                        ;	/*
  2457                        ;	if(strcmp(signature,"#AAC") == 0)
  2458                        ;	{
  2459                        ;		drive = (LPCHAR)((PTOKEN)k_nodelist_get(
                    tokens,3)->data)->text;
  2460                        ;		path  = (LPCHAR)((PTOKEN)k_nodelist_get(
                    tokens,4)->data)->text;
  2461                        ;
  2462                        ;		k_debug_strings("cmd_DIR::drive:",drive)
                    ;
  2463                        ;		k_debug_strings("cmd_DIR::path:",path);
  2464                        ;		k_debug_strings("cmd_DIR::drive:",drive)
                    ;
  2465                        ;
  2466                        ;		if(strcmp(drive,"pc") == 0)
  2467                        ;		{
  2468                        ;			k_debug_string_com1("%SUBDIRECTO
                    RY%");
  2469                        ;			k_debug_string_com1(path);
  2470                        ;		}
  2471                        ;
  2472                        ;	}
  2473                        ;	else if(strcmp(signature,"#AA") == 0)
  2474                        ;	{
  2475                        ;		drive = (LPCHAR)((PTOKEN)k_nodelist_get(
                    tokens,3)->data)->text;
  2476                        ;
  2477                        ;		k_debug_strings("cmd_DIR::drive:",drive)
                    ;
  2478                        ;
  2479                        ;		if(strcmp(drive,"pc") == 0)
  2480                        ;		{
  2481                        ;			k_debug_string_com1("%DIRECTORY%
  Thu Dec  3 2020 22:25                                                Page 48


                    ");
  2482                        ;		}
  2483                        ;		else if(strcmp(drive,"sd") == 0)
  2484                        ;		{
  2485                        ;			dirList = k_sd_read_dir();
  2486                        ;			if(dirList!=NULL)
  2487                        ;			{
  2488                        ;				k_clear_screen(0);
  2489                        ;
  2490                        ;				process->consoleCtl->cur
                    X = 0;
  2491                        ;				process->consoleCtl->cur
                    Y = 0;
  2492                        ;
  2493                        ;				k_nodelist_foreach_data(
                    dirList,process,foreach_file_entry);
  2494                        ;				k_dos_dealloc_filelist(d
                    irList);
  2495                        ;				process->consoleCtl->cur
                    Y++;
  2496                        ;			}
  2497                        ;		}
  2498                        ;	}
  2499                        ;	else if(strcmp(signature,"#A") == 0)
  2500                        ;	{
  2501                        ;		dirList = k_sd_read_dir();
  2502                        ;		if(dirList!=NULL)
  2503                        ;		{
  2504                        ;			k_clear_screen(0);
  2505                        ;
  2506                        ;			process->consoleCtl->curX = 0;
  2507                        ;			process->consoleCtl->curY = 0;
  2508                        ;
  2509                        ;			k_nodelist_foreach_data(dirList,
                    process,foreach_file_entry);
  2510                        ;			k_dos_dealloc_filelist(dirList);
  2511                        ;
  2512                        ;			process->consoleCtl->curY++;
  2513                        ;		}
  2514                        ;	}
  2515                        ;	else
  2516                        ;	{
  2517                        ;		k_debug_string("DIR Syntax Error\r\n");
  2518                        ;	}
  2519                        ;	*/
  2520                        ;
  2521                        ;
  2522                        ;	return 0;
  2523                        	.line	278
  2524 07:0509: A9 00 00     	lda	#$0
  2525                        L43:
  2526 07:050C: A8           	tay
  2527 07:050D: A5 4E        	lda	<L40+2
  2528 07:050F: 85 56        	sta	<L40+2+8
  2529 07:0511: A5 4D        	lda	<L40+1
  2530 07:0513: 85 55        	sta	<L40+1+8
  2531 07:0515: 2B           	pld
  2532 07:0516: 3B           	tsc
  Thu Dec  3 2020 22:25                                                Page 49


  2533 07:0517: 18           	clc
  2534 07:0518: 69 54 00     	adc	#L40+8
  2535 07:051B: 1B           	tcs
  2536 07:051C: 98           	tya
  2537 07:051D: 6B           	rtl
  2538                        ;}
  2539                        	.line	279
  2540                        	.endblock	279
  2541             0000004C   L40	equ	76
  2542             00000001   L41	equ	1
  2543 07:051E:              	ends
  2544                        	efunc
  2545                        	.endfunc	279,1,76
  2546                        	.line	279
  2547                        	data
  2548                        L39:
  2549 00:013E: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$44,$49,$52,$0D,$0A,$00
       00:0142: 44 49 52 0D 
       00:0146: 0A 00 
  2550 00:0148:              	ends
  2551                        ;
  2552                        ;UINT cmd_VOL(PFXPROCESS process,PFXNODE tokens)
  2553                        ;{
  2554                        	.line	281
  2555                        	.line	282
  2556                        	CONCMD
  2557                        	xdef	~~cmd_VOL
  2558                        	func
  2559                        	.function	282
  2560                        ~~cmd_VOL:
  2561                        	longa	on
  2562                        	longi	on
  2563 07:051E: 3B           	tsc
  2564 07:051F: 38           	sec
  2565 07:0520: E9 36 00     	sbc	#L45
  2566 07:0523: 1B           	tcs
  2567 07:0524: 0B           	phd
  2568 07:0525: 5B           	tcd
  2569             00000004   process_0	set	4
  2570             00000008   tokens_0	set	8
  2571                        	.block	282
  2572                        ;	int pos = 0;
  2573                        ;	DISKINFO diskInfo;
  2574                        ;
  2575                        ;	k_debug_string("cmd_VOL\r\n");
  2576             00000000   pos_1	set	0
  2577             00000002   diskInfo_1	set	2
  2578                        	.sym	pos,0,5,1,16
  2579                        	.sym	diskInfo,2,10,1,416,65
  2580                        	.sym	process,4,138,6,32,20
  2581                        	.sym	tokens,8,138,6,32,5
  2582 07:0526: 64 01        	stz	<L46+pos_1
  2583                        	.line	286
  2584 07:0528: F4 xx xx     	pea	#^L44
  2585 07:052B: F4 xx xx     	pea	#<L44
  2586 07:052E: 22 xx xx xx  	jsl	~~k_debug_string
  2587                        ;
  2588                        ;	/*
  Thu Dec  3 2020 22:25                                                Page 50


  2589                        ;	if(k_sd_read_vol(&diskInfo))
  2590                        ;	{
  2591                        ;		k_clear_screen(0);
  2592                        ;
  2593                        ;		process->consoleCtl->curX = 0;
  2594                        ;		process->consoleCtl->curY = 0;
  2595                        ;
  2596                        ;		pos = k_put_string(0,process->consoleCtl
                    ->curY,"Volume:",15,0);
  2597                        ;		process->consoleCtl->curY++;
  2598                        ;		pos = k_put_string(0,process->consoleCtl
                    ->curY,diskInfo.stgName,15,0);
  2599                        ;
  2600                        ;		//k_send_message(NULL,FX_DISK_INSERT,&di
                    skInfo,sizeof(DISKINFO));
  2601                        ;	}
  2602                        ;	else
  2603                        ;	{
  2604                        ;		//k_send_message(NULL,FX_DISK_REMOVE,NUL
                    L,0);
  2605                        ;	}
  2606                        ;	*/
  2607                        ;	return 0;
  2608                        	.line	307
  2609 07:0532: A9 00 00     	lda	#$0
  2610                        L48:
  2611 07:0535: A8           	tay
  2612 07:0536: A5 38        	lda	<L45+2
  2613 07:0538: 85 40        	sta	<L45+2+8
  2614 07:053A: A5 37        	lda	<L45+1
  2615 07:053C: 85 3F        	sta	<L45+1+8
  2616 07:053E: 2B           	pld
  2617 07:053F: 3B           	tsc
  2618 07:0540: 18           	clc
  2619 07:0541: 69 3E 00     	adc	#L45+8
  2620 07:0544: 1B           	tcs
  2621 07:0545: 98           	tya
  2622 07:0546: 6B           	rtl
  2623                        ;}
  2624                        	.line	308
  2625                        	.endblock	308
  2626             00000036   L45	equ	54
  2627             00000001   L46	equ	1
  2628 07:0547:              	ends
  2629                        	efunc
  2630                        	.endfunc	308,1,54
  2631                        	.line	308
  2632                        	data
  2633                        L44:
  2634 00:0148: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$56,$4F,$4C,$0D,$0A,$00
       00:014C: 56 4F 4C 0D 
       00:0150: 0A 00 
  2635 00:0152:              	ends
  2636                        ;
  2637                        ;UINT cmd_TESTSD(PFXPROCESS process,PFXNODE tokens
                    )
  2638                        ;{
  2639                        	.line	310
  Thu Dec  3 2020 22:25                                                Page 51


  2640                        	.line	311
  2641                        	CONCMD
  2642                        	xdef	~~cmd_TESTSD
  2643                        	func
  2644                        	.function	311
  2645                        ~~cmd_TESTSD:
  2646                        	longa	on
  2647                        	longi	on
  2648 07:0547: 3B           	tsc
  2649 07:0548: 38           	sec
  2650 07:0549: E9 00 00     	sbc	#L50
  2651 07:054C: 1B           	tcs
  2652 07:054D: 0B           	phd
  2653 07:054E: 5B           	tcd
  2654             00000004   process_0	set	4
  2655             00000008   tokens_0	set	8
  2656                        	.block	311
  2657                        ;	//k_sd_test();
  2658                        ;
  2659                        ;	return 0;
  2660                        	.sym	process,4,138,6,32,20
  2661                        	.sym	tokens,8,138,6,32,5
  2662                        	.line	314
  2663 07:054F: A9 00 00     	lda	#$0
  2664                        L53:
  2665 07:0552: A8           	tay
  2666 07:0553: A5 02        	lda	<L50+2
  2667 07:0555: 85 0A        	sta	<L50+2+8
  2668 07:0557: A5 01        	lda	<L50+1
  2669 07:0559: 85 09        	sta	<L50+1+8
  2670 07:055B: 2B           	pld
  2671 07:055C: 3B           	tsc
  2672 07:055D: 18           	clc
  2673 07:055E: 69 08 00     	adc	#L50+8
  2674 07:0561: 1B           	tcs
  2675 07:0562: 98           	tya
  2676 07:0563: 6B           	rtl
  2677                        ;}
  2678                        	.line	315
  2679                        	.endblock	315
  2680             00000000   L50	equ	0
  2681             00000001   L51	equ	1
  2682 07:0564:              	ends
  2683                        	efunc
  2684                        	.endfunc	315,1,0
  2685                        	.line	315
  2686                        ;
  2687                        ;
  2688                        ;UINT cmd_WORKBENCH(PFXPROCESS process,PFXNODE tok
                    ens)
  2689                        ;{
  2690                        	.line	318
  2691                        	.line	319
  2692                        	CONCMD
  2693                        	xdef	~~cmd_WORKBENCH
  2694                        	func
  2695                        	.function	319
  2696                        ~~cmd_WORKBENCH:
  Thu Dec  3 2020 22:25                                                Page 52


  2697                        	longa	on
  2698                        	longi	on
  2699 07:0564: 3B           	tsc
  2700 07:0565: 38           	sec
  2701 07:0566: E9 04 00     	sbc	#L54
  2702 07:0569: 1B           	tcs
  2703 07:056A: 0B           	phd
  2704 07:056B: 5B           	tcd
  2705             00000004   process_0	set	4
  2706             00000008   tokens_0	set	8
  2707                        	.block	319
  2708                        ;	k_debug_string("cmd_WORKBENCH\r\n");
  2709                        	.sym	process,4,138,6,32,20
  2710                        	.sym	tokens,8,138,6,32,5
  2711                        	.line	320
  2712 07:056C: F4 xx xx     	pea	#^L49
  2713 07:056F: F4 xx xx     	pea	#<L49
  2714 07:0572: 22 xx xx xx  	jsl	~~k_debug_string
  2715                        ;	k_init_desktop(process);
  2716                        	.line	321
  2717 07:0576: D4 0A        	pei	<L54+process_0+2
  2718 07:0578: D4 08        	pei	<L54+process_0
  2719 07:057A: 22 xx xx xx  	jsl	~~k_init_desktop
  2720                        ;
  2721                        ;	process->consoleCtl->desktopMode = TRUE;
  2722                        	.line	323
  2723 07:057E: A0 54 00     	ldy	#$54
  2724 07:0581: B7 08        	lda	[<L54+process_0],Y
  2725 07:0583: 85 01        	sta	<R0
  2726 07:0585: A0 56 00     	ldy	#$56
  2727 07:0588: B7 08        	lda	[<L54+process_0],Y
  2728 07:058A: 85 03        	sta	<R0+2
  2729 07:058C: E2 20        	sep	#$20
  2730                        	longa	off
  2731 07:058E: A9 01        	lda	#$1
  2732 07:0590: A0 31 00     	ldy	#$31
  2733 07:0593: 97 01        	sta	[<R0],Y
  2734 07:0595: C2 20        	rep	#$20
  2735                        	longa	on
  2736                        ;	//k_sd_initialize();
  2737                        ;
  2738                        ;
  2739                        ;	k_user_CreateWindow(0,
  2740                        	.line	327
  2741                        ;						"console
                    WindowClass",
  2742                        ;						"TestWin
                    dow1",
  2743                        ;						100,100,
  2744                        ;						200,200,
  2745                        ;						NULL,
  2746                        ;						NULL,
  2747                        ;						NULL);
  2748 07:0597: F4 00 00     	pea	#^$0
  2749 07:059A: F4 00 00     	pea	#<$0
  2750 07:059D: F4 00 00     	pea	#^$0
  2751 07:05A0: F4 00 00     	pea	#<$0
  2752 07:05A3: F4 00 00     	pea	#^$0
  Thu Dec  3 2020 22:25                                                Page 53


  2753 07:05A6: F4 00 00     	pea	#<$0
  2754 07:05A9: F4 C8 00     	pea	#<$c8
  2755 07:05AC: F4 C8 00     	pea	#<$c8
  2756 07:05AF: F4 64 00     	pea	#<$64
  2757 07:05B2: F4 64 00     	pea	#<$64
  2758 07:05B5: F4 xx xx     	pea	#^L49+35
  2759 07:05B8: F4 xx xx     	pea	#<L49+35
  2760 07:05BB: F4 xx xx     	pea	#^L49+16
  2761 07:05BE: F4 xx xx     	pea	#<L49+16
  2762 07:05C1: F4 00 00     	pea	#^$0
  2763 07:05C4: F4 00 00     	pea	#<$0
  2764 07:05C7: 22 xx xx xx  	jsl	~~k_user_CreateWindow
  2765                        ;
  2766                        ;	k_user_CreateWindow(0,
  2767                        	.line	336
  2768                        ;						"console
                    WindowClass",
  2769                        ;						"TestWin
                    dow2",
  2770                        ;						250,100,
  2771                        ;						200,200,
  2772                        ;						NULL,
  2773                        ;						NULL,
  2774                        ;						NULL);
  2775 07:05CB: F4 00 00     	pea	#^$0
  2776 07:05CE: F4 00 00     	pea	#<$0
  2777 07:05D1: F4 00 00     	pea	#^$0
  2778 07:05D4: F4 00 00     	pea	#<$0
  2779 07:05D7: F4 00 00     	pea	#^$0
  2780 07:05DA: F4 00 00     	pea	#<$0
  2781 07:05DD: F4 C8 00     	pea	#<$c8
  2782 07:05E0: F4 C8 00     	pea	#<$c8
  2783 07:05E3: F4 64 00     	pea	#<$64
  2784 07:05E6: F4 FA 00     	pea	#<$fa
  2785 07:05E9: F4 xx xx     	pea	#^L49+66
  2786 07:05EC: F4 xx xx     	pea	#<L49+66
  2787 07:05EF: F4 xx xx     	pea	#^L49+47
  2788 07:05F2: F4 xx xx     	pea	#<L49+47
  2789 07:05F5: F4 00 00     	pea	#^$0
  2790 07:05F8: F4 00 00     	pea	#<$0
  2791 07:05FB: 22 xx xx xx  	jsl	~~k_user_CreateWindow
  2792                        ;
  2793                        ;	k_user_CreateWindow(0,
  2794                        	.line	345
  2795                        ;						"console
                    WindowClass",
  2796                        ;						"TestWin
                    dow3",
  2797                        ;						175,200,
  2798                        ;						200,200,
  2799                        ;						NULL,
  2800                        ;						NULL,
  2801                        ;						NULL);
  2802 07:05FF: F4 00 00     	pea	#^$0
  2803 07:0602: F4 00 00     	pea	#<$0
  2804 07:0605: F4 00 00     	pea	#^$0
  2805 07:0608: F4 00 00     	pea	#<$0
  2806 07:060B: F4 00 00     	pea	#^$0
  Thu Dec  3 2020 22:25                                                Page 54


  2807 07:060E: F4 00 00     	pea	#<$0
  2808 07:0611: F4 C8 00     	pea	#<$c8
  2809 07:0614: F4 C8 00     	pea	#<$c8
  2810 07:0617: F4 C8 00     	pea	#<$c8
  2811 07:061A: F4 AF 00     	pea	#<$af
  2812 07:061D: F4 xx xx     	pea	#^L49+97
  2813 07:0620: F4 xx xx     	pea	#<L49+97
  2814 07:0623: F4 xx xx     	pea	#^L49+78
  2815 07:0626: F4 xx xx     	pea	#<L49+78
  2816 07:0629: F4 00 00     	pea	#^$0
  2817 07:062C: F4 00 00     	pea	#<$0
  2818 07:062F: 22 xx xx xx  	jsl	~~k_user_CreateWindow
  2819                        ;
  2820                        ;
  2821                        ;
  2822                        ;	return 0;
  2823                        	.line	356
  2824 07:0633: A9 00 00     	lda	#$0
  2825                        L57:
  2826 07:0636: A8           	tay
  2827 07:0637: A5 06        	lda	<L54+2
  2828 07:0639: 85 0E        	sta	<L54+2+8
  2829 07:063B: A5 05        	lda	<L54+1
  2830 07:063D: 85 0D        	sta	<L54+1+8
  2831 07:063F: 2B           	pld
  2832 07:0640: 3B           	tsc
  2833 07:0641: 18           	clc
  2834 07:0642: 69 0C 00     	adc	#L54+8
  2835 07:0645: 1B           	tcs
  2836 07:0646: 98           	tya
  2837 07:0647: 6B           	rtl
  2838                        ;}
  2839                        	.line	357
  2840                        	.endblock	357
  2841             00000004   L54	equ	4
  2842             00000005   L55	equ	5
  2843 07:0648:              	ends
  2844                        	efunc
  2845                        	.endfunc	357,5,4
  2846                        	.line	357
  2847                        	data
  2848                        L49:
  2849 00:0152: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$57,$4F,$52,$4B,$42,$45,
                    $4E,$43,$48,$0D,$0A
       00:0156: 57 4F 52 4B 
       00:015A: 42 45 4E 43 
       00:015E: 48 0D 0A 
  2850 00:0161: 00 63 6F 6E  	db	$00,$63,$6F,$6E,$73,$6F,$6C,$65,$57,$69,
                    $6E,$64,$6F,$77,$43
       00:0165: 73 6F 6C 65 
       00:0169: 57 69 6E 64 
       00:016D: 6F 77 43 
  2851 00:0170: 6C 61 73 73  	db	$6C,$61,$73,$73,$00,$54,$65,$73,$74,$57,
                    $69,$6E,$64,$6F,$77
       00:0174: 00 54 65 73 
       00:0178: 74 57 69 6E 
       00:017C: 64 6F 77 
  2852 00:017F: 31 00 63 6F  	db	$31,$00,$63,$6F,$6E,$73,$6F,$6C,$65,$57,
  Thu Dec  3 2020 22:25                                                Page 55


                    $69,$6E,$64,$6F,$77
       00:0183: 6E 73 6F 6C 
       00:0187: 65 57 69 6E 
       00:018B: 64 6F 77 
  2853 00:018E: 43 6C 61 73  	db	$43,$6C,$61,$73,$73,$00,$54,$65,$73,$74,
                    $57,$69,$6E,$64,$6F
       00:0192: 73 00 54 65 
       00:0196: 73 74 57 69 
       00:019A: 6E 64 6F 
  2854 00:019D: 77 32 00 63  	db	$77,$32,$00,$63,$6F,$6E,$73,$6F,$6C,$65,
                    $57,$69,$6E,$64,$6F
       00:01A1: 6F 6E 73 6F 
       00:01A5: 6C 65 57 69 
       00:01A9: 6E 64 6F 
  2855 00:01AC: 77 43 6C 61  	db	$77,$43,$6C,$61,$73,$73,$00,$54,$65,$73,
                    $74,$57,$69,$6E,$64
       00:01B0: 73 73 00 54 
       00:01B4: 65 73 74 57 
       00:01B8: 69 6E 64 
  2856 00:01BB: 6F 77 33 00  	db	$6F,$77,$33,$00
  2857 00:01BF:              	ends
  2858                        ;
  2859                        ;UINT cmd_CLEAR(PFXPROCESS process,PFXNODE tokens)
  2860                        ;{
  2861                        	.line	359
  2862                        	.line	360
  2863                        	CONCMD
  2864                        	xdef	~~cmd_CLEAR
  2865                        	func
  2866                        	.function	360
  2867                        ~~cmd_CLEAR:
  2868                        	longa	on
  2869                        	longi	on
  2870 07:0648: 3B           	tsc
  2871 07:0649: 38           	sec
  2872 07:064A: E9 04 00     	sbc	#L59
  2873 07:064D: 1B           	tcs
  2874 07:064E: 0B           	phd
  2875 07:064F: 5B           	tcd
  2876             00000004   process_0	set	4
  2877             00000008   tokens_0	set	8
  2878                        	.block	360
  2879                        ;	k_debug_string("cmd_CLEAR\r\n");
  2880                        	.sym	process,4,138,6,32,20
  2881                        	.sym	tokens,8,138,6,32,5
  2882                        	.line	361
  2883 07:0650: F4 xx xx     	pea	#^L58
  2884 07:0653: F4 xx xx     	pea	#<L58
  2885 07:0656: 22 xx xx xx  	jsl	~~k_debug_string
  2886                        ;	k_clear_screen(0);
  2887                        	.line	362
  2888 07:065A: F4 00 00     	pea	#<$0
  2889 07:065D: 22 xx xx xx  	jsl	~~k_clear_screen
  2890                        ;
  2891                        ;	process->consoleCtl->curX = 0;
  2892                        	.line	364
  2893 07:0661: A0 54 00     	ldy	#$54
  2894 07:0664: B7 08        	lda	[<L59+process_0],Y
  Thu Dec  3 2020 22:25                                                Page 56


  2895 07:0666: 85 01        	sta	<R0
  2896 07:0668: A0 56 00     	ldy	#$56
  2897 07:066B: B7 08        	lda	[<L59+process_0],Y
  2898 07:066D: 85 03        	sta	<R0+2
  2899 07:066F: A9 00 00     	lda	#$0
  2900 07:0672: A0 04 00     	ldy	#$4
  2901 07:0675: 97 01        	sta	[<R0],Y
  2902                        ;	process->consoleCtl->curY = 0;
  2903                        	.line	365
  2904 07:0677: A0 54 00     	ldy	#$54
  2905 07:067A: B7 08        	lda	[<L59+process_0],Y
  2906 07:067C: 85 01        	sta	<R0
  2907 07:067E: A0 56 00     	ldy	#$56
  2908 07:0681: B7 08        	lda	[<L59+process_0],Y
  2909 07:0683: 85 03        	sta	<R0+2
  2910 07:0685: A9 00 00     	lda	#$0
  2911 07:0688: A0 06 00     	ldy	#$6
  2912 07:068B: 97 01        	sta	[<R0],Y
  2913                        ;
  2914                        ;	return 0;
  2915                        	.line	367
  2916 07:068D: A9 00 00     	lda	#$0
  2917                        L62:
  2918 07:0690: A8           	tay
  2919 07:0691: A5 06        	lda	<L59+2
  2920 07:0693: 85 0E        	sta	<L59+2+8
  2921 07:0695: A5 05        	lda	<L59+1
  2922 07:0697: 85 0D        	sta	<L59+1+8
  2923 07:0699: 2B           	pld
  2924 07:069A: 3B           	tsc
  2925 07:069B: 18           	clc
  2926 07:069C: 69 0C 00     	adc	#L59+8
  2927 07:069F: 1B           	tcs
  2928 07:06A0: 98           	tya
  2929 07:06A1: 6B           	rtl
  2930                        ;}
  2931                        	.line	368
  2932                        	.endblock	368
  2933             00000004   L59	equ	4
  2934             00000005   L60	equ	5
  2935 07:06A2:              	ends
  2936                        	efunc
  2937                        	.endfunc	368,5,4
  2938                        	.line	368
  2939                        	data
  2940                        L58:
  2941 00:01BF: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$43,$4C,$45,$41,$52,$0D,
                    $0A,$00
       00:01C3: 43 4C 45 41 
       00:01C7: 52 0D 0A 00 
  2942 00:01CB:              	ends
  2943                        ;
  2944                        ;
  2945                        ;UINT cmd_FCOLOR(PFXPROCESS process,PFXNODE tokens
                    )
  2946                        ;{
  2947                        	.line	371
  2948                        	.line	372
  Thu Dec  3 2020 22:25                                                Page 57


  2949                        	CONCMD
  2950                        	xdef	~~cmd_FCOLOR
  2951                        	func
  2952                        	.function	372
  2953                        ~~cmd_FCOLOR:
  2954                        	longa	on
  2955                        	longi	on
  2956 07:06A2: 3B           	tsc
  2957 07:06A3: 38           	sec
  2958 07:06A4: E9 00 00     	sbc	#L64
  2959 07:06A7: 1B           	tcs
  2960 07:06A8: 0B           	phd
  2961 07:06A9: 5B           	tcd
  2962             00000004   process_0	set	4
  2963             00000008   tokens_0	set	8
  2964                        	.block	372
  2965                        ;	k_debug_string("cmd_FCOLOR\r\n");
  2966                        	.sym	process,4,138,6,32,20
  2967                        	.sym	tokens,8,138,6,32,5
  2968                        	.line	373
  2969 07:06AA: F4 xx xx     	pea	#^L63
  2970 07:06AD: F4 xx xx     	pea	#<L63
  2971 07:06B0: 22 xx xx xx  	jsl	~~k_debug_string
  2972                        ;	return 0;
  2973                        	.line	374
  2974 07:06B4: A9 00 00     	lda	#$0
  2975                        L67:
  2976 07:06B7: A8           	tay
  2977 07:06B8: A5 02        	lda	<L64+2
  2978 07:06BA: 85 0A        	sta	<L64+2+8
  2979 07:06BC: A5 01        	lda	<L64+1
  2980 07:06BE: 85 09        	sta	<L64+1+8
  2981 07:06C0: 2B           	pld
  2982 07:06C1: 3B           	tsc
  2983 07:06C2: 18           	clc
  2984 07:06C3: 69 08 00     	adc	#L64+8
  2985 07:06C6: 1B           	tcs
  2986 07:06C7: 98           	tya
  2987 07:06C8: 6B           	rtl
  2988                        ;}
  2989                        	.line	375
  2990                        	.endblock	375
  2991             00000000   L64	equ	0
  2992             00000001   L65	equ	1
  2993 07:06C9:              	ends
  2994                        	efunc
  2995                        	.endfunc	375,1,0
  2996                        	.line	375
  2997                        	data
  2998                        L63:
  2999 00:01CB: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$46,$43,$4F,$4C,$4F,$52,
                    $0D,$0A,$00
       00:01CF: 46 43 4F 4C 
       00:01D3: 4F 52 0D 0A 
       00:01D7: 00 
  3000 00:01D8:              	ends
  3001                        ;
  3002                        ;UINT cmd_BCOLOR(PFXPROCESS process,PFXNODE tokens
  Thu Dec  3 2020 22:25                                                Page 58


                    )
  3003                        ;{
  3004                        	.line	377
  3005                        	.line	378
  3006                        	CONCMD
  3007                        	xdef	~~cmd_BCOLOR
  3008                        	func
  3009                        	.function	378
  3010                        ~~cmd_BCOLOR:
  3011                        	longa	on
  3012                        	longi	on
  3013 07:06C9: 3B           	tsc
  3014 07:06CA: 38           	sec
  3015 07:06CB: E9 00 00     	sbc	#L69
  3016 07:06CE: 1B           	tcs
  3017 07:06CF: 0B           	phd
  3018 07:06D0: 5B           	tcd
  3019             00000004   process_0	set	4
  3020             00000008   tokens_0	set	8
  3021                        	.block	378
  3022                        ;	k_debug_string("cmd_BCOLOR\r\n");
  3023                        	.sym	process,4,138,6,32,20
  3024                        	.sym	tokens,8,138,6,32,5
  3025                        	.line	379
  3026 07:06D1: F4 xx xx     	pea	#^L68
  3027 07:06D4: F4 xx xx     	pea	#<L68
  3028 07:06D7: 22 xx xx xx  	jsl	~~k_debug_string
  3029                        ;	return 0;
  3030                        	.line	380
  3031 07:06DB: A9 00 00     	lda	#$0
  3032                        L72:
  3033 07:06DE: A8           	tay
  3034 07:06DF: A5 02        	lda	<L69+2
  3035 07:06E1: 85 0A        	sta	<L69+2+8
  3036 07:06E3: A5 01        	lda	<L69+1
  3037 07:06E5: 85 09        	sta	<L69+1+8
  3038 07:06E7: 2B           	pld
  3039 07:06E8: 3B           	tsc
  3040 07:06E9: 18           	clc
  3041 07:06EA: 69 08 00     	adc	#L69+8
  3042 07:06ED: 1B           	tcs
  3043 07:06EE: 98           	tya
  3044 07:06EF: 6B           	rtl
  3045                        ;}
  3046                        	.line	381
  3047                        	.endblock	381
  3048             00000000   L69	equ	0
  3049             00000001   L70	equ	1
  3050 07:06F0:              	ends
  3051                        	efunc
  3052                        	.endfunc	381,1,0
  3053                        	.line	381
  3054                        	data
  3055                        L68:
  3056 00:01D8: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$42,$43,$4F,$4C,$4F,$52,
                    $0D,$0A,$00
       00:01DC: 42 43 4F 4C 
       00:01E0: 4F 52 0D 0A 
  Thu Dec  3 2020 22:25                                                Page 59


       00:01E4: 00 
  3057 00:01E5:              	ends
  3058                        ;
  3059                        ;UINT cmd_INIT(PFXPROCESS process,PFXNODE tokens)
  3060                        ;{
  3061                        	.line	383
  3062                        	.line	384
  3063                        	CONCMD
  3064                        	xdef	~~cmd_INIT
  3065                        	func
  3066                        	.function	384
  3067                        ~~cmd_INIT:
  3068                        	longa	on
  3069                        	longi	on
  3070 07:06F0: 3B           	tsc
  3071 07:06F1: 38           	sec
  3072 07:06F2: E9 48 00     	sbc	#L74
  3073 07:06F5: 1B           	tcs
  3074 07:06F6: 0B           	phd
  3075 07:06F7: 5B           	tcd
  3076             00000004   process_0	set	4
  3077             00000008   tokens_0	set	8
  3078                        	.block	384
  3079                        ;	BYTE 	signature[8];
  3080                        ;	LPCHAR	diskName = NULL;
  3081                        ;	DISKINFO diskInfo;
  3082                        ;
  3083                        ;	k_debug_string("cmd_INIT\r\n");
  3084             00000000   signature_1	set	0
  3085             00000008   diskName_1	set	8
  3086             0000000C   diskInfo_1	set	12
  3087                        	.sym	signature,0,110,1,0,8
  3088                        	.sym	diskName,8,142,1,32
  3089                        	.sym	diskInfo,12,10,1,416,65
  3090                        	.sym	process,4,138,6,32,20
  3091                        	.sym	tokens,8,138,6,32,5
  3092 07:06F8: 64 11        	stz	<L75+diskName_1
  3093 07:06FA: 64 13        	stz	<L75+diskName_1+2
  3094                        	.line	389
  3095 07:06FC: F4 xx xx     	pea	#^L73
  3096 07:06FF: F4 xx xx     	pea	#<L73
  3097 07:0702: 22 xx xx xx  	jsl	~~k_debug_string
  3098                        ;
  3099                        ;	getTokenSig(tokens,signature);
  3100                        	.line	391
  3101 07:0706: F4 00 00     	pea	#0
  3102 07:0709: 18           	clc
  3103 07:070A: 7B           	tdc
  3104 07:070B: 69 09 00     	adc	#<L75+signature_1
  3105 07:070E: 48           	pha
  3106 07:070F: D4 52        	pei	<L74+tokens_0+2
  3107 07:0711: D4 50        	pei	<L74+tokens_0
  3108 07:0713: 22 xx xx xx  	jsl	~~getTokenSig
  3109                        ;
  3110                        ;	if(strcmp(signature,"#AC") == 0)
  3111                        	.line	393
  3112                        ;	{
  3113 07:0717: F4 xx xx     	pea	#^L73+11
  Thu Dec  3 2020 22:25                                                Page 60


  3114 07:071A: F4 xx xx     	pea	#<L73+11
  3115 07:071D: F4 00 00     	pea	#0
  3116 07:0720: 18           	clc
  3117 07:0721: 7B           	tdc
  3118 07:0722: 69 09 00     	adc	#<L75+signature_1
  3119 07:0725: 48           	pha
  3120 07:0726: 22 xx xx xx  	jsl	~~strcmp
  3121 07:072A: AA           	tax
  3122 07:072B: F0 03        	beq	L77
  3123 07:072D: 82 60 00     	brl	L10010
  3124                        L77:
  3125                        	.line	394
  3126                        ;		diskName = ((PTOKEN)k_nodelist_get(token
                    s,3)->data)->text;
  3127                        	.line	395
  3128 07:0730: F4 03 00     	pea	#<$3
  3129 07:0733: D4 52        	pei	<L74+tokens_0+2
  3130 07:0735: D4 50        	pei	<L74+tokens_0
  3131 07:0737: 22 xx xx xx  	jsl	~~k_nodelist_get
  3132 07:073B: 85 01        	sta	<R0
  3133 07:073D: 86 03        	stx	<R0+2
  3134 07:073F: A0 02 00     	ldy	#$2
  3135 07:0742: B7 01        	lda	[<R0],Y
  3136 07:0744: 85 05        	sta	<R1
  3137 07:0746: A0 04 00     	ldy	#$4
  3138 07:0749: B7 01        	lda	[<R0],Y
  3139 07:074B: 85 07        	sta	<R1+2
  3140 07:074D: A0 04 00     	ldy	#$4
  3141 07:0750: B7 05        	lda	[<R1],Y
  3142 07:0752: 85 11        	sta	<L75+diskName_1
  3143 07:0754: A0 06 00     	ldy	#$6
  3144 07:0757: B7 05        	lda	[<R1],Y
  3145 07:0759: 85 13        	sta	<L75+diskName_1+2
  3146                        ;
  3147                        ;		memset(&diskInfo,0,sizeof(DISKINFO));
  3148                        	.line	397
  3149 07:075B: F4 34 00     	pea	#<$34
  3150 07:075E: F4 00 00     	pea	#<$0
  3151 07:0761: F4 00 00     	pea	#0
  3152 07:0764: 18           	clc
  3153 07:0765: 7B           	tdc
  3154 07:0766: 69 15 00     	adc	#<L75+diskInfo_1
  3155 07:0769: 48           	pha
  3156 07:076A: 22 xx xx xx  	jsl	~~memset
  3157                        ;		strcpy(diskInfo.stgName,diskName);
  3158                        	.line	398
  3159 07:076E: D4 13        	pei	<L75+diskName_1+2
  3160 07:0770: D4 11        	pei	<L75+diskName_1
  3161 07:0772: F4 00 00     	pea	#0
  3162 07:0775: 18           	clc
  3163 07:0776: 7B           	tdc
  3164 07:0777: 69 15 00     	adc	#<L75+diskInfo_1
  3165 07:077A: 48           	pha
  3166 07:077B: 22 xx xx xx  	jsl	~~strcpy
  3167                        ;
  3168                        ;		k_debug_message("INIT DISK NAME:",diskNa
                    me);
  3169                        	.line	400
  Thu Dec  3 2020 22:25                                                Page 61


  3170 07:077F: D4 13        	pei	<L75+diskName_1+2
  3171 07:0781: D4 11        	pei	<L75+diskName_1
  3172 07:0783: F4 xx xx     	pea	#^L73+15
  3173 07:0786: F4 xx xx     	pea	#<L73+15
  3174 07:0789: 22 xx xx xx  	jsl	~~k_debug_message
  3175                        ;		//k_sd_write_file(CONST_FXINFO_FILE,&dis
                    kInfo,sizeof(DISKINFO));
  3176                        ;
  3177                        ;	}
  3178                        	.line	403
  3179                        ;	else
  3180 07:078D: 82 0A 00     	brl	L10011
  3181                        L10010:
  3182                        ;	{
  3183                        	.line	405
  3184                        ;		k_debug_string("INIT Syntax Error\r\n");
  3185                        	.line	406
  3186 07:0790: F4 xx xx     	pea	#^L73+31
  3187 07:0793: F4 xx xx     	pea	#<L73+31
  3188 07:0796: 22 xx xx xx  	jsl	~~k_debug_string
  3189                        ;	}
  3190                        	.line	407
  3191                        L10011:
  3192                        ;
  3193                        ;
  3194                        ;	return 0;
  3195                        	.line	410
  3196 07:079A: A9 00 00     	lda	#$0
  3197                        L78:
  3198 07:079D: A8           	tay
  3199 07:079E: A5 4A        	lda	<L74+2
  3200 07:07A0: 85 52        	sta	<L74+2+8
  3201 07:07A2: A5 49        	lda	<L74+1
  3202 07:07A4: 85 51        	sta	<L74+1+8
  3203 07:07A6: 2B           	pld
  3204 07:07A7: 3B           	tsc
  3205 07:07A8: 18           	clc
  3206 07:07A9: 69 50 00     	adc	#L74+8
  3207 07:07AC: 1B           	tcs
  3208 07:07AD: 98           	tya
  3209 07:07AE: 6B           	rtl
  3210                        ;}
  3211                        	.line	411
  3212                        	.endblock	411
  3213             00000048   L74	equ	72
  3214             00000009   L75	equ	9
  3215 07:07AF:              	ends
  3216                        	efunc
  3217                        	.endfunc	411,9,72
  3218                        	.line	411
  3219                        	data
  3220                        L73:
  3221 00:01E5: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$49,$4E,$49,$54,$0D,$0A,
                    $00,$23,$41,$43,$00
       00:01E9: 49 4E 49 54 
       00:01ED: 0D 0A 00 23 
       00:01F1: 41 43 00 
  3222 00:01F4: 49 4E 49 54  	db	$49,$4E,$49,$54,$20,$44,$49,$53,$4B,$20,
  Thu Dec  3 2020 22:25                                                Page 62


                    $4E,$41,$4D,$45,$3A
       00:01F8: 20 44 49 53 
       00:01FC: 4B 20 4E 41 
       00:0200: 4D 45 3A 
  3223 00:0203: 00 49 4E 49  	db	$00,$49,$4E,$49,$54,$20,$53,$79,$6E,$74,
                    $61,$78,$20,$45,$72
       00:0207: 54 20 53 79 
       00:020B: 6E 74 61 78 
       00:020F: 20 45 72 
  3224 00:0212: 72 6F 72 0D  	db	$72,$6F,$72,$0D,$0A,$00
       00:0216: 0A 00 
  3225 00:0218:              	ends
  3226                        ;
  3227                        ;UINT cmd_TASKS(PFXPROCESS process,PFXNODE tokens)
  3228                        ;{
  3229                        	.line	413
  3230                        	.line	414
  3231                        	CONCMD
  3232                        	xdef	~~cmd_TASKS
  3233                        	func
  3234                        	.function	414
  3235                        ~~cmd_TASKS:
  3236                        	longa	on
  3237                        	longi	on
  3238 07:07AF: 3B           	tsc
  3239 07:07B0: 38           	sec
  3240 07:07B1: E9 76 00     	sbc	#L80
  3241 07:07B4: 1B           	tcs
  3242 07:07B5: 0B           	phd
  3243 07:07B6: 5B           	tcd
  3244             00000004   process_0	set	4
  3245             00000008   tokens_0	set	8
  3246                        	.block	414
  3247                        ;	int index = 0;
  3248                        ;	PFXPROCESS FAR *processes = NULL;
  3249                        ;
  3250                        ;	CHAR signature[16];
  3251                        ;	CHAR message[80];
  3252                        ;
  3253                        ;	k_debug_string("cmd_TASKS\r\n");
  3254             00000000   index_1	set	0
  3255             00000002   processes_1	set	2
  3256             00000006   signature_1	set	6
  3257             00000016   message_1	set	22
  3258                        	.sym	index,0,5,1,16
  3259                        	.sym	processes,2,1162,1,32,20
  3260                        	.sym	signature,6,110,1,0,16
  3261                        	.sym	message,22,110,1,0,80
  3262                        	.sym	process,4,138,6,32,20
  3263                        	.sym	tokens,8,138,6,32,5
  3264 07:07B7: 64 11        	stz	<L81+index_1
  3265 07:07B9: 64 13        	stz	<L81+processes_1
  3266 07:07BB: 64 15        	stz	<L81+processes_1+2
  3267                        	.line	421
  3268 07:07BD: F4 xx xx     	pea	#^L79
  3269 07:07C0: F4 xx xx     	pea	#<L79
  3270 07:07C3: 22 xx xx xx  	jsl	~~k_debug_string
  3271                        ;
  Thu Dec  3 2020 22:25                                                Page 63


  3272                        ;	processes = k_exec_process_list();
  3273                        	.line	423
  3274 07:07C7: 22 xx xx xx  	jsl	~~k_exec_process_list
  3275 07:07CB: 85 13        	sta	<L81+processes_1
  3276 07:07CD: 86 15        	stx	<L81+processes_1+2
  3277                        ;
  3278                        ;	for(index=0;index < MAX_PROCESS;index++)
  3279                        	.line	425
  3280 07:07CF: 64 11        	stz	<L81+index_1
  3281                        L10014:
  3282                        ;	{
  3283                        	.line	426
  3284                        ;		if(processes[index]!=NULL && processes[i
                    ndex]->status!=PROCESS_STATUS_TERMINATED)
  3285                        	.line	427
  3286                        ;		{
  3287 07:07D1: A0 00 00     	ldy	#$0
  3288 07:07D4: A5 11        	lda	<L81+index_1
  3289 07:07D6: 10 01        	bpl	L83
  3290 07:07D8: 88           	dey
  3291                        L83:
  3292 07:07D9: 85 05        	sta	<R1
  3293 07:07DB: 84 07        	sty	<R1+2
  3294 07:07DD: D4 07        	pei	<R1+2
  3295 07:07DF: D4 05        	pei	<R1
  3296 07:07E1: A9 02 00     	lda	#$2
  3297                        	xref	~~~lasl
  3298 07:07E4: 22 xx xx xx  	jsl	~~~lasl
  3299 07:07E8: 85 01        	sta	<R0
  3300 07:07EA: 86 03        	stx	<R0+2
  3301 07:07EC: 18           	clc
  3302 07:07ED: A5 13        	lda	<L81+processes_1
  3303 07:07EF: 65 01        	adc	<R0
  3304 07:07F1: 85 09        	sta	<R2
  3305 07:07F3: A5 15        	lda	<L81+processes_1+2
  3306 07:07F5: 65 03        	adc	<R0+2
  3307 07:07F7: 85 0B        	sta	<R2+2
  3308 07:07F9: A7 09        	lda	[<R2]
  3309 07:07FB: A0 02 00     	ldy	#$2
  3310 07:07FE: 17 09        	ora	[<R2],Y
  3311 07:0800: D0 03        	bne	L84
  3312 07:0802: 82 3B 02     	brl	L10015
  3313                        L84:
  3314 07:0805: A0 00 00     	ldy	#$0
  3315 07:0808: A5 11        	lda	<L81+index_1
  3316 07:080A: 10 01        	bpl	L85
  3317 07:080C: 88           	dey
  3318                        L85:
  3319 07:080D: 85 09        	sta	<R2
  3320 07:080F: 84 0B        	sty	<R2+2
  3321 07:0811: D4 0B        	pei	<R2+2
  3322 07:0813: D4 09        	pei	<R2
  3323 07:0815: A9 02 00     	lda	#$2
  3324                        	xref	~~~lasl
  3325 07:0818: 22 xx xx xx  	jsl	~~~lasl
  3326 07:081C: 85 01        	sta	<R0
  3327 07:081E: 86 03        	stx	<R0+2
  3328 07:0820: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 64


  3329 07:0821: A5 13        	lda	<L81+processes_1
  3330 07:0823: 65 01        	adc	<R0
  3331 07:0825: 85 0D        	sta	<R3
  3332 07:0827: A5 15        	lda	<L81+processes_1+2
  3333 07:0829: 65 03        	adc	<R0+2
  3334 07:082B: 85 0F        	sta	<R3+2
  3335 07:082D: A7 0D        	lda	[<R3]
  3336 07:082F: 85 01        	sta	<R0
  3337 07:0831: A0 02 00     	ldy	#$2
  3338 07:0834: B7 0D        	lda	[<R3],Y
  3339 07:0836: 85 03        	sta	<R0+2
  3340 07:0838: A0 10 00     	ldy	#$10
  3341 07:083B: B7 01        	lda	[<R0],Y
  3342 07:083D: C9 03 00     	cmp	#<$3
  3343 07:0840: D0 03        	bne	L86
  3344 07:0842: 82 FB 01     	brl	L10015
  3345                        L86:
  3346                        	.line	428
  3347                        ;			k_debug_long   ("Process:",proce
                    sses[index]->procId);
  3348                        	.line	429
  3349 07:0845: A0 00 00     	ldy	#$0
  3350 07:0848: A5 11        	lda	<L81+index_1
  3351 07:084A: 10 01        	bpl	L87
  3352 07:084C: 88           	dey
  3353                        L87:
  3354 07:084D: 85 05        	sta	<R1
  3355 07:084F: 84 07        	sty	<R1+2
  3356 07:0851: D4 07        	pei	<R1+2
  3357 07:0853: D4 05        	pei	<R1
  3358 07:0855: A9 02 00     	lda	#$2
  3359                        	xref	~~~lasl
  3360 07:0858: 22 xx xx xx  	jsl	~~~lasl
  3361 07:085C: 85 01        	sta	<R0
  3362 07:085E: 86 03        	stx	<R0+2
  3363 07:0860: 18           	clc
  3364 07:0861: A5 13        	lda	<L81+processes_1
  3365 07:0863: 65 01        	adc	<R0
  3366 07:0865: 85 09        	sta	<R2
  3367 07:0867: A5 15        	lda	<L81+processes_1+2
  3368 07:0869: 65 03        	adc	<R0+2
  3369 07:086B: 85 0B        	sta	<R2+2
  3370 07:086D: A7 09        	lda	[<R2]
  3371 07:086F: 85 01        	sta	<R0
  3372 07:0871: A0 02 00     	ldy	#$2
  3373 07:0874: B7 09        	lda	[<R2],Y
  3374 07:0876: 85 03        	sta	<R0+2
  3375 07:0878: A0 04 00     	ldy	#$4
  3376 07:087B: B7 01        	lda	[<R0],Y
  3377 07:087D: 48           	pha
  3378 07:087E: A0 02 00     	ldy	#$2
  3379 07:0881: B7 01        	lda	[<R0],Y
  3380 07:0883: 48           	pha
  3381 07:0884: F4 xx xx     	pea	#^L79+12
  3382 07:0887: F4 xx xx     	pea	#<L79+12
  3383 07:088A: 22 xx xx xx  	jsl	~~k_debug_long
  3384                        ;			k_debug_strings("   Name:",(LPST
                    R)processes[index]->commandLine);
  Thu Dec  3 2020 22:25                                                Page 65


  3385                        	.line	430
  3386 07:088E: A0 00 00     	ldy	#$0
  3387 07:0891: A5 11        	lda	<L81+index_1
  3388 07:0893: 10 01        	bpl	L88
  3389 07:0895: 88           	dey
  3390                        L88:
  3391 07:0896: 85 05        	sta	<R1
  3392 07:0898: 84 07        	sty	<R1+2
  3393 07:089A: D4 07        	pei	<R1+2
  3394 07:089C: D4 05        	pei	<R1
  3395 07:089E: A9 02 00     	lda	#$2
  3396                        	xref	~~~lasl
  3397 07:08A1: 22 xx xx xx  	jsl	~~~lasl
  3398 07:08A5: 85 01        	sta	<R0
  3399 07:08A7: 86 03        	stx	<R0+2
  3400 07:08A9: 18           	clc
  3401 07:08AA: A5 13        	lda	<L81+processes_1
  3402 07:08AC: 65 01        	adc	<R0
  3403 07:08AE: 85 09        	sta	<R2
  3404 07:08B0: A5 15        	lda	<L81+processes_1+2
  3405 07:08B2: 65 03        	adc	<R0+2
  3406 07:08B4: 85 0B        	sta	<R2+2
  3407 07:08B6: A7 09        	lda	[<R2]
  3408 07:08B8: 85 01        	sta	<R0
  3409 07:08BA: A0 02 00     	ldy	#$2
  3410 07:08BD: B7 09        	lda	[<R2],Y
  3411 07:08BF: 85 03        	sta	<R0+2
  3412 07:08C1: A0 35 00     	ldy	#$35
  3413 07:08C4: B7 01        	lda	[<R0],Y
  3414 07:08C6: 48           	pha
  3415 07:08C7: A0 33 00     	ldy	#$33
  3416 07:08CA: B7 01        	lda	[<R0],Y
  3417 07:08CC: 48           	pha
  3418 07:08CD: F4 xx xx     	pea	#^L79+21
  3419 07:08D0: F4 xx xx     	pea	#<L79+21
  3420 07:08D3: 22 xx xx xx  	jsl	~~k_debug_strings
  3421                        ;
  3422                        ;
  3423                        ;			k_inttodec(processes[index]->pro
                    cId,signature);
  3424                        	.line	433
  3425 07:08D7: F4 00 00     	pea	#0
  3426 07:08DA: 18           	clc
  3427 07:08DB: 7B           	tdc
  3428 07:08DC: 69 17 00     	adc	#<L81+signature_1
  3429 07:08DF: 48           	pha
  3430 07:08E0: A0 00 00     	ldy	#$0
  3431 07:08E3: A5 11        	lda	<L81+index_1
  3432 07:08E5: 10 01        	bpl	L89
  3433 07:08E7: 88           	dey
  3434                        L89:
  3435 07:08E8: 85 05        	sta	<R1
  3436 07:08EA: 84 07        	sty	<R1+2
  3437 07:08EC: D4 07        	pei	<R1+2
  3438 07:08EE: D4 05        	pei	<R1
  3439 07:08F0: A9 02 00     	lda	#$2
  3440                        	xref	~~~lasl
  3441 07:08F3: 22 xx xx xx  	jsl	~~~lasl
  Thu Dec  3 2020 22:25                                                Page 66


  3442 07:08F7: 85 01        	sta	<R0
  3443 07:08F9: 86 03        	stx	<R0+2
  3444 07:08FB: 18           	clc
  3445 07:08FC: A5 13        	lda	<L81+processes_1
  3446 07:08FE: 65 01        	adc	<R0
  3447 07:0900: 85 09        	sta	<R2
  3448 07:0902: A5 15        	lda	<L81+processes_1+2
  3449 07:0904: 65 03        	adc	<R0+2
  3450 07:0906: 85 0B        	sta	<R2+2
  3451 07:0908: A7 09        	lda	[<R2]
  3452 07:090A: 85 01        	sta	<R0
  3453 07:090C: A0 02 00     	ldy	#$2
  3454 07:090F: B7 09        	lda	[<R2],Y
  3455 07:0911: 85 03        	sta	<R0+2
  3456 07:0913: A0 02 00     	ldy	#$2
  3457 07:0916: B7 01        	lda	[<R0],Y
  3458 07:0918: 48           	pha
  3459 07:0919: 22 xx xx xx  	jsl	~~k_inttodec
  3460                        ;
  3461                        ;			strcpy(message,"PID:");
  3462                        	.line	435
  3463 07:091D: F4 xx xx     	pea	#^L79+30
  3464 07:0920: F4 xx xx     	pea	#<L79+30
  3465 07:0923: F4 00 00     	pea	#0
  3466 07:0926: 18           	clc
  3467 07:0927: 7B           	tdc
  3468 07:0928: 69 27 00     	adc	#<L81+message_1
  3469 07:092B: 48           	pha
  3470 07:092C: 22 xx xx xx  	jsl	~~strcpy
  3471                        ;			strcat(message,signature);
  3472                        	.line	436
  3473 07:0930: F4 00 00     	pea	#0
  3474 07:0933: 18           	clc
  3475 07:0934: 7B           	tdc
  3476 07:0935: 69 17 00     	adc	#<L81+signature_1
  3477 07:0938: 48           	pha
  3478 07:0939: F4 00 00     	pea	#0
  3479 07:093C: 18           	clc
  3480 07:093D: 7B           	tdc
  3481 07:093E: 69 27 00     	adc	#<L81+message_1
  3482 07:0941: 48           	pha
  3483 07:0942: 22 xx xx xx  	jsl	~~strcat
  3484                        ;			strcat(message,"[");
  3485                        	.line	437
  3486 07:0946: F4 xx xx     	pea	#^L79+35
  3487 07:0949: F4 xx xx     	pea	#<L79+35
  3488 07:094C: F4 00 00     	pea	#0
  3489 07:094F: 18           	clc
  3490 07:0950: 7B           	tdc
  3491 07:0951: 69 27 00     	adc	#<L81+message_1
  3492 07:0954: 48           	pha
  3493 07:0955: 22 xx xx xx  	jsl	~~strcat
  3494                        ;
  3495                        ;			k_inttodec(processes[index]->sta
                    tus,signature);
  3496                        	.line	439
  3497 07:0959: F4 00 00     	pea	#0
  3498 07:095C: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 67


  3499 07:095D: 7B           	tdc
  3500 07:095E: 69 17 00     	adc	#<L81+signature_1
  3501 07:0961: 48           	pha
  3502 07:0962: A0 00 00     	ldy	#$0
  3503 07:0965: A5 11        	lda	<L81+index_1
  3504 07:0967: 10 01        	bpl	L90
  3505 07:0969: 88           	dey
  3506                        L90:
  3507 07:096A: 85 05        	sta	<R1
  3508 07:096C: 84 07        	sty	<R1+2
  3509 07:096E: D4 07        	pei	<R1+2
  3510 07:0970: D4 05        	pei	<R1
  3511 07:0972: A9 02 00     	lda	#$2
  3512                        	xref	~~~lasl
  3513 07:0975: 22 xx xx xx  	jsl	~~~lasl
  3514 07:0979: 85 01        	sta	<R0
  3515 07:097B: 86 03        	stx	<R0+2
  3516 07:097D: 18           	clc
  3517 07:097E: A5 13        	lda	<L81+processes_1
  3518 07:0980: 65 01        	adc	<R0
  3519 07:0982: 85 09        	sta	<R2
  3520 07:0984: A5 15        	lda	<L81+processes_1+2
  3521 07:0986: 65 03        	adc	<R0+2
  3522 07:0988: 85 0B        	sta	<R2+2
  3523 07:098A: A7 09        	lda	[<R2]
  3524 07:098C: 85 01        	sta	<R0
  3525 07:098E: A0 02 00     	ldy	#$2
  3526 07:0991: B7 09        	lda	[<R2],Y
  3527 07:0993: 85 03        	sta	<R0+2
  3528 07:0995: A0 10 00     	ldy	#$10
  3529 07:0998: B7 01        	lda	[<R0],Y
  3530 07:099A: 48           	pha
  3531 07:099B: 22 xx xx xx  	jsl	~~k_inttodec
  3532                        ;			strcat(message,signature);
  3533                        	.line	440
  3534 07:099F: F4 00 00     	pea	#0
  3535 07:09A2: 18           	clc
  3536 07:09A3: 7B           	tdc
  3537 07:09A4: 69 17 00     	adc	#<L81+signature_1
  3538 07:09A7: 48           	pha
  3539 07:09A8: F4 00 00     	pea	#0
  3540 07:09AB: 18           	clc
  3541 07:09AC: 7B           	tdc
  3542 07:09AD: 69 27 00     	adc	#<L81+message_1
  3543 07:09B0: 48           	pha
  3544 07:09B1: 22 xx xx xx  	jsl	~~strcat
  3545                        ;
  3546                        ;			strcat(message,"] ");
  3547                        	.line	442
  3548 07:09B5: F4 xx xx     	pea	#^L79+37
  3549 07:09B8: F4 xx xx     	pea	#<L79+37
  3550 07:09BB: F4 00 00     	pea	#0
  3551 07:09BE: 18           	clc
  3552 07:09BF: 7B           	tdc
  3553 07:09C0: 69 27 00     	adc	#<L81+message_1
  3554 07:09C3: 48           	pha
  3555 07:09C4: 22 xx xx xx  	jsl	~~strcat
  3556                        ;			strcat(message,processes[index]-
  Thu Dec  3 2020 22:25                                                Page 68


                    >commandLine);
  3557                        	.line	443
  3558 07:09C8: A0 00 00     	ldy	#$0
  3559 07:09CB: A5 11        	lda	<L81+index_1
  3560 07:09CD: 10 01        	bpl	L91
  3561 07:09CF: 88           	dey
  3562                        L91:
  3563 07:09D0: 85 05        	sta	<R1
  3564 07:09D2: 84 07        	sty	<R1+2
  3565 07:09D4: D4 07        	pei	<R1+2
  3566 07:09D6: D4 05        	pei	<R1
  3567 07:09D8: A9 02 00     	lda	#$2
  3568                        	xref	~~~lasl
  3569 07:09DB: 22 xx xx xx  	jsl	~~~lasl
  3570 07:09DF: 85 01        	sta	<R0
  3571 07:09E1: 86 03        	stx	<R0+2
  3572 07:09E3: 18           	clc
  3573 07:09E4: A5 13        	lda	<L81+processes_1
  3574 07:09E6: 65 01        	adc	<R0
  3575 07:09E8: 85 09        	sta	<R2
  3576 07:09EA: A5 15        	lda	<L81+processes_1+2
  3577 07:09EC: 65 03        	adc	<R0+2
  3578 07:09EE: 85 0B        	sta	<R2+2
  3579 07:09F0: A7 09        	lda	[<R2]
  3580 07:09F2: 85 01        	sta	<R0
  3581 07:09F4: A0 02 00     	ldy	#$2
  3582 07:09F7: B7 09        	lda	[<R2],Y
  3583 07:09F9: 85 03        	sta	<R0+2
  3584 07:09FB: A0 35 00     	ldy	#$35
  3585 07:09FE: B7 01        	lda	[<R0],Y
  3586 07:0A00: 48           	pha
  3587 07:0A01: A0 33 00     	ldy	#$33
  3588 07:0A04: B7 01        	lda	[<R0],Y
  3589 07:0A06: 48           	pha
  3590 07:0A07: F4 00 00     	pea	#0
  3591 07:0A0A: 18           	clc
  3592 07:0A0B: 7B           	tdc
  3593 07:0A0C: 69 27 00     	adc	#<L81+message_1
  3594 07:0A0F: 48           	pha
  3595 07:0A10: 22 xx xx xx  	jsl	~~strcat
  3596                        ;
  3597                        ;
  3598                        ;			k_send_process_command_message(p
                    rocess,FX_CONTROL_COMMAND,CTL_CMD_CAPTION,0,(ULONG)k_string_
                    copy_string((LPCSTR)message),0L);
  3599                        	.line	446
  3600 07:0A14: F4 00 00     	pea	#^$0
  3601 07:0A17: F4 00 00     	pea	#<$0
  3602 07:0A1A: F4 00 00     	pea	#0
  3603 07:0A1D: 18           	clc
  3604 07:0A1E: 7B           	tdc
  3605 07:0A1F: 69 27 00     	adc	#<L81+message_1
  3606 07:0A22: 48           	pha
  3607 07:0A23: 22 xx xx xx  	jsl	~~k_string_copy_string
  3608 07:0A27: 85 01        	sta	<R0
  3609 07:0A29: 86 03        	stx	<R0+2
  3610 07:0A2B: D4 03        	pei	<R0+2
  3611 07:0A2D: D4 01        	pei	<R0
  Thu Dec  3 2020 22:25                                                Page 69


  3612 07:0A2F: F4 00 00     	pea	#<$0
  3613 07:0A32: F4 01 00     	pea	#<$1
  3614 07:0A35: F4 00 FA     	pea	#<$fa00
  3615 07:0A38: D4 7C        	pei	<L80+process_0+2
  3616 07:0A3A: D4 7A        	pei	<L80+process_0
  3617 07:0A3C: 22 xx xx xx  	jsl	~~k_send_process_command_message
  3618                        ;
  3619                        ;
  3620                        ;		}
  3621                        	.line	449
  3622                        ;	}
  3623                        L10015:
  3624                        	.line	450
  3625                        L10012:
  3626 07:0A40: E6 11        	inc	<L81+index_1
  3627 07:0A42: 38           	sec
  3628 07:0A43: A5 11        	lda	<L81+index_1
  3629 07:0A45: E9 20 00     	sbc	#<$20
  3630 07:0A48: 70 03        	bvs	L92
  3631 07:0A4A: 49 00 80     	eor	#$8000
  3632                        L92:
  3633 07:0A4D: 30 03        	bmi	L93
  3634 07:0A4F: 82 7F FD     	brl	L10014
  3635                        L93:
  3636                        L10013:
  3637                        ;
  3638                        ;
  3639                        ;	return 0;
  3640                        	.line	453
  3641 07:0A52: A9 00 00     	lda	#$0
  3642                        L94:
  3643 07:0A55: A8           	tay
  3644 07:0A56: A5 78        	lda	<L80+2
  3645 07:0A58: 85 80        	sta	<L80+2+8
  3646 07:0A5A: A5 77        	lda	<L80+1
  3647 07:0A5C: 85 7F        	sta	<L80+1+8
  3648 07:0A5E: 2B           	pld
  3649 07:0A5F: 3B           	tsc
  3650 07:0A60: 18           	clc
  3651 07:0A61: 69 7E 00     	adc	#L80+8
  3652 07:0A64: 1B           	tcs
  3653 07:0A65: 98           	tya
  3654 07:0A66: 6B           	rtl
  3655                        ;}
  3656                        	.line	454
  3657                        	.endblock	454
  3658             00000076   L80	equ	118
  3659             00000011   L81	equ	17
  3660 07:0A67:              	ends
  3661                        	efunc
  3662                        	.endfunc	454,17,118
  3663                        	.line	454
  3664                        	data
  3665                        L79:
  3666 00:0218: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$54,$41,$53,$4B,$53,$0D,
                    $0A,$00,$50,$72,$6F
       00:021C: 54 41 53 4B 
       00:0220: 53 0D 0A 00 
  Thu Dec  3 2020 22:25                                                Page 70


       00:0224: 50 72 6F 
  3667 00:0227: 63 65 73 73  	db	$63,$65,$73,$73,$3A,$00,$20,$20,$20,$4E,
                    $61,$6D,$65,$3A,$00
       00:022B: 3A 00 20 20 
       00:022F: 20 4E 61 6D 
       00:0233: 65 3A 00 
  3668 00:0236: 50 49 44 3A  	db	$50,$49,$44,$3A,$00,$5B,$00,$5D,$20,$00
       00:023A: 00 5B 00 5D 
       00:023E: 20 00 
  3669 00:0240:              	ends
  3670                        ;
  3671                        ;
  3672                        ;
  3673                        ;UINT cmd_FRONT(PFXPROCESS process,PFXNODE tokens)
  3674                        ;{
  3675                        	.line	458
  3676                        	.line	459
  3677                        	CONCMD
  3678                        	xdef	~~cmd_FRONT
  3679                        	func
  3680                        	.function	459
  3681                        ~~cmd_FRONT:
  3682                        	longa	on
  3683                        	longi	on
  3684 07:0A67: 3B           	tsc
  3685 07:0A68: 38           	sec
  3686 07:0A69: E9 00 00     	sbc	#L96
  3687 07:0A6C: 1B           	tcs
  3688 07:0A6D: 0B           	phd
  3689 07:0A6E: 5B           	tcd
  3690             00000004   process_0	set	4
  3691             00000008   tokens_0	set	8
  3692                        	.block	459
  3693                        ;	k_debug_string("cmd_FRONT\r\n");
  3694                        	.sym	process,4,138,6,32,20
  3695                        	.sym	tokens,8,138,6,32,5
  3696                        	.line	460
  3697 07:0A6F: F4 xx xx     	pea	#^L95
  3698 07:0A72: F4 xx xx     	pea	#<L95
  3699 07:0A75: 22 xx xx xx  	jsl	~~k_debug_string
  3700                        ;	return 0;
  3701                        	.line	461
  3702 07:0A79: A9 00 00     	lda	#$0
  3703                        L99:
  3704 07:0A7C: A8           	tay
  3705 07:0A7D: A5 02        	lda	<L96+2
  3706 07:0A7F: 85 0A        	sta	<L96+2+8
  3707 07:0A81: A5 01        	lda	<L96+1
  3708 07:0A83: 85 09        	sta	<L96+1+8
  3709 07:0A85: 2B           	pld
  3710 07:0A86: 3B           	tsc
  3711 07:0A87: 18           	clc
  3712 07:0A88: 69 08 00     	adc	#L96+8
  3713 07:0A8B: 1B           	tcs
  3714 07:0A8C: 98           	tya
  3715 07:0A8D: 6B           	rtl
  3716                        ;}
  3717                        	.line	462
  Thu Dec  3 2020 22:25                                                Page 71


  3718                        	.endblock	462
  3719             00000000   L96	equ	0
  3720             00000001   L97	equ	1
  3721 07:0A8E:              	ends
  3722                        	efunc
  3723                        	.endfunc	462,1,0
  3724                        	.line	462
  3725                        	data
  3726                        L95:
  3727 00:0240: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$46,$52,$4F,$4E,$54,$0D,
                    $0A,$00
       00:0244: 46 52 4F 4E 
       00:0248: 54 0D 0A 00 
  3728 00:024C:              	ends
  3729                        ;
  3730                        ;UINT cmd_BACK(PFXPROCESS process,PFXNODE tokens)
  3731                        ;{
  3732                        	.line	464
  3733                        	.line	465
  3734                        	CONCMD
  3735                        	xdef	~~cmd_BACK
  3736                        	func
  3737                        	.function	465
  3738                        ~~cmd_BACK:
  3739                        	longa	on
  3740                        	longi	on
  3741 07:0A8E: 3B           	tsc
  3742 07:0A8F: 38           	sec
  3743 07:0A90: E9 00 00     	sbc	#L101
  3744 07:0A93: 1B           	tcs
  3745 07:0A94: 0B           	phd
  3746 07:0A95: 5B           	tcd
  3747             00000004   process_0	set	4
  3748             00000008   tokens_0	set	8
  3749                        	.block	465
  3750                        ;	k_debug_string("cmd_BACK\r\n");
  3751                        	.sym	process,4,138,6,32,20
  3752                        	.sym	tokens,8,138,6,32,5
  3753                        	.line	466
  3754 07:0A96: F4 xx xx     	pea	#^L100
  3755 07:0A99: F4 xx xx     	pea	#<L100
  3756 07:0A9C: 22 xx xx xx  	jsl	~~k_debug_string
  3757                        ;	return 0;
  3758                        	.line	467
  3759 07:0AA0: A9 00 00     	lda	#$0
  3760                        L104:
  3761 07:0AA3: A8           	tay
  3762 07:0AA4: A5 02        	lda	<L101+2
  3763 07:0AA6: 85 0A        	sta	<L101+2+8
  3764 07:0AA8: A5 01        	lda	<L101+1
  3765 07:0AAA: 85 09        	sta	<L101+1+8
  3766 07:0AAC: 2B           	pld
  3767 07:0AAD: 3B           	tsc
  3768 07:0AAE: 18           	clc
  3769 07:0AAF: 69 08 00     	adc	#L101+8
  3770 07:0AB2: 1B           	tcs
  3771 07:0AB3: 98           	tya
  3772 07:0AB4: 6B           	rtl
  Thu Dec  3 2020 22:25                                                Page 72


  3773                        ;}
  3774                        	.line	468
  3775                        	.endblock	468
  3776             00000000   L101	equ	0
  3777             00000001   L102	equ	1
  3778 07:0AB5:              	ends
  3779                        	efunc
  3780                        	.endfunc	468,1,0
  3781                        	.line	468
  3782                        	data
  3783                        L100:
  3784 00:024C: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$42,$41,$43,$4B,$0D,$0A,
                    $00
       00:0250: 42 41 43 4B 
       00:0254: 0D 0A 00 
  3785 00:0257:              	ends
  3786                        ;
  3787                        ;UINT cmd_CHRDIR(PFXPROCESS process,PFXNODE tokens
                    )
  3788                        ;{
  3789                        	.line	470
  3790                        	.line	471
  3791                        	CONCMD
  3792                        	xdef	~~cmd_CHRDIR
  3793                        	func
  3794                        	.function	471
  3795                        ~~cmd_CHRDIR:
  3796                        	longa	on
  3797                        	longi	on
  3798 07:0AB5: 3B           	tsc
  3799 07:0AB6: 38           	sec
  3800 07:0AB7: E9 00 00     	sbc	#L106
  3801 07:0ABA: 1B           	tcs
  3802 07:0ABB: 0B           	phd
  3803 07:0ABC: 5B           	tcd
  3804             00000004   process_0	set	4
  3805             00000008   tokens_0	set	8
  3806                        	.block	471
  3807                        ;	k_debug_string("cmd_CHRDIR\r\n");
  3808                        	.sym	process,4,138,6,32,20
  3809                        	.sym	tokens,8,138,6,32,5
  3810                        	.line	472
  3811 07:0ABD: F4 xx xx     	pea	#^L105
  3812 07:0AC0: F4 xx xx     	pea	#<L105
  3813 07:0AC3: 22 xx xx xx  	jsl	~~k_debug_string
  3814                        ;	return 0;
  3815                        	.line	473
  3816 07:0AC7: A9 00 00     	lda	#$0
  3817                        L109:
  3818 07:0ACA: A8           	tay
  3819 07:0ACB: A5 02        	lda	<L106+2
  3820 07:0ACD: 85 0A        	sta	<L106+2+8
  3821 07:0ACF: A5 01        	lda	<L106+1
  3822 07:0AD1: 85 09        	sta	<L106+1+8
  3823 07:0AD3: 2B           	pld
  3824 07:0AD4: 3B           	tsc
  3825 07:0AD5: 18           	clc
  3826 07:0AD6: 69 08 00     	adc	#L106+8
  Thu Dec  3 2020 22:25                                                Page 73


  3827 07:0AD9: 1B           	tcs
  3828 07:0ADA: 98           	tya
  3829 07:0ADB: 6B           	rtl
  3830                        ;}
  3831                        	.line	474
  3832                        	.endblock	474
  3833             00000000   L106	equ	0
  3834             00000001   L107	equ	1
  3835 07:0ADC:              	ends
  3836                        	efunc
  3837                        	.endfunc	474,1,0
  3838                        	.line	474
  3839                        	data
  3840                        L105:
  3841 00:0257: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$43,$48,$52,$44,$49,$52,
                    $0D,$0A,$00
       00:025B: 43 48 52 44 
       00:025F: 49 52 0D 0A 
       00:0263: 00 
  3842 00:0264:              	ends
  3843                        ;
  3844                        ;UINT cmd_DISPLAY(PFXPROCESS process,PFXNODE token
                    s)
  3845                        ;{
  3846                        	.line	476
  3847                        	.line	477
  3848                        	CONCMD
  3849                        	xdef	~~cmd_DISPLAY
  3850                        	func
  3851                        	.function	477
  3852                        ~~cmd_DISPLAY:
  3853                        	longa	on
  3854                        	longi	on
  3855 07:0ADC: 3B           	tsc
  3856 07:0ADD: 38           	sec
  3857 07:0ADE: E9 00 00     	sbc	#L111
  3858 07:0AE1: 1B           	tcs
  3859 07:0AE2: 0B           	phd
  3860 07:0AE3: 5B           	tcd
  3861             00000004   process_0	set	4
  3862             00000008   tokens_0	set	8
  3863                        	.block	477
  3864                        ;	k_debug_string("cmd_DISPLAY\r\n");
  3865                        	.sym	process,4,138,6,32,20
  3866                        	.sym	tokens,8,138,6,32,5
  3867                        	.line	478
  3868 07:0AE4: F4 xx xx     	pea	#^L110
  3869 07:0AE7: F4 xx xx     	pea	#<L110
  3870 07:0AEA: 22 xx xx xx  	jsl	~~k_debug_string
  3871                        ;	return 0;
  3872                        	.line	479
  3873 07:0AEE: A9 00 00     	lda	#$0
  3874                        L114:
  3875 07:0AF1: A8           	tay
  3876 07:0AF2: A5 02        	lda	<L111+2
  3877 07:0AF4: 85 0A        	sta	<L111+2+8
  3878 07:0AF6: A5 01        	lda	<L111+1
  3879 07:0AF8: 85 09        	sta	<L111+1+8
  Thu Dec  3 2020 22:25                                                Page 74


  3880 07:0AFA: 2B           	pld
  3881 07:0AFB: 3B           	tsc
  3882 07:0AFC: 18           	clc
  3883 07:0AFD: 69 08 00     	adc	#L111+8
  3884 07:0B00: 1B           	tcs
  3885 07:0B01: 98           	tya
  3886 07:0B02: 6B           	rtl
  3887                        ;}
  3888                        	.line	480
  3889                        	.endblock	480
  3890             00000000   L111	equ	0
  3891             00000001   L112	equ	1
  3892 07:0B03:              	ends
  3893                        	efunc
  3894                        	.endfunc	480,1,0
  3895                        	.line	480
  3896                        	data
  3897                        L110:
  3898 00:0264: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$44,$49,$53,$50,$4C,$41,
                    $59,$0D,$0A,$00
       00:0268: 44 49 53 50 
       00:026C: 4C 41 59 0D 
       00:0270: 0A 00 
  3899 00:0272:              	ends
  3900                        ;
  3901                        ;UINT cmd_NEWDIR(PFXPROCESS process,PFXNODE tokens
                    )
  3902                        ;{
  3903                        	.line	482
  3904                        	.line	483
  3905                        	CONCMD
  3906                        	xdef	~~cmd_NEWDIR
  3907                        	func
  3908                        	.function	483
  3909                        ~~cmd_NEWDIR:
  3910                        	longa	on
  3911                        	longi	on
  3912 07:0B03: 3B           	tsc
  3913 07:0B04: 38           	sec
  3914 07:0B05: E9 14 00     	sbc	#L116
  3915 07:0B08: 1B           	tcs
  3916 07:0B09: 0B           	phd
  3917 07:0B0A: 5B           	tcd
  3918             00000004   process_0	set	4
  3919             00000008   tokens_0	set	8
  3920                        	.block	483
  3921                        ;	BYTE signature[8];
  3922                        ;	LPCHAR dirName = NULL;
  3923                        ;
  3924                        ;	k_debug_string("cmd_NEWDIR\r\n");
  3925             00000000   signature_1	set	0
  3926             00000008   dirName_1	set	8
  3927                        	.sym	signature,0,110,1,0,8
  3928                        	.sym	dirName,8,142,1,32
  3929                        	.sym	process,4,138,6,32,20
  3930                        	.sym	tokens,8,138,6,32,5
  3931 07:0B0B: 64 11        	stz	<L117+dirName_1
  3932 07:0B0D: 64 13        	stz	<L117+dirName_1+2
  Thu Dec  3 2020 22:25                                                Page 75


  3933                        	.line	487
  3934 07:0B0F: F4 xx xx     	pea	#^L115
  3935 07:0B12: F4 xx xx     	pea	#<L115
  3936 07:0B15: 22 xx xx xx  	jsl	~~k_debug_string
  3937                        ;
  3938                        ;	getTokenSig(tokens,signature);
  3939                        	.line	489
  3940 07:0B19: F4 00 00     	pea	#0
  3941 07:0B1C: 18           	clc
  3942 07:0B1D: 7B           	tdc
  3943 07:0B1E: 69 09 00     	adc	#<L117+signature_1
  3944 07:0B21: 48           	pha
  3945 07:0B22: D4 1E        	pei	<L116+tokens_0+2
  3946 07:0B24: D4 1C        	pei	<L116+tokens_0
  3947 07:0B26: 22 xx xx xx  	jsl	~~getTokenSig
  3948                        ;
  3949                        ;	if(strcmp(signature,"#AC") == 0)
  3950                        	.line	491
  3951                        ;	{
  3952 07:0B2A: F4 xx xx     	pea	#^L115+13
  3953 07:0B2D: F4 xx xx     	pea	#<L115+13
  3954 07:0B30: F4 00 00     	pea	#0
  3955 07:0B33: 18           	clc
  3956 07:0B34: 7B           	tdc
  3957 07:0B35: 69 09 00     	adc	#<L117+signature_1
  3958 07:0B38: 48           	pha
  3959 07:0B39: 22 xx xx xx  	jsl	~~strcmp
  3960 07:0B3D: AA           	tax
  3961 07:0B3E: F0 03        	beq	L119
  3962 07:0B40: 82 3C 00     	brl	L10016
  3963                        L119:
  3964                        	.line	492
  3965                        ;		dirName = ((PTOKEN)k_nodelist_get(tokens
                    ,3)->data)->text;
  3966                        	.line	493
  3967 07:0B43: F4 03 00     	pea	#<$3
  3968 07:0B46: D4 1E        	pei	<L116+tokens_0+2
  3969 07:0B48: D4 1C        	pei	<L116+tokens_0
  3970 07:0B4A: 22 xx xx xx  	jsl	~~k_nodelist_get
  3971 07:0B4E: 85 01        	sta	<R0
  3972 07:0B50: 86 03        	stx	<R0+2
  3973 07:0B52: A0 02 00     	ldy	#$2
  3974 07:0B55: B7 01        	lda	[<R0],Y
  3975 07:0B57: 85 05        	sta	<R1
  3976 07:0B59: A0 04 00     	ldy	#$4
  3977 07:0B5C: B7 01        	lda	[<R0],Y
  3978 07:0B5E: 85 07        	sta	<R1+2
  3979 07:0B60: A0 04 00     	ldy	#$4
  3980 07:0B63: B7 05        	lda	[<R1],Y
  3981 07:0B65: 85 11        	sta	<L117+dirName_1
  3982 07:0B67: A0 06 00     	ldy	#$6
  3983 07:0B6A: B7 05        	lda	[<R1],Y
  3984 07:0B6C: 85 13        	sta	<L117+dirName_1+2
  3985                        ;
  3986                        ;		k_debug_message("NEWDIR CORRECT:",dirNam
                    e);
  3987                        	.line	495
  3988 07:0B6E: D4 13        	pei	<L117+dirName_1+2
  Thu Dec  3 2020 22:25                                                Page 76


  3989 07:0B70: D4 11        	pei	<L117+dirName_1
  3990 07:0B72: F4 xx xx     	pea	#^L115+17
  3991 07:0B75: F4 xx xx     	pea	#<L115+17
  3992 07:0B78: 22 xx xx xx  	jsl	~~k_debug_message
  3993                        ;		//k_sd_create_dir(dirName);
  3994                        ;	}
  3995                        	.line	497
  3996                        ;	else
  3997 07:0B7C: 82 0A 00     	brl	L10017
  3998                        L10016:
  3999                        ;	{
  4000                        	.line	499
  4001                        ;		k_debug_string("NEWDIR Syntax Error\r\n"
                    );
  4002                        	.line	500
  4003 07:0B7F: F4 xx xx     	pea	#^L115+33
  4004 07:0B82: F4 xx xx     	pea	#<L115+33
  4005 07:0B85: 22 xx xx xx  	jsl	~~k_debug_string
  4006                        ;	}
  4007                        	.line	501
  4008                        L10017:
  4009                        ;
  4010                        ;
  4011                        ;	return 0;
  4012                        	.line	504
  4013 07:0B89: A9 00 00     	lda	#$0
  4014                        L120:
  4015 07:0B8C: A8           	tay
  4016 07:0B8D: A5 16        	lda	<L116+2
  4017 07:0B8F: 85 1E        	sta	<L116+2+8
  4018 07:0B91: A5 15        	lda	<L116+1
  4019 07:0B93: 85 1D        	sta	<L116+1+8
  4020 07:0B95: 2B           	pld
  4021 07:0B96: 3B           	tsc
  4022 07:0B97: 18           	clc
  4023 07:0B98: 69 1C 00     	adc	#L116+8
  4024 07:0B9B: 1B           	tcs
  4025 07:0B9C: 98           	tya
  4026 07:0B9D: 6B           	rtl
  4027                        ;}
  4028                        	.line	505
  4029                        	.endblock	505
  4030             00000014   L116	equ	20
  4031             00000009   L117	equ	9
  4032 07:0B9E:              	ends
  4033                        	efunc
  4034                        	.endfunc	505,9,20
  4035                        	.line	505
  4036                        	data
  4037                        L115:
  4038 00:0272: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$4E,$45,$57,$44,$49,$52,
                    $0D,$0A,$00,$23,$41
       00:0276: 4E 45 57 44 
       00:027A: 49 52 0D 0A 
       00:027E: 00 23 41 
  4039 00:0281: 43 00 4E 45  	db	$43,$00,$4E,$45,$57,$44,$49,$52,$20,$43,
                    $4F,$52,$52,$45,$43
       00:0285: 57 44 49 52 
  Thu Dec  3 2020 22:25                                                Page 77


       00:0289: 20 43 4F 52 
       00:028D: 52 45 43 
  4040 00:0290: 54 3A 00 4E  	db	$54,$3A,$00,$4E,$45,$57,$44,$49,$52,$20,
                    $53,$79,$6E,$74,$61
       00:0294: 45 57 44 49 
       00:0298: 52 20 53 79 
       00:029C: 6E 74 61 
  4041 00:029F: 78 20 45 72  	db	$78,$20,$45,$72,$72,$6F,$72,$0D,$0A,$00
       00:02A3: 72 6F 72 0D 
       00:02A7: 0A 00 
  4042 00:02A9:              	ends
  4043                        ;
  4044                        ;
  4045                        ;UINT cmd_SEND(PFXPROCESS process,PFXNODE tokens)
  4046                        ;{
  4047                        	.line	508
  4048                        	.line	509
  4049                        	CONCMD
  4050                        	xdef	~~cmd_SEND
  4051                        	func
  4052                        	.function	509
  4053                        ~~cmd_SEND:
  4054                        	longa	on
  4055                        	longi	on
  4056 07:0B9E: 3B           	tsc
  4057 07:0B9F: 38           	sec
  4058 07:0BA0: E9 14 00     	sbc	#L122
  4059 07:0BA3: 1B           	tcs
  4060 07:0BA4: 0B           	phd
  4061 07:0BA5: 5B           	tcd
  4062             00000004   process_0	set	4
  4063             00000008   tokens_0	set	8
  4064                        	.block	509
  4065                        ;	BYTE signature[8];
  4066                        ;	LPCHAR dirName = NULL;
  4067                        ;
  4068                        ;
  4069                        ;	k_debug_string("cmd_SEND\r\n");
  4070             00000000   signature_1	set	0
  4071             00000008   dirName_1	set	8
  4072                        	.sym	signature,0,110,1,0,8
  4073                        	.sym	dirName,8,142,1,32
  4074                        	.sym	process,4,138,6,32,20
  4075                        	.sym	tokens,8,138,6,32,5
  4076 07:0BA6: 64 11        	stz	<L123+dirName_1
  4077 07:0BA8: 64 13        	stz	<L123+dirName_1+2
  4078                        	.line	514
  4079 07:0BAA: F4 xx xx     	pea	#^L121
  4080 07:0BAD: F4 xx xx     	pea	#<L121
  4081 07:0BB0: 22 xx xx xx  	jsl	~~k_debug_string
  4082                        ;
  4083                        ;
  4084                        ;	getTokenSig(tokens,signature);
  4085                        	.line	517
  4086 07:0BB4: F4 00 00     	pea	#0
  4087 07:0BB7: 18           	clc
  4088 07:0BB8: 7B           	tdc
  4089 07:0BB9: 69 09 00     	adc	#<L123+signature_1
  Thu Dec  3 2020 22:25                                                Page 78


  4090 07:0BBC: 48           	pha
  4091 07:0BBD: D4 1E        	pei	<L122+tokens_0+2
  4092 07:0BBF: D4 1C        	pei	<L122+tokens_0
  4093 07:0BC1: 22 xx xx xx  	jsl	~~getTokenSig
  4094                        ;
  4095                        ;	if(signature[2] == TTYPE_WORD && signature[3] ==
                     TTYPE_STRING)
  4096                        	.line	519
  4097                        ;	{
  4098 07:0BC5: A5 0B        	lda	<L123+signature_1+2
  4099 07:0BC7: 29 FF 00     	and	#$ff
  4100 07:0BCA: F0 03        	beq	L125
  4101 07:0BCC: 82 51 00     	brl	L10018
  4102                        L125:
  4103 07:0BCF: E2 20        	sep	#$20
  4104                        	longa	off
  4105 07:0BD1: A5 0C        	lda	<L123+signature_1+3
  4106 07:0BD3: C9 02        	cmp	#<$2
  4107 07:0BD5: C2 20        	rep	#$20
  4108                        	longa	on
  4109 07:0BD7: F0 03        	beq	L126
  4110 07:0BD9: 82 44 00     	brl	L10018
  4111                        L126:
  4112                        	.line	520
  4113                        ;		dirName = ((PTOKEN)k_nodelist_get(tokens
                    ,3)->data)->text;
  4114                        	.line	521
  4115 07:0BDC: F4 03 00     	pea	#<$3
  4116 07:0BDF: D4 1E        	pei	<L122+tokens_0+2
  4117 07:0BE1: D4 1C        	pei	<L122+tokens_0
  4118 07:0BE3: 22 xx xx xx  	jsl	~~k_nodelist_get
  4119 07:0BE7: 85 01        	sta	<R0
  4120 07:0BE9: 86 03        	stx	<R0+2
  4121 07:0BEB: A0 02 00     	ldy	#$2
  4122 07:0BEE: B7 01        	lda	[<R0],Y
  4123 07:0BF0: 85 05        	sta	<R1
  4124 07:0BF2: A0 04 00     	ldy	#$4
  4125 07:0BF5: B7 01        	lda	[<R0],Y
  4126 07:0BF7: 85 07        	sta	<R1+2
  4127 07:0BF9: A0 04 00     	ldy	#$4
  4128 07:0BFC: B7 05        	lda	[<R1],Y
  4129 07:0BFE: 85 11        	sta	<L123+dirName_1
  4130 07:0C00: A0 06 00     	ldy	#$6
  4131 07:0C03: B7 05        	lda	[<R1],Y
  4132 07:0C05: 85 13        	sta	<L123+dirName_1+2
  4133                        ;
  4134                        ;		k_debug_message("SEND CORRECT:",dirName)
                    ;
  4135                        	.line	523
  4136 07:0C07: D4 13        	pei	<L123+dirName_1+2
  4137 07:0C09: D4 11        	pei	<L123+dirName_1
  4138 07:0C0B: F4 xx xx     	pea	#^L121+11
  4139 07:0C0E: F4 xx xx     	pea	#<L121+11
  4140 07:0C11: 22 xx xx xx  	jsl	~~k_debug_message
  4141                        ;		k_debug_string_com1(dirName);
  4142                        	.line	524
  4143 07:0C15: D4 13        	pei	<L123+dirName_1+2
  4144 07:0C17: D4 11        	pei	<L123+dirName_1
  Thu Dec  3 2020 22:25                                                Page 79


  4145 07:0C19: 22 xx xx xx  	jsl	~~k_debug_string_com1
  4146                        ;	}
  4147                        	.line	525
  4148                        ;	else
  4149 07:0C1D: 82 0A 00     	brl	L10019
  4150                        L10018:
  4151                        ;	{
  4152                        	.line	527
  4153                        ;		k_debug_string("SEND Syntax Error\r\n");
  4154                        	.line	528
  4155 07:0C20: F4 xx xx     	pea	#^L121+25
  4156 07:0C23: F4 xx xx     	pea	#<L121+25
  4157 07:0C26: 22 xx xx xx  	jsl	~~k_debug_string
  4158                        ;	}
  4159                        	.line	529
  4160                        L10019:
  4161                        ;
  4162                        ;	return 0;
  4163                        	.line	531
  4164 07:0C2A: A9 00 00     	lda	#$0
  4165                        L127:
  4166 07:0C2D: A8           	tay
  4167 07:0C2E: A5 16        	lda	<L122+2
  4168 07:0C30: 85 1E        	sta	<L122+2+8
  4169 07:0C32: A5 15        	lda	<L122+1
  4170 07:0C34: 85 1D        	sta	<L122+1+8
  4171 07:0C36: 2B           	pld
  4172 07:0C37: 3B           	tsc
  4173 07:0C38: 18           	clc
  4174 07:0C39: 69 1C 00     	adc	#L122+8
  4175 07:0C3C: 1B           	tcs
  4176 07:0C3D: 98           	tya
  4177 07:0C3E: 6B           	rtl
  4178                        ;}
  4179                        	.line	532
  4180                        	.endblock	532
  4181             00000014   L122	equ	20
  4182             00000009   L123	equ	9
  4183 07:0C3F:              	ends
  4184                        	efunc
  4185                        	.endfunc	532,9,20
  4186                        	.line	532
  4187                        	data
  4188                        L121:
  4189 00:02A9: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$53,$45,$4E,$44,$0D,$0A,
                    $00,$53,$45,$4E,$44
       00:02AD: 53 45 4E 44 
       00:02B1: 0D 0A 00 53 
       00:02B5: 45 4E 44 
  4190 00:02B8: 20 43 4F 52  	db	$20,$43,$4F,$52,$52,$45,$43,$54,$3A,$00,
                    $53,$45,$4E,$44,$20
       00:02BC: 52 45 43 54 
       00:02C0: 3A 00 53 45 
       00:02C4: 4E 44 20 
  4191 00:02C7: 53 79 6E 74  	db	$53,$79,$6E,$74,$61,$78,$20,$45,$72,$72,
                    $6F,$72,$0D,$0A,$00
       00:02CB: 61 78 20 45 
       00:02CF: 72 72 6F 72 
  Thu Dec  3 2020 22:25                                                Page 80


       00:02D3: 0D 0A 00 
  4192 00:02D6:              	ends
  4193                        ;
  4194                        ;UINT cmd_LINEUP(PFXPROCESS process,PFXNODE tokens
                    )
  4195                        ;{
  4196                        	.line	534
  4197                        	.line	535
  4198                        	CONCMD
  4199                        	xdef	~~cmd_LINEUP
  4200                        	func
  4201                        	.function	535
  4202                        ~~cmd_LINEUP:
  4203                        	longa	on
  4204                        	longi	on
  4205 07:0C3F: 3B           	tsc
  4206 07:0C40: 38           	sec
  4207 07:0C41: E9 1A 00     	sbc	#L129
  4208 07:0C44: 1B           	tcs
  4209 07:0C45: 0B           	phd
  4210 07:0C46: 5B           	tcd
  4211             00000004   process_0	set	4
  4212             00000008   tokens_0	set	8
  4213                        	.block	535
  4214                        ;	LPCHAR  name = NULL;
  4215                        ;	UINT    scrollSize = 0;
  4216                        ;	CHAR 	signature[16];
  4217                        ;	int i = 0;
  4218                        ;	int j = 0;
  4219                        ;
  4220                        ;	k_debug_string("cmd_LINEUP\r\n");
  4221             00000000   name_1	set	0
  4222             00000004   scrollSize_1	set	4
  4223             00000006   signature_1	set	6
  4224             00000016   i_1	set	22
  4225             00000018   j_1	set	24
  4226                        	.sym	name,0,142,1,32
  4227                        	.sym	scrollSize,4,16,1,16
  4228                        	.sym	signature,6,110,1,0,16
  4229                        	.sym	i,22,5,1,16
  4230                        	.sym	j,24,5,1,16
  4231                        	.sym	process,4,138,6,32,20
  4232                        	.sym	tokens,8,138,6,32,5
  4233 07:0C47: 64 01        	stz	<L130+name_1
  4234 07:0C49: 64 03        	stz	<L130+name_1+2
  4235 07:0C4B: 64 05        	stz	<L130+scrollSize_1
  4236 07:0C4D: 64 17        	stz	<L130+i_1
  4237 07:0C4F: 64 19        	stz	<L130+j_1
  4238                        	.line	542
  4239 07:0C51: F4 xx xx     	pea	#^L128
  4240 07:0C54: F4 xx xx     	pea	#<L128
  4241 07:0C57: 22 xx xx xx  	jsl	~~k_debug_string
  4242                        ;
  4243                        ;	getTokenSig(tokens,signature);
  4244                        	.line	544
  4245 07:0C5B: F4 00 00     	pea	#0
  4246 07:0C5E: 18           	clc
  4247 07:0C5F: 7B           	tdc
  Thu Dec  3 2020 22:25                                                Page 81


  4248 07:0C60: 69 07 00     	adc	#<L130+signature_1
  4249 07:0C63: 48           	pha
  4250 07:0C64: D4 24        	pei	<L129+tokens_0+2
  4251 07:0C66: D4 22        	pei	<L129+tokens_0
  4252 07:0C68: 22 xx xx xx  	jsl	~~getTokenSig
  4253                        ;	/*
  4254                        ;	if(strcmp(signature,"#A") == 0)
  4255                        ;	{
  4256                        ;		name    = (LPCHAR)((PTOKEN)k_nodelist_ge
                    t(tokens,3)->data)->text;
  4257                        ;
  4258                        ;		k_debug_strings("cmd_LINEUP::arg:",name)
                    ;
  4259                        ;
  4260                        ;		scrollSize = atol(name);
  4261                        ;
  4262                        ;		k_debug_long("cmd_LINEUP::scrollSize:",s
                    crollSize);
  4263                        ;
  4264                        ;		k_bitblt(10,10,100,100,0,0);
  4265                        ;
  4266                        ;	}
  4267                        ;	*/
  4268                        ;
  4269                        ;
  4270                        ;	k_send_process_command_message(process,FX_SCROLL
                    BAR_COMMAND,CTL_VERT_SCROLL,0,1L,0L);
  4271                        	.line	562
  4272 07:0C6C: F4 00 00     	pea	#^$0
  4273 07:0C6F: F4 00 00     	pea	#<$0
  4274 07:0C72: F4 00 00     	pea	#^$1
  4275 07:0C75: F4 01 00     	pea	#<$1
  4276 07:0C78: F4 00 00     	pea	#<$0
  4277 07:0C7B: F4 01 00     	pea	#<$1
  4278 07:0C7E: F4 02 FA     	pea	#<$fa02
  4279 07:0C81: D4 20        	pei	<L129+process_0+2
  4280 07:0C83: D4 1E        	pei	<L129+process_0
  4281 07:0C85: 22 xx xx xx  	jsl	~~k_send_process_command_message
  4282                        ;
  4283                        ;
  4284                        ;
  4285                        ;	return 0;
  4286                        	.line	566
  4287 07:0C89: A9 00 00     	lda	#$0
  4288                        L132:
  4289 07:0C8C: A8           	tay
  4290 07:0C8D: A5 1C        	lda	<L129+2
  4291 07:0C8F: 85 24        	sta	<L129+2+8
  4292 07:0C91: A5 1B        	lda	<L129+1
  4293 07:0C93: 85 23        	sta	<L129+1+8
  4294 07:0C95: 2B           	pld
  4295 07:0C96: 3B           	tsc
  4296 07:0C97: 18           	clc
  4297 07:0C98: 69 22 00     	adc	#L129+8
  4298 07:0C9B: 1B           	tcs
  4299 07:0C9C: 98           	tya
  4300 07:0C9D: 6B           	rtl
  4301                        ;}
  Thu Dec  3 2020 22:25                                                Page 82


  4302                        	.line	567
  4303                        	.endblock	567
  4304             0000001A   L129	equ	26
  4305             00000001   L130	equ	1
  4306 07:0C9E:              	ends
  4307                        	efunc
  4308                        	.endfunc	567,1,26
  4309                        	.line	567
  4310                        	data
  4311                        L128:
  4312 00:02D6: 63 6D 64 5F  	db	$63,$6D,$64,$5F,$4C,$49,$4E,$45,$55,$50,
                    $0D,$0A,$00
       00:02DA: 4C 49 4E 45 
       00:02DE: 55 50 0D 0A 
       00:02E2: 00 
  4313 00:02E3:              	ends
  4314                        ;
  4315                        ;
  4316                        ;
  4317                        	.line	569
  4318                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxcon_cmd.c",534
  4319                        	xref	~~k_init_desktop
  4320                        	xref	~~k_exec_set_process_foreground
  4321                        	xref	~~k_attach_process_events
  4322                        	xref	~~getTokenSig
  4323                        	xref	~~DefConsoleProc2
  4324                        	xref	~~k_create_text_window
  4325                        	xref	~~k_clear_screen
  4326                        	xref	~~k_send_process_command_message
  4327                        	xref	~~k_user_CreateWindow
  4328                        	xref	~~k_exec_signal_start
  4329                        	xref	~~k_exec_signal_terminate
  4330                        	xref	~~k_exec_signal_sleep
  4331                        	xref	~~k_exec_createProcess
  4332                        	xref	~~k_exec_process_list
  4333                        	xref	~~k_get_rtc_second
  4334                        	xref	~~k_debug_strings
  4335                        	xref	~~k_debug_message
  4336                        	xref	~~k_debug_long
  4337                        	xref	~~k_debug_integer
  4338                        	xref	~~k_debug_string
  4339                        	xref	~~k_debug_string_com1
  4340                        	xref	~~k_nodelist_get
  4341                        	xref	~~k_get_localtime_string
  4342                        	xref	~~k_string_copy_string
  4343                        	xref	~~k_inttodec
  4344                        	xref	~~srand
  4345                        	xref	~~rand
  4346                        	xref	~~atol
  4347                        	xref	~~strcpy
  4348                        	xref	~~strcmp
  4349                        	xref	~~strcat
  4350                        	xref	~~memset
  4351                        	.sym	~~k_init_desktop,~~k_init_desktop,69,18,
                    0
  4352                        	.sym	~~k_exec_set_process_foreground,~~k_exec
                    _set_process_foreground,69,18,0
  Thu Dec  3 2020 22:25                                                Page 83


  4353                        	.sym	~~k_attach_process_events,~~k_attach_pro
                    cess_events,69,18,0
  4354                        	.sym	~~consoleAppOffset,~~consoleAppOffset,5,
                    3,16
  4355                        	.sym	PFXDOSDEVICE,0,138,14,32,101
  4356                        	.sym	FXDOSDEVICE,0,10,14,5648,101
  4357                        	.sym	DOSINITDEVICE,0,641,14,32
  4358                        	.sym	DOSSECTORWRITER,0,654,14,32
  4359                        	.sym	DOSSECTORREADER,0,654,14,32
  4360                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,100
  4361                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,100
  4362                        	.sym	PIDSECTOR,0,138,14,32,77
  4363                        	.sym	IDSECTOR,0,10,14,2048,77
  4364                        	.sym	PLFN,0,138,14,32,76
  4365                        	.sym	LFN,0,10,14,256,76
  4366                        	.sym	PFAT16ENTRYLONG,0,138,14,32,75
  4367                        	.sym	FAT16ENTRYLONG,0,10,14,288,75
  4368                        	.sym	PFAT16ENTRY,0,138,14,32,74
  4369                        	.sym	FAT16ENTRY,0,10,14,256,74
  4370                        	.sym	Fat16BootSector,0,10,14,4096,73
  4371                        	.sym	PPARTITIONTABLE,0,138,14,32,72
  4372                        	.sym	PARTITIONTABLE,0,10,14,128,72
  4373                        	.sym	PFATBOOTSECTOR,0,138,14,32,71
  4374                        	.sym	FATBOOTSECTOR,0,10,14,928,71
  4375                        	.sym	fat_BS_t,0,10,14,688,70
  4376                        	.sym	fat_extBS_16_t,0,10,14,192,69
  4377                        	.sym	PFAT32EXT,0,138,14,32,68
  4378                        	.sym	fat_extBS_32_t,0,10,14,416,68
  4379                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,67
  4380                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,67
  4381                        	.sym	PFILEINFO,0,138,14,32,66
  4382                        	.sym	FILEINFO,0,10,14,136,66
  4383                        	.sym	PDISKINFO,0,138,14,32,65
  4384                        	.sym	DISKINFO,0,10,14,416,65
  4385                        	.sym	PDIRENTRY,0,138,14,32,64
  4386                        	.sym	DIRENTRY,0,10,14,256,64
  4387                        	.sym	~~cmd_LINEUP,~~cmd_LINEUP,80,2,0
  4388                        	.sym	~~cmd_RESUME,~~cmd_RESUME,80,2,0
  4389                        	.sym	~~cmd_PAUSE,~~cmd_PAUSE,80,2,0
  4390                        	.sym	~~cmd_TIME,~~cmd_TIME,80,2,0
  4391                        	.sym	~~cmd_EXIT,~~cmd_EXIT,80,2,0
  4392                        	.sym	~~cmd_START,~~cmd_START,80,2,0
  4393                        	.sym	~~cmd_Window,~~cmd_Window,80,2,0
  4394                        	.sym	~~cmd_SEND,~~cmd_SEND,80,2,0
  4395                        	.sym	~~cmd_DISPLAY,~~cmd_DISPLAY,80,2,0
  4396                        	.sym	~~cmd_CHRDIR,~~cmd_CHRDIR,80,2,0
  4397                        	.sym	~~cmd_TASKS,~~cmd_TASKS,80,2,0
  4398                        	.sym	~~cmd_BACK,~~cmd_BACK,80,2,0
  4399                        	.sym	~~cmd_FRONT,~~cmd_FRONT,80,2,0
  4400                        	.sym	~~cmd_NEWDIR,~~cmd_NEWDIR,80,2,0
  4401                        	.sym	~~cmd_INIT,~~cmd_INIT,80,2,0
  4402                        	.sym	~~cmd_BCOLOR,~~cmd_BCOLOR,80,2,0
  4403                        	.sym	~~cmd_FCOLOR,~~cmd_FCOLOR,80,2,0
  4404                        	.sym	~~cmd_VOL,~~cmd_VOL,80,2,0
  4405                        	.sym	~~cmd_DIR,~~cmd_DIR,80,2,0
  4406                        	.sym	~~cmd_TESTSD,~~cmd_TESTSD,80,2,0
  4407                        	.sym	~~cmd_WORKBENCH,~~cmd_WORKBENCH,80,2,0
  4408                        	.sym	~~cmd_CLEAR,~~cmd_CLEAR,80,2,0
  Thu Dec  3 2020 22:25                                                Page 84


  4409                        	.sym	~~getTokenSig,~~getTokenSig,65,18,0
  4410                        	.sym	~~DefConsoleProc2,~~DefConsoleProc2,65,1
                    8,0
  4411                        	.sym	~~k_create_text_window,~~k_create_text_w
                    indow,65,18,0
  4412                        	.sym	~~k_clear_screen,~~k_clear_screen,65,18,
                    0
  4413                        	.sym	PCOMMANDARGS,0,138,14,32,63
  4414                        	.sym	COMMANDARGS,0,10,14,64,63
  4415                        	.sym	PTOKENIZESTATE,0,133,14,32
  4416                        	.sym	TOKENIZESTATE,0,5,14,16
  4417                        	.sym	PTOKEN,0,138,14,32,62
  4418                        	.sym	TOKEN,0,10,14,64,62
  4419                        	.sym	PTOKENTYPE,0,133,14,32
  4420                        	.sym	TOKENTYPE,0,5,14,16
  4421                        	.sym	FXCommandHandler,0,656,14,32
  4422                        	.sym	PCONSOLECTX,0,138,14,32,61
  4423                        	.sym	CONSOLECTX,0,10,14,1144,61
  4424                        	.sym	PSPINNERCTX,0,138,14,32,60
  4425                        	.sym	SPINNERCTX,0,10,14,48,60
  4426                        	.sym	~~k_send_process_command_message,~~k_sen
                    d_process_command_message,78,18,0
  4427                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,59
  4428                        	.sym	MOUSE_MSG_STATE,0,10,14,184,59
  4429                        	.sym	PFXEVENTPROCESS,0,138,14,32,58
  4430                        	.sym	FXEVENTPROCESS,0,10,14,64,58
  4431                        	.sym	FXEventProc,0,641,14,32
  4432                        	.sym	PMOUSEMSGDATA,0,138,14,32,57
  4433                        	.sym	MOUSEMSGDATA,0,10,14,64,57
  4434                        	.sym	MSGIRQ,0,5,14,16
  4435                        	.sym	MAINLOOPARGS,0,10,14,16,56
  4436                        	.sym	PEACHCHILD_MSG,0,138,14,32,55
  4437                        	.sym	EACHCHILD_MSG,0,10,14,64,55
  4438                        	.sym	~~k_user_CreateWindow,~~k_user_CreateWin
                    dow,1098,18,32,30
  4439                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,54
  4440                        	.sym	CUR_PALETTE_MAP,0,10,14,400,54
  4441                        	.sym	PCLICKDETECTED,0,138,14,32,53
  4442                        	.sym	CLICKDETECTED,0,10,14,64,53
  4443                        	.sym	OBJECTCLICKED,0,641,14,32
  4444                        	.sym	MemoryCallback,0,641,14,32
  4445                        	.sym	PFXMEMORYMAP,0,138,14,32,52
  4446                        	.sym	FXMEMORYMAP,0,10,14,2072,52
  4447                        	.sym	UMM_HEAP_INFO,0,10,14,256,51
  4448                        	.sym	~~k_exec_signal_start,~~k_exec_signal_st
                    art,78,18,0
  4449                        	.sym	~~k_exec_signal_terminate,~~k_exec_signa
                    l_terminate,78,18,0
  4450                        	.sym	~~k_exec_signal_sleep,~~k_exec_signal_sl
                    eep,78,18,0
  4451                        	.sym	~~k_exec_createProcess,~~k_exec_createPr
                    ocess,1098,18,32,20
  4452                        	.sym	~~k_exec_process_list,~~k_exec_process_l
                    ist,9290,18,32,20
  4453                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  4454                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  4455                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  4456                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  Thu Dec  3 2020 22:25                                                Page 85


  4457                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  4458                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,50
  4459                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,1448,50
  4460                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,49
  4461                        	.sym	FX_DEVICE_DRIVER,0,10,14,1416,49
  4462                        	.sym	~~k_get_rtc_second,~~k_get_rtc_second,80
                    ,18,0
  4463                        	.sym	~~k_debug_strings,~~k_debug_strings,65,1
                    8,0
  4464                        	.sym	~~k_debug_message,~~k_debug_message,65,1
                    8,0
  4465                        	.sym	~~k_debug_long,~~k_debug_long,65,18,0
  4466                        	.sym	~~k_debug_integer,~~k_debug_integer,65,1
                    8,0
  4467                        	.sym	~~k_debug_string,~~k_debug_string,65,18,
                    0
  4468                        	.sym	~~k_debug_string_com1,~~k_debug_string_c
                    om1,65,18,0
  4469                        	.sym	PDEBUGBYTEBITS,0,138,14,32,48
  4470                        	.sym	DEBUGBYTEBITS,0,10,14,8,48
  4471                        	.sym	PFXENVIRONMENT,0,138,14,32,47
  4472                        	.sym	FXENVIRONMENT,0,10,14,96,47
  4473                        	.sym	PFXZERPOPAGE,0,138,14,32,46
  4474                        	.sym	FXZERPOPAGE,0,10,14,448,46
  4475                        	.sym	KERNELTRAPCALL,0,641,14,32
  4476                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  4477                        	.sym	FOREACHNODE,0,641,14,32
  4478                        	.sym	~~k_nodelist_get,~~k_nodelist_get,1098,1
                    8,32,5
  4479                        	.sym	~~k_get_localtime_string,~~k_get_localti
                    me_string,1102,18,32
  4480                        	.sym	~~k_string_copy_string,~~k_string_copy_s
                    tring,1102,18,32
  4481                        	.sym	~~k_inttodec,~~k_inttodec,1102,18,32
  4482                        	.sym	PFXSTRING,0,138,14,32,45
  4483                        	.sym	FXSTRING,0,10,14,64,45
  4484                        	.sym	PFXCOMBUFFER,0,138,14,32,44
  4485                        	.sym	FXCOMBUFFER,0,10,14,2080,44
  4486                        	.sym	PSUBMENULIST,0,138,14,32,43
  4487                        	.sym	SUBMENULIST,0,10,14,40,43
  4488                        	.sym	HSUBMENU,0,7,14,32
  4489                        	.sym	PSUBMENU,0,138,14,32,42
  4490                        	.sym	SUBMENU,0,10,14,64,42
  4491                        	.sym	MenuAction,0,641,14,32
  4492                        	.sym	PMENUANCHOR,0,138,14,32,41
  4493                        	.sym	MENUANCHOR,0,10,14,144,41
  4494                        	.sym	PTEXTBOX,0,138,14,32,40
  4495                        	.sym	TEXTBOX,0,10,14,144,40
  4496                        	.sym	PLISTBOX,0,138,14,32,39
  4497                        	.sym	LISTBOX,0,10,14,240,39
  4498                        	.sym	PSCROLLBAR,0,138,14,32,38
  4499                        	.sym	SCROLLBAR,0,10,14,192,38
  4500                        	.sym	PBUTTON,0,138,14,32,37
  4501                        	.sym	BUTTON,0,10,14,80,37
  4502                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,36
  4503                        	.sym	MENUDROPDOWNDATA,0,10,14,3568,36
  4504                        	.sym	PMENUTAG,0,138,14,32,35
  4505                        	.sym	MENUTAG,0,10,14,112,35
  Thu Dec  3 2020 22:25                                                Page 86


  4506                        	.sym	PMENU,0,138,14,32,34
  4507                        	.sym	MENU,0,10,14,248,34
  4508                        	.sym	HMENURESOURCE,0,129,14,32
  4509                        	.sym	HTEXTBOX,0,7,14,32
  4510                        	.sym	PTEXTBOXX,0,138,14,32,33
  4511                        	.sym	TEXTBOXX,0,10,14,112,33
  4512                        	.sym	FONTMETRIC,0,10,14,32,32
  4513                        	.sym	TITLE,0,142,14,32
  4514                        	.sym	PHANDLE,0,1153,14,32
  4515                        	.sym	HANDLE,0,129,14,32
  4516                        	.sym	PWINDOWEX,0,138,14,32,31
  4517                        	.sym	WINDOWEX,0,10,14,2704,31
  4518                        	.sym	PWINDOW,0,138,14,32,30
  4519                        	.sym	WINDOW,0,10,14,2808,30
  4520                        	.sym	PDRAGDATA,0,138,14,32,29
  4521                        	.sym	DRAGDATA,0,10,14,136,29
  4522                        	.sym	PNCCLICKABLE,0,138,14,32,28
  4523                        	.sym	NCCLICKABLE,0,10,14,88,28
  4524                        	.sym	HCLICKABLE,0,7,14,32
  4525                        	.sym	PCLICKABLE,0,138,14,32,27
  4526                        	.sym	CLICKABLE,0,10,14,88,27
  4527                        	.sym	PWNDCLASS,0,138,14,32,26
  4528                        	.sym	WNDCLASS,0,10,14,256,26
  4529                        	.sym	HBRUSH,0,129,14,32
  4530                        	.sym	HCURSOR,0,129,14,32
  4531                        	.sym	HICON,0,129,14,32
  4532                        	.sym	HINSTANCE,0,129,14,32
  4533                        	.sym	FXWndProc,0,654,14,32
  4534                        	.sym	PRECT,0,138,14,32,25
  4535                        	.sym	RECT,0,10,14,64,25
  4536                        	.sym	PPOINT,0,138,14,32,24
  4537                        	.sym	POINT,0,10,14,32,24
  4538                        	.sym	PFXPROPERTY,0,138,14,32,22
  4539                        	.sym	FXPROPERTY,0,10,14,384,22
  4540                        	.sym	SCANCODE,0,14,14,8
  4541                        	.sym	KEYCODE,0,14,14,8
  4542                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  4543                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  4544                        	.sym	PFXPROCESS,0,138,14,32,20
  4545                        	.sym	FXPROCESS,0,10,14,800,20
  4546                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  4547                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  4548                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  4549                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  4550                        	.sym	FXProcessProc,0,641,14,32
  4551                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  4552                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  4553                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  4554                        	.sym	FXOSMESSAGE,0,10,14,304,16
  4555                        	.sym	PINT_REGS,0,138,14,32,15
  4556                        	.sym	INT_REGS,0,10,14,104,15
  4557                        	.sym	TASK_STACK,0,10,14,32,14
  4558                        	.sym	TASK,0,10,14,48,13
  4559                        	.sym	PIRQDATA,0,138,14,32,12
  4560                        	.sym	IRQDATA,0,10,14,48,12
  4561                        	.sym	HMENU,0,129,14,32
  4562                        	.sym	HWND,0,129,14,32
  4563                        	.sym	MSGDATA,0,14,14,8
  Thu Dec  3 2020 22:25                                                Page 87


  4564                        	.sym	MSGDEST,0,18,14,32
  4565                        	.sym	MSGSRC,0,18,14,32
  4566                        	.sym	MSGTYPE,0,16,14,16
  4567                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  4568                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  4569                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  4570                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  4571                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  4572                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  4573                        	.sym	FILE_HANDLE,0,138,14,32,11
  4574                        	.sym	FILE_BLOCK,0,10,14,552,11
  4575                        	.sym	SEMAPHORE,0,10,14,16,10
  4576                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  4577                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  4578                        	.sym	KRESULT,0,18,14,32
  4579                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  4580                        	.sym	KERNEL_ERROR,0,10,14,32,8
  4581                        	.sym	PROCESS_STATUS,0,16,14,16
  4582                        	.sym	FILE_PATH_NAME,0,142,14,32
  4583                        	.sym	PROCESS_RESOURCE,0,129,14,32
  4584                        	.sym	PROCESS_TLS,0,129,14,32
  4585                        	.sym	PROCESS_CTX,0,129,14,32
  4586                        	.sym	USERID,0,16,14,16
  4587                        	.sym	PROCESS_ID,0,18,14,32
  4588                        	.sym	PROCESS_BANK,0,14,14,8
  4589                        	.sym	PFXQUEUE,0,138,14,32,7
  4590                        	.sym	FXQUEUE,0,10,14,80,7
  4591                        	.sym	PFXNODELIST,0,138,14,32,6
  4592                        	.sym	FXNODELIST,0,10,14,96,6
  4593                        	.sym	NodeListDeallocator,0,641,14,32
  4594                        	.sym	PFXNODE,0,138,14,32,5
  4595                        	.sym	FXNODE,0,10,14,384,5
  4596                        	.sym	PBYTEBITS,0,138,14,32,4
  4597                        	.sym	BYTEBITS,0,10,14,8,4
  4598                        	.sym	HCOLOR,0,129,14,32
  4599                        	.sym	HFONT,0,129,14,32
  4600                        	.sym	HDC,0,129,14,32
  4601                        	.sym	HPOINTER,0,129,14,32
  4602                        	.sym	uint32_t,0,18,14,32
  4603                        	.sym	uint8_t,0,14,14,8
  4604                        	.sym	PFAR,0,142,14,32
  4605                        	.sym	LPBOOL,0,142,14,32
  4606                        	.sym	BOOL,0,14,14,8
  4607                        	.sym	DWORD,0,18,14,32
  4608                        	.sym	ULONG,0,18,14,32
  4609                        	.sym	LPLONG,0,135,14,32
  4610                        	.sym	LONG,0,7,14,32
  4611                        	.sym	PUINT,0,144,14,32
  4612                        	.sym	USHORT,0,16,14,16
  4613                        	.sym	UINT,0,16,14,16
  4614                        	.sym	INT,0,5,14,16
  4615                        	.sym	WORD,0,5,14,16
  4616                        	.sym	PBYTE,0,142,14,32
  4617                        	.sym	BYTE,0,14,14,8
  4618                        	.sym	UCHAR,0,14,14,8
  4619                        	.sym	LPWCSTR,0,142,14,32
  4620                        	.sym	LPCSTR,0,142,14,32
  4621                        	.sym	LPSTR,0,142,14,32
  Thu Dec  3 2020 22:25                                                Page 88


  4622                        	.sym	LPCHAR,0,142,14,32
  4623                        	.sym	CHAR,0,14,14,8
  4624                        	.sym	LPVOID,0,129,14,32
  4625                        	.sym	VOID,0,1,14,32
  4626                        	.sym	~~srand,~~srand,65,18,0
  4627                        	.sym	~~rand,~~rand,69,18,0
  4628                        	.sym	~~atol,~~atol,71,18,0
  4629                        	.sym	ldiv_t,0,10,14,64,2
  4630                        	.sym	div_t,0,10,14,32,1
  4631                        	.sym	wctype_t,0,16,14,16
  4632                        	.sym	wint_t,0,16,14,16
  4633                        	.sym	wchar_t,0,14,14,8
  4634                        	.sym	ptrdiff_t,0,7,14,32
  4635                        	.sym	~~strcpy,~~strcpy,1102,18,32
  4636                        	.sym	~~strcmp,~~strcmp,69,18,0
  4637                        	.sym	~~strcat,~~strcat,1102,18,32
  4638                        	.sym	~~memset,~~memset,1089,18,32
  4639                        	.sym	Boolean_T,0,5,14,16
  4640                        	.sym	size_t,0,16,14,16
  4641                        	end


      Lines assembled: 4641
      Errors: 0
