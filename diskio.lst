  Thu Dec  3 2020 22:25                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",0
     7                        ;/*-----------------------------------------------
                    ------------------------*/
     8                        ;/* Low level disk I/O module skeleton for FatFs  
                       (C)ChaN, 2019        */
     9                        ;/*-----------------------------------------------
                    ------------------------*/
    10                        ;/* If a working storage control module is availab
                    le, it should be        */
    11                        ;/* attached to the FatFs via a glue function rath
                    er than modifying it.   */
    12                        ;/* This is an example of glue functions to attach
                     various exsisting      */
    13                        ;/* storage control modules to the FatFs module wi
                    th a defined API.       */
    14                        ;/*-----------------------------------------------
                    ------------------------*/
    15                        ;
    16                        ;#ifdef USE_FX256_FMX
    17                        ;
    18                        ;
    19                        ;#include "ff.h"			/* Obtains integ
                    er types */
    20                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",0
    21                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ffconf.h",0
    22                        	.line	298
    23                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",29
    24                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    25                        	.stag	_fx_bytebits,8,1
    26                        	.member	b7,0,14,17,1
    27                        	.member	b6,1,14,17,1
    28                        	.member	b5,2,14,17,1
    29                        	.member	b4,3,14,17,1
    30                        	.member	b3,4,14,17,1
    31                        	.member	b2,5,14,17,1
    32                        	.member	b1,6,14,17,1
    33                        	.member	b0,7,14,17,1
    34                        	.eos
    35                        	.stag	_fx_node,384,2
    36                        	.member	type,0,14,8,8
    37                        	.member	Reserved0,8,14,8,8
    38                        	.member	data,16,129,8,32
  Thu Dec  3 2020 22:25                                                Page 2


    39                        	.member	last,48,138,8,32,2
    40                        	.member	next,80,138,8,32,2
    41                        	.member	name,112,110,8,0,32
    42                        	.member	Reserved1,368,16,8,16
    43                        	.eos
    44                        	.stag	_fx_nodelist,96,3
    45                        	.member	listhead,0,138,8,32,2
    46                        	.member	listData,32,129,8,32
    47                        	.member	deallocator,64,641,8,32
    48                        	.eos
    49                        	.stag	_fx_queue,80,4
    50                        	.member	count,0,5,8,16
    51                        	.member	front,16,138,8,32,2
    52                        	.member	rear,48,138,8,32,2
    53                        	.eos
    54                        	.stag	fake5_,32,5
    55                        	.member	subsystem,0,14,8,8
    56                        	.member	level,8,14,8,8
    57                        	.member	error,16,16,8,16
    58                        	.eos
    59                        	.stag	_fx_process_signal,16,6
    60                        	.member	cbSize,0,16,8,16
    61                        	.eos
    62                        	.stag	_fx_semaphore,16,7
    63                        	.member	reserved,0,5,8,16
    64                        	.eos
    65                        	.stag	_fx_fileBlock,552,8
    66                        	.member	openCount,0,16,8,16
    67                        	.member	lockCount,16,16,8,16
    68                        	.member	dirty,32,14,8,8
    69                        	.member	fileBuffer,40,110,8,0,64
    70                        	.eos
    71                        	.stag	_fx_irq_data,48,9
    72                        	.member	line,0,5,8,16
    73                        	.member	keycode,16,142,8,32
    74                        	.eos
    75                        	.stag	_task,48,10
    76                        	.member	SPL,0,14,8,8
    77                        	.member	SPH,8,14,8,8
    78                        	.member	pstack,16,142,8,32
    79                        	.eos
    80                        	.stag	_task_stack,32,11
    81                        	.member	SS,0,142,8,32
    82                        	.eos
    83                        	.stag	int_regs,104,12
    84                        	.member	PB,0,14,8,8
    85                        	.member	PH,8,14,8,8
    86                        	.member	PL,16,14,8,8
    87                        	.member	PP,24,14,8,8
    88                        	.member	DB,32,14,8,8
    89                        	.member	DH,40,14,8,8
    90                        	.member	DL,48,14,8,8
    91                        	.member	AH,56,14,8,8
    92                        	.member	AL,64,14,8,8
    93                        	.member	XH,72,14,8,8
    94                        	.member	XL,80,14,8,8
    95                        	.member	YH,88,14,8,8
    96                        	.member	YL,96,14,8,8
  Thu Dec  3 2020 22:25                                                Page 3


    97                        	.eos
    98                        	.stag	_fx_eventMessage,304,13
    99                        	.member	src,0,18,8,32
   100                        	.member	dest,32,18,8,32
   101                        	.member	type,64,16,8,16
   102                        	.member	hwnd,80,129,8,32
   103                        	.member	pheap,112,129,8,32
   104                        	.member	msgTime,144,18,8,32
   105                        	.member	data,176,110,8,0,16
   106                        	.eos
   107                        	.stag	_fx_cmdMessage,304,14
   108                        	.member	src,0,18,8,32
   109                        	.member	dest,32,18,8,32
   110                        	.member	type,64,16,8,16
   111                        	.member	hwnd,80,129,8,32
   112                        	.member	pheap,112,129,8,32
   113                        	.member	msgTime,144,18,8,32
   114                        	.member	cmdCId,176,16,8,16
   115                        	.member	cmdMId,192,16,8,16
   116                        	.member	parameter1,208,18,8,32
   117                        	.member	parameter2,240,18,8,32
   118                        	.member	parameter3,272,18,8,32
   119                        	.eos
   120                        	.stag	_fx_console_ctl,448,15
   121                        	.member	maxCols,0,5,8,16
   122                        	.member	maxRows,16,5,8,16
   123                        	.member	curX,32,5,8,16
   124                        	.member	curY,48,5,8,16
   125                        	.member	fgColor,64,5,8,16
   126                        	.member	bgColor,80,5,8,16
   127                        	.member	mode,96,14,8,8
   128                        	.member	kbBuffer,104,101,8,0,16
   129                        	.member	screenBuffer,360,142,8,32
   130                        	.member	desktopMode,392,14,8,8
   131                        	.member	lastMouseButton,400,5,8,16
   132                        	.member	lastMouseX,416,5,8,16
   133                        	.member	lastMouseY,432,5,8,16
   134                        	.eos
   135                        	.stag	_fx_desktop_ctl,392,16
   136                        	.member	desktopMode,0,14,8,8
   137                        	.member	cursorCtl,8,5,8,16
   138                        	.member	cursorState,24,5,8,16
   139                        	.member	backgroundColor,40,5,8,16
   140                        	.member	foregroundColor,56,5,8,16
   141                        	.member	menuMode,72,5,8,16
   142                        	.member	lastMouseButton,88,5,8,16
   143                        	.member	lastMouseX,104,5,8,16
   144                        	.member	lastMouseY,120,5,8,16
   145                        	.member	currentDiskName,136,142,8,32
   146                        	.member	diskNodes,168,129,8,32
   147                        	.member	titleNodes,200,129,8,32
   148                        	.member	menuNodes,232,129,8,32
   149                        	.member	iconNodes,264,129,8,32
   150                        	.member	windowNodes,296,129,8,32
   151                        	.member	fontNodes,328,129,8,32
   152                        	.member	wndProc,360,138,8,32,3
   153                        	.eos
   154                        	.stag	_fx_process,800,17
  Thu Dec  3 2020 22:25                                                Page 4


   155                        	.member	cbSize,0,5,8,16
   156                        	.member	procId,16,18,8,32
   157                        	.member	parentId,48,18,8,32
   158                        	.member	ctx,80,129,8,32
   159                        	.member	userId,112,16,8,16
   160                        	.member	status,128,16,8,16
   161                        	.member	foregroundActive,144,14,8,8
   162                        	.member	tls,152,1121,8,32,8
   163                        	.member	commandLine,408,142,8,32
   164                        	.member	semaphores,440,138,8,32,3
   165                        	.member	fileHandles,472,138,8,32,3
   166                        	.member	pathList,504,138,8,32,3
   167                        	.member	resources,536,138,8,32,3
   168                        	.member	timerAware,568,14,8,8
   169                        	.member	timerTicks,576,112,8,0,2
   170                        	.member	timerTickCount,608,112,8,0,2
   171                        	.member	kernelError,640,10,8,32,5
   172                        	.member	consoleCtl,672,138,8,32,15
   173                        	.member	desktopCtl,704,138,8,32,16
   174                        	.member	execProc,736,641,8,32
   175                        	.member	startupArgs,768,129,8,32
   176                        	.eos
   177                        	.stag	_fxProcessMessage,112,18
   178                        	.member	src,0,18,8,32
   179                        	.member	dest,32,18,8,32
   180                        	.member	type,64,16,8,16
   181                        	.member	processInfo,80,138,8,32,17
   182                        	.eos
   183                        	.stag	_fx_property,384,19
   184                        	.member	name,0,110,8,0,16
   185                        	.member	value,128,110,8,0,32
   186                        	.eos
   187                        	.utag	_24bitPointer,32,20
   188                        	.member	address,0,142,11,32
   189                        	.member	bytes,0,110,11,0,4
   190                        	.eos
   191                        	.stag	_PointStruct,32,21
   192                        	.member	x,0,5,8,16
   193                        	.member	y,16,5,8,16
   194                        	.eos
   195                        	.stag	_RectStruct,64,22
   196                        	.member	x,0,5,8,16
   197                        	.member	y,16,5,8,16
   198                        	.member	width,32,5,8,16
   199                        	.member	height,48,5,8,16
   200                        	.eos
   201                        	.stag	_k_WindowClass,256,23
   202                        	.member	cbSize,0,16,8,16
   203                        	.member	style,16,16,8,16
   204                        	.member	pWndProc,32,654,8,32
   205                        	.member	hInstance,64,129,8,32
   206                        	.member	hIcon,96,129,8,32
   207                        	.member	hCursor,128,129,8,32
   208                        	.member	hbrBackground,160,129,8,32
   209                        	.member	lpszMenuName,192,142,8,32
   210                        	.member	lpszClassName,224,142,8,32
   211                        	.eos
   212                        	.stag	_ClickableRect,88,24
  Thu Dec  3 2020 22:25                                                Page 5


   213                        	.member	area,0,10,8,64,22
   214                        	.member	z,64,5,8,16
   215                        	.member	enabled,80,14,8,8
   216                        	.eos
   217                        	.stag	_NCClickableRect,88,25
   218                        	.member	area,0,10,8,64,22
   219                        	.member	msgType,64,16,8,16
   220                        	.member	enabled,80,14,8,8
   221                        	.eos
   222                        	.stag	_DragData,136,26
   223                        	.member	area,0,10,8,64,22
   224                        	.member	xoffset,64,5,8,16
   225                        	.member	yoffset,80,5,8,16
   226                        	.member	msgType,96,16,8,16
   227                        	.member	isDrag,112,14,8,8
   228                        	.member	canDrag,120,14,8,8
   229                        	.member	canDrop,128,14,8,8
   230                        	.eos
   231                        	.stag	_k_WindowStruct,2808,27
   232                        	.member	cbSize,0,16,8,16
   233                        	.member	style,16,18,8,32
   234                        	.member	win_id,48,5,8,16
   235                        	.member	win_x,64,5,8,16
   236                        	.member	win_y,80,5,8,16
   237                        	.member	win_width,96,5,8,16
   238                        	.member	win_height,112,5,8,16
   239                        	.member	wndRect,128,10,8,64,22
   240                        	.member	clientRect,192,10,8,64,22
   241                        	.member	nonclientGadgets,256,106,8,0,25,16
   242                        	.member	clickable,1664,129,8,32
   243                        	.member	win_title,1696,110,8,0,32
   244                        	.member	Reserved0,1952,16,8,16
   245                        	.member	win_class,1968,110,8,0,16
   246                        	.member	win_class_name,2096,110,8,0,32
   247                        	.member	nBitmapLayer,2352,16,8,16
   248                        	.member	procid,2368,18,8,32
   249                        	.member	pWndClass,2400,138,8,32,23
   250                        	.member	pParentWindow,2432,129,8,32
   251                        	.member	hMenu,2464,129,8,32
   252                        	.member	pChildWindows,2496,138,8,32,3
   253                        	.member	pChildHitList,2528,138,8,32,3
   254                        	.member	isVisible,2560,14,8,8
   255                        	.member	windowData,2568,129,8,32
   256                        	.member	clientData,2600,1121,8,32,6
   257                        	.member	isClosed,2792,14,8,8
   258                        	.member	isClosing,2800,14,8,8
   259                        	.eos
   260                        	.stag	_k_WindowStructEx,2704,28
   261                        	.member	cbSize,0,16,8,16
   262                        	.member	style,16,18,8,32
   263                        	.member	win_id,48,5,8,16
   264                        	.member	win_x,64,5,8,16
   265                        	.member	win_y,80,5,8,16
   266                        	.member	win_width,96,5,8,16
   267                        	.member	win_height,112,5,8,16
   268                        	.member	wndRect,128,10,8,64,22
   269                        	.member	clientRect,192,10,8,64,22
   270                        	.member	nonclientGadgets,256,106,8,0,25,16
  Thu Dec  3 2020 22:25                                                Page 6


   271                        	.member	clickable,1664,129,8,32
   272                        	.member	win_title,1696,110,8,0,32
   273                        	.member	Reserved0,1952,16,8,16
   274                        	.member	win_class,1968,110,8,0,16
   275                        	.member	nBitmapLayer,2096,16,8,16
   276                        	.member	procid,2112,18,8,32
   277                        	.member	pWndClass,2144,138,8,32,23
   278                        	.member	pParentWindow,2176,129,8,32
   279                        	.member	hMenu,2208,129,8,32
   280                        	.member	pChildWindows,2240,138,8,32,3
   281                        	.member	pChildHitList,2272,138,8,32,3
   282                        	.member	isVisible,2304,14,8,8
   283                        	.member	windowData,2312,129,8,32
   284                        	.member	clientData,2344,1121,8,32,4
   285                        	.member	isClosed,2472,14,8,8
   286                        	.member	hWnd,2480,129,8,32
   287                        	.member	localRect,2512,10,8,64,22
   288                        	.member	globalRect,2576,10,8,64,22
   289                        	.member	clientOffsetRect,2640,10,8,64,22
   290                        	.eos
   291                        	.stag	_FontMetric,32,29
   292                        	.member	width,0,5,8,16
   293                        	.member	height,16,5,8,16
   294                        	.eos
   295                        	.stag	_ctl_Textbox,112,30
   296                        	.member	win_id,0,5,8,16
   297                        	.member	win_x,16,5,8,16
   298                        	.member	win_y,32,5,8,16
   299                        	.member	win_width,48,5,8,16
   300                        	.member	win_height,64,5,8,16
   301                        	.member	content,80,1166,8,32
   302                        	.eos
   303                        	.stag	_MenuStruct,248,31
   304                        	.member	cx,0,5,8,16
   305                        	.member	cy,16,5,8,16
   306                        	.member	width,32,5,8,16
   307                        	.member	height,48,5,8,16
   308                        	.member	fcolor,64,14,8,8
   309                        	.member	bcolor,72,14,8,8
   310                        	.member	chromeLeft,80,14,8,8
   311                        	.member	chromeRight1,88,14,8,8
   312                        	.member	chromeRight2,96,14,8,8
   313                        	.member	itemId,104,16,8,16
   314                        	.member	pCaption,120,142,8,32
   315                        	.member	subMenus,152,138,8,32,3
   316                        	.member	pBackground,184,129,8,32
   317                        	.member	hWndOwner,216,129,8,32
   318                        	.eos
   319                        	.stag	fake32_,112,32
   320                        	.member	menuId,0,16,8,16
   321                        	.member	caption,16,142,8,32
   322                        	.member	rect,48,10,8,64,22
   323                        	.eos
   324                        	.stag	fake33_,3568,33
   325                        	.member	pParent,0,138,8,32,27
   326                        	.member	rect,32,10,8,64,22
   327                        	.member	captions,96,1134,8,32,24
   328                        	.member	chrome,864,110,8,0,24
  Thu Dec  3 2020 22:25                                                Page 7


   329                        	.member	ids,1056,112,8,0,24
   330                        	.member	clickable,1440,106,8,0,24,24
   331                        	.member	selected,3552,16,8,16
   332                        	.eos
   333                        	.stag	_fx_button_t,80,34
   334                        	.member	pCaption,0,142,8,32
   335                        	.member	data,32,129,8,32
   336                        	.member	captionPixelWidth,64,16,8,16
   337                        	.eos
   338                        	.stag	_fx_scrollbar_t,192,35
   339                        	.member	min,0,16,8,16
   340                        	.member	max,16,16,8,16
   341                        	.member	increment,32,16,8,16
   342                        	.member	stopsize,48,16,8,16
   343                        	.member	location,64,5,8,16
   344                        	.member	state,80,5,8,16
   345                        	.member	rectThumb,96,10,8,64,22
   346                        	.member	data,160,129,8,32
   347                        	.eos
   348                        	.stag	_fx_listbox_t,240,36
   349                        	.member	pos,0,5,8,16
   350                        	.member	selected,16,16,8,16
   351                        	.member	offsetX,32,5,8,16
   352                        	.member	offsetY,48,5,8,16
   353                        	.member	inc,64,5,8,16
   354                        	.member	direction,80,5,8,16
   355                        	.member	top,96,5,8,16
   356                        	.member	bottom,112,5,8,16
   357                        	.member	indexTop,128,5,8,16
   358                        	.member	indexBottom,144,5,8,16
   359                        	.member	maxItems,160,16,8,16
   360                        	.member	fontSet,176,142,8,32
   361                        	.member	data,208,129,8,32
   362                        	.eos
   363                        	.stag	_fx_textbox_t,144,37
   364                        	.member	pos,0,5,8,16
   365                        	.member	selected,16,16,8,16
   366                        	.member	offsetX,32,5,8,16
   367                        	.member	offsetY,48,5,8,16
   368                        	.member	isShifted,64,14,8,8
   369                        	.member	cursorState,72,14,8,8
   370                        	.member	fontSet,80,142,8,32
   371                        	.member	data,112,129,8,32
   372                        	.eos
   373                        	.stag	_fx_menuAnchor_t,144,38
   374                        	.member	pCaption,0,142,8,32
   375                        	.member	renderLayoutX,32,16,8,16
   376                        	.member	renderLayoutY,48,16,8,16
   377                        	.member	captionPixelWidth,64,16,8,16
   378                        	.member	data,80,129,8,32
   379                        	.member	droppedWindow,112,138,8,32,27
   380                        	.eos
   381                        	.stag	_SubMenuStruct,64,39
   382                        	.member	caption,0,142,8,32
   383                        	.member	action,32,641,8,32
   384                        	.eos
   385                        	.stag	_SubMenuListStruct,40,40
   386                        	.member	cMenus,0,14,8,8
  Thu Dec  3 2020 22:25                                                Page 8


   387                        	.member	psubmenus,8,9354,8,32,39
   388                        	.eos
   389                        	.stag	_fx_ComBuffer,2080,41
   390                        	.member	cbSize,0,16,8,16
   391                        	.member	cbBuffer,16,16,8,16
   392                        	.member	buffer,32,110,8,0,256
   393                        	.eos
   394                        	.line	708
   395                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\ff.h",30
   396                        	.stag	fake42_,4472,42
   397                        	.member	fs_type,0,14,8,8
   398                        	.member	pdrv,8,14,8,8
   399                        	.member	n_fats,16,14,8,8
   400                        	.member	wflag,24,14,8,8
   401                        	.member	fsi_flag,32,14,8,8
   402                        	.member	id,40,5,8,16
   403                        	.member	n_rootdir,56,5,8,16
   404                        	.member	csize,72,5,8,16
   405                        	.member	last_clst,88,18,8,32
   406                        	.member	free_clst,120,18,8,32
   407                        	.member	n_fatent,152,18,8,32
   408                        	.member	fsize,184,18,8,32
   409                        	.member	volbase,216,18,8,32
   410                        	.member	fatbase,248,18,8,32
   411                        	.member	dirbase,280,18,8,32
   412                        	.member	database,312,18,8,32
   413                        	.member	winsect,344,18,8,32
   414                        	.member	win,376,110,8,0,512
   415                        	.eos
   416                        	.stag	fake43_,128,43
   417                        	.member	fs,0,138,8,32,42
   418                        	.member	id,32,5,8,16
   419                        	.member	attr,48,14,8,8
   420                        	.member	stat,56,14,8,8
   421                        	.member	sclust,64,18,8,32
   422                        	.member	objsize,96,18,8,32
   423                        	.eos
   424                        	.stag	fake44_,4400,44
   425                        	.member	obj,0,10,8,128,43
   426                        	.member	flag,128,14,8,8
   427                        	.member	err,136,14,8,8
   428                        	.member	fptr,144,18,8,32
   429                        	.member	clust,176,18,8,32
   430                        	.member	sect,208,18,8,32
   431                        	.member	dir_sect,240,18,8,32
   432                        	.member	dir_ptr,272,142,8,32
   433                        	.member	buf,304,110,8,0,512
   434                        	.eos
   435                        	.stag	fake45_,352,45
   436                        	.member	obj,0,10,8,128,43
   437                        	.member	dptr,128,18,8,32
   438                        	.member	clust,160,18,8,32
   439                        	.member	sect,192,18,8,32
   440                        	.member	dir,224,142,8,32
   441                        	.member	fn,256,110,8,0,12
   442                        	.eos
   443                        	.stag	fake46_,176,46
  Thu Dec  3 2020 22:25                                                Page 9


   444                        	.member	fsize,0,18,8,32
   445                        	.member	fdate,32,5,8,16
   446                        	.member	ftime,48,5,8,16
   447                        	.member	fattrib,64,14,8,8
   448                        	.member	fname,72,110,8,0,13
   449                        	.eos
   450                        	.stag	fake47_,80,47
   451                        	.member	fmt,0,14,8,8
   452                        	.member	n_fat,8,14,8,8
   453                        	.member	align,16,16,8,16
   454                        	.member	n_root,32,16,8,16
   455                        	.member	au_size,48,18,8,32
   456                        	.eos
   457                        	.line	429
   458                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",13
   459                        ;#include "diskio.h"		/* Declarations 
                    of disk functions */
   460                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.h",0
   461                        	.line	77
   462                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",14
   463                        ;#include "fxdos.h"
   464                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",0
   465                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   466                        	.line	708
   467                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxdos.h",5
   468                        	.stag	_fx_sd_direntry,256,48
   469                        	.member	filename,0,110,8,0,11
   470                        	.member	type,88,14,8,8
   471                        	.member	attrs,96,110,8,0,20
   472                        	.eos
   473                        	.stag	_fx_info,416,49
   474                        	.member	stgName,0,110,8,0,32
   475                        	.member	Reserved1,256,14,8,8
   476                        	.member	stgType,264,16,8,16
   477                        	.member	Reserved2,280,14,8,8
   478                        	.member	stgReserved,288,110,8,0,16
   479                        	.eos
   480                        	.stag	_fx_fileinfo,136,50
   481                        	.member	type,0,14,8,8
   482                        	.member	pFilename,8,142,8,32
   483                        	.member	lSize,40,18,8,32
   484                        	.member	lcreateDate,72,18,8,32
   485                        	.member	lchangeDate,104,18,8,32
   486                        	.eos
   487                        	.stag	_FX_FAT_DIR_INFO,256,51
   488                        	.member	DIR_Name,0,110,8,0,11
   489                        	.member	DIR_Attr,88,14,8,8
   490                        	.member	DIR_NTRes,96,14,8,8
   491                        	.member	DIR_CrtTimeTenth,104,14,8,8
   492                        	.member	DIR_CrtTime,112,16,8,16
   493                        	.member	DIR_CrtDate,128,16,8,16
   494                        	.member	DIR_LstAccDate,144,16,8,16
  Thu Dec  3 2020 22:25                                                Page 10


   495                        	.member	DIR_FstClusHI,160,16,8,16
   496                        	.member	DIR_WrtTime,176,16,8,16
   497                        	.member	DIR_WrtDate,192,16,8,16
   498                        	.member	DIR_FstClusLO,208,16,8,16
   499                        	.member	DIR_FileSize,224,18,8,32
   500                        	.eos
   501                        	.stag	fat_extBS_32,416,52
   502                        	.member	table_size_32,0,18,8,32
   503                        	.member	extended_flags,32,16,8,16
   504                        	.member	fat_version,48,16,8,16
   505                        	.member	root_cluster,64,18,8,32
   506                        	.member	fat_info,96,16,8,16
   507                        	.member	backup_BS_sector,112,16,8,16
   508                        	.member	reserved_0,128,110,8,0,12
   509                        	.member	drive_number,224,14,8,8
   510                        	.member	reserved_1,232,14,8,8
   511                        	.member	boot_signature,240,14,8,8
   512                        	.member	volume_id,248,16,8,16
   513                        	.member	volume_label,264,110,8,0,11
   514                        	.member	fat_type_label,352,110,8,0,8
   515                        	.eos
   516                        	.stag	fat_extBS_16,192,53
   517                        	.member	bios_drive_num,0,14,8,8
   518                        	.member	reserved1,8,14,8,8
   519                        	.member	boot_signature,16,14,8,8
   520                        	.member	volume_id,24,16,8,16
   521                        	.member	volume_label,40,110,8,0,11
   522                        	.member	fat_type_label,128,110,8,0,8
   523                        	.eos
   524                        	.stag	fat_BS,688,54
   525                        	.member	bootjmp,0,110,8,0,3
   526                        	.member	oem_name,24,110,8,0,8
   527                        	.member	bytes_per_sector,88,16,8,16
   528                        	.member	sectors_per_cluster,104,14,8,8
   529                        	.member	reserved_sector_count,112,16,8,16
   530                        	.member	table_count,128,14,8,8
   531                        	.member	root_entry_count,136,16,8,16
   532                        	.member	total_sectors_16,152,16,8,16
   533                        	.member	media_type,168,14,8,8
   534                        	.member	table_size_16,176,16,8,16
   535                        	.member	sectors_per_track,192,16,8,16
   536                        	.member	head_side_count,208,16,8,16
   537                        	.member	hidden_sector_count,224,16,8,16
   538                        	.member	total_sectors_32,240,16,8,16
   539                        	.member	extended_section,256,110,8,0,54
   540                        	.eos
   541                        	.stag	__FATBootSector,928,55
   542                        	.member	bootjmp,0,110,8,0,3
   543                        	.member	oem_name,24,110,8,0,8
   544                        	.member	bytes_per_sector,88,16,8,16
   545                        	.member	sectors_per_cluster,104,14,8,8
   546                        	.member	reserved_sector_count,112,16,8,16
   547                        	.member	fat_table_count,128,14,8,8
   548                        	.member	root_entry_count,136,16,8,16
   549                        	.member	total_sectors_16,152,16,8,16
   550                        	.member	media_type,168,14,8,8
   551                        	.member	sectors_per_fat,176,16,8,16
   552                        	.member	sectors_per_track,192,16,8,16
  Thu Dec  3 2020 22:25                                                Page 11


   553                        	.member	head_side_count,208,16,8,16
   554                        	.member	hidden_sector_count,224,18,8,32
   555                        	.member	total_sectors_32,256,18,8,32
   556                        	.member	drive_number,288,14,8,8
   557                        	.member	reserved1,296,14,8,8
   558                        	.member	boot_sig,304,14,8,8
   559                        	.member	vol_id,312,18,8,32
   560                        	.member	vol_name,344,110,8,0,11
   561                        	.member	file_system_type,432,110,8,0,8
   562                        	.member	extended_section,496,110,8,0,54
   563                        	.eos
   564                        	.stag	__PARTITIONTABLE,128,56
   565                        	.member	first_byte,0,14,8,8
   566                        	.member	start_chs,8,110,8,0,3
   567                        	.member	partition_type,32,14,8,8
   568                        	.member	end_chs,40,110,8,0,3
   569                        	.member	start_sector,64,18,8,32
   570                        	.member	length_sectors,96,18,8,32
   571                        	.eos
   572                        	.stag	fake57_,4096,57
   573                        	.member	jmp,0,110,8,0,3
   574                        	.member	oem,24,110,8,0,8
   575                        	.member	sector_size,88,15,8,16
   576                        	.member	sectors_per_cluster,104,14,8,8
   577                        	.member	reserved_sectors,112,15,8,16
   578                        	.member	number_of_fats,128,14,8,8
   579                        	.member	root_dir_entries,136,15,8,16
   580                        	.member	total_sectors_short,152,15,8,16
   581                        	.member	media_descriptor,168,14,8,8
   582                        	.member	fat_size_sectors,176,15,8,16
   583                        	.member	sectors_per_track,192,15,8,16
   584                        	.member	number_of_heads,208,15,8,16
   585                        	.member	hidden_sectors,224,18,8,32
   586                        	.member	total_sectors_long,256,18,8,32
   587                        	.member	drive_number,288,14,8,8
   588                        	.member	current_head,296,14,8,8
   589                        	.member	boot_signature,304,14,8,8
   590                        	.member	volume_id,312,18,8,32
   591                        	.member	volume_label,344,110,8,0,11
   592                        	.member	fs_type,432,110,8,0,8
   593                        	.member	boot_code,496,110,8,0,448
   594                        	.member	boot_sector_signature,4080,15,8,16
   595                        	.eos
   596                        	.stag	__FAT16ENTRY,256,58
   597                        	.member	filename,0,110,8,0,8
   598                        	.member	ext,64,110,8,0,3
   599                        	.member	attributes,88,14,8,8
   600                        	.member	reserved,96,110,8,0,10
   601                        	.member	modify_time,176,16,8,16
   602                        	.member	modify_date,192,16,8,16
   603                        	.member	starting_cluster,208,16,8,16
   604                        	.member	file_size,224,18,8,32
   605                        	.eos
   606                        	.stag	__FAT16ENTRYLONG,288,59
   607                        	.member	filename,0,110,8,0,8
   608                        	.member	ext,64,110,8,0,3
   609                        	.member	attributes,88,14,8,8
   610                        	.member	reserved,96,110,8,0,10
  Thu Dec  3 2020 22:25                                                Page 12


   611                        	.member	modify_time,176,16,8,16
   612                        	.member	modify_date,192,16,8,16
   613                        	.member	starting_cluster,208,16,8,16
   614                        	.member	file_size,224,18,8,32
   615                        	.member	plongfileName,256,142,8,32
   616                        	.eos
   617                        	.stag	_LongFileName,256,60
   618                        	.member	sequenceNo,0,14,8,8
   619                        	.member	fileName_Part1,8,110,8,0,10
   620                        	.member	fileattribute,88,14,8,8
   621                        	.member	type,96,14,8,8
   622                        	.member	checksum,104,14,8,8
   623                        	.member	fileName_Part2,112,110,8,0,12
   624                        	.member	fstclusLO,208,5,8,16
   625                        	.member	fileName_Part3,224,110,8,0,4
   626                        	.eos
   627                        	.stag	_IDSECTOR,2048,61
   628                        	.member	wGenConfig,0,16,8,16
   629                        	.member	wNumCyls,16,16,8,16
   630                        	.member	wReserved,32,16,8,16
   631                        	.member	wNumHeads,48,16,8,16
   632                        	.member	wBytesPerTrack,64,16,8,16
   633                        	.member	wBytesPerSector,80,16,8,16
   634                        	.member	wSectorsPerTrack,96,16,8,16
   635                        	.member	wVendorUnique,112,112,8,0,3
   636                        	.member	sSerialNumber,160,110,8,0,20
   637                        	.member	wBufferType,320,16,8,16
   638                        	.member	wBufferSize,336,16,8,16
   639                        	.member	wECCSize,352,16,8,16
   640                        	.member	sFirmwareRev,368,110,8,0,8
   641                        	.member	sModelNumber,432,110,8,0,40
   642                        	.member	wMoreVendorUnique,752,16,8,16
   643                        	.member	wDoubleWordIO,768,16,8,16
   644                        	.member	wCapabilities,784,16,8,16
   645                        	.member	wReserved1,800,16,8,16
   646                        	.member	wPIOTiming,816,16,8,16
   647                        	.member	wDMATiming,832,16,8,16
   648                        	.member	wBS,848,16,8,16
   649                        	.member	wNumCurrentCyls,864,16,8,16
   650                        	.member	wNumCurrentHeads,880,16,8,16
   651                        	.member	wNumCurrentSectorsPerTrack,896,16,8,16
   652                        	.member	ulCurrentSectorCapacity,912,18,8,32
   653                        	.member	wMultSectorStuff,944,16,8,16
   654                        	.member	ulTotalAddressableSectors,960,18,8,32
   655                        	.member	wSingleWordDMA,992,16,8,16
   656                        	.member	wMultiWordDMA,1008,16,8,16
   657                        	.member	bReserved,1024,110,8,0,128
   658                        	.eos
   659                        	.stag	fake62_,16,62
   660                        	.member	Reserved1,0,16,17,1
   661                        	.member	Retired3,1,16,17,1
   662                        	.member	ResponseIncomplete,2,16,17,1
   663                        	.member	Retired2,3,16,17,3
   664                        	.member	FixedDevice,6,16,17,1
   665                        	.member	RemovableMedia,7,16,17,1
   666                        	.member	Retired1,8,16,17,7
   667                        	.member	DeviceType,15,16,17,1
   668                        	.eos
  Thu Dec  3 2020 22:25                                                Page 13


   669                        	.stag	fake63_,16,63
   670                        	.member	FeatureSupported,0,16,17,1
   671                        	.member	Reserved,1,16,17,15
   672                        	.eos
   673                        	.stag	fake64_,32,64
   674                        	.member	CurrentLongPhysicalSectorAlignment,0,14,
                    17,2
   675                        	.member	ReservedByte49,2,14,17,6
   676                        	.member	DmaSupported,8,14,17,1
   677                        	.member	LbaSupported,9,14,17,1
   678                        	.member	IordyDisable,10,14,17,1
   679                        	.member	IordySupported,11,14,17,1
   680                        	.member	Reserved1,12,14,17,1
   681                        	.member	StandybyTimerSupport,13,14,17,1
   682                        	.member	Reserved2,14,14,17,2
   683                        	.member	ReservedWord50,16,16,8,16
   684                        	.eos
   685                        	.stag	fake65_,16,65
   686                        	.member	ZonedCapabilities,0,16,17,2
   687                        	.member	NonVolatileWriteCache,2,16,17,1
   688                        	.member	ExtendedUserAddressableSectorsSupported,
                    3,16,17,1
   689                        	.member	DeviceEncryptsAllUserData,4,16,17,1
   690                        	.member	ReadZeroAfterTrimSupported,5,16,17,1
   691                        	.member	Optional28BitCommandsSupported,6,16,17,1
   692                        	.member	IEEE1667,7,16,17,1
   693                        	.member	DownloadMicrocodeDmaSupported,8,16,17,1
   694                        	.member	SetMaxSetPasswordUnlockDmaSupported,9,16
                    ,17,1
   695                        	.member	WriteBufferDmaSupported,10,16,17,1
   696                        	.member	ReadBufferDmaSupported,11,16,17,1
   697                        	.member	DeviceConfigIdentifySetDmaSupported,12,1
                    6,17,1
   698                        	.member	LPSAERCSupported,13,16,17,1
   699                        	.member	DeterministicReadAfterTrimSupported,14,1
                    6,17,1
   700                        	.member	CFastSpecSupported,15,16,17,1
   701                        	.eos
   702                        	.stag	fake66_,32,66
   703                        	.member	Reserved0,0,16,17,1
   704                        	.member	SataGen1,1,16,17,1
   705                        	.member	SataGen2,2,16,17,1
   706                        	.member	SataGen3,3,16,17,1
   707                        	.member	Reserved1,4,16,17,4
   708                        	.member	NCQ,8,16,17,1
   709                        	.member	HIPM,9,16,17,1
   710                        	.member	PhyEvents,10,16,17,1
   711                        	.member	NcqUnload,11,16,17,1
   712                        	.member	NcqPriority,12,16,17,1
   713                        	.member	HostAutoPS,13,16,17,1
   714                        	.member	DeviceAutoPS,14,16,17,1
   715                        	.member	ReadLogDMA,15,16,17,1
   716                        	.member	Reserved2,16,16,17,1
   717                        	.member	CurrentSpeed,17,16,17,3
   718                        	.member	NcqStreaming,20,16,17,1
   719                        	.member	NcqQueueMgmt,21,16,17,1
   720                        	.member	NcqReceiveSend,22,16,17,1
   721                        	.member	DEVSLPtoReducedPwrState,23,16,17,1
  Thu Dec  3 2020 22:25                                                Page 14


   722                        	.member	Reserved3,24,16,17,8
   723                        	.eos
   724                        	.stag	fake67_,16,67
   725                        	.member	Reserved0,0,16,17,1
   726                        	.member	NonZeroOffsets,1,16,17,1
   727                        	.member	DmaSetupAutoActivate,2,16,17,1
   728                        	.member	DIPM,3,16,17,1
   729                        	.member	InOrderData,4,16,17,1
   730                        	.member	HardwareFeatureControl,5,16,17,1
   731                        	.member	SoftwareSettingsPreservation,6,16,17,1
   732                        	.member	NCQAutosense,7,16,17,1
   733                        	.member	DEVSLP,8,16,17,1
   734                        	.member	HybridInformation,9,16,17,1
   735                        	.member	Reserved1,10,16,17,6
   736                        	.eos
   737                        	.stag	fake68_,16,68
   738                        	.member	Reserved0,0,16,17,1
   739                        	.member	NonZeroOffsets,1,16,17,1
   740                        	.member	DmaSetupAutoActivate,2,16,17,1
   741                        	.member	DIPM,3,16,17,1
   742                        	.member	InOrderData,4,16,17,1
   743                        	.member	HardwareFeatureControl,5,16,17,1
   744                        	.member	SoftwareSettingsPreservation,6,16,17,1
   745                        	.member	DeviceAutoPS,7,16,17,1
   746                        	.member	DEVSLP,8,16,17,1
   747                        	.member	HybridInformation,9,16,17,1
   748                        	.member	Reserved1,10,16,17,6
   749                        	.eos
   750                        	.stag	fake69_,48,69
   751                        	.member	SmartCommands,0,16,17,1
   752                        	.member	SecurityMode,1,16,17,1
   753                        	.member	RemovableMediaFeature,2,16,17,1
   754                        	.member	PowerManagement,3,16,17,1
   755                        	.member	Reserved1,4,16,17,1
   756                        	.member	WriteCache,5,16,17,1
   757                        	.member	LookAhead,6,16,17,1
   758                        	.member	ReleaseInterrupt,7,16,17,1
   759                        	.member	ServiceInterrupt,8,16,17,1
   760                        	.member	DeviceReset,9,16,17,1
   761                        	.member	HostProtectedArea,10,16,17,1
   762                        	.member	Obsolete1,11,16,17,1
   763                        	.member	WriteBuffer,12,16,17,1
   764                        	.member	ReadBuffer,13,16,17,1
   765                        	.member	Nop,14,16,17,1
   766                        	.member	Obsolete2,15,16,17,1
   767                        	.member	DownloadMicrocode,16,16,17,1
   768                        	.member	DmaQueued,17,16,17,1
   769                        	.member	Cfa,18,16,17,1
   770                        	.member	AdvancedPm,19,16,17,1
   771                        	.member	Msn,20,16,17,1
   772                        	.member	PowerUpInStandby,21,16,17,1
   773                        	.member	ManualPowerUp,22,16,17,1
   774                        	.member	Reserved2,23,16,17,1
   775                        	.member	SetMax,24,16,17,1
   776                        	.member	Acoustics,25,16,17,1
   777                        	.member	BigLba,26,16,17,1
   778                        	.member	DeviceConfigOverlay,27,16,17,1
   779                        	.member	FlushCache,28,16,17,1
  Thu Dec  3 2020 22:25                                                Page 15


   780                        	.member	FlushCacheExt,29,16,17,1
   781                        	.member	WordValid83,30,16,17,2
   782                        	.member	SmartErrorLog,32,16,17,1
   783                        	.member	SmartSelfTest,33,16,17,1
   784                        	.member	MediaSerialNumber,34,16,17,1
   785                        	.member	MediaCardPassThrough,35,16,17,1
   786                        	.member	StreamingFeature,36,16,17,1
   787                        	.member	GpLogging,37,16,17,1
   788                        	.member	WriteFua,38,16,17,1
   789                        	.member	WriteQueuedFua,39,16,17,1
   790                        	.member	WWN64Bit,40,16,17,1
   791                        	.member	URGReadStream,41,16,17,1
   792                        	.member	URGWriteStream,42,16,17,1
   793                        	.member	ReservedForTechReport,43,16,17,2
   794                        	.member	IdleWithUnloadFeature,45,16,17,1
   795                        	.member	WordValid,46,16,17,2
   796                        	.eos
   797                        	.stag	fake70_,48,70
   798                        	.member	SmartCommands,0,16,17,1
   799                        	.member	SecurityMode,1,16,17,1
   800                        	.member	RemovableMediaFeature,2,16,17,1
   801                        	.member	PowerManagement,3,16,17,1
   802                        	.member	Reserved1,4,16,17,1
   803                        	.member	WriteCache,5,16,17,1
   804                        	.member	LookAhead,6,16,17,1
   805                        	.member	ReleaseInterrupt,7,16,17,1
   806                        	.member	ServiceInterrupt,8,16,17,1
   807                        	.member	DeviceReset,9,16,17,1
   808                        	.member	HostProtectedArea,10,16,17,1
   809                        	.member	Obsolete1,11,16,17,1
   810                        	.member	WriteBuffer,12,16,17,1
   811                        	.member	ReadBuffer,13,16,17,1
   812                        	.member	Nop,14,16,17,1
   813                        	.member	Obsolete2,15,16,17,1
   814                        	.member	DownloadMicrocode,16,16,17,1
   815                        	.member	DmaQueued,17,16,17,1
   816                        	.member	Cfa,18,16,17,1
   817                        	.member	AdvancedPm,19,16,17,1
   818                        	.member	Msn,20,16,17,1
   819                        	.member	PowerUpInStandby,21,16,17,1
   820                        	.member	ManualPowerUp,22,16,17,1
   821                        	.member	Reserved2,23,16,17,1
   822                        	.member	SetMax,24,16,17,1
   823                        	.member	Acoustics,25,16,17,1
   824                        	.member	BigLba,26,16,17,1
   825                        	.member	DeviceConfigOverlay,27,16,17,1
   826                        	.member	FlushCache,28,16,17,1
   827                        	.member	FlushCacheExt,29,16,17,1
   828                        	.member	Resrved3,30,16,17,1
   829                        	.member	Words119_120Valid,31,16,17,1
   830                        	.member	SmartErrorLog,32,16,17,1
   831                        	.member	SmartSelfTest,33,16,17,1
   832                        	.member	MediaSerialNumber,34,16,17,1
   833                        	.member	MediaCardPassThrough,35,16,17,1
   834                        	.member	StreamingFeature,36,16,17,1
   835                        	.member	GpLogging,37,16,17,1
   836                        	.member	WriteFua,38,16,17,1
   837                        	.member	WriteQueuedFua,39,16,17,1
  Thu Dec  3 2020 22:25                                                Page 16


   838                        	.member	WWN64Bit,40,16,17,1
   839                        	.member	URGReadStream,41,16,17,1
   840                        	.member	URGWriteStream,42,16,17,1
   841                        	.member	ReservedForTechReport,43,16,17,2
   842                        	.member	IdleWithUnloadFeature,45,16,17,1
   843                        	.member	Reserved4,46,16,17,2
   844                        	.eos
   845                        	.stag	fake71_,16,71
   846                        	.member	TimeRequired,0,16,17,15
   847                        	.member	ExtendedTimeReported,15,16,17,1
   848                        	.eos
   849                        	.stag	fake72_,16,72
   850                        	.member	TimeRequired,0,16,17,15
   851                        	.member	ExtendedTimeReported,15,16,17,1
   852                        	.eos
   853                        	.stag	fake73_,16,73
   854                        	.member	LogicalSectorsPerPhysicalSector,0,16,17,
                    4
   855                        	.member	Reserved0,4,16,17,8
   856                        	.member	LogicalSectorLongerThan256Words,12,16,17
                    ,1
   857                        	.member	MultipleLogicalSectorsPerPhysicalSector,
                    13,16,17,1
   858                        	.member	Reserved1,14,16,17,2
   859                        	.eos
   860                        	.stag	fake74_,16,74
   861                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
   862                        	.member	WriteReadVerify,1,16,17,1
   863                        	.member	WriteUncorrectableExt,2,16,17,1
   864                        	.member	ReadWriteLogDmaExt,3,16,17,1
   865                        	.member	DownloadMicrocodeMode3,4,16,17,1
   866                        	.member	FreefallControl,5,16,17,1
   867                        	.member	SenseDataReporting,6,16,17,1
   868                        	.member	ExtendedPowerConditions,7,16,17,1
   869                        	.member	Reserved0,8,16,17,6
   870                        	.member	WordValid,14,16,17,2
   871                        	.eos
   872                        	.stag	fake75_,16,75
   873                        	.member	ReservedForDrqTechnicalReport,0,16,17,1
   874                        	.member	WriteReadVerify,1,16,17,1
   875                        	.member	WriteUncorrectableExt,2,16,17,1
   876                        	.member	ReadWriteLogDmaExt,3,16,17,1
   877                        	.member	DownloadMicrocodeMode3,4,16,17,1
   878                        	.member	FreefallControl,5,16,17,1
   879                        	.member	SenseDataReporting,6,16,17,1
   880                        	.member	ExtendedPowerConditions,7,16,17,1
   881                        	.member	Reserved0,8,16,17,6
   882                        	.member	Reserved1,14,16,17,2
   883                        	.eos
   884                        	.stag	fake76_,16,76
   885                        	.member	SecuritySupported,0,16,17,1
   886                        	.member	SecurityEnabled,1,16,17,1
   887                        	.member	SecurityLocked,2,16,17,1
   888                        	.member	SecurityFrozen,3,16,17,1
   889                        	.member	SecurityCountExpired,4,16,17,1
   890                        	.member	EnhancedSecurityEraseSupported,5,16,17,1
   891                        	.member	Reserved0,6,16,17,2
   892                        	.member	SecurityLevel,8,16,17,1
  Thu Dec  3 2020 22:25                                                Page 17


   893                        	.member	Reserved1,9,16,17,7
   894                        	.eos
   895                        	.stag	fake77_,16,77
   896                        	.member	MaximumCurrentInMA,0,16,17,12
   897                        	.member	CfaPowerMode1Disabled,12,16,17,1
   898                        	.member	CfaPowerMode1Required,13,16,17,1
   899                        	.member	Reserved0,14,16,17,1
   900                        	.member	Word160Supported,15,16,17,1
   901                        	.eos
   902                        	.stag	fake78_,16,78
   903                        	.member	SupportsTrim,0,16,17,1
   904                        	.member	Reserved0,1,16,17,15
   905                        	.eos
   906                        	.stag	fake79_,16,79
   907                        	.member	Supported,0,16,17,1
   908                        	.member	Reserved0,1,16,17,1
   909                        	.member	WriteSameSuported,2,16,17,1
   910                        	.member	ErrorRecoveryControlSupported,3,16,17,1
   911                        	.member	FeatureControlSuported,4,16,17,1
   912                        	.member	DataTablesSuported,5,16,17,1
   913                        	.member	Reserved1,6,16,17,6
   914                        	.member	VendorSpecific,12,16,17,4
   915                        	.eos
   916                        	.stag	fake80_,16,80
   917                        	.member	AlignmentOfLogicalWithinPhysical,0,16,17
                    ,14
   918                        	.member	Word209Supported,14,16,17,1
   919                        	.member	Reserved0,15,16,17,1
   920                        	.eos
   921                        	.stag	fake81_,16,81
   922                        	.member	NVCachePowerModeEnabled,0,16,17,1
   923                        	.member	Reserved0,1,16,17,3
   924                        	.member	NVCacheFeatureSetEnabled,4,16,17,1
   925                        	.member	Reserved1,5,16,17,3
   926                        	.member	NVCachePowerModeVersion,8,16,17,4
   927                        	.member	NVCacheFeatureSetVersion,12,16,17,4
   928                        	.eos
   929                        	.stag	fake82_,16,82
   930                        	.member	NVCacheEstimatedTimeToSpinUpInSeconds,0,
                    14,8,8
   931                        	.member	Reserved,8,14,8,8
   932                        	.eos
   933                        	.stag	fake83_,16,83
   934                        	.member	MajorVersion,0,16,17,12
   935                        	.member	TransportType,12,16,17,4
   936                        	.eos
   937                        	.stag	_IDENTIFY_DEVICE_DATA,4096,84
   938                        	.member	GeneralConfiguration,0,10,8,16,62
   939                        	.member	NumCylinders,16,16,8,16
   940                        	.member	SpecificConfiguration,32,16,8,16
   941                        	.member	NumHeads,48,16,8,16
   942                        	.member	Retired1Bytes,64,110,8,0,4
   943                        	.member	NumSectorsPerTrack,96,16,8,16
   944                        	.member	VendorUnique1Bytes,112,110,8,0,6
   945                        	.member	SerialNumber,160,110,8,0,20
   946                        	.member	Retired2,320,112,8,0,2
   947                        	.member	Obsolete1,352,16,8,16
   948                        	.member	FirmwareRevision,368,110,8,0,8
  Thu Dec  3 2020 22:25                                                Page 18


   949                        	.member	ModelNumber,432,110,8,0,40
   950                        	.member	MaximumBlockTransfer,752,14,8,8
   951                        	.member	VendorUnique2,760,14,8,8
   952                        	.member	TrustedComputing,768,10,8,16,63
   953                        	.member	Capabilities,784,10,8,32,64
   954                        	.member	ObsoleteWords51,816,112,8,0,2
   955                        	.member	TranslationFieldsValid,848,16,17,3
   956                        	.member	Reserved3,851,16,17,5
   957                        	.member	FreeFallControlSensitivity,856,16,17,8
   958                        	.member	NumberOfCurrentCylinders,864,16,8,16
   959                        	.member	NumberOfCurrentHeads,880,16,8,16
   960                        	.member	CurrentSectorsPerTrack,896,16,8,16
   961                        	.member	CurrentSectorCapacity,912,18,8,32
   962                        	.member	CurrentMultiSectorSetting,944,14,8,8
   963                        	.member	MultiSectorSettingValid,952,14,17,1
   964                        	.member	ReservedByte59,953,14,17,3
   965                        	.member	SanitizeFeatureSupported,956,14,17,1
   966                        	.member	CryptoScrambleExtCommandSupported,957,14
                    ,17,1
   967                        	.member	OverwriteExtCommandSupported,958,14,17,1
   968                        	.member	BlockEraseExtCommandSupported,959,14,17,
                    1
   969                        	.member	UserAddressableSectors,960,18,8,32
   970                        	.member	ObsoleteWord62,992,16,8,16
   971                        	.member	MultiWordDMASupport,1008,16,17,8
   972                        	.member	MultiWordDMAActive,1016,16,17,8
   973                        	.member	AdvancedPIOModes,1024,16,17,8
   974                        	.member	ReservedByte64,1032,16,17,8
   975                        	.member	MinimumMWXferCycleTime,1040,16,8,16
   976                        	.member	RecommendedMWXferCycleTime,1056,16,8,16
   977                        	.member	MinimumPIOCycleTime,1072,16,8,16
   978                        	.member	MinimumPIOCycleTimeIORDY,1088,16,8,16
   979                        	.member	AdditionalSupported,1104,10,8,16,65
   980                        	.member	ReservedWords70,1120,112,8,0,5
   981                        	.member	QueueDepth,1200,16,17,5
   982                        	.member	ReservedWord75,1205,16,17,11
   983                        	.member	SerialAtaCapabilities,1216,10,8,32,66
   984                        	.member	SerialAtaFeaturesSupported,1248,10,8,16,
                    67
   985                        	.member	SerialAtaFeaturesEnabled,1264,10,8,16,68
   986                        	.member	MajorRevision,1280,16,8,16
   987                        	.member	MinorRevision,1296,16,8,16
   988                        	.member	CommandSetSupport,1312,10,8,48,69
   989                        	.member	CommandSetActive,1360,10,8,48,70
   990                        	.member	UltraDMASupport,1408,16,17,8
   991                        	.member	UltraDMAActive,1416,16,17,8
   992                        	.member	NormalSecurityEraseUnit,1424,10,8,16,71
   993                        	.member	EnhancedSecurityEraseUnit,1440,10,8,16,7
                    2
   994                        	.member	CurrentAPMLevel,1456,16,17,8
   995                        	.member	ReservedWord91,1464,16,17,8
   996                        	.member	MasterPasswordID,1472,16,8,16
   997                        	.member	HardwareResetResult,1488,16,8,16
   998                        	.member	CurrentAcousticValue,1504,16,17,8
   999                        	.member	RecommendedAcousticValue,1512,16,17,8
  1000                        	.member	StreamMinRequestSize,1520,16,8,16
  1001                        	.member	StreamingTransferTimeDMA,1536,16,8,16
  1002                        	.member	StreamingAccessLatencyDMAPIO,1552,16,8,1
  Thu Dec  3 2020 22:25                                                Page 19


                    6
  1003                        	.member	StreamingPerfGranularity,1568,18,8,32
  1004                        	.member	Max48BitLBA,1600,114,8,0,2
  1005                        	.member	StreamingTransferTime,1664,16,8,16
  1006                        	.member	DsmCap,1680,16,8,16
  1007                        	.member	PhysicalLogicalSectorSize,1696,10,8,16,7
                    3
  1008                        	.member	InterSeekDelay,1712,16,8,16
  1009                        	.member	WorldWideName,1728,112,8,0,4
  1010                        	.member	ReservedForWorldWideName128,1792,112,8,0
                    ,4
  1011                        	.member	ReservedForTlcTechnicalReport,1856,16,8,
                    16
  1012                        	.member	WordsPerLogicalSector,1872,112,8,0,2
  1013                        	.member	CommandSetSupportExt,1904,10,8,16,74
  1014                        	.member	CommandSetActiveExt,1920,10,8,16,75
  1015                        	.member	ReservedForExpandedSupportandActive,1936
                    ,112,8,0,6
  1016                        	.member	MsnSupport,2032,16,17,2
  1017                        	.member	ReservedWord127,2034,16,17,14
  1018                        	.member	SecurityStatus,2048,10,8,16,76
  1019                        	.member	ReservedWord129,2064,112,8,0,31
  1020                        	.member	CfaPowerMode1,2560,10,8,16,77
  1021                        	.member	ReservedForCfaWord161,2576,112,8,0,7
  1022                        	.member	NominalFormFactor,2688,16,17,4
  1023                        	.member	ReservedWord168,2692,16,17,12
  1024                        	.member	DataSetManagementFeature,2704,10,8,16,78
  1025                        	.member	AdditionalProductID,2720,112,8,0,4
  1026                        	.member	ReservedForCfaWord174,2784,112,8,0,2
  1027                        	.member	CurrentMediaSerialNumber,2816,112,8,0,30
  1028                        	.member	SCTCommandTransport,3296,10,8,16,79
  1029                        	.member	ReservedWord207,3312,112,8,0,2
  1030                        	.member	BlockAlignment,3344,10,8,16,80
  1031                        	.member	WriteReadVerifySectorCountMode3Only,3360
                    ,112,8,0,2
  1032                        	.member	WriteReadVerifySectorCountMode2Only,3392
                    ,112,8,0,2
  1033                        	.member	NVCacheCapabilities,3424,10,8,16,81
  1034                        	.member	NVCacheSizeLSW,3440,16,8,16
  1035                        	.member	NVCacheSizeMSW,3456,16,8,16
  1036                        	.member	NominalMediaRotationRate,3472,16,8,16
  1037                        	.member	ReservedWord218,3488,16,8,16
  1038                        	.member	NVCacheOptions,3504,10,8,16,82
  1039                        	.member	WriteReadVerifySectorCountMode,3520,16,1
                    7,8
  1040                        	.member	ReservedWord220,3528,16,17,8
  1041                        	.member	ReservedWord221,3536,16,8,16
  1042                        	.member	TransportMajorVersion,3552,10,8,16,83
  1043                        	.member	TransportMinorVersion,3568,16,8,16
  1044                        	.member	ReservedWord224,3584,112,8,0,6
  1045                        	.member	ExtendedNumberOfUserAddressableSectors,3
                    680,114,8,0,2
  1046                        	.member	MinBlocksPerDownloadMicrocodeMode03,3744
                    ,16,8,16
  1047                        	.member	MaxBlocksPerDownloadMicrocodeMode03,3760
                    ,16,8,16
  1048                        	.member	ReservedWord236,3776,112,8,0,19
  1049                        	.member	Signature,4080,16,17,8
  Thu Dec  3 2020 22:25                                                Page 20


  1050                        	.member	CheckSum,4088,16,17,8
  1051                        	.eos
  1052                        	.stag	_FXDosDevice,5648,85
  1053                        	.member	type,0,14,8,8
  1054                        	.member	initialized,8,14,8,8
  1055                        	.member	devdata,16,129,8,32
  1056                        	.member	devstatus,48,14,8,8
  1057                        	.member	bootSector,56,10,8,928,55
  1058                        	.member	partitionTable,984,10,8,128,56
  1059                        	.member	fileAllocationTable,1112,110,8,0,512
  1060                        	.member	bsOffset,5208,18,8,32
  1061                        	.member	rootDirSectors,5240,18,8,32
  1062                        	.member	root_entry_count,5272,5,8,16
  1063                        	.member	rootEntriesPerPage,5288,5,8,16
  1064                        	.member	sectors_per_cluster,5304,5,8,16
  1065                        	.member	fatTableOffset,5320,18,8,32
  1066                        	.member	volume_name,5352,110,8,0,12
  1067                        	.member	root_volume_name,5448,110,8,0,12
  1068                        	.member	errorCode,5544,14,8,8
  1069                        	.member	pfInit,5552,641,8,32
  1070                        	.member	pfReader,5584,654,8,32
  1071                        	.member	pfWriter,5616,654,8,32
  1072                        	.eos
  1073                        	.line	705
  1074                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",15
  1075                        ;
  1076                        ;/* Definitions of physical drive number for each 
                    drive */
  1077                        ;#define DEV_RAM		0	/* Example: Map 
                    Ramdisk to physical drive 0 */
  1078                        ;#define DEV_MMC		1	/* Example: Map 
                    MMC/SD card to physical drive 1 */
  1079                        ;#define DEV_USB		2	/* Example: Map 
                    USB MSD to physical drive 2 */
  1080                        ;
  1081                        ;
  1082                        ;static PFXDOSDEVICE diskioDevices[] = {NULL,NULL,
                    NULL};
  1083                        	data
  1084                        ~~diskioDevices:
  1085 00:0000: 00 00 00 00  	dl	$0,$0,$0
       00:0004: 00 00 00 00 
       00:0008: 00 00 00 00 
  1086 00:000C:              	ends
  1087                        ;
  1088                        ;
  1089                        ;/*-----------------------------------------------
                    ------------------------*/
  1090                        ;/* Get Drive Status                              
                                            */
  1091                        ;/*-----------------------------------------------
                    ------------------------*/
  1092                        ;
  1093                        ;DSTATUS disk_status (
  1094                        ;	BYTE pdrv		/* Physical drive nmuber
                     to identify the drive */
  1095                        ;)
  Thu Dec  3 2020 22:25                                                Page 21


  1096                        ;{
  1097                        	.line	30
  1098                        	.line	33
  1099                        	code
  1100                        	xdef	~~disk_status
  1101                        	func
  1102                        	.function	33
  1103                        ~~disk_status:
  1104                        	longa	on
  1105                        	longi	on
  1106 00:0000: 3B           	tsc
  1107 00:0001: 38           	sec
  1108 00:0002: E9 03 00     	sbc	#L2
  1109 00:0005: 1B           	tcs
  1110 00:0006: 0B           	phd
  1111 00:0007: 5B           	tcd
  1112             00000004   pdrv_0	set	4
  1113                        	.block	33
  1114                        ;	DSTATUS stat = STA_NOINIT;
  1115                        ;	int result;
  1116                        ;
  1117                        ;	k_debug_hex("disk_status:",pdrv);
  1118             00000000   stat_1	set	0
  1119             00000001   result_1	set	1
  1120                        	.sym	stat,0,14,1,8
  1121                        	.sym	result,1,5,1,16
  1122                        	.sym	pdrv,4,14,6,8
  1123 00:0008: E2 20        	sep	#$20
  1124                        	longa	off
  1125 00:000A: A9 01        	lda	#$1
  1126 00:000C: 85 01        	sta	<L3+stat_1
  1127 00:000E: C2 20        	rep	#$20
  1128                        	longa	on
  1129                        	.line	37
  1130 00:0010: A5 07        	lda	<L2+pdrv_0
  1131 00:0012: 29 FF 00     	and	#$ff
  1132 00:0015: 48           	pha
  1133 00:0016: F4 xx xx     	pea	#^L1
  1134 00:0019: F4 xx xx     	pea	#<L1
  1135 00:001C: 22 xx xx xx  	jsl	~~k_debug_hex
  1136                        ;
  1137                        ;	switch (pdrv) {
  1138                        	.line	39
  1139 00:0020: A5 07        	lda	<L2+pdrv_0
  1140 00:0022: 29 FF 00     	and	#$ff
  1141 00:0025: 82 25 00     	brl	L10001
  1142                        	.line	39
  1143                        ;	case DEV_RAM :
  1144                        	.line	40
  1145                        L10003:
  1146                        ;		//result = RAM_disk_status();
  1147                        ;
  1148                        ;		// translate the reslut code here
  1149                        ;
  1150                        ;		return RES_OK;
  1151                        	.line	45
  1152 00:0028: A9 00 00     	lda	#$0
  1153                        L5:
  Thu Dec  3 2020 22:25                                                Page 22


  1154 00:002B: A8           	tay
  1155 00:002C: A5 05        	lda	<L2+2
  1156 00:002E: 85 07        	sta	<L2+2+2
  1157 00:0030: A5 04        	lda	<L2+1
  1158 00:0032: 85 06        	sta	<L2+1+2
  1159 00:0034: 2B           	pld
  1160 00:0035: 3B           	tsc
  1161 00:0036: 18           	clc
  1162 00:0037: 69 05 00     	adc	#L2+2
  1163 00:003A: 1B           	tcs
  1164 00:003B: 98           	tya
  1165 00:003C: 6B           	rtl
  1166                        ;
  1167                        ;	case DEV_MMC :
  1168                        	.line	47
  1169                        L10004:
  1170                        ;		//result = MMC_disk_status();
  1171                        ;
  1172                        ;		// translate the reslut code here
  1173                        ;
  1174                        ;		return stat;
  1175                        	.line	52
  1176 00:003D: A5 01        	lda	<L3+stat_1
  1177 00:003F: 29 FF 00     	and	#$ff
  1178 00:0042: 82 E6 FF     	brl	L5
  1179                        ;
  1180                        ;	case DEV_USB :
  1181                        	.line	54
  1182                        L10005:
  1183                        ;		//result = USB_disk_status();
  1184                        ;
  1185                        ;		// translate the reslut code here
  1186                        ;
  1187                        ;		return stat;
  1188                        	.line	59
  1189 00:0045: A5 01        	lda	<L3+stat_1
  1190 00:0047: 29 FF 00     	and	#$ff
  1191 00:004A: 82 DE FF     	brl	L5
  1192                        ;	}
  1193                        	.line	60
  1194                        L10001:
  1195                        	xref	~~~swt
  1196 00:004D: 22 xx xx xx  	jsl	~~~swt
  1197 00:0051: 03 00        	dw	3
  1198 00:0053: 00 00        	dw	0
  1199 00:0055: xx xx        	dw	L10003-1
  1200 00:0057: 01 00        	dw	1
  1201 00:0059: xx xx        	dw	L10004-1
  1202 00:005B: 02 00        	dw	2
  1203 00:005D: xx xx        	dw	L10005-1
  1204 00:005F: xx xx        	dw	L10002-1
  1205                        L10002:
  1206                        ;	return STA_NOINIT;
  1207                        	.line	61
  1208 00:0061: A9 01 00     	lda	#$1
  1209 00:0064: 82 C4 FF     	brl	L5
  1210                        ;}
  1211                        	.line	62
  Thu Dec  3 2020 22:25                                                Page 23


  1212                        	.endblock	62
  1213             00000003   L2	equ	3
  1214             00000001   L3	equ	1
  1215                        	ends
  1216                        	efunc
  1217                        	.endfunc	62,1,3
  1218                        	.line	62
  1219                        	data
  1220                        L1:
  1221 00:000C: 64 69 73 6B  	db	$64,$69,$73,$6B,$5F,$73,$74,$61,$74,$75,
                    $73,$3A,$00
       00:0010: 5F 73 74 61 
       00:0014: 74 75 73 3A 
       00:0018: 00 
  1222 00:0019:              	ends
  1223                        ;
  1224                        ;
  1225                        ;
  1226                        ;/*-----------------------------------------------
                    ------------------------*/
  1227                        ;/* Inidialize a Drive                            
                                            */
  1228                        ;/*-----------------------------------------------
                    ------------------------*/
  1229                        ;
  1230                        ;DSTATUS disk_initialize (
  1231                        ;	BYTE pdrv				/* Physi
                    cal drive nmuber to identify the drive */
  1232                        ;)
  1233                        ;{
  1234                        	.line	70
  1235                        	.line	73
  1236                        	code
  1237                        	xdef	~~disk_initialize
  1238                        	func
  1239                        	.function	73
  1240                        ~~disk_initialize:
  1241                        	longa	on
  1242                        	longi	on
  1243 00:0067: 3B           	tsc
  1244 00:0068: 38           	sec
  1245 00:0069: E9 0B 00     	sbc	#L7
  1246 00:006C: 1B           	tcs
  1247 00:006D: 0B           	phd
  1248 00:006E: 5B           	tcd
  1249             00000004   pdrv_0	set	4
  1250                        	.block	73
  1251                        ;	DSTATUS stat = STA_NOINIT;
  1252                        ;	int result = 0;
  1253                        ;
  1254                        ;	k_debug_integer( "------- disk_initialize:dev:",
                    pdrv);
  1255             00000000   stat_1	set	0
  1256             00000001   result_1	set	1
  1257                        	.sym	stat,0,14,1,8
  1258                        	.sym	result,1,5,1,16
  1259                        	.sym	pdrv,4,14,6,8
  1260 00:006F: E2 20        	sep	#$20
  Thu Dec  3 2020 22:25                                                Page 24


  1261                        	longa	off
  1262 00:0071: A9 01        	lda	#$1
  1263 00:0073: 85 09        	sta	<L8+stat_1
  1264 00:0075: C2 20        	rep	#$20
  1265                        	longa	on
  1266 00:0077: 64 0A        	stz	<L8+result_1
  1267                        	.line	77
  1268 00:0079: A5 0F        	lda	<L7+pdrv_0
  1269 00:007B: 29 FF 00     	and	#$ff
  1270 00:007E: 48           	pha
  1271 00:007F: F4 xx xx     	pea	#^L6
  1272 00:0082: F4 xx xx     	pea	#<L6
  1273 00:0085: 22 xx xx xx  	jsl	~~k_debug_integer
  1274                        ;	k_debug_string("------- disk_initialize...\r\n")
                    ;
  1275                        	.line	78
  1276 00:0089: F4 xx xx     	pea	#^L6+29
  1277 00:008C: F4 xx xx     	pea	#<L6+29
  1278 00:008F: 22 xx xx xx  	jsl	~~k_debug_string
  1279                        ;
  1280                        ;	switch (pdrv)
  1281                        	.line	80
  1282 00:0093: A5 0F        	lda	<L7+pdrv_0
  1283 00:0095: 29 FF 00     	and	#$ff
  1284 00:0098: 82 D7 00     	brl	L10006
  1285                        ;	{
  1286                        	.line	81
  1287                        ;	case DEV_RAM :
  1288                        	.line	82
  1289                        L10008:
  1290                        ;
  1291                        ;		k_debug_pointer( "------- disk_initializ
                    e:diskioDevices[pdrv]:",diskioDevices[pdrv]);
  1292                        	.line	84
  1293 00:009B: A5 0F        	lda	<L7+pdrv_0
  1294 00:009D: 29 FF 00     	and	#$ff
  1295 00:00A0: 85 05        	sta	<R1
  1296 00:00A2: A5 05        	lda	<R1
  1297 00:00A4: 0A           	asl	A
  1298 00:00A5: 0A           	asl	A
  1299 00:00A6: 85 01        	sta	<R0
  1300 00:00A8: 18           	clc
  1301 00:00A9: A9 xx xx     	lda	#<~~diskioDevices
  1302 00:00AC: 65 01        	adc	<R0
  1303 00:00AE: 85 05        	sta	<R1
  1304 00:00B0: A0 02 00     	ldy	#$2
  1305 00:00B3: B1 05        	lda	(<R1),Y
  1306 00:00B5: 48           	pha
  1307 00:00B6: B2 05        	lda	(<R1)
  1308 00:00B8: 48           	pha
  1309 00:00B9: F4 xx xx     	pea	#^L6+58
  1310 00:00BC: F4 xx xx     	pea	#<L6+58
  1311 00:00BF: 22 xx xx xx  	jsl	~~k_debug_pointer
  1312                        ;
  1313                        ;		if(diskioDevices[pdrv] == NULL)
  1314                        	.line	86
  1315                        ;			diskioDevices[pdrv] =  k_create_
                    dos_device(FXDOS_SDC);
  Thu Dec  3 2020 22:25                                                Page 25


  1316 00:00C3: A5 0F        	lda	<L7+pdrv_0
  1317 00:00C5: 29 FF 00     	and	#$ff
  1318 00:00C8: 85 05        	sta	<R1
  1319 00:00CA: A5 05        	lda	<R1
  1320 00:00CC: 0A           	asl	A
  1321 00:00CD: 0A           	asl	A
  1322 00:00CE: 85 01        	sta	<R0
  1323 00:00D0: 18           	clc
  1324 00:00D1: A9 xx xx     	lda	#<~~diskioDevices
  1325 00:00D4: 65 01        	adc	<R0
  1326 00:00D6: 85 05        	sta	<R1
  1327 00:00D8: B2 05        	lda	(<R1)
  1328 00:00DA: A0 02 00     	ldy	#$2
  1329 00:00DD: 11 05        	ora	(<R1),Y
  1330 00:00DF: F0 03        	beq	L10
  1331 00:00E1: 82 2B 00     	brl	L10009
  1332                        L10:
  1333                        	.line	87
  1334 00:00E4: A5 0F        	lda	<L7+pdrv_0
  1335 00:00E6: 29 FF 00     	and	#$ff
  1336 00:00E9: 85 05        	sta	<R1
  1337 00:00EB: A5 05        	lda	<R1
  1338 00:00ED: 0A           	asl	A
  1339 00:00EE: 0A           	asl	A
  1340 00:00EF: 85 01        	sta	<R0
  1341 00:00F1: 18           	clc
  1342 00:00F2: A9 xx xx     	lda	#<~~diskioDevices
  1343 00:00F5: 65 01        	adc	<R0
  1344 00:00F7: 85 05        	sta	<R1
  1345 00:00F9: F4 05 00     	pea	#<$5
  1346 00:00FC: 22 xx xx xx  	jsl	~~k_create_dos_device
  1347 00:0100: 85 01        	sta	<R0
  1348 00:0102: 86 03        	stx	<R0+2
  1349 00:0104: A5 01        	lda	<R0
  1350 00:0106: 92 05        	sta	(<R1)
  1351 00:0108: A5 03        	lda	<R0+2
  1352 00:010A: A0 02 00     	ldy	#$2
  1353 00:010D: 91 05        	sta	(<R1),Y
  1354                        ;
  1355                        ;		k_debug_pointer( "------- disk_initializ
                    e:diskioDevices[pdrv]:",diskioDevices[pdrv]);
  1356                        L10009:
  1357                        	.line	89
  1358 00:010F: A5 0F        	lda	<L7+pdrv_0
  1359 00:0111: 29 FF 00     	and	#$ff
  1360 00:0114: 85 05        	sta	<R1
  1361 00:0116: A5 05        	lda	<R1
  1362 00:0118: 0A           	asl	A
  1363 00:0119: 0A           	asl	A
  1364 00:011A: 85 01        	sta	<R0
  1365 00:011C: 18           	clc
  1366 00:011D: A9 xx xx     	lda	#<~~diskioDevices
  1367 00:0120: 65 01        	adc	<R0
  1368 00:0122: 85 05        	sta	<R1
  1369 00:0124: A0 02 00     	ldy	#$2
  1370 00:0127: B1 05        	lda	(<R1),Y
  1371 00:0129: 48           	pha
  1372 00:012A: B2 05        	lda	(<R1)
  Thu Dec  3 2020 22:25                                                Page 26


  1373 00:012C: 48           	pha
  1374 00:012D: F4 xx xx     	pea	#^L6+103
  1375 00:0130: F4 xx xx     	pea	#<L6+103
  1376 00:0133: 22 xx xx xx  	jsl	~~k_debug_pointer
  1377                        ;		//result = RAM_disk_initialize();
  1378                        ;
  1379                        ;		if(diskioDevices[pdrv] != NULL)
  1380                        	.line	92
  1381                        ;			stat = 0x00;
  1382 00:0137: A5 0F        	lda	<L7+pdrv_0
  1383 00:0139: 29 FF 00     	and	#$ff
  1384 00:013C: 85 05        	sta	<R1
  1385 00:013E: A5 05        	lda	<R1
  1386 00:0140: 0A           	asl	A
  1387 00:0141: 0A           	asl	A
  1388 00:0142: 85 01        	sta	<R0
  1389 00:0144: 18           	clc
  1390 00:0145: A9 xx xx     	lda	#<~~diskioDevices
  1391 00:0148: 65 01        	adc	<R0
  1392 00:014A: 85 05        	sta	<R1
  1393 00:014C: B2 05        	lda	(<R1)
  1394 00:014E: A0 02 00     	ldy	#$2
  1395 00:0151: 11 05        	ora	(<R1),Y
  1396 00:0153: D0 03        	bne	L11
  1397 00:0155: 82 09 00     	brl	L10010
  1398                        L11:
  1399                        	.line	93
  1400 00:0158: E2 20        	sep	#$20
  1401                        	longa	off
  1402 00:015A: 64 09        	stz	<L8+stat_1
  1403 00:015C: C2 20        	rep	#$20
  1404                        	longa	on
  1405                        ;		else
  1406 00:015E: 82 08 00     	brl	L10011
  1407                        L10010:
  1408                        ;			stat = STA_NOINIT;
  1409                        	.line	95
  1410 00:0161: E2 20        	sep	#$20
  1411                        	longa	off
  1412 00:0163: A9 01        	lda	#$1
  1413 00:0165: 85 09        	sta	<L8+stat_1
  1414 00:0167: C2 20        	rep	#$20
  1415                        	longa	on
  1416                        L10011:
  1417                        ;		// translate the reslut code here
  1418                        ;
  1419                        ;		//return stat;
  1420                        ;		break;
  1421                        	.line	99
  1422 00:0169: 82 1A 00     	brl	L10007
  1423                        ;	case DEV_MMC :
  1424                        	.line	100
  1425                        L10012:
  1426                        ;		//result = MMC_disk_initialize();
  1427                        ;
  1428                        ;		// translate the reslut code here
  1429                        ;
  1430                        ;		//return stat;
  Thu Dec  3 2020 22:25                                                Page 27


  1431                        ;		break;
  1432                        	.line	106
  1433 00:016C: 82 17 00     	brl	L10007
  1434                        ;	case DEV_USB :
  1435                        	.line	107
  1436                        L10013:
  1437                        ;		//result = USB_disk_initialize();
  1438                        ;
  1439                        ;		// translate the reslut code here
  1440                        ;
  1441                        ;		//return stat;
  1442                        ;		break;
  1443                        	.line	113
  1444 00:016F: 82 14 00     	brl	L10007
  1445                        ;	}
  1446                        	.line	114
  1447                        L10006:
  1448                        	xref	~~~swt
  1449 00:0172: 22 xx xx xx  	jsl	~~~swt
  1450 00:0176: 03 00        	dw	3
  1451 00:0178: 00 00        	dw	0
  1452 00:017A: xx xx        	dw	L10008-1
  1453 00:017C: 01 00        	dw	1
  1454 00:017E: xx xx        	dw	L10012-1
  1455 00:0180: 02 00        	dw	2
  1456 00:0182: xx xx        	dw	L10013-1
  1457 00:0184: xx xx        	dw	L10007-1
  1458                        L10007:
  1459                        ;
  1460                        ;	k_debug_string("------- disk_initialize exit\r\n
                    ");
  1461                        	.line	116
  1462 00:0186: F4 xx xx     	pea	#^L6+148
  1463 00:0189: F4 xx xx     	pea	#<L6+148
  1464 00:018C: 22 xx xx xx  	jsl	~~k_debug_string
  1465                        ;
  1466                        ;	return stat;
  1467                        	.line	118
  1468 00:0190: A5 09        	lda	<L8+stat_1
  1469 00:0192: 29 FF 00     	and	#$ff
  1470                        L12:
  1471 00:0195: A8           	tay
  1472 00:0196: A5 0D        	lda	<L7+2
  1473 00:0198: 85 0F        	sta	<L7+2+2
  1474 00:019A: A5 0C        	lda	<L7+1
  1475 00:019C: 85 0E        	sta	<L7+1+2
  1476 00:019E: 2B           	pld
  1477 00:019F: 3B           	tsc
  1478 00:01A0: 18           	clc
  1479 00:01A1: 69 0D 00     	adc	#L7+2
  1480 00:01A4: 1B           	tcs
  1481 00:01A5: 98           	tya
  1482 00:01A6: 6B           	rtl
  1483                        ;}
  1484                        	.line	119
  1485                        	.endblock	119
  1486             0000000B   L7	equ	11
  1487             00000009   L8	equ	9
  Thu Dec  3 2020 22:25                                                Page 28


  1488                        	ends
  1489                        	efunc
  1490                        	.endfunc	119,9,11
  1491                        	.line	119
  1492                        	data
  1493                        L6:
  1494 00:0019: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$2D,$2D,$20,$64,$69,
                    $73,$6B,$5F,$69,$6E
       00:001D: 2D 2D 2D 20 
       00:0021: 64 69 73 6B 
       00:0025: 5F 69 6E 
  1495 00:0028: 69 74 69 61  	db	$69,$74,$69,$61,$6C,$69,$7A,$65,$3A,$64,
                    $65,$76,$3A,$00,$2D
       00:002C: 6C 69 7A 65 
       00:0030: 3A 64 65 76 
       00:0034: 3A 00 2D 
  1496 00:0037: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$2D,$20,$64,$69,$73,
                    $6B,$5F,$69,$6E,$69
       00:003B: 2D 2D 20 64 
       00:003F: 69 73 6B 5F 
       00:0043: 69 6E 69 
  1497 00:0046: 74 69 61 6C  	db	$74,$69,$61,$6C,$69,$7A,$65,$2E,$2E,$2E,
                    $0D,$0A,$00,$2D,$2D
       00:004A: 69 7A 65 2E 
       00:004E: 2E 2E 0D 0A 
       00:0052: 00 2D 2D 
  1498 00:0055: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$20,$64,$69,$73,$6B,
                    $5F,$69,$6E,$69,$74
       00:0059: 2D 20 64 69 
       00:005D: 73 6B 5F 69 
       00:0061: 6E 69 74 
  1499 00:0064: 69 61 6C 69  	db	$69,$61,$6C,$69,$7A,$65,$3A,$64,$69,$73,
                    $6B,$69,$6F,$44,$65
       00:0068: 7A 65 3A 64 
       00:006C: 69 73 6B 69 
       00:0070: 6F 44 65 
  1500 00:0073: 76 69 63 65  	db	$76,$69,$63,$65,$73,$5B,$70,$64,$72,$76,
                    $5D,$3A,$00,$2D,$2D
       00:0077: 73 5B 70 64 
       00:007B: 72 76 5D 3A 
       00:007F: 00 2D 2D 
  1501 00:0082: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$20,$64,$69,$73,$6B,
                    $5F,$69,$6E,$69,$74
       00:0086: 2D 20 64 69 
       00:008A: 73 6B 5F 69 
       00:008E: 6E 69 74 
  1502 00:0091: 69 61 6C 69  	db	$69,$61,$6C,$69,$7A,$65,$3A,$64,$69,$73,
                    $6B,$69,$6F,$44,$65
       00:0095: 7A 65 3A 64 
       00:0099: 69 73 6B 69 
       00:009D: 6F 44 65 
  1503 00:00A0: 76 69 63 65  	db	$76,$69,$63,$65,$73,$5B,$70,$64,$72,$76,
                    $5D,$3A,$00,$2D,$2D
       00:00A4: 73 5B 70 64 
       00:00A8: 72 76 5D 3A 
       00:00AC: 00 2D 2D 
  1504 00:00AF: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$20,$64,$69,$73,$6B,
                    $5F,$69,$6E,$69,$74
  Thu Dec  3 2020 22:25                                                Page 29


       00:00B3: 2D 20 64 69 
       00:00B7: 73 6B 5F 69 
       00:00BB: 6E 69 74 
  1505 00:00BE: 69 61 6C 69  	db	$69,$61,$6C,$69,$7A,$65,$20,$65,$78,$69,
                    $74,$0D,$0A,$00
       00:00C2: 7A 65 20 65 
       00:00C6: 78 69 74 0D 
       00:00CA: 0A 00 
  1506 00:00CC:              	ends
  1507                        ;
  1508                        ;
  1509                        ;
  1510                        ;/*-----------------------------------------------
                    ------------------------*/
  1511                        ;/* Read Sector(s)                                
                                            */
  1512                        ;/*-----------------------------------------------
                    ------------------------*/
  1513                        ;
  1514                        ;DRESULT disk_read (
  1515                        ;	BYTE pdrv,		/* Physical drive nmuber
                     to identify the drive */
  1516                        ;	BYTE *buff,		/* Data buffer to store 
                    read data */
  1517                        ;	LBA_t sector,	/* Start sector in LBA */
  1518                        ;	UINT count		/* Number of sectors to 
                    read */
  1519                        ;)
  1520                        ;{
  1521                        	.line	127
  1522                        	.line	133
  1523                        	code
  1524                        	xdef	~~disk_read
  1525                        	func
  1526                        	.function	133
  1527                        ~~disk_read:
  1528                        	longa	on
  1529                        	longi	on
  1530 00:01A7: 3B           	tsc
  1531 00:01A8: 38           	sec
  1532 00:01A9: E9 10 00     	sbc	#L14
  1533 00:01AC: 1B           	tcs
  1534 00:01AD: 0B           	phd
  1535 00:01AE: 5B           	tcd
  1536             00000004   pdrv_0	set	4
  1537             00000006   buff_0	set	6
  1538             0000000A   sector_0	set	10
  1539             0000000E   count_0	set	14
  1540                        	.block	133
  1541                        ;	DRESULT res;
  1542                        ;	int result = RES_PARERR;
  1543                        ;
  1544                        ;
  1545                        ;	k_debug_integer( "------- disk_read:dev:",pdrv);
  1546             00000000   res_1	set	0
  1547             00000002   result_1	set	2
  1548                        	.sym	res,0,5,1,16
  1549                        	.sym	result,2,5,1,16
  Thu Dec  3 2020 22:25                                                Page 30


  1550                        	.sym	pdrv,4,14,6,8
  1551                        	.sym	buff,6,142,6,32
  1552                        	.sym	sector,10,18,6,32
  1553                        	.sym	count,14,16,6,16
  1554 00:01AF: A9 04 00     	lda	#$4
  1555 00:01B2: 85 0F        	sta	<L15+result_1
  1556                        	.line	138
  1557 00:01B4: A5 14        	lda	<L14+pdrv_0
  1558 00:01B6: 29 FF 00     	and	#$ff
  1559 00:01B9: 48           	pha
  1560 00:01BA: F4 xx xx     	pea	#^L13
  1561 00:01BD: F4 xx xx     	pea	#<L13
  1562 00:01C0: 22 xx xx xx  	jsl	~~k_debug_integer
  1563                        ;	k_debug_long("------- disk_read:sector:",sector)
                    ;
  1564                        	.line	139
  1565 00:01C4: D4 1C        	pei	<L14+sector_0+2
  1566 00:01C6: D4 1A        	pei	<L14+sector_0
  1567 00:01C8: F4 xx xx     	pea	#^L13+23
  1568 00:01CB: F4 xx xx     	pea	#<L13+23
  1569 00:01CE: 22 xx xx xx  	jsl	~~k_debug_long
  1570                        ;	k_debug_long("------- disk_read:count:",count);
  1571                        	.line	140
  1572 00:01D2: D4 1E        	pei	<L14+count_0
  1573 00:01D4: F4 xx xx     	pea	#^L13+49
  1574 00:01D7: F4 xx xx     	pea	#<L13+49
  1575 00:01DA: 22 xx xx xx  	jsl	~~k_debug_long
  1576                        ;
  1577                        ;
  1578                        ;
  1579                        ;	switch (pdrv) {
  1580                        	.line	144
  1581 00:01DE: A5 14        	lda	<L14+pdrv_0
  1582 00:01E0: 29 FF 00     	and	#$ff
  1583 00:01E3: 82 B9 00     	brl	L10014
  1584                        	.line	144
  1585                        ;	case DEV_RAM :
  1586                        	.line	145
  1587                        L10016:
  1588                        ;		// translate the arguments here
  1589                        ;
  1590                        ;		k_debug_pointer( "------- disk_read:disk
                    ioDevices[pdrv]:",diskioDevices[pdrv]);
  1591                        	.line	148
  1592 00:01E6: A5 14        	lda	<L14+pdrv_0
  1593 00:01E8: 29 FF 00     	and	#$ff
  1594 00:01EB: 85 05        	sta	<R1
  1595 00:01ED: A5 05        	lda	<R1
  1596 00:01EF: 0A           	asl	A
  1597 00:01F0: 0A           	asl	A
  1598 00:01F1: 85 01        	sta	<R0
  1599 00:01F3: 18           	clc
  1600 00:01F4: A9 xx xx     	lda	#<~~diskioDevices
  1601 00:01F7: 65 01        	adc	<R0
  1602 00:01F9: 85 05        	sta	<R1
  1603 00:01FB: A0 02 00     	ldy	#$2
  1604 00:01FE: B1 05        	lda	(<R1),Y
  1605 00:0200: 48           	pha
  Thu Dec  3 2020 22:25                                                Page 31


  1606 00:0201: B2 05        	lda	(<R1)
  1607 00:0203: 48           	pha
  1608 00:0204: F4 xx xx     	pea	#^L13+74
  1609 00:0207: F4 xx xx     	pea	#<L13+74
  1610 00:020A: 22 xx xx xx  	jsl	~~k_debug_pointer
  1611                        ;
  1612                        ;		if(diskioDevices[pdrv]!=NULL)
  1613                        	.line	150
  1614                        ;		{
  1615 00:020E: A5 14        	lda	<L14+pdrv_0
  1616 00:0210: 29 FF 00     	and	#$ff
  1617 00:0213: 85 05        	sta	<R1
  1618 00:0215: A5 05        	lda	<R1
  1619 00:0217: 0A           	asl	A
  1620 00:0218: 0A           	asl	A
  1621 00:0219: 85 01        	sta	<R0
  1622 00:021B: 18           	clc
  1623 00:021C: A9 xx xx     	lda	#<~~diskioDevices
  1624 00:021F: 65 01        	adc	<R0
  1625 00:0221: 85 05        	sta	<R1
  1626 00:0223: B2 05        	lda	(<R1)
  1627 00:0225: A0 02 00     	ldy	#$2
  1628 00:0228: 11 05        	ora	(<R1),Y
  1629 00:022A: D0 03        	bne	L17
  1630 00:022C: 82 67 00     	brl	L10017
  1631                        L17:
  1632                        	.line	151
  1633                        ;			k_debug_pointer( "------- disk_r
                    ead:buff:",buff);
  1634                        	.line	152
  1635 00:022F: D4 18        	pei	<L14+buff_0+2
  1636 00:0231: D4 16        	pei	<L14+buff_0
  1637 00:0233: F4 xx xx     	pea	#^L13+113
  1638 00:0236: F4 xx xx     	pea	#<L13+113
  1639 00:0239: 22 xx xx xx  	jsl	~~k_debug_pointer
  1640                        ;
  1641                        ;			diskioDevices[pdrv]->pfReader(se
                    ctor * 512,buff);
  1642                        	.line	154
  1643 00:023D: D4 18        	pei	<L14+buff_0+2
  1644 00:023F: D4 16        	pei	<L14+buff_0
  1645 00:0241: D4 1C        	pei	<L14+sector_0+2
  1646 00:0243: D4 1A        	pei	<L14+sector_0
  1647 00:0245: A9 09 00     	lda	#$9
  1648                        	xref	~~~lasl
  1649 00:0248: 22 xx xx xx  	jsl	~~~lasl
  1650 00:024C: 85 01        	sta	<R0
  1651 00:024E: 86 03        	stx	<R0+2
  1652 00:0250: D4 03        	pei	<R0+2
  1653 00:0252: D4 01        	pei	<R0
  1654 00:0254: A5 14        	lda	<L14+pdrv_0
  1655 00:0256: 29 FF 00     	and	#$ff
  1656 00:0259: 85 09        	sta	<R2
  1657 00:025B: A5 09        	lda	<R2
  1658 00:025D: 0A           	asl	A
  1659 00:025E: 0A           	asl	A
  1660 00:025F: 85 05        	sta	<R1
  1661 00:0261: 18           	clc
  Thu Dec  3 2020 22:25                                                Page 32


  1662 00:0262: A9 xx xx     	lda	#<~~diskioDevices
  1663 00:0265: 65 05        	adc	<R1
  1664 00:0267: 85 09        	sta	<R2
  1665 00:0269: B2 09        	lda	(<R2)
  1666 00:026B: 85 05        	sta	<R1
  1667 00:026D: A0 02 00     	ldy	#$2
  1668 00:0270: B1 09        	lda	(<R2),Y
  1669 00:0272: 85 07        	sta	<R1+2
  1670 00:0274: A0 BC 02     	ldy	#$2bc
  1671 00:0277: B7 05        	lda	[<R1],Y
  1672 00:0279: AA           	tax
  1673 00:027A: A0 BA 02     	ldy	#$2ba
  1674 00:027D: B7 05        	lda	[<R1],Y
  1675                        	xref	~~~lcal
  1676 00:027F: 22 xx xx xx  	jsl	~~~lcal
  1677                        ;
  1678                        ;			k_debug_byte_array("------- disk
                    _read:buff:data:\r\n",buff,512);
  1679                        	.line	156
  1680 00:0283: F4 00 02     	pea	#<$200
  1681 00:0286: D4 18        	pei	<L14+buff_0+2
  1682 00:0288: D4 16        	pei	<L14+buff_0
  1683 00:028A: F4 xx xx     	pea	#^L13+137
  1684 00:028D: F4 xx xx     	pea	#<L13+137
  1685 00:0290: 22 xx xx xx  	jsl	~~k_debug_byte_array
  1686                        ;
  1687                        ;			//result = RAM_disk_read(buff, s
                    ector, count);
  1688                        ;
  1689                        ;			// translate the reslut code her
                    e
  1690                        ;
  1691                        ;			res = RES_OK;
  1692                        	.line	162
  1693 00:0294: 64 0D        	stz	<L15+res_1
  1694                        ;		}
  1695                        	.line	163
  1696                        ;		break;
  1697                        L10017:
  1698                        	.line	164
  1699 00:0296: 82 1A 00     	brl	L10015
  1700                        ;
  1701                        ;	case DEV_MMC :
  1702                        	.line	166
  1703                        L10018:
  1704                        ;		// translate the arguments here
  1705                        ;
  1706                        ;		//result = MMC_disk_read(buff, sector, c
                    ount);
  1707                        ;
  1708                        ;		// translate the reslut code here
  1709                        ;
  1710                        ;		//return res;
  1711                        ;		break;
  1712                        	.line	174
  1713 00:0299: 82 17 00     	brl	L10015
  1714                        ;	case DEV_USB :
  1715                        	.line	175
  Thu Dec  3 2020 22:25                                                Page 33


  1716                        L10019:
  1717                        ;		// translate the arguments here
  1718                        ;
  1719                        ;		//result = USB_disk_read(buff, sector, c
                    ount);
  1720                        ;
  1721                        ;		// translate the reslut code here
  1722                        ;
  1723                        ;		//return res;
  1724                        ;		break;
  1725                        	.line	183
  1726 00:029C: 82 14 00     	brl	L10015
  1727                        ;	}
  1728                        	.line	184
  1729                        L10014:
  1730                        	xref	~~~swt
  1731 00:029F: 22 xx xx xx  	jsl	~~~swt
  1732 00:02A3: 03 00        	dw	3
  1733 00:02A5: 00 00        	dw	0
  1734 00:02A7: xx xx        	dw	L10016-1
  1735 00:02A9: 01 00        	dw	1
  1736 00:02AB: xx xx        	dw	L10018-1
  1737 00:02AD: 02 00        	dw	2
  1738 00:02AF: xx xx        	dw	L10019-1
  1739 00:02B1: xx xx        	dw	L10015-1
  1740                        L10015:
  1741                        ;
  1742                        ;	k_debug_string("------- disk_read exit\r\n");
  1743                        	.line	186
  1744 00:02B3: F4 xx xx     	pea	#^L13+168
  1745 00:02B6: F4 xx xx     	pea	#<L13+168
  1746 00:02B9: 22 xx xx xx  	jsl	~~k_debug_string
  1747                        ;
  1748                        ;	return res;
  1749                        	.line	188
  1750 00:02BD: A5 0D        	lda	<L15+res_1
  1751                        L18:
  1752 00:02BF: A8           	tay
  1753 00:02C0: A5 12        	lda	<L14+2
  1754 00:02C2: 85 1E        	sta	<L14+2+12
  1755 00:02C4: A5 11        	lda	<L14+1
  1756 00:02C6: 85 1D        	sta	<L14+1+12
  1757 00:02C8: 2B           	pld
  1758 00:02C9: 3B           	tsc
  1759 00:02CA: 18           	clc
  1760 00:02CB: 69 1C 00     	adc	#L14+12
  1761 00:02CE: 1B           	tcs
  1762 00:02CF: 98           	tya
  1763 00:02D0: 6B           	rtl
  1764                        ;}
  1765                        	.line	189
  1766                        	.endblock	189
  1767             00000010   L14	equ	16
  1768             0000000D   L15	equ	13
  1769                        	ends
  1770                        	efunc
  1771                        	.endfunc	189,13,16
  1772                        	.line	189
  Thu Dec  3 2020 22:25                                                Page 34


  1773                        	data
  1774                        L13:
  1775 00:00CC: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$2D,$2D,$20,$64,$69,
                    $73,$6B,$5F,$72,$65
       00:00D0: 2D 2D 2D 20 
       00:00D4: 64 69 73 6B 
       00:00D8: 5F 72 65 
  1776 00:00DB: 61 64 3A 64  	db	$61,$64,$3A,$64,$65,$76,$3A,$00,$2D,$2D,
                    $2D,$2D,$2D,$2D,$2D
       00:00DF: 65 76 3A 00 
       00:00E3: 2D 2D 2D 2D 
       00:00E7: 2D 2D 2D 
  1777 00:00EA: 20 64 69 73  	db	$20,$64,$69,$73,$6B,$5F,$72,$65,$61,$64,
                    $3A,$73,$65,$63,$74
       00:00EE: 6B 5F 72 65 
       00:00F2: 61 64 3A 73 
       00:00F6: 65 63 74 
  1778 00:00F9: 6F 72 3A 00  	db	$6F,$72,$3A,$00,$2D,$2D,$2D,$2D,$2D,$2D,
                    $2D,$20,$64,$69,$73
       00:00FD: 2D 2D 2D 2D 
       00:0101: 2D 2D 2D 20 
       00:0105: 64 69 73 
  1779 00:0108: 6B 5F 72 65  	db	$6B,$5F,$72,$65,$61,$64,$3A,$63,$6F,$75,
                    $6E,$74,$3A,$00,$2D
       00:010C: 61 64 3A 63 
       00:0110: 6F 75 6E 74 
       00:0114: 3A 00 2D 
  1780 00:0117: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$2D,$20,$64,$69,$73,
                    $6B,$5F,$72,$65,$61
       00:011B: 2D 2D 20 64 
       00:011F: 69 73 6B 5F 
       00:0123: 72 65 61 
  1781 00:0126: 64 3A 64 69  	db	$64,$3A,$64,$69,$73,$6B,$69,$6F,$44,$65,
                    $76,$69,$63,$65,$73
       00:012A: 73 6B 69 6F 
       00:012E: 44 65 76 69 
       00:0132: 63 65 73 
  1782 00:0135: 5B 70 64 72  	db	$5B,$70,$64,$72,$76,$5D,$3A,$00,$2D,$2D,
                    $2D,$2D,$2D,$2D,$2D
       00:0139: 76 5D 3A 00 
       00:013D: 2D 2D 2D 2D 
       00:0141: 2D 2D 2D 
  1783 00:0144: 20 64 69 73  	db	$20,$64,$69,$73,$6B,$5F,$72,$65,$61,$64,
                    $3A,$62,$75,$66,$66
       00:0148: 6B 5F 72 65 
       00:014C: 61 64 3A 62 
       00:0150: 75 66 66 
  1784 00:0153: 3A 00 2D 2D  	db	$3A,$00,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$20,
                    $64,$69,$73,$6B,$5F
       00:0157: 2D 2D 2D 2D 
       00:015B: 2D 20 64 69 
       00:015F: 73 6B 5F 
  1785 00:0162: 72 65 61 64  	db	$72,$65,$61,$64,$3A,$62,$75,$66,$66,$3A,
                    $64,$61,$74,$61,$3A
       00:0166: 3A 62 75 66 
       00:016A: 66 3A 64 61 
       00:016E: 74 61 3A 
  1786 00:0171: 0D 0A 00 2D  	db	$0D,$0A,$00,$2D,$2D,$2D,$2D,$2D,$2D,$2D,
  Thu Dec  3 2020 22:25                                                Page 35


                    $20,$64,$69,$73,$6B
       00:0175: 2D 2D 2D 2D 
       00:0179: 2D 2D 20 64 
       00:017D: 69 73 6B 
  1787 00:0180: 5F 72 65 61  	db	$5F,$72,$65,$61,$64,$20,$65,$78,$69,$74,
                    $0D,$0A,$00
       00:0184: 64 20 65 78 
       00:0188: 69 74 0D 0A 
       00:018C: 00 
  1788 00:018D:              	ends
  1789                        ;
  1790                        ;
  1791                        ;
  1792                        ;/*-----------------------------------------------
                    ------------------------*/
  1793                        ;/* Write Sector(s)                               
                                            */
  1794                        ;/*-----------------------------------------------
                    ------------------------*/
  1795                        ;
  1796                        ;#if FF_FS_READONLY == 0
  1797                        ;
  1798                        ;DRESULT disk_write (
  1799                        ;	BYTE pdrv,			/* Physical driv
                    e nmuber to identify the drive */
  1800                        ;	const BYTE *buff,	/* Data to be written */
  1801                        ;	LBA_t sector,		/* Start sector in LBA *
                    /
  1802                        ;	UINT count			/* Number of sec
                    tors to write */
  1803                        ;)
  1804                        ;{
  1805                        	.line	199
  1806                        	.line	205
  1807                        	code
  1808                        	xdef	~~disk_write
  1809                        	func
  1810                        	.function	205
  1811                        ~~disk_write:
  1812                        	longa	on
  1813                        	longi	on
  1814 00:02D1: 3B           	tsc
  1815 00:02D2: 38           	sec
  1816 00:02D3: E9 0C 00     	sbc	#L20
  1817 00:02D6: 1B           	tcs
  1818 00:02D7: 0B           	phd
  1819 00:02D8: 5B           	tcd
  1820             00000004   pdrv_0	set	4
  1821             00000006   buff_0	set	6
  1822             0000000A   sector_0	set	10
  1823             0000000E   count_0	set	14
  1824                        	.block	205
  1825                        ;	DRESULT res = RES_PARERR;
  1826                        ;	int result;
  1827                        ;
  1828                        ;	k_debug_integer( "------- disk_write:dev:",pdrv)
                    ;
  1829             00000000   res_1	set	0
  Thu Dec  3 2020 22:25                                                Page 36


  1830             00000002   result_1	set	2
  1831                        	.sym	res,0,5,1,16
  1832                        	.sym	result,2,5,1,16
  1833                        	.sym	pdrv,4,14,6,8
  1834                        	.sym	buff,6,142,6,32
  1835                        	.sym	sector,10,18,6,32
  1836                        	.sym	count,14,16,6,16
  1837 00:02D9: A9 04 00     	lda	#$4
  1838 00:02DC: 85 09        	sta	<L21+res_1
  1839                        	.line	209
  1840 00:02DE: A5 10        	lda	<L20+pdrv_0
  1841 00:02E0: 29 FF 00     	and	#$ff
  1842 00:02E3: 48           	pha
  1843 00:02E4: F4 xx xx     	pea	#^L19
  1844 00:02E7: F4 xx xx     	pea	#<L19
  1845 00:02EA: 22 xx xx xx  	jsl	~~k_debug_integer
  1846                        ;	k_debug_string("------- disk_write...\r\n");
  1847                        	.line	210
  1848 00:02EE: F4 xx xx     	pea	#^L19+24
  1849 00:02F1: F4 xx xx     	pea	#<L19+24
  1850 00:02F4: 22 xx xx xx  	jsl	~~k_debug_string
  1851                        ;
  1852                        ;	switch (pdrv) {
  1853                        	.line	212
  1854 00:02F8: A5 10        	lda	<L20+pdrv_0
  1855 00:02FA: 29 FF 00     	and	#$ff
  1856 00:02FD: 82 55 00     	brl	L10020
  1857                        	.line	212
  1858                        ;	case DEV_RAM :
  1859                        	.line	213
  1860                        L10022:
  1861                        ;		// translate the arguments here
  1862                        ;
  1863                        ;		diskioDevices[pdrv]->pfWriter(sector,(BY
                    TE*)buff);
  1864                        	.line	216
  1865 00:0300: D4 14        	pei	<L20+buff_0+2
  1866 00:0302: D4 12        	pei	<L20+buff_0
  1867 00:0304: D4 18        	pei	<L20+sector_0+2
  1868 00:0306: D4 16        	pei	<L20+sector_0
  1869 00:0308: A5 10        	lda	<L20+pdrv_0
  1870 00:030A: 29 FF 00     	and	#$ff
  1871 00:030D: 85 05        	sta	<R1
  1872 00:030F: A5 05        	lda	<R1
  1873 00:0311: 0A           	asl	A
  1874 00:0312: 0A           	asl	A
  1875 00:0313: 85 01        	sta	<R0
  1876 00:0315: 18           	clc
  1877 00:0316: A9 xx xx     	lda	#<~~diskioDevices
  1878 00:0319: 65 01        	adc	<R0
  1879 00:031B: 85 05        	sta	<R1
  1880 00:031D: B2 05        	lda	(<R1)
  1881 00:031F: 85 01        	sta	<R0
  1882 00:0321: A0 02 00     	ldy	#$2
  1883 00:0324: B1 05        	lda	(<R1),Y
  1884 00:0326: 85 03        	sta	<R0+2
  1885 00:0328: A0 C0 02     	ldy	#$2c0
  1886 00:032B: B7 01        	lda	[<R0],Y
  Thu Dec  3 2020 22:25                                                Page 37


  1887 00:032D: AA           	tax
  1888 00:032E: A0 BE 02     	ldy	#$2be
  1889 00:0331: B7 01        	lda	[<R0],Y
  1890                        	xref	~~~lcal
  1891 00:0333: 22 xx xx xx  	jsl	~~~lcal
  1892                        ;
  1893                        ;		// translate the reslut code here
  1894                        ;
  1895                        ;		res = 0;
  1896                        	.line	220
  1897 00:0337: 64 09        	stz	<L21+res_1
  1898                        ;
  1899                        ;		break;
  1900                        	.line	222
  1901 00:0339: 82 2D 00     	brl	L10021
  1902                        ;	case DEV_MMC :
  1903                        	.line	223
  1904                        L10023:
  1905                        ;		// translate the arguments here
  1906                        ;
  1907                        ;		//result = MMC_disk_write(buff, sector, 
                    count);
  1908                        ;
  1909                        ;		// translate the reslut code here
  1910                        ;
  1911                        ;		return res;
  1912                        	.line	230
  1913 00:033C: A5 09        	lda	<L21+res_1
  1914                        L23:
  1915 00:033E: A8           	tay
  1916 00:033F: A5 0E        	lda	<L20+2
  1917 00:0341: 85 1A        	sta	<L20+2+12
  1918 00:0343: A5 0D        	lda	<L20+1
  1919 00:0345: 85 19        	sta	<L20+1+12
  1920 00:0347: 2B           	pld
  1921 00:0348: 3B           	tsc
  1922 00:0349: 18           	clc
  1923 00:034A: 69 18 00     	adc	#L20+12
  1924 00:034D: 1B           	tcs
  1925 00:034E: 98           	tya
  1926 00:034F: 6B           	rtl
  1927                        ;
  1928                        ;	case DEV_USB :
  1929                        	.line	232
  1930                        L10024:
  1931                        ;		// translate the arguments here
  1932                        ;
  1933                        ;		//result = USB_disk_write(buff, sector, 
                    count);
  1934                        ;
  1935                        ;		// translate the reslut code here
  1936                        ;
  1937                        ;		return res;
  1938                        	.line	239
  1939 00:0350: A5 09        	lda	<L21+res_1
  1940 00:0352: 82 E9 FF     	brl	L23
  1941                        ;	}
  1942                        	.line	240
  Thu Dec  3 2020 22:25                                                Page 38


  1943                        L10020:
  1944                        	xref	~~~swt
  1945 00:0355: 22 xx xx xx  	jsl	~~~swt
  1946 00:0359: 03 00        	dw	3
  1947 00:035B: 00 00        	dw	0
  1948 00:035D: xx xx        	dw	L10022-1
  1949 00:035F: 01 00        	dw	1
  1950 00:0361: xx xx        	dw	L10023-1
  1951 00:0363: 02 00        	dw	2
  1952 00:0365: xx xx        	dw	L10024-1
  1953 00:0367: xx xx        	dw	L10021-1
  1954                        L10021:
  1955                        ;
  1956                        ;	k_debug_string("------- disk_write exit\r\n");
  1957                        	.line	242
  1958 00:0369: F4 xx xx     	pea	#^L19+48
  1959 00:036C: F4 xx xx     	pea	#<L19+48
  1960 00:036F: 22 xx xx xx  	jsl	~~k_debug_string
  1961                        ;
  1962                        ;	return res;
  1963                        	.line	244
  1964 00:0373: A5 09        	lda	<L21+res_1
  1965 00:0375: 82 C6 FF     	brl	L23
  1966                        ;}
  1967                        	.line	245
  1968                        	.endblock	245
  1969             0000000C   L20	equ	12
  1970             00000009   L21	equ	9
  1971                        	ends
  1972                        	efunc
  1973                        	.endfunc	245,9,12
  1974                        	.line	245
  1975                        	data
  1976                        L19:
  1977 00:018D: 2D 2D 2D 2D  	db	$2D,$2D,$2D,$2D,$2D,$2D,$2D,$20,$64,$69,
                    $73,$6B,$5F,$77,$72
       00:0191: 2D 2D 2D 20 
       00:0195: 64 69 73 6B 
       00:0199: 5F 77 72 
  1978 00:019C: 69 74 65 3A  	db	$69,$74,$65,$3A,$64,$65,$76,$3A,$00,$2D,
                    $2D,$2D,$2D,$2D,$2D
       00:01A0: 64 65 76 3A 
       00:01A4: 00 2D 2D 2D 
       00:01A8: 2D 2D 2D 
  1979 00:01AB: 2D 20 64 69  	db	$2D,$20,$64,$69,$73,$6B,$5F,$77,$72,$69,
                    $74,$65,$2E,$2E,$2E
       00:01AF: 73 6B 5F 77 
       00:01B3: 72 69 74 65 
       00:01B7: 2E 2E 2E 
  1980 00:01BA: 0D 0A 00 2D  	db	$0D,$0A,$00,$2D,$2D,$2D,$2D,$2D,$2D,$2D,
                    $20,$64,$69,$73,$6B
       00:01BE: 2D 2D 2D 2D 
       00:01C2: 2D 2D 20 64 
       00:01C6: 69 73 6B 
  1981 00:01C9: 5F 77 72 69  	db	$5F,$77,$72,$69,$74,$65,$20,$65,$78,$69,
                    $74,$0D,$0A,$00
       00:01CD: 74 65 20 65 
       00:01D1: 78 69 74 0D 
  Thu Dec  3 2020 22:25                                                Page 39


       00:01D5: 0A 00 
  1982 00:01D7:              	ends
  1983                        ;
  1984                        ;#endif
  1985                        ;
  1986                        ;
  1987                        ;/*-----------------------------------------------
                    ------------------------*/
  1988                        ;/* Miscellaneous Functions                       
                                            */
  1989                        ;/*-----------------------------------------------
                    ------------------------*/
  1990                        ;
  1991                        ;DRESULT disk_ioctl (
  1992                        ;	BYTE pdrv,		/* Physical drive nmuber
                     (0..) */
  1993                        ;	BYTE cmd,		/* Control code */
  1994                        ;	void *buff		/* Buffer to send/receiv
                    e control data */
  1995                        ;)
  1996                        ;{
  1997                        	.line	254
  1998                        	.line	259
  1999                        	code
  2000                        	xdef	~~disk_ioctl
  2001                        	func
  2002                        	.function	259
  2003                        ~~disk_ioctl:
  2004                        	longa	on
  2005                        	longi	on
  2006 00:0378: 3B           	tsc
  2007 00:0379: 38           	sec
  2008 00:037A: E9 04 00     	sbc	#L25
  2009 00:037D: 1B           	tcs
  2010 00:037E: 0B           	phd
  2011 00:037F: 5B           	tcd
  2012             00000004   pdrv_0	set	4
  2013             00000006   cmd_0	set	6
  2014             00000008   buff_0	set	8
  2015                        	.block	259
  2016                        ;	DRESULT res;
  2017                        ;	int result;
  2018                        ;
  2019                        ;	k_debug_string("disk_ioctl...\r\n");
  2020             00000000   res_1	set	0
  2021             00000002   result_1	set	2
  2022                        	.sym	res,0,5,1,16
  2023                        	.sym	result,2,5,1,16
  2024                        	.sym	pdrv,4,14,6,8
  2025                        	.sym	cmd,6,14,6,8
  2026                        	.sym	buff,8,129,6,32
  2027                        	.line	263
  2028 00:0380: F4 xx xx     	pea	#^L24
  2029 00:0383: F4 xx xx     	pea	#<L24
  2030 00:0386: 22 xx xx xx  	jsl	~~k_debug_string
  2031                        ;
  2032                        ;	switch (pdrv) {
  2033                        	.line	265
  Thu Dec  3 2020 22:25                                                Page 40


  2034 00:038A: A5 08        	lda	<L25+pdrv_0
  2035 00:038C: 29 FF 00     	and	#$ff
  2036 00:038F: 82 1E 00     	brl	L10025
  2037                        	.line	265
  2038                        ;	case DEV_RAM :
  2039                        	.line	266
  2040                        L10027:
  2041                        ;
  2042                        ;		// Process of the command for the RAM dr
                    ive
  2043                        ;
  2044                        ;		return res;
  2045                        	.line	270
  2046 00:0392: A5 01        	lda	<L26+res_1
  2047                        L28:
  2048 00:0394: A8           	tay
  2049 00:0395: A5 06        	lda	<L25+2
  2050 00:0397: 85 0E        	sta	<L25+2+8
  2051 00:0399: A5 05        	lda	<L25+1
  2052 00:039B: 85 0D        	sta	<L25+1+8
  2053 00:039D: 2B           	pld
  2054 00:039E: 3B           	tsc
  2055 00:039F: 18           	clc
  2056 00:03A0: 69 0C 00     	adc	#L25+8
  2057 00:03A3: 1B           	tcs
  2058 00:03A4: 98           	tya
  2059 00:03A5: 6B           	rtl
  2060                        ;
  2061                        ;	case DEV_MMC :
  2062                        	.line	272
  2063                        L10028:
  2064                        ;
  2065                        ;		// Process of the command for the MMC/SD
                     card
  2066                        ;
  2067                        ;		return res;
  2068                        	.line	276
  2069 00:03A6: A5 01        	lda	<L26+res_1
  2070 00:03A8: 82 E9 FF     	brl	L28
  2071                        ;
  2072                        ;	case DEV_USB :
  2073                        	.line	278
  2074                        L10029:
  2075                        ;
  2076                        ;		// Process of the command the USB drive
  2077                        ;
  2078                        ;		return res;
  2079                        	.line	282
  2080 00:03AB: A5 01        	lda	<L26+res_1
  2081 00:03AD: 82 E4 FF     	brl	L28
  2082                        ;	}
  2083                        	.line	283
  2084                        L10025:
  2085                        	xref	~~~swt
  2086 00:03B0: 22 xx xx xx  	jsl	~~~swt
  2087 00:03B4: 03 00        	dw	3
  2088 00:03B6: 00 00        	dw	0
  2089 00:03B8: xx xx        	dw	L10027-1
  Thu Dec  3 2020 22:25                                                Page 41


  2090 00:03BA: 01 00        	dw	1
  2091 00:03BC: xx xx        	dw	L10028-1
  2092 00:03BE: 02 00        	dw	2
  2093 00:03C0: xx xx        	dw	L10029-1
  2094 00:03C2: xx xx        	dw	L10026-1
  2095                        L10026:
  2096                        ;
  2097                        ;	return RES_PARERR;
  2098                        	.line	285
  2099 00:03C4: A9 04 00     	lda	#$4
  2100 00:03C7: 82 CA FF     	brl	L28
  2101                        ;}
  2102                        	.line	286
  2103                        	.endblock	286
  2104             00000004   L25	equ	4
  2105             00000001   L26	equ	1
  2106                        	ends
  2107                        	efunc
  2108                        	.endfunc	286,1,4
  2109                        	.line	286
  2110                        	data
  2111                        L24:
  2112 00:01D7: 64 69 73 6B  	db	$64,$69,$73,$6B,$5F,$69,$6F,$63,$74,$6C,
                    $2E,$2E,$2E,$0D,$0A
       00:01DB: 5F 69 6F 63 
       00:01DF: 74 6C 2E 2E 
       00:01E3: 2E 0D 0A 
  2113 00:01E6: 00           	db	$00
  2114 00:01E7:              	ends
  2115                        ;#else
  2116                        ;
  2117                        ;
  2118                        ;#include "ff.h"			/* Obtains integ
                    er types */
  2119                        ;#include "diskio.h"
  2120                        ;
  2121                        ;/* Definitions of physical drive number for each 
                    drive */
  2122                        ;#define DEV_RAM		0	/* Example: Map 
                    Ramdisk to physical drive 0 */
  2123                        ;#define DEV_MMC		1	/* Example: Map 
                    MMC/SD card to physical drive 1 */
  2124                        ;#define DEV_USB		2	/* Example: Map 
                    USB MSD to physical drive 2 */
  2125                        ;
  2126                        ;
  2127                        ;/*-----------------------------------------------
                    ------------------------*/
  2128                        ;/* Get Drive Status                              
                                            */
  2129                        ;/*-----------------------------------------------
                    ------------------------*/
  2130                        ;
  2131                        ;DSTATUS disk_status (
  2132                        ;	BYTE pdrv		/* Physical drive nmuber
                     to identify the drive */
  2133                        ;)
  2134                        ;{
  Thu Dec  3 2020 22:25                                                Page 42


  2135                        ;	return STA_NOINIT;
  2136                        ;}
  2137                        ;
  2138                        ;
  2139                        ;
  2140                        ;/*-----------------------------------------------
                    ------------------------*/
  2141                        ;/* Inidialize a Drive                            
                                            */
  2142                        ;/*-----------------------------------------------
                    ------------------------*/
  2143                        ;
  2144                        ;DSTATUS disk_initialize (
  2145                        ;	BYTE pdrv				/* Physi
                    cal drive nmuber to identify the drive */
  2146                        ;)
  2147                        ;{
  2148                        ;	return STA_NOINIT;
  2149                        ;}
  2150                        ;
  2151                        ;
  2152                        ;
  2153                        ;/*-----------------------------------------------
                    ------------------------*/
  2154                        ;/* Read Sector(s)                                
                                            */
  2155                        ;/*-----------------------------------------------
                    ------------------------*/
  2156                        ;
  2157                        ;DRESULT disk_read (
  2158                        ;	BYTE pdrv,		/* Physical drive nmuber
                     to identify the drive */
  2159                        ;	BYTE *buff,		/* Data buffer to store 
                    read data */
  2160                        ;	LBA_t sector,	/* Start sector in LBA */
  2161                        ;	UINT count		/* Number of sectors to 
                    read */
  2162                        ;)
  2163                        ;{
  2164                        ;	k_debug_string("------- disk_read exit\r\n");
  2165                        ;
  2166                        ;	return RES_PARERR;
  2167                        ;}
  2168                        ;
  2169                        ;
  2170                        ;
  2171                        ;/*-----------------------------------------------
                    ------------------------*/
  2172                        ;/* Write Sector(s)                               
                                            */
  2173                        ;/*-----------------------------------------------
                    ------------------------*/
  2174                        ;
  2175                        ;#if FF_FS_READONLY == 0
  2176                        ;
  2177                        ;DRESULT disk_write (
  2178                        ;	BYTE pdrv,			/* Physical driv
                    e nmuber to identify the drive */
  Thu Dec  3 2020 22:25                                                Page 43


  2179                        ;	const BYTE *buff,	/* Data to be written */
  2180                        ;	LBA_t sector,		/* Start sector in LBA *
                    /
  2181                        ;	UINT count			/* Number of sec
                    tors to write */
  2182                        ;)
  2183                        ;{
  2184                        ;	k_debug_string("------- disk_write exit\r\n");
  2185                        ;
  2186                        ;	return RES_PARERR;
  2187                        ;}
  2188                        ;
  2189                        ;#endif
  2190                        ;
  2191                        ;
  2192                        ;/*-----------------------------------------------
                    ------------------------*/
  2193                        ;/* Miscellaneous Functions                       
                                            */
  2194                        ;/*-----------------------------------------------
                    ------------------------*/
  2195                        ;
  2196                        ;DRESULT disk_ioctl (
  2197                        ;	BYTE pdrv,		/* Physical drive nmuber
                     (0..) */
  2198                        ;	BYTE cmd,		/* Control code */
  2199                        ;	void *buff		/* Buffer to send/receiv
                    e control data */
  2200                        ;)
  2201                        ;{
  2202                        ;	return RES_PARERR;
  2203                        ;}
  2204                        ;
  2205                        ;
  2206                        ;#endif
  2207                        ;
  2208                        	.line	378
  2209                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\diskio.c",254
  2210                        	xref	~~k_debug_byte_array
  2211                        	xref	~~k_debug_long
  2212                        	xref	~~k_debug_pointer
  2213                        	xref	~~k_debug_string
  2214                        	xref	~~k_debug_integer
  2215                        	xref	~~k_debug_hex
  2216                        	xref	~~k_create_dos_device
  2217                        	.sym	~~k_debug_byte_array,~~k_debug_byte_arra
                    y,69,18,0
  2218                        	.sym	~~k_debug_long,~~k_debug_long,69,18,0
  2219                        	.sym	~~k_debug_pointer,~~k_debug_pointer,69,1
                    8,0
  2220                        	.sym	~~k_debug_string,~~k_debug_string,69,18,
                    0
  2221                        	.sym	~~k_debug_integer,~~k_debug_integer,69,1
                    8,0
  2222                        	.sym	~~k_debug_hex,~~k_debug_hex,69,18,0
  2223                        	.sym	~~diskioDevices,~~diskioDevices,1130,3,3
                    2,85,3
  Thu Dec  3 2020 22:25                                                Page 44


  2224                        	.sym	~~k_create_dos_device,~~k_create_dos_dev
                    ice,1098,18,32,85
  2225                        	.sym	PFXDOSDEVICE,0,138,14,32,85
  2226                        	.sym	FXDOSDEVICE,0,10,14,5648,85
  2227                        	.sym	DOSINITDEVICE,0,641,14,32
  2228                        	.sym	DOSSECTORWRITER,0,654,14,32
  2229                        	.sym	DOSSECTORREADER,0,654,14,32
  2230                        	.sym	PIDENTIFY_DEVICE_DATA,0,138,14,32,84
  2231                        	.sym	IDENTIFY_DEVICE_DATA,0,10,14,4096,84
  2232                        	.sym	PIDSECTOR,0,138,14,32,61
  2233                        	.sym	IDSECTOR,0,10,14,2048,61
  2234                        	.sym	PLFN,0,138,14,32,60
  2235                        	.sym	LFN,0,10,14,256,60
  2236                        	.sym	PFAT16ENTRYLONG,0,138,14,32,59
  2237                        	.sym	FAT16ENTRYLONG,0,10,14,288,59
  2238                        	.sym	PFAT16ENTRY,0,138,14,32,58
  2239                        	.sym	FAT16ENTRY,0,10,14,256,58
  2240                        	.sym	Fat16BootSector,0,10,14,4096,57
  2241                        	.sym	PPARTITIONTABLE,0,138,14,32,56
  2242                        	.sym	PARTITIONTABLE,0,10,14,128,56
  2243                        	.sym	PFATBOOTSECTOR,0,138,14,32,55
  2244                        	.sym	FATBOOTSECTOR,0,10,14,928,55
  2245                        	.sym	fat_BS_t,0,10,14,688,54
  2246                        	.sym	fat_extBS_16_t,0,10,14,192,53
  2247                        	.sym	PFAT32EXT,0,138,14,32,52
  2248                        	.sym	fat_extBS_32_t,0,10,14,416,52
  2249                        	.sym	P_FX_FAT_DIR_INFO,0,138,14,32,51
  2250                        	.sym	FX_FAT_DIR_INFO,0,10,14,256,51
  2251                        	.sym	PFILEINFO,0,138,14,32,50
  2252                        	.sym	FILEINFO,0,10,14,136,50
  2253                        	.sym	PDISKINFO,0,138,14,32,49
  2254                        	.sym	DISKINFO,0,10,14,416,49
  2255                        	.sym	PDIRENTRY,0,138,14,32,48
  2256                        	.sym	DIRENTRY,0,10,14,256,48
  2257                        	.sym	~~disk_ioctl,~~disk_ioctl,69,2,0
  2258                        	.sym	~~disk_write,~~disk_write,69,2,0
  2259                        	.sym	~~disk_read,~~disk_read,69,2,0
  2260                        	.sym	~~disk_status,~~disk_status,78,2,0
  2261                        	.sym	~~disk_initialize,~~disk_initialize,78,2
                    ,0
  2262                        	.sym	DRESULT,0,5,14,16
  2263                        	.sym	DSTATUS,0,14,14,8
  2264                        	.sym	FRESULT,0,5,14,16
  2265                        	.sym	MKFS_PARM,0,10,14,80,47
  2266                        	.sym	FILINFO,0,10,14,176,46
  2267                        	.sym	DIR,0,10,14,352,45
  2268                        	.sym	FIL,0,10,14,4400,44
  2269                        	.sym	FFOBJID,0,10,14,128,43
  2270                        	.sym	FATFS,0,10,14,4472,42
  2271                        	.sym	LBA_t,0,18,14,32
  2272                        	.sym	FSIZE_t,0,18,14,32
  2273                        	.sym	TCHAR,0,14,14,8
  2274                        	.sym	PFXCOMBUFFER,0,138,14,32,41
  2275                        	.sym	FXCOMBUFFER,0,10,14,2080,41
  2276                        	.sym	PSUBMENULIST,0,138,14,32,40
  2277                        	.sym	SUBMENULIST,0,10,14,40,40
  2278                        	.sym	HSUBMENU,0,7,14,32
  2279                        	.sym	PSUBMENU,0,138,14,32,39
  Thu Dec  3 2020 22:25                                                Page 45


  2280                        	.sym	SUBMENU,0,10,14,64,39
  2281                        	.sym	MenuAction,0,641,14,32
  2282                        	.sym	PMENUANCHOR,0,138,14,32,38
  2283                        	.sym	MENUANCHOR,0,10,14,144,38
  2284                        	.sym	PTEXTBOX,0,138,14,32,37
  2285                        	.sym	TEXTBOX,0,10,14,144,37
  2286                        	.sym	PLISTBOX,0,138,14,32,36
  2287                        	.sym	LISTBOX,0,10,14,240,36
  2288                        	.sym	PSCROLLBAR,0,138,14,32,35
  2289                        	.sym	SCROLLBAR,0,10,14,192,35
  2290                        	.sym	PBUTTON,0,138,14,32,34
  2291                        	.sym	BUTTON,0,10,14,80,34
  2292                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,33
  2293                        	.sym	MENUDROPDOWNDATA,0,10,14,3568,33
  2294                        	.sym	PMENUTAG,0,138,14,32,32
  2295                        	.sym	MENUTAG,0,10,14,112,32
  2296                        	.sym	PMENU,0,138,14,32,31
  2297                        	.sym	MENU,0,10,14,248,31
  2298                        	.sym	HMENURESOURCE,0,129,14,32
  2299                        	.sym	HTEXTBOX,0,7,14,32
  2300                        	.sym	PTEXTBOXX,0,138,14,32,30
  2301                        	.sym	TEXTBOXX,0,10,14,112,30
  2302                        	.sym	FONTMETRIC,0,10,14,32,29
  2303                        	.sym	TITLE,0,142,14,32
  2304                        	.sym	PHANDLE,0,1153,14,32
  2305                        	.sym	HANDLE,0,129,14,32
  2306                        	.sym	PWINDOWEX,0,138,14,32,28
  2307                        	.sym	WINDOWEX,0,10,14,2704,28
  2308                        	.sym	PWINDOW,0,138,14,32,27
  2309                        	.sym	WINDOW,0,10,14,2808,27
  2310                        	.sym	PDRAGDATA,0,138,14,32,26
  2311                        	.sym	DRAGDATA,0,10,14,136,26
  2312                        	.sym	PNCCLICKABLE,0,138,14,32,25
  2313                        	.sym	NCCLICKABLE,0,10,14,88,25
  2314                        	.sym	HCLICKABLE,0,7,14,32
  2315                        	.sym	PCLICKABLE,0,138,14,32,24
  2316                        	.sym	CLICKABLE,0,10,14,88,24
  2317                        	.sym	PWNDCLASS,0,138,14,32,23
  2318                        	.sym	WNDCLASS,0,10,14,256,23
  2319                        	.sym	HBRUSH,0,129,14,32
  2320                        	.sym	HCURSOR,0,129,14,32
  2321                        	.sym	HICON,0,129,14,32
  2322                        	.sym	HINSTANCE,0,129,14,32
  2323                        	.sym	FXWndProc,0,654,14,32
  2324                        	.sym	PRECT,0,138,14,32,22
  2325                        	.sym	RECT,0,10,14,64,22
  2326                        	.sym	PPOINT,0,138,14,32,21
  2327                        	.sym	POINT,0,10,14,32,21
  2328                        	.sym	PFXPROPERTY,0,138,14,32,19
  2329                        	.sym	FXPROPERTY,0,10,14,384,19
  2330                        	.sym	SCANCODE,0,14,14,8
  2331                        	.sym	KEYCODE,0,14,14,8
  2332                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,18
  2333                        	.sym	FXPROCESSMESSAGE,0,10,14,112,18
  2334                        	.sym	PFXPROCESS,0,138,14,32,17
  2335                        	.sym	FXPROCESS,0,10,14,800,17
  2336                        	.sym	PDESKTOP_CONTROL,0,138,14,32,16
  2337                        	.sym	DESKTOP_CONTROL,0,10,14,392,16
  Thu Dec  3 2020 22:25                                                Page 46


  2338                        	.sym	PCONSOLE_CONTROL,0,138,14,32,15
  2339                        	.sym	CONSOLE_CONTROL,0,10,14,448,15
  2340                        	.sym	FXProcessProc,0,641,14,32
  2341                        	.sym	PFXCMDMESSAGE,0,138,14,32,14
  2342                        	.sym	FXCMDMESSAGE,0,10,14,304,14
  2343                        	.sym	PFXOSMESSAGE,0,138,14,32,13
  2344                        	.sym	FXOSMESSAGE,0,10,14,304,13
  2345                        	.sym	PINT_REGS,0,138,14,32,12
  2346                        	.sym	INT_REGS,0,10,14,104,12
  2347                        	.sym	TASK_STACK,0,10,14,32,11
  2348                        	.sym	TASK,0,10,14,48,10
  2349                        	.sym	PIRQDATA,0,138,14,32,9
  2350                        	.sym	IRQDATA,0,10,14,48,9
  2351                        	.sym	HMENU,0,129,14,32
  2352                        	.sym	HWND,0,129,14,32
  2353                        	.sym	MSGDATA,0,14,14,8
  2354                        	.sym	MSGDEST,0,18,14,32
  2355                        	.sym	MSGSRC,0,18,14,32
  2356                        	.sym	MSGTYPE,0,16,14,16
  2357                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,3
  2358                        	.sym	PROCESS_TLS_LIST,0,138,14,32,3
  2359                        	.sym	SEMAPHORE_LIST,0,138,14,32,3
  2360                        	.sym	FILE_BLOCK_LIST,0,138,14,32,3
  2361                        	.sym	FILE_PATH_LIST,0,138,14,32,3
  2362                        	.sym	PROCEDURE_LIST,0,138,14,32,3
  2363                        	.sym	FILE_HANDLE,0,138,14,32,8
  2364                        	.sym	FILE_BLOCK,0,10,14,552,8
  2365                        	.sym	SEMAPHORE,0,10,14,16,7
  2366                        	.sym	PPROCESS_SIGNAL,0,138,14,32,6
  2367                        	.sym	PROCESS_SIGNAL,0,10,14,16,6
  2368                        	.sym	KRESULT,0,18,14,32
  2369                        	.sym	PKERNEL_ERROR,0,138,14,32,5
  2370                        	.sym	KERNEL_ERROR,0,10,14,32,5
  2371                        	.sym	PROCESS_STATUS,0,16,14,16
  2372                        	.sym	FILE_PATH_NAME,0,142,14,32
  2373                        	.sym	PROCESS_RESOURCE,0,129,14,32
  2374                        	.sym	PROCESS_TLS,0,129,14,32
  2375                        	.sym	PROCESS_CTX,0,129,14,32
  2376                        	.sym	USERID,0,16,14,16
  2377                        	.sym	PROCESS_ID,0,18,14,32
  2378                        	.sym	PROCESS_BANK,0,14,14,8
  2379                        	.sym	PFXQUEUE,0,138,14,32,4
  2380                        	.sym	FXQUEUE,0,10,14,80,4
  2381                        	.sym	PFXNODELIST,0,138,14,32,3
  2382                        	.sym	FXNODELIST,0,10,14,96,3
  2383                        	.sym	NodeListDeallocator,0,641,14,32
  2384                        	.sym	PFXNODE,0,138,14,32,2
  2385                        	.sym	FXNODE,0,10,14,384,2
  2386                        	.sym	PBYTEBITS,0,138,14,32,1
  2387                        	.sym	BYTEBITS,0,10,14,8,1
  2388                        	.sym	HCOLOR,0,129,14,32
  2389                        	.sym	HFONT,0,129,14,32
  2390                        	.sym	HDC,0,129,14,32
  2391                        	.sym	HPOINTER,0,129,14,32
  2392                        	.sym	uint32_t,0,18,14,32
  2393                        	.sym	uint8_t,0,14,14,8
  2394                        	.sym	PFAR,0,142,14,32
  2395                        	.sym	LPBOOL,0,142,14,32
  Thu Dec  3 2020 22:25                                                Page 47


  2396                        	.sym	BOOL,0,14,14,8
  2397                        	.sym	DWORD,0,18,14,32
  2398                        	.sym	ULONG,0,18,14,32
  2399                        	.sym	LPLONG,0,135,14,32
  2400                        	.sym	LONG,0,7,14,32
  2401                        	.sym	PUINT,0,144,14,32
  2402                        	.sym	USHORT,0,16,14,16
  2403                        	.sym	UINT,0,16,14,16
  2404                        	.sym	INT,0,5,14,16
  2405                        	.sym	WORD,0,5,14,16
  2406                        	.sym	PBYTE,0,142,14,32
  2407                        	.sym	BYTE,0,14,14,8
  2408                        	.sym	UCHAR,0,14,14,8
  2409                        	.sym	LPWCSTR,0,142,14,32
  2410                        	.sym	LPCSTR,0,142,14,32
  2411                        	.sym	LPSTR,0,142,14,32
  2412                        	.sym	LPCHAR,0,142,14,32
  2413                        	.sym	CHAR,0,14,14,8
  2414                        	.sym	LPVOID,0,129,14,32
  2415                        	.sym	VOID,0,1,14,32
  2416                        	end


      Lines assembled: 2416
      Errors: 0
