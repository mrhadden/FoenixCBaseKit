  Thu Dec  3 2020 22:25                                                Page 1


                     ***************************************
                     **      WDC 65C816 Macro Assembler   **
                     **                                   **
                     **     Version 3.49.1- Feb  6 2006    **
                     ***************************************

     1                        ;:ts=8
     2             00000001   R0	equ	1
     3             00000005   R1	equ	5
     4             00000009   R2	equ	9
     5             0000000D   R3	equ	13
     6                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.c",0
     7                        ;
     8                        ;#include "fxkernel.h"
     9                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
    10                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
    11                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
    12                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stddef.h",0
    13                        	.line	88
    14                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",43
    15                        	.stag	fake1_,32,1
    16                        	.member	quot,0,5,8,16
    17                        	.member	rem,16,5,8,16
    18                        	.eos
    19                        	.stag	fake2_,64,2
    20                        	.member	quot,0,7,8,32
    21                        	.member	rem,32,7,8,32
    22                        	.eos
    23                        	.stag	int_sqrt,32,3
    24                        	.member	sqrt,0,16,8,16
    25                        	.member	frac,16,16,8,16
    26                        	.eos
    27                        	.line	205
    28                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",4
    29                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
    30                        	.line	134
    31                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",5
    32                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    ctype.h",0
    33                        	.line	103
    34                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",6
    35                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
    36                        	.stag	_fx_bytebits,8,4
    37                        	.member	b7,0,14,17,1
    38                        	.member	b6,1,14,17,1
    39                        	.member	b5,2,14,17,1
    40                        	.member	b4,3,14,17,1
  Thu Dec  3 2020 22:25                                                Page 2


    41                        	.member	b3,4,14,17,1
    42                        	.member	b2,5,14,17,1
    43                        	.member	b1,6,14,17,1
    44                        	.member	b0,7,14,17,1
    45                        	.eos
    46                        	.stag	_fx_node,384,5
    47                        	.member	type,0,14,8,8
    48                        	.member	Reserved0,8,14,8,8
    49                        	.member	data,16,129,8,32
    50                        	.member	last,48,138,8,32,5
    51                        	.member	next,80,138,8,32,5
    52                        	.member	name,112,110,8,0,32
    53                        	.member	Reserved1,368,16,8,16
    54                        	.eos
    55                        	.stag	_fx_nodelist,96,6
    56                        	.member	listhead,0,138,8,32,5
    57                        	.member	listData,32,129,8,32
    58                        	.member	deallocator,64,641,8,32
    59                        	.eos
    60                        	.stag	_fx_queue,80,7
    61                        	.member	count,0,5,8,16
    62                        	.member	front,16,138,8,32,5
    63                        	.member	rear,48,138,8,32,5
    64                        	.eos
    65                        	.stag	fake8_,32,8
    66                        	.member	subsystem,0,14,8,8
    67                        	.member	level,8,14,8,8
    68                        	.member	error,16,16,8,16
    69                        	.eos
    70                        	.stag	_fx_process_signal,16,9
    71                        	.member	cbSize,0,16,8,16
    72                        	.eos
    73                        	.stag	_fx_semaphore,16,10
    74                        	.member	reserved,0,5,8,16
    75                        	.eos
    76                        	.stag	_fx_fileBlock,552,11
    77                        	.member	openCount,0,16,8,16
    78                        	.member	lockCount,16,16,8,16
    79                        	.member	dirty,32,14,8,8
    80                        	.member	fileBuffer,40,110,8,0,64
    81                        	.eos
    82                        	.stag	_fx_irq_data,48,12
    83                        	.member	line,0,5,8,16
    84                        	.member	keycode,16,142,8,32
    85                        	.eos
    86                        	.stag	_task,48,13
    87                        	.member	SPL,0,14,8,8
    88                        	.member	SPH,8,14,8,8
    89                        	.member	pstack,16,142,8,32
    90                        	.eos
    91                        	.stag	_task_stack,32,14
    92                        	.member	SS,0,142,8,32
    93                        	.eos
    94                        	.stag	int_regs,104,15
    95                        	.member	PB,0,14,8,8
    96                        	.member	PH,8,14,8,8
    97                        	.member	PL,16,14,8,8
    98                        	.member	PP,24,14,8,8
  Thu Dec  3 2020 22:25                                                Page 3


    99                        	.member	DB,32,14,8,8
   100                        	.member	DH,40,14,8,8
   101                        	.member	DL,48,14,8,8
   102                        	.member	AH,56,14,8,8
   103                        	.member	AL,64,14,8,8
   104                        	.member	XH,72,14,8,8
   105                        	.member	XL,80,14,8,8
   106                        	.member	YH,88,14,8,8
   107                        	.member	YL,96,14,8,8
   108                        	.eos
   109                        	.stag	_fx_eventMessage,304,16
   110                        	.member	src,0,18,8,32
   111                        	.member	dest,32,18,8,32
   112                        	.member	type,64,16,8,16
   113                        	.member	hwnd,80,129,8,32
   114                        	.member	pheap,112,129,8,32
   115                        	.member	msgTime,144,18,8,32
   116                        	.member	data,176,110,8,0,16
   117                        	.eos
   118                        	.stag	_fx_cmdMessage,304,17
   119                        	.member	src,0,18,8,32
   120                        	.member	dest,32,18,8,32
   121                        	.member	type,64,16,8,16
   122                        	.member	hwnd,80,129,8,32
   123                        	.member	pheap,112,129,8,32
   124                        	.member	msgTime,144,18,8,32
   125                        	.member	cmdCId,176,16,8,16
   126                        	.member	cmdMId,192,16,8,16
   127                        	.member	parameter1,208,18,8,32
   128                        	.member	parameter2,240,18,8,32
   129                        	.member	parameter3,272,18,8,32
   130                        	.eos
   131                        	.stag	_fx_console_ctl,448,18
   132                        	.member	maxCols,0,5,8,16
   133                        	.member	maxRows,16,5,8,16
   134                        	.member	curX,32,5,8,16
   135                        	.member	curY,48,5,8,16
   136                        	.member	fgColor,64,5,8,16
   137                        	.member	bgColor,80,5,8,16
   138                        	.member	mode,96,14,8,8
   139                        	.member	kbBuffer,104,101,8,0,16
   140                        	.member	screenBuffer,360,142,8,32
   141                        	.member	desktopMode,392,14,8,8
   142                        	.member	lastMouseButton,400,5,8,16
   143                        	.member	lastMouseX,416,5,8,16
   144                        	.member	lastMouseY,432,5,8,16
   145                        	.eos
   146                        	.stag	_fx_desktop_ctl,392,19
   147                        	.member	desktopMode,0,14,8,8
   148                        	.member	cursorCtl,8,5,8,16
   149                        	.member	cursorState,24,5,8,16
   150                        	.member	backgroundColor,40,5,8,16
   151                        	.member	foregroundColor,56,5,8,16
   152                        	.member	menuMode,72,5,8,16
   153                        	.member	lastMouseButton,88,5,8,16
   154                        	.member	lastMouseX,104,5,8,16
   155                        	.member	lastMouseY,120,5,8,16
   156                        	.member	currentDiskName,136,142,8,32
  Thu Dec  3 2020 22:25                                                Page 4


   157                        	.member	diskNodes,168,129,8,32
   158                        	.member	titleNodes,200,129,8,32
   159                        	.member	menuNodes,232,129,8,32
   160                        	.member	iconNodes,264,129,8,32
   161                        	.member	windowNodes,296,129,8,32
   162                        	.member	fontNodes,328,129,8,32
   163                        	.member	wndProc,360,138,8,32,6
   164                        	.eos
   165                        	.stag	_fx_process,800,20
   166                        	.member	cbSize,0,5,8,16
   167                        	.member	procId,16,18,8,32
   168                        	.member	parentId,48,18,8,32
   169                        	.member	ctx,80,129,8,32
   170                        	.member	userId,112,16,8,16
   171                        	.member	status,128,16,8,16
   172                        	.member	foregroundActive,144,14,8,8
   173                        	.member	tls,152,1121,8,32,8
   174                        	.member	commandLine,408,142,8,32
   175                        	.member	semaphores,440,138,8,32,6
   176                        	.member	fileHandles,472,138,8,32,6
   177                        	.member	pathList,504,138,8,32,6
   178                        	.member	resources,536,138,8,32,6
   179                        	.member	timerAware,568,14,8,8
   180                        	.member	timerTicks,576,112,8,0,2
   181                        	.member	timerTickCount,608,112,8,0,2
   182                        	.member	kernelError,640,10,8,32,8
   183                        	.member	consoleCtl,672,138,8,32,18
   184                        	.member	desktopCtl,704,138,8,32,19
   185                        	.member	execProc,736,641,8,32
   186                        	.member	startupArgs,768,129,8,32
   187                        	.eos
   188                        	.stag	_fxProcessMessage,112,21
   189                        	.member	src,0,18,8,32
   190                        	.member	dest,32,18,8,32
   191                        	.member	type,64,16,8,16
   192                        	.member	processInfo,80,138,8,32,20
   193                        	.eos
   194                        	.stag	_fx_property,384,22
   195                        	.member	name,0,110,8,0,16
   196                        	.member	value,128,110,8,0,32
   197                        	.eos
   198                        	.utag	_24bitPointer,32,23
   199                        	.member	address,0,142,11,32
   200                        	.member	bytes,0,110,11,0,4
   201                        	.eos
   202                        	.stag	_PointStruct,32,24
   203                        	.member	x,0,5,8,16
   204                        	.member	y,16,5,8,16
   205                        	.eos
   206                        	.stag	_RectStruct,64,25
   207                        	.member	x,0,5,8,16
   208                        	.member	y,16,5,8,16
   209                        	.member	width,32,5,8,16
   210                        	.member	height,48,5,8,16
   211                        	.eos
   212                        	.stag	_k_WindowClass,256,26
   213                        	.member	cbSize,0,16,8,16
   214                        	.member	style,16,16,8,16
  Thu Dec  3 2020 22:25                                                Page 5


   215                        	.member	pWndProc,32,654,8,32
   216                        	.member	hInstance,64,129,8,32
   217                        	.member	hIcon,96,129,8,32
   218                        	.member	hCursor,128,129,8,32
   219                        	.member	hbrBackground,160,129,8,32
   220                        	.member	lpszMenuName,192,142,8,32
   221                        	.member	lpszClassName,224,142,8,32
   222                        	.eos
   223                        	.stag	_ClickableRect,88,27
   224                        	.member	area,0,10,8,64,25
   225                        	.member	z,64,5,8,16
   226                        	.member	enabled,80,14,8,8
   227                        	.eos
   228                        	.stag	_NCClickableRect,88,28
   229                        	.member	area,0,10,8,64,25
   230                        	.member	msgType,64,16,8,16
   231                        	.member	enabled,80,14,8,8
   232                        	.eos
   233                        	.stag	_DragData,136,29
   234                        	.member	area,0,10,8,64,25
   235                        	.member	xoffset,64,5,8,16
   236                        	.member	yoffset,80,5,8,16
   237                        	.member	msgType,96,16,8,16
   238                        	.member	isDrag,112,14,8,8
   239                        	.member	canDrag,120,14,8,8
   240                        	.member	canDrop,128,14,8,8
   241                        	.eos
   242                        	.stag	_k_WindowStruct,2808,30
   243                        	.member	cbSize,0,16,8,16
   244                        	.member	style,16,18,8,32
   245                        	.member	win_id,48,5,8,16
   246                        	.member	win_x,64,5,8,16
   247                        	.member	win_y,80,5,8,16
   248                        	.member	win_width,96,5,8,16
   249                        	.member	win_height,112,5,8,16
   250                        	.member	wndRect,128,10,8,64,25
   251                        	.member	clientRect,192,10,8,64,25
   252                        	.member	nonclientGadgets,256,106,8,0,28,16
   253                        	.member	clickable,1664,129,8,32
   254                        	.member	win_title,1696,110,8,0,32
   255                        	.member	Reserved0,1952,16,8,16
   256                        	.member	win_class,1968,110,8,0,16
   257                        	.member	win_class_name,2096,110,8,0,32
   258                        	.member	nBitmapLayer,2352,16,8,16
   259                        	.member	procid,2368,18,8,32
   260                        	.member	pWndClass,2400,138,8,32,26
   261                        	.member	pParentWindow,2432,129,8,32
   262                        	.member	hMenu,2464,129,8,32
   263                        	.member	pChildWindows,2496,138,8,32,6
   264                        	.member	pChildHitList,2528,138,8,32,6
   265                        	.member	isVisible,2560,14,8,8
   266                        	.member	windowData,2568,129,8,32
   267                        	.member	clientData,2600,1121,8,32,6
   268                        	.member	isClosed,2792,14,8,8
   269                        	.member	isClosing,2800,14,8,8
   270                        	.eos
   271                        	.stag	_k_WindowStructEx,2704,31
   272                        	.member	cbSize,0,16,8,16
  Thu Dec  3 2020 22:25                                                Page 6


   273                        	.member	style,16,18,8,32
   274                        	.member	win_id,48,5,8,16
   275                        	.member	win_x,64,5,8,16
   276                        	.member	win_y,80,5,8,16
   277                        	.member	win_width,96,5,8,16
   278                        	.member	win_height,112,5,8,16
   279                        	.member	wndRect,128,10,8,64,25
   280                        	.member	clientRect,192,10,8,64,25
   281                        	.member	nonclientGadgets,256,106,8,0,28,16
   282                        	.member	clickable,1664,129,8,32
   283                        	.member	win_title,1696,110,8,0,32
   284                        	.member	Reserved0,1952,16,8,16
   285                        	.member	win_class,1968,110,8,0,16
   286                        	.member	nBitmapLayer,2096,16,8,16
   287                        	.member	procid,2112,18,8,32
   288                        	.member	pWndClass,2144,138,8,32,26
   289                        	.member	pParentWindow,2176,129,8,32
   290                        	.member	hMenu,2208,129,8,32
   291                        	.member	pChildWindows,2240,138,8,32,6
   292                        	.member	pChildHitList,2272,138,8,32,6
   293                        	.member	isVisible,2304,14,8,8
   294                        	.member	windowData,2312,129,8,32
   295                        	.member	clientData,2344,1121,8,32,4
   296                        	.member	isClosed,2472,14,8,8
   297                        	.member	hWnd,2480,129,8,32
   298                        	.member	localRect,2512,10,8,64,25
   299                        	.member	globalRect,2576,10,8,64,25
   300                        	.member	clientOffsetRect,2640,10,8,64,25
   301                        	.eos
   302                        	.stag	_FontMetric,32,32
   303                        	.member	width,0,5,8,16
   304                        	.member	height,16,5,8,16
   305                        	.eos
   306                        	.stag	_ctl_Textbox,112,33
   307                        	.member	win_id,0,5,8,16
   308                        	.member	win_x,16,5,8,16
   309                        	.member	win_y,32,5,8,16
   310                        	.member	win_width,48,5,8,16
   311                        	.member	win_height,64,5,8,16
   312                        	.member	content,80,1166,8,32
   313                        	.eos
   314                        	.stag	_MenuStruct,248,34
   315                        	.member	cx,0,5,8,16
   316                        	.member	cy,16,5,8,16
   317                        	.member	width,32,5,8,16
   318                        	.member	height,48,5,8,16
   319                        	.member	fcolor,64,14,8,8
   320                        	.member	bcolor,72,14,8,8
   321                        	.member	chromeLeft,80,14,8,8
   322                        	.member	chromeRight1,88,14,8,8
   323                        	.member	chromeRight2,96,14,8,8
   324                        	.member	itemId,104,16,8,16
   325                        	.member	pCaption,120,142,8,32
   326                        	.member	subMenus,152,138,8,32,6
   327                        	.member	pBackground,184,129,8,32
   328                        	.member	hWndOwner,216,129,8,32
   329                        	.eos
   330                        	.stag	fake35_,112,35
  Thu Dec  3 2020 22:25                                                Page 7


   331                        	.member	menuId,0,16,8,16
   332                        	.member	caption,16,142,8,32
   333                        	.member	rect,48,10,8,64,25
   334                        	.eos
   335                        	.stag	fake36_,3568,36
   336                        	.member	pParent,0,138,8,32,30
   337                        	.member	rect,32,10,8,64,25
   338                        	.member	captions,96,1134,8,32,24
   339                        	.member	chrome,864,110,8,0,24
   340                        	.member	ids,1056,112,8,0,24
   341                        	.member	clickable,1440,106,8,0,27,24
   342                        	.member	selected,3552,16,8,16
   343                        	.eos
   344                        	.stag	_fx_button_t,80,37
   345                        	.member	pCaption,0,142,8,32
   346                        	.member	data,32,129,8,32
   347                        	.member	captionPixelWidth,64,16,8,16
   348                        	.eos
   349                        	.stag	_fx_scrollbar_t,192,38
   350                        	.member	min,0,16,8,16
   351                        	.member	max,16,16,8,16
   352                        	.member	increment,32,16,8,16
   353                        	.member	stopsize,48,16,8,16
   354                        	.member	location,64,5,8,16
   355                        	.member	state,80,5,8,16
   356                        	.member	rectThumb,96,10,8,64,25
   357                        	.member	data,160,129,8,32
   358                        	.eos
   359                        	.stag	_fx_listbox_t,240,39
   360                        	.member	pos,0,5,8,16
   361                        	.member	selected,16,16,8,16
   362                        	.member	offsetX,32,5,8,16
   363                        	.member	offsetY,48,5,8,16
   364                        	.member	inc,64,5,8,16
   365                        	.member	direction,80,5,8,16
   366                        	.member	top,96,5,8,16
   367                        	.member	bottom,112,5,8,16
   368                        	.member	indexTop,128,5,8,16
   369                        	.member	indexBottom,144,5,8,16
   370                        	.member	maxItems,160,16,8,16
   371                        	.member	fontSet,176,142,8,32
   372                        	.member	data,208,129,8,32
   373                        	.eos
   374                        	.stag	_fx_textbox_t,144,40
   375                        	.member	pos,0,5,8,16
   376                        	.member	selected,16,16,8,16
   377                        	.member	offsetX,32,5,8,16
   378                        	.member	offsetY,48,5,8,16
   379                        	.member	isShifted,64,14,8,8
   380                        	.member	cursorState,72,14,8,8
   381                        	.member	fontSet,80,142,8,32
   382                        	.member	data,112,129,8,32
   383                        	.eos
   384                        	.stag	_fx_menuAnchor_t,144,41
   385                        	.member	pCaption,0,142,8,32
   386                        	.member	renderLayoutX,32,16,8,16
   387                        	.member	renderLayoutY,48,16,8,16
   388                        	.member	captionPixelWidth,64,16,8,16
  Thu Dec  3 2020 22:25                                                Page 8


   389                        	.member	data,80,129,8,32
   390                        	.member	droppedWindow,112,138,8,32,30
   391                        	.eos
   392                        	.stag	_SubMenuStruct,64,42
   393                        	.member	caption,0,142,8,32
   394                        	.member	action,32,641,8,32
   395                        	.eos
   396                        	.stag	_SubMenuListStruct,40,43
   397                        	.member	cMenus,0,14,8,8
   398                        	.member	psubmenus,8,9354,8,32,42
   399                        	.eos
   400                        	.stag	_fx_ComBuffer,2080,44
   401                        	.member	cbSize,0,16,8,16
   402                        	.member	cbBuffer,16,16,8,16
   403                        	.member	buffer,32,110,8,0,256
   404                        	.eos
   405                        	.line	708
   406                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",8
   407                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstringtable.h",0
   408                        	.line	89
   409                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",9
   410                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",0
   411                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   412                        	.line	708
   413                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",5
   414                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",0
   415                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   416                        	.line	708
   417                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fmx_vicky.h",11
   418                        	.line	72
   419                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",6
   420                        	.line	1325
   421                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",13
   422                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",0
   423                        	.line	270
   424                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",19
   425                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   426                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   427                        	.line	134
   428                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",5
   429                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
  Thu Dec  3 2020 22:25                                                Page 9


   430                        	.line	205
   431                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",6
   432                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   433                        	.line	708
   434                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",7
   435                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxc256fmx.h",0
   436                        	.line	1325
   437                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",10
   438                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   439                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdlib.h",0
   440                        	.line	205
   441                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",5
   442                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    string.h",0
   443                        	.line	134
   444                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",6
   445                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   446                        	.line	708
   447                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",7
   448                        	.stag	_fx_string,64,45
   449                        	.member	size,0,16,8,16
   450                        	.member	pos,16,5,8,16
   451                        	.member	buffer,32,142,8,32
   452                        	.eos
   453                        	.line	71
   454                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",15
   455                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   456                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   457                        	.line	25
   458                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",5
   459                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",0
   460                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   461                        	.line	708
   462                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxexec.h",5
   463                        	.line	52
   464                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",6
   465                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   466                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
  Thu Dec  3 2020 22:25                                                Page 10


                    space\FXOSv1\src\fxtypes.h",0
   467                        	.line	708
   468                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",5
   469                        	.line	61
   470                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",7
   471                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",0
   472                        	.line	171
   473                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",8
   474                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",0
   475                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   476                        	.line	708
   477                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",5
   478                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   479                        	.line	25
   480                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",6
   481                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",0
   482                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",0
   483                        	.line	25
   484                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",5
   485                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",0
   486                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos_build_parameters.h",0
   487                        	.line	32
   488                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc_cfg.h",8
   489                        	.stag	UMM_HEAP_INFO_t,256,46
   490                        	.member	totalEntries,0,18,8,32
   491                        	.member	usedEntries,32,18,8,32
   492                        	.member	freeEntries,64,18,8,32
   493                        	.member	totalBlocks,96,18,8,32
   494                        	.member	usedBlocks,128,18,8,32
   495                        	.member	freeBlocks,160,18,8,32
   496                        	.member	maxFreeContiguousBlocks,192,18,8,32
   497                        	.member	blockSize,224,18,8,32
   498                        	.eos
   499                        	.line	199
   500                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",6
   501                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",0
   502                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   503                        	.line	708
   504                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\umm_malloc.h",11
  Thu Dec  3 2020 22:25                                                Page 11


   505                        	.line	24
   506                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxmemorymanager.h",7
   507                        	.stag	_fx_memory_map,2072,47
   508                        	.member	availableMemory,0,18,8,32
   509                        	.member	valid_segments,32,110,8,0,255
   510                        	.eos
   511                        	.line	39
   512                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",7
   513                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",0
   514                        	.line	743
   515                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",8
   516                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",0
   517                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",0
   518                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxtypes.h",0
   519                        	.line	708
   520                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxfont.h",6
   521                        	.line	64
   522                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxgui.h",4
   523                        	.stag	_click_detected,64,48
   524                        	.member	window,0,138,8,32,30
   525                        	.member	handler,32,641,8,32
   526                        	.eos
   527                        	.stag	_current_palette_map,400,49
   528                        	.member	CUR_DESKTOP,0,5,8,16
   529                        	.member	CUR_BACKGROUND,16,5,8,16
   530                        	.member	CUR_FONT,32,5,8,16
   531                        	.member	CUR_SELECTED_FONT,48,5,8,16
   532                        	.member	CUR_HIGHLIGHT_COLOR,64,5,8,16
   533                        	.member	CUR_WINDOWFRAME,80,5,8,16
   534                        	.member	CUR_WINDOWBORDER,96,5,8,16
   535                        	.member	CUR_WINDOWSHADOW,112,5,8,16
   536                        	.member	CUR_MENU,128,5,8,16
   537                        	.member	CUR_GADGET,144,5,8,16
   538                        	.member	CUR_COLOR,160,101,8,0,15
   539                        	.eos
   540                        	.line	264
   541                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxwindowmanager.h",9
   542                        	.stag	_childMessage_t,64,50
   543                        	.member	msgType,0,16,8,16
   544                        	.member	msgData,16,129,8,32
   545                        	.member	dataSize,48,16,8,16
   546                        	.eos
   547                        	.line	362
   548                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxeventmanager.h",9
   549                        	.stag	_fx_main_loopvars,16,51
   550                        	.member	dummy,0,5,8,16
   551                        	.eos
  Thu Dec  3 2020 22:25                                                Page 12


   552                        	.stag	_fxMouseMessageData,64,52
   553                        	.member	button1,0,14,8,8
   554                        	.member	button2,8,14,8,8
   555                        	.member	button3,16,14,8,8
   556                        	.member	button4,24,14,8,8
   557                        	.member	x,32,16,8,16
   558                        	.member	y,48,16,8,16
   559                        	.eos
   560                        	.stag	_fx_eventProcess,64,53
   561                        	.member	process,0,138,8,32,20
   562                        	.member	eventProc,32,641,8,32
   563                        	.eos
   564                        	.stag	_mouse_msg_state,184,54
   565                        	.member	lastEvent,0,18,8,32
   566                        	.member	buttonLeftDown,32,14,8,8
   567                        	.member	lastLeftDown,40,18,8,32
   568                        	.member	buttonRightDown,72,14,8,8
   569                        	.member	lastRightDown,80,18,8,32
   570                        	.member	buttonMiddleDown,112,14,8,8
   571                        	.member	lastMiddleDown,120,18,8,32
   572                        	.member	lastX,152,16,8,16
   573                        	.member	lastY,168,16,8,16
   574                        	.eos
   575                        	.line	743
   576                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxconsole.h",16
   577                        	.stag	_fx_spinner_ctx,48,55
   578                        	.member	index,0,5,8,16
   579                        	.member	spinner,16,142,8,32
   580                        	.eos
   581                        	.stag	_fx_console_ctx,1144,56
   582                        	.member	lineBufferIndex,0,5,8,16
   583                        	.member	lineBuffer,16,110,8,0,128
   584                        	.member	isShifted,1040,14,8,8
   585                        	.member	userData,1048,129,8,32
   586                        	.member	screenBuffer,1080,129,8,32
   587                        	.member	Reserved1,1112,129,8,32
   588                        	.eos
   589                        	.stag	_token,64,57
   590                        	.member	type,0,5,8,16
   591                        	.member	depth,16,16,8,16
   592                        	.member	text,32,142,8,32
   593                        	.eos
   594                        	.stag	_command_args,64,58
   595                        	.member	proc,0,656,8,32
   596                        	.member	tokens,32,138,8,32,5
   597                        	.eos
   598                        	.line	171
   599                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",20
   600                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxstring.h",0
   601                        	.line	71
   602                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",21
   603                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   604                        	.line	61
  Thu Dec  3 2020 22:25                                                Page 13


   605                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxos.h",22
   606                        	.line	25
   607                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",5
   608                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxnode.h",0
   609                        	.line	61
   610                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.h",6
   611                        	.stag	_fx_zero_page,448,59
   612                        	.member	fxos_mouse_byte_0,0,14,8,8
   613                        	.member	fxos_mouse_byte_1,8,14,8,8
   614                        	.member	fxos_mouse_byte_2,16,14,8,8
   615                        	.member	fxos_mouse_byte_t,24,14,8,8
   616                        	.member	fxos_mouse_byte_x_l,32,14,8,8
   617                        	.member	fxos_mouse_byte_x_h,40,14,8,8
   618                        	.member	fxos_mouse_byte_y_l,48,14,8,8
   619                        	.member	fxos_mouse_byte_y_h,56,14,8,8
   620                        	.member	fxos_key_byte_0,64,14,8,8
   621                        	.member	fxos_key_byte_1,72,14,8,8
   622                        	.member	fxos_key_byte_2,80,14,8,8
   623                        	.member	fxos_mouse_ctl,88,14,8,8
   624                        	.member	fxos_mouse_index,96,14,8,8
   625                        	.member	fxos_mouse_status,104,14,8,8
   626                        	.member	VersionMajor,112,16,8,16
   627                        	.member	VersionMinor,128,16,8,16
   628                        	.member	VersionRelease,144,16,8,16
   629                        	.member	topMemory,160,18,8,32
   630                        	.member	bottomMemory,192,18,8,32
   631                        	.member	availableMemory,224,18,8,32
   632                        	.member	availableMemoryK,256,18,8,32
   633                        	.member	availableHeapMemory,288,18,8,32
   634                        	.member	availableHeapMemoryK,320,18,8,32
   635                        	.member	kernelFunctionCallId,352,16,8,16
   636                        	.member	kernelFunctionCallBank,368,14,8,8
   637                        	.member	kernelFunctionCallReserved,376,14,8,8
   638                        	.member	kernelFunctionCallParameter,384,129,8,32
   639                        	.member	kernelFunctionCallReturn,416,129,8,32
   640                        	.eos
   641                        	.stag	_fx_environment,96,60
   642                        	.member	variables,0,142,8,32
   643                        	.member	reserved1,32,5,8,16
   644                        	.member	reserved2,48,5,8,16
   645                        	.member	reserved3,64,5,8,16
   646                        	.member	reserved4,80,5,8,16
   647                        	.eos
   648                        	.stag	_debug_byte_bits,8,61
   649                        	.member	bit7,0,14,17,1
   650                        	.member	bit6,1,14,17,1
   651                        	.member	bit5,2,14,17,1
   652                        	.member	bit4,3,14,17,1
   653                        	.member	bit3,4,14,17,1
   654                        	.member	bit2,5,14,17,1
   655                        	.member	bit1,6,14,17,1
   656                        	.member	bit0,7,14,17,1
   657                        	.eos
   658                        	.stag	_fx_device_driver,1416,62
  Thu Dec  3 2020 22:25                                                Page 14


   659                        	.member	name,0,110,8,0,64
   660                        	.member	version,512,110,8,0,64
   661                        	.member	hmajor,1024,110,8,0,16
   662                        	.member	hminor,1152,110,8,0,16
   663                        	.member	type,1280,14,8,8
   664                        	.member	f_driver_load,1288,129,8,32
   665                        	.member	f_driver_read,1320,129,8,32
   666                        	.member	f_driver_write,1352,129,8,32
   667                        	.member	f_driver_unload,1384,129,8,32
   668                        	.eos
   669                        	.stag	_fx_block_device_driver,1448,63
   670                        	.member	name,0,110,8,0,64
   671                        	.member	version,512,110,8,0,64
   672                        	.member	hmajor,1024,110,8,0,16
   673                        	.member	hminor,1152,110,8,0,16
   674                        	.member	type,1280,14,8,8
   675                        	.member	f_driver_load,1288,129,8,32
   676                        	.member	f_driver_read,1320,129,8,32
   677                        	.member	f_driver_write,1352,129,8,32
   678                        	.member	f_driver_unload,1384,129,8,32
   679                        	.member	f_driver_command,1416,129,8,32
   680                        	.eos
   681                        	.line	270
   682                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.c",2
   683                        ;#include <stdarg.h>
   684                        	.file	"G:\devtools\WDCTools\wdc\Tools\include\
                    stdarg.h",0
   685                        	.line	51
   686                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.c",3
   687                        ;
   688                        ;//void *heap_start=(void FAR *)0x030000,*heap_end
                    =(void FAR *)(0x04FFFF);
   689                        ;
   690                        ;static ULONG FXOSVERSION = 0x010000;
   691                        	data
   692                        ~~FXOSVERSION:
   693 00:0000: 00 00 01 00  	dl	$10000
   694 00:0004:              	ends
   695                        ;static PFAR  FXOSVERSIONSTRING = "FX/OS Version 0
                    .9.0 Beta";
   696                        	data
   697                        ~~FXOSVERSIONSTRING:
   698 00:0004: xx xx xx xx  	dl	L1+0
   699 00:0008:              	ends
   700                        	data
   701                        L1:
   702 00:0008: 46 58 2F 4F  	db	$46,$58,$2F,$4F,$53,$20,$56,$65,$72,$73,
                    $69,$6F,$6E,$20,$30
       00:000C: 53 20 56 65 
       00:0010: 72 73 69 6F 
       00:0014: 6E 20 30 
   703 00:0017: 2E 39 2E 30  	db	$2E,$39,$2E,$30,$20,$42,$65,$74,$61,$00
       00:001B: 20 42 65 74 
       00:001F: 61 00 
   704 00:0021:              	ends
   705                        ;
  Thu Dec  3 2020 22:25                                                Page 15


   706                        ;
   707                        ;static char k16buffer[16];
   708                        ;
   709                        ;static KERNELTRAPCALL *KERNEL_FUNCTION_TABLE;
   710                        ;
   711                        ;void k_delay_nop(void)
   712                        ;{
   713                        	.line	15
   714                        	.line	16
   715                        	code
   716                        	xdef	~~k_delay_nop
   717                        	func
   718                        	.function	16
   719                        ~~k_delay_nop:
   720                        	longa	on
   721                        	longi	on
   722 00:0000: 3B           	tsc
   723 00:0001: 38           	sec
   724 00:0002: E9 00 00     	sbc	#L3
   725 00:0005: 1B           	tcs
   726 00:0006: 0B           	phd
   727 00:0007: 5B           	tcd
   728                        	.block	16
   729                        ;	asm NOP;
   730                        	.line	17
   731                        	asmstart
   732 00:0008: EA           	NOP
   733                        	asmend
   734                        ;	asm NOP;
   735                        	.line	18
   736                        	asmstart
   737 00:0009: EA           	NOP
   738                        	asmend
   739                        ;	asm NOP;
   740                        	.line	19
   741                        	asmstart
   742 00:000A: EA           	NOP
   743                        	asmend
   744                        ;	asm NOP;
   745                        	.line	20
   746                        	asmstart
   747 00:000B: EA           	NOP
   748                        	asmend
   749                        ;	asm NOP;
   750                        	.line	21
   751                        	asmstart
   752 00:000C: EA           	NOP
   753                        	asmend
   754                        ;	asm NOP;
   755                        	.line	22
   756                        	asmstart
   757 00:000D: EA           	NOP
   758                        	asmend
   759                        ;	asm NOP;
   760                        	.line	23
   761                        	asmstart
   762 00:000E: EA           	NOP
   763                        	asmend
  Thu Dec  3 2020 22:25                                                Page 16


   764                        ;	asm NOP;
   765                        	.line	24
   766                        	asmstart
   767 00:000F: EA           	NOP
   768                        	asmend
   769                        ;	asm NOP;
   770                        	.line	25
   771                        	asmstart
   772 00:0010: EA           	NOP
   773                        	asmend
   774                        ;	asm NOP;
   775                        	.line	26
   776                        	asmstart
   777 00:0011: EA           	NOP
   778                        	asmend
   779                        ;}
   780                        	.line	27
   781                        L6:
   782 00:0012: 2B           	pld
   783 00:0013: 3B           	tsc
   784 00:0014: 18           	clc
   785 00:0015: 69 00 00     	adc	#L3
   786 00:0018: 1B           	tcs
   787 00:0019: 6B           	rtl
   788                        	.endblock	27
   789             00000000   L3	equ	0
   790             00000001   L4	equ	1
   791                        	ends
   792                        	efunc
   793                        	.endfunc	27,1,0
   794                        	.line	27
   795                        ;
   796                        ;void k_delay_1(void)
   797                        ;{
   798                        	.line	29
   799                        	.line	30
   800                        	code
   801                        	xdef	~~k_delay_1
   802                        	func
   803                        	.function	30
   804                        ~~k_delay_1:
   805                        	longa	on
   806                        	longi	on
   807 00:001A: 3B           	tsc
   808 00:001B: 38           	sec
   809 00:001C: E9 02 00     	sbc	#L7
   810 00:001F: 1B           	tcs
   811 00:0020: 0B           	phd
   812 00:0021: 5B           	tcd
   813                        	.block	30
   814                        ;	int c = 0;
   815                        ;
   816                        ;	for(c=0;c<10;c++)
   817             00000000   c_1	set	0
   818                        	.sym	c,0,5,1,16
   819 00:0022: 64 01        	stz	<L8+c_1
   820                        	.line	33
   821 00:0024: 64 01        	stz	<L8+c_1
  Thu Dec  3 2020 22:25                                                Page 17


   822                        L10003:
   823                        ;	{
   824                        	.line	34
   825                        ;		k_delay_nop();
   826                        	.line	35
   827 00:0026: 22 xx xx xx  	jsl	~~k_delay_nop
   828                        ;	}
   829                        	.line	36
   830                        L10001:
   831 00:002A: E6 01        	inc	<L8+c_1
   832 00:002C: 38           	sec
   833 00:002D: A5 01        	lda	<L8+c_1
   834 00:002F: E9 0A 00     	sbc	#<$a
   835 00:0032: 70 03        	bvs	L10
   836 00:0034: 49 00 80     	eor	#$8000
   837                        L10:
   838 00:0037: 30 03        	bmi	L11
   839 00:0039: 82 EA FF     	brl	L10003
   840                        L11:
   841                        L10002:
   842                        ;}
   843                        	.line	37
   844                        L12:
   845 00:003C: 2B           	pld
   846 00:003D: 3B           	tsc
   847 00:003E: 18           	clc
   848 00:003F: 69 02 00     	adc	#L7
   849 00:0042: 1B           	tcs
   850 00:0043: 6B           	rtl
   851                        	.endblock	37
   852             00000002   L7	equ	2
   853             00000001   L8	equ	1
   854                        	ends
   855                        	efunc
   856                        	.endfunc	37,1,2
   857                        	.line	37
   858                        ;
   859                        ;void k_delay_1ms(void)
   860                        ;{
   861                        	.line	39
   862                        	.line	40
   863                        	code
   864                        	xdef	~~k_delay_1ms
   865                        	func
   866                        	.function	40
   867                        ~~k_delay_1ms:
   868                        	longa	on
   869                        	longi	on
   870 00:0044: 3B           	tsc
   871 00:0045: 38           	sec
   872 00:0046: E9 00 00     	sbc	#L13
   873 00:0049: 1B           	tcs
   874 00:004A: 0B           	phd
   875 00:004B: 5B           	tcd
   876                        	.block	40
   877                        ;	k_delay_1();
   878                        	.line	41
   879 00:004C: 22 xx xx xx  	jsl	~~k_delay_1
  Thu Dec  3 2020 22:25                                                Page 18


   880                        ;}
   881                        	.line	42
   882                        L16:
   883 00:0050: 2B           	pld
   884 00:0051: 3B           	tsc
   885 00:0052: 18           	clc
   886 00:0053: 69 00 00     	adc	#L13
   887 00:0056: 1B           	tcs
   888 00:0057: 6B           	rtl
   889                        	.endblock	42
   890             00000000   L13	equ	0
   891             00000001   L14	equ	1
   892                        	ends
   893                        	efunc
   894                        	.endfunc	42,1,0
   895                        	.line	42
   896                        ;
   897                        ;void sleep(int msec)
   898                        ;{
   899                        	.line	44
   900                        	.line	45
   901                        	code
   902                        	xdef	~~sleep
   903                        	func
   904                        	.function	45
   905                        ~~sleep:
   906                        	longa	on
   907                        	longi	on
   908 00:0058: 3B           	tsc
   909 00:0059: 38           	sec
   910 00:005A: E9 02 00     	sbc	#L17
   911 00:005D: 1B           	tcs
   912 00:005E: 0B           	phd
   913 00:005F: 5B           	tcd
   914             00000004   msec_0	set	4
   915                        	.block	45
   916                        ;	int c = 0;
   917                        ;	for(c=0;c<msec;c++)
   918             00000000   c_1	set	0
   919                        	.sym	c,0,5,1,16
   920                        	.sym	msec,4,5,6,16
   921 00:0060: 64 01        	stz	<L18+c_1
   922                        	.line	47
   923 00:0062: 64 01        	stz	<L18+c_1
   924 00:0064: 82 06 00     	brl	L10007
   925                        L10006:
   926                        ;	{
   927                        	.line	48
   928                        ;		k_delay_1ms();
   929                        	.line	49
   930 00:0067: 22 xx xx xx  	jsl	~~k_delay_1ms
   931                        ;	}
   932                        	.line	50
   933                        L10004:
   934 00:006B: E6 01        	inc	<L18+c_1
   935                        L10007:
   936 00:006D: 38           	sec
   937 00:006E: A5 01        	lda	<L18+c_1
  Thu Dec  3 2020 22:25                                                Page 19


   938 00:0070: E5 06        	sbc	<L17+msec_0
   939 00:0072: 70 03        	bvs	L20
   940 00:0074: 49 00 80     	eor	#$8000
   941                        L20:
   942 00:0077: 30 03        	bmi	L21
   943 00:0079: 82 EB FF     	brl	L10006
   944                        L21:
   945                        L10005:
   946                        ;}
   947                        	.line	51
   948                        L22:
   949 00:007C: A5 04        	lda	<L17+2
   950 00:007E: 85 06        	sta	<L17+2+2
   951 00:0080: A5 03        	lda	<L17+1
   952 00:0082: 85 05        	sta	<L17+1+2
   953 00:0084: 2B           	pld
   954 00:0085: 3B           	tsc
   955 00:0086: 18           	clc
   956 00:0087: 69 04 00     	adc	#L17+2
   957 00:008A: 1B           	tcs
   958 00:008B: 6B           	rtl
   959                        	.endblock	51
   960             00000002   L17	equ	2
   961             00000001   L18	equ	1
   962                        	ends
   963                        	efunc
   964                        	.endfunc	51,1,2
   965                        	.line	51
   966                        ;
   967                        ;/*
   968                        ; *
   969                        ; *
   970                        ; *
   971                        ; *
   972                        ; */
   973                        ;PFAR k_getFXOSVersionName(void)
   974                        ;{
   975                        	.line	59
   976                        	.line	60
   977                        	code
   978                        	xdef	~~k_getFXOSVersionName
   979                        	func
   980                        	.function	60
   981                        ~~k_getFXOSVersionName:
   982                        	longa	on
   983                        	longi	on
   984 00:008C: 3B           	tsc
   985 00:008D: 38           	sec
   986 00:008E: E9 00 00     	sbc	#L23
   987 00:0091: 1B           	tcs
   988 00:0092: 0B           	phd
   989 00:0093: 5B           	tcd
   990                        	.block	60
   991                        ;	return FXOSVERSIONSTRING;
   992                        	.line	61
   993 00:0094: AE xx xx     	ldx	|~~FXOSVERSIONSTRING+2
   994 00:0097: AD xx xx     	lda	|~~FXOSVERSIONSTRING
   995                        L26:
  Thu Dec  3 2020 22:25                                                Page 20


   996 00:009A: A8           	tay
   997 00:009B: 2B           	pld
   998 00:009C: 3B           	tsc
   999 00:009D: 18           	clc
  1000 00:009E: 69 00 00     	adc	#L23
  1001 00:00A1: 1B           	tcs
  1002 00:00A2: 98           	tya
  1003 00:00A3: 6B           	rtl
  1004                        ;}
  1005                        	.line	62
  1006                        	.endblock	62
  1007             00000000   L23	equ	0
  1008             00000001   L24	equ	1
  1009                        	ends
  1010                        	efunc
  1011                        	.endfunc	62,1,0
  1012                        	.line	62
  1013                        ;
  1014                        ;PFXZERPOPAGE k_getZeroPage(void)
  1015                        ;{
  1016                        	.line	64
  1017                        	.line	65
  1018                        	code
  1019                        	xdef	~~k_getZeroPage
  1020                        	func
  1021                        	.function	65
  1022                        ~~k_getZeroPage:
  1023                        	longa	on
  1024                        	longi	on
  1025 00:00A4: 3B           	tsc
  1026 00:00A5: 38           	sec
  1027 00:00A6: E9 00 00     	sbc	#L27
  1028 00:00A9: 1B           	tcs
  1029 00:00AA: 0B           	phd
  1030 00:00AB: 5B           	tcd
  1031                        	.block	65
  1032                        ;	return (PFXZERPOPAGE)ZEROPAGE;
  1033                        	.line	66
  1034 00:00AC: A9 00 00     	lda	#$0
  1035 00:00AF: AA           	tax
  1036 00:00B0: A9 00 15     	lda	#$1500
  1037                        L30:
  1038 00:00B3: A8           	tay
  1039 00:00B4: 2B           	pld
  1040 00:00B5: 3B           	tsc
  1041 00:00B6: 18           	clc
  1042 00:00B7: 69 00 00     	adc	#L27
  1043 00:00BA: 1B           	tcs
  1044 00:00BB: 98           	tya
  1045 00:00BC: 6B           	rtl
  1046                        ;}
  1047                        	.line	67
  1048                        	.endblock	67
  1049             00000000   L27	equ	0
  1050             00000001   L28	equ	1
  1051                        	ends
  1052                        	efunc
  1053                        	.endfunc	67,1,0
  Thu Dec  3 2020 22:25                                                Page 21


  1054                        	.line	67
  1055                        ;
  1056                        ;KERNELTRAPCALL FAR *k_getKernelTrapTable(VOID)
  1057                        ;{
  1058                        	.line	69
  1059                        	.line	70
  1060                        	code
  1061                        	xdef	~~k_getKernelTrapTable
  1062                        	func
  1063                        	.function	70
  1064                        ~~k_getKernelTrapTable:
  1065                        	longa	on
  1066                        	longi	on
  1067 00:00BD: 3B           	tsc
  1068 00:00BE: 38           	sec
  1069 00:00BF: E9 00 00     	sbc	#L31
  1070 00:00C2: 1B           	tcs
  1071 00:00C3: 0B           	phd
  1072 00:00C4: 5B           	tcd
  1073                        	.block	70
  1074                        ;	return KERNEL_FUNCTION_TABLE;
  1075                        	.line	71
  1076 00:00C5: AE xx xx     	ldx	|~~KERNEL_FUNCTION_TABLE+2
  1077 00:00C8: AD xx xx     	lda	|~~KERNEL_FUNCTION_TABLE
  1078                        L34:
  1079 00:00CB: A8           	tay
  1080 00:00CC: 2B           	pld
  1081 00:00CD: 3B           	tsc
  1082 00:00CE: 18           	clc
  1083 00:00CF: 69 00 00     	adc	#L31
  1084 00:00D2: 1B           	tcs
  1085 00:00D3: 98           	tya
  1086 00:00D4: 6B           	rtl
  1087                        ;}
  1088                        	.line	72
  1089                        	.endblock	72
  1090             00000000   L31	equ	0
  1091             00000001   L32	equ	1
  1092                        	ends
  1093                        	efunc
  1094                        	.endfunc	72,1,0
  1095                        	.line	72
  1096                        ;
  1097                        ;VOID k_initializeZeroPage(VOID)
  1098                        ;{
  1099                        	.line	74
  1100                        	.line	75
  1101                        	code
  1102                        	xdef	~~k_initializeZeroPage
  1103                        	func
  1104                        	.function	75
  1105                        ~~k_initializeZeroPage:
  1106                        	longa	on
  1107                        	longi	on
  1108 00:00D5: 3B           	tsc
  1109 00:00D6: 38           	sec
  1110 00:00D7: E9 04 00     	sbc	#L35
  1111 00:00DA: 1B           	tcs
  Thu Dec  3 2020 22:25                                                Page 22


  1112 00:00DB: 0B           	phd
  1113 00:00DC: 5B           	tcd
  1114                        	.block	75
  1115                        ;	PFXZERPOPAGE zp =  k_getZeroPage();
  1116                        ;
  1117                        ;	zp->VersionMajor    = 0;
  1118             00000000   zp_1	set	0
  1119                        	.sym	zp,0,138,1,32,59
  1120 00:00DD: 22 xx xx xx  	jsl	~~k_getZeroPage
  1121 00:00E1: 85 01        	sta	<L36+zp_1
  1122 00:00E3: 86 03        	stx	<L36+zp_1+2
  1123                        	.line	78
  1124 00:00E5: A9 00 00     	lda	#$0
  1125 00:00E8: A0 0E 00     	ldy	#$e
  1126 00:00EB: 97 01        	sta	[<L36+zp_1],Y
  1127                        ;	zp->VersionMinor    = 5;
  1128                        	.line	79
  1129 00:00ED: A9 05 00     	lda	#$5
  1130 00:00F0: A0 10 00     	ldy	#$10
  1131 00:00F3: 97 01        	sta	[<L36+zp_1],Y
  1132                        ;	zp->VersionRelease = -1;
  1133                        	.line	80
  1134 00:00F5: A9 FF FF     	lda	#$ffff
  1135 00:00F8: A0 12 00     	ldy	#$12
  1136 00:00FB: 97 01        	sta	[<L36+zp_1],Y
  1137                        ;
  1138                        ;	zp->topMemory 	 = MEM_USER_CEILING;
  1139                        	.line	82
  1140 00:00FD: A9 00 00     	lda	#$0
  1141 00:0100: A0 14 00     	ldy	#$14
  1142 00:0103: 97 01        	sta	[<L36+zp_1],Y
  1143 00:0105: A9 AF 00     	lda	#$af
  1144 00:0108: A0 16 00     	ldy	#$16
  1145 00:010B: 97 01        	sta	[<L36+zp_1],Y
  1146                        ;	zp->bottomMemory = MEM_USER_FLOOR;
  1147                        	.line	83
  1148 00:010D: A9 00 00     	lda	#$0
  1149 00:0110: A0 18 00     	ldy	#$18
  1150 00:0113: 97 01        	sta	[<L36+zp_1],Y
  1151 00:0115: A9 19 00     	lda	#$19
  1152 00:0118: A0 1A 00     	ldy	#$1a
  1153 00:011B: 97 01        	sta	[<L36+zp_1],Y
  1154                        ;}
  1155                        	.line	84
  1156                        L38:
  1157 00:011D: 2B           	pld
  1158 00:011E: 3B           	tsc
  1159 00:011F: 18           	clc
  1160 00:0120: 69 04 00     	adc	#L35
  1161 00:0123: 1B           	tcs
  1162 00:0124: 6B           	rtl
  1163                        	.endblock	84
  1164             00000004   L35	equ	4
  1165             00000001   L36	equ	1
  1166                        	ends
  1167                        	efunc
  1168                        	.endfunc	84,1,4
  1169                        	.line	84
  Thu Dec  3 2020 22:25                                                Page 23


  1170                        ;
  1171                        ;/*
  1172                        ; *
  1173                        ; *
  1174                        ; *
  1175                        ; *
  1176                        ; */
  1177                        ;int k_report_configuration(int offset,int line)
  1178                        ;{
  1179                        	.line	92
  1180                        	.line	93
  1181                        	code
  1182                        	xdef	~~k_report_configuration
  1183                        	func
  1184                        	.function	93
  1185                        ~~k_report_configuration:
  1186                        	longa	on
  1187                        	longi	on
  1188 00:0125: 3B           	tsc
  1189 00:0126: 38           	sec
  1190 00:0127: E9 16 00     	sbc	#L39
  1191 00:012A: 1B           	tcs
  1192 00:012B: 0B           	phd
  1193 00:012C: 5B           	tcd
  1194             00000004   offset_0	set	4
  1195             00000006   line_0	set	6
  1196                        	.block	93
  1197                        ;	char krcBuffer[16];
  1198                        ;	int pos = offset;
  1199                        ;
  1200                        ;
  1201                        ;	k_put_string(pos,line,CONST_COMPUTER_NAME,15,0);
  1202             00000000   krcBuffer_1	set	0
  1203             00000010   pos_1	set	16
  1204                        	.sym	krcBuffer,0,110,1,0,16
  1205                        	.sym	pos,16,5,1,16
  1206                        	.sym	offset,4,5,6,16
  1207                        	.sym	line,6,5,6,16
  1208 00:012D: A5 1A        	lda	<L39+offset_0
  1209 00:012F: 85 15        	sta	<L40+pos_1
  1210                        	.line	98
  1211 00:0131: F4 00 00     	pea	#<$0
  1212 00:0134: F4 0F 00     	pea	#<$f
  1213 00:0137: F4 xx xx     	pea	#^L2
  1214 00:013A: F4 xx xx     	pea	#<L2
  1215 00:013D: D4 1C        	pei	<L39+line_0
  1216 00:013F: D4 15        	pei	<L40+pos_1
  1217 00:0141: 22 xx xx xx  	jsl	~~k_put_string
  1218                        ;	k_put_color (pos,line,CONST_COMPUTER_NAME_COLOR)
                    ;
  1219                        	.line	99
  1220 00:0145: F4 xx xx     	pea	#^L2+44
  1221 00:0148: F4 xx xx     	pea	#<L2+44
  1222 00:014B: D4 1C        	pei	<L39+line_0
  1223 00:014D: D4 15        	pei	<L40+pos_1
  1224 00:014F: 22 xx xx xx  	jsl	~~k_put_color
  1225                        ;	line++;
  1226                        	.line	100
  Thu Dec  3 2020 22:25                                                Page 24


  1227 00:0153: E6 1C        	inc	<L39+line_0
  1228                        ;
  1229                        ;	k_put_string(pos,line,CONST_COMPUTER_ACK_1,15,0)
                    ;
  1230                        	.line	102
  1231 00:0155: F4 00 00     	pea	#<$0
  1232 00:0158: F4 0F 00     	pea	#<$f
  1233 00:015B: F4 xx xx     	pea	#^L2+57
  1234 00:015E: F4 xx xx     	pea	#<L2+57
  1235 00:0161: D4 1C        	pei	<L39+line_0
  1236 00:0163: D4 15        	pei	<L40+pos_1
  1237 00:0165: 22 xx xx xx  	jsl	~~k_put_string
  1238                        ;	k_put_color (pos,line,CONST_COMPUTER_ACK_1_COLOR
                    );
  1239                        	.line	103
  1240 00:0169: F4 xx xx     	pea	#^L2+118
  1241 00:016C: F4 xx xx     	pea	#<L2+118
  1242 00:016F: D4 1C        	pei	<L39+line_0
  1243 00:0171: D4 15        	pei	<L40+pos_1
  1244 00:0173: 22 xx xx xx  	jsl	~~k_put_color
  1245                        ;	line++;
  1246                        	.line	104
  1247 00:0177: E6 1C        	inc	<L39+line_0
  1248                        ;
  1249                        ;	pos = k_put_string(pos,line,CONST_COMPUTER_ACK_2
                    ,15,0);
  1250                        	.line	106
  1251 00:0179: F4 00 00     	pea	#<$0
  1252 00:017C: F4 0F 00     	pea	#<$f
  1253 00:017F: F4 xx xx     	pea	#^L2+131
  1254 00:0182: F4 xx xx     	pea	#<L2+131
  1255 00:0185: D4 1C        	pei	<L39+line_0
  1256 00:0187: D4 15        	pei	<L40+pos_1
  1257 00:0189: 22 xx xx xx  	jsl	~~k_put_string
  1258 00:018D: 85 15        	sta	<L40+pos_1
  1259                        ;	k_put_string(pos,line,k_getFXOSVersionName(),15,
                    0);
  1260                        	.line	107
  1261 00:018F: F4 00 00     	pea	#<$0
  1262 00:0192: F4 0F 00     	pea	#<$f
  1263 00:0195: 22 xx xx xx  	jsl	~~k_getFXOSVersionName
  1264 00:0199: 85 01        	sta	<R0
  1265 00:019B: 86 03        	stx	<R0+2
  1266 00:019D: DA           	phx
  1267 00:019E: 48           	pha
  1268 00:019F: D4 1C        	pei	<L39+line_0
  1269 00:01A1: D4 15        	pei	<L40+pos_1
  1270 00:01A3: 22 xx xx xx  	jsl	~~k_put_string
  1271                        ;
  1272                        ;	pos = offset;
  1273                        	.line	109
  1274 00:01A7: A5 1A        	lda	<L39+offset_0
  1275 00:01A9: 85 15        	sta	<L40+pos_1
  1276                        ;	k_put_color (pos,line,CONST_COMPUTER_ACK_2_COLOR
                    );
  1277                        	.line	110
  1278 00:01AB: F4 xx xx     	pea	#^L2+145
  1279 00:01AE: F4 xx xx     	pea	#<L2+145
  Thu Dec  3 2020 22:25                                                Page 25


  1280 00:01B1: D4 1C        	pei	<L39+line_0
  1281 00:01B3: D4 15        	pei	<L40+pos_1
  1282 00:01B5: 22 xx xx xx  	jsl	~~k_put_color
  1283                        ;
  1284                        ;
  1285                        ;	line++;
  1286                        	.line	113
  1287 00:01B9: E6 1C        	inc	<L39+line_0
  1288                        ;	line++;
  1289                        	.line	114
  1290 00:01BB: E6 1C        	inc	<L39+line_0
  1291                        ;
  1292                        ;	pos = offset;
  1293                        	.line	116
  1294 00:01BD: A5 1A        	lda	<L39+offset_0
  1295 00:01BF: 85 15        	sta	<L40+pos_1
  1296                        ;	pos = k_put_string(pos,line,CONST_BOARD_REVISION
                    ,15,0);
  1297                        	.line	117
  1298 00:01C1: F4 00 00     	pea	#<$0
  1299 00:01C4: F4 0F 00     	pea	#<$f
  1300 00:01C7: F4 xx xx     	pea	#^L2+158
  1301 00:01CA: F4 xx xx     	pea	#<L2+158
  1302 00:01CD: D4 1C        	pei	<L39+line_0
  1303 00:01CF: D4 15        	pei	<L40+pos_1
  1304 00:01D1: 22 xx xx xx  	jsl	~~k_put_string
  1305 00:01D5: 85 15        	sta	<L40+pos_1
  1306                        ;	k_get_c256_major_version(krcBuffer);
  1307                        	.line	118
  1308 00:01D7: F4 00 00     	pea	#0
  1309 00:01DA: 18           	clc
  1310 00:01DB: 7B           	tdc
  1311 00:01DC: 69 05 00     	adc	#<L40+krcBuffer_1
  1312 00:01DF: 48           	pha
  1313 00:01E0: 22 xx xx xx  	jsl	~~k_get_c256_major_version
  1314                        ;	pos = k_put_string(pos,line,krcBuffer,15,0);
  1315                        	.line	119
  1316 00:01E4: F4 00 00     	pea	#<$0
  1317 00:01E7: F4 0F 00     	pea	#<$f
  1318 00:01EA: F4 00 00     	pea	#0
  1319 00:01ED: 18           	clc
  1320 00:01EE: 7B           	tdc
  1321 00:01EF: 69 05 00     	adc	#<L40+krcBuffer_1
  1322 00:01F2: 48           	pha
  1323 00:01F3: D4 1C        	pei	<L39+line_0
  1324 00:01F5: D4 15        	pei	<L40+pos_1
  1325 00:01F7: 22 xx xx xx  	jsl	~~k_put_string
  1326 00:01FB: 85 15        	sta	<L40+pos_1
  1327                        ;	k_get_c256_minor_version(krcBuffer);
  1328                        	.line	120
  1329 00:01FD: F4 00 00     	pea	#0
  1330 00:0200: 18           	clc
  1331 00:0201: 7B           	tdc
  1332 00:0202: 69 05 00     	adc	#<L40+krcBuffer_1
  1333 00:0205: 48           	pha
  1334 00:0206: 22 xx xx xx  	jsl	~~k_get_c256_minor_version
  1335                        ;	pos = k_put_string(pos,line,krcBuffer,15,0);
  1336                        	.line	121
  Thu Dec  3 2020 22:25                                                Page 26


  1337 00:020A: F4 00 00     	pea	#<$0
  1338 00:020D: F4 0F 00     	pea	#<$f
  1339 00:0210: F4 00 00     	pea	#0
  1340 00:0213: 18           	clc
  1341 00:0214: 7B           	tdc
  1342 00:0215: 69 05 00     	adc	#<L40+krcBuffer_1
  1343 00:0218: 48           	pha
  1344 00:0219: D4 1C        	pei	<L39+line_0
  1345 00:021B: D4 15        	pei	<L40+pos_1
  1346 00:021D: 22 xx xx xx  	jsl	~~k_put_string
  1347 00:0221: 85 15        	sta	<L40+pos_1
  1348                        ;
  1349                        ;	pos  = offset;
  1350                        	.line	123
  1351 00:0223: A5 1A        	lda	<L39+offset_0
  1352 00:0225: 85 15        	sta	<L40+pos_1
  1353                        ;	line++;
  1354                        	.line	124
  1355 00:0227: E6 1C        	inc	<L39+line_0
  1356                        ;
  1357                        ;	pos = k_put_string(pos,line,"FPGA Date :",15,0);
  1358                        	.line	126
  1359 00:0229: F4 00 00     	pea	#<$0
  1360 00:022C: F4 0F 00     	pea	#<$f
  1361 00:022F: F4 xx xx     	pea	#^L2+179
  1362 00:0232: F4 xx xx     	pea	#<L2+179
  1363 00:0235: D4 1C        	pei	<L39+line_0
  1364 00:0237: D4 15        	pei	<L40+pos_1
  1365 00:0239: 22 xx xx xx  	jsl	~~k_put_string
  1366 00:023D: 85 15        	sta	<L40+pos_1
  1367                        ;	k_get_fpga_date_month(krcBuffer);
  1368                        	.line	127
  1369 00:023F: F4 00 00     	pea	#0
  1370 00:0242: 18           	clc
  1371 00:0243: 7B           	tdc
  1372 00:0244: 69 05 00     	adc	#<L40+krcBuffer_1
  1373 00:0247: 48           	pha
  1374 00:0248: 22 xx xx xx  	jsl	~~k_get_fpga_date_month
  1375                        ;	pos = k_put_string(pos,line,k_strip_padding(krcB
                    uffer),15,0);
  1376                        	.line	128
  1377 00:024C: F4 00 00     	pea	#<$0
  1378 00:024F: F4 0F 00     	pea	#<$f
  1379 00:0252: F4 00 00     	pea	#0
  1380 00:0255: 18           	clc
  1381 00:0256: 7B           	tdc
  1382 00:0257: 69 05 00     	adc	#<L40+krcBuffer_1
  1383 00:025A: 48           	pha
  1384 00:025B: 22 xx xx xx  	jsl	~~k_strip_padding
  1385 00:025F: 85 01        	sta	<R0
  1386 00:0261: 86 03        	stx	<R0+2
  1387 00:0263: DA           	phx
  1388 00:0264: 48           	pha
  1389 00:0265: D4 1C        	pei	<L39+line_0
  1390 00:0267: D4 15        	pei	<L40+pos_1
  1391 00:0269: 22 xx xx xx  	jsl	~~k_put_string
  1392 00:026D: 85 15        	sta	<L40+pos_1
  1393                        ;	pos = k_put_string(pos,line,"/",15,0);
  Thu Dec  3 2020 22:25                                                Page 27


  1394                        	.line	129
  1395 00:026F: F4 00 00     	pea	#<$0
  1396 00:0272: F4 0F 00     	pea	#<$f
  1397 00:0275: F4 xx xx     	pea	#^L2+191
  1398 00:0278: F4 xx xx     	pea	#<L2+191
  1399 00:027B: D4 1C        	pei	<L39+line_0
  1400 00:027D: D4 15        	pei	<L40+pos_1
  1401 00:027F: 22 xx xx xx  	jsl	~~k_put_string
  1402 00:0283: 85 15        	sta	<L40+pos_1
  1403                        ;	k_get_fpga_date_day(krcBuffer);
  1404                        	.line	130
  1405 00:0285: F4 00 00     	pea	#0
  1406 00:0288: 18           	clc
  1407 00:0289: 7B           	tdc
  1408 00:028A: 69 05 00     	adc	#<L40+krcBuffer_1
  1409 00:028D: 48           	pha
  1410 00:028E: 22 xx xx xx  	jsl	~~k_get_fpga_date_day
  1411                        ;	pos = k_put_string(pos,line,k_strip_padding(krcB
                    uffer),15,0);
  1412                        	.line	131
  1413 00:0292: F4 00 00     	pea	#<$0
  1414 00:0295: F4 0F 00     	pea	#<$f
  1415 00:0298: F4 00 00     	pea	#0
  1416 00:029B: 18           	clc
  1417 00:029C: 7B           	tdc
  1418 00:029D: 69 05 00     	adc	#<L40+krcBuffer_1
  1419 00:02A0: 48           	pha
  1420 00:02A1: 22 xx xx xx  	jsl	~~k_strip_padding
  1421 00:02A5: 85 01        	sta	<R0
  1422 00:02A7: 86 03        	stx	<R0+2
  1423 00:02A9: DA           	phx
  1424 00:02AA: 48           	pha
  1425 00:02AB: D4 1C        	pei	<L39+line_0
  1426 00:02AD: D4 15        	pei	<L40+pos_1
  1427 00:02AF: 22 xx xx xx  	jsl	~~k_put_string
  1428 00:02B3: 85 15        	sta	<L40+pos_1
  1429                        ;	pos = k_put_string(pos,line,"/",15,0);
  1430                        	.line	132
  1431 00:02B5: F4 00 00     	pea	#<$0
  1432 00:02B8: F4 0F 00     	pea	#<$f
  1433 00:02BB: F4 xx xx     	pea	#^L2+193
  1434 00:02BE: F4 xx xx     	pea	#<L2+193
  1435 00:02C1: D4 1C        	pei	<L39+line_0
  1436 00:02C3: D4 15        	pei	<L40+pos_1
  1437 00:02C5: 22 xx xx xx  	jsl	~~k_put_string
  1438 00:02C9: 85 15        	sta	<L40+pos_1
  1439                        ;	k_get_fpga_date_year(krcBuffer);
  1440                        	.line	133
  1441 00:02CB: F4 00 00     	pea	#0
  1442 00:02CE: 18           	clc
  1443 00:02CF: 7B           	tdc
  1444 00:02D0: 69 05 00     	adc	#<L40+krcBuffer_1
  1445 00:02D3: 48           	pha
  1446 00:02D4: 22 xx xx xx  	jsl	~~k_get_fpga_date_year
  1447                        ;	pos = k_put_string(pos,line,k_strip_padding(krcB
                    uffer),15,0);
  1448                        	.line	134
  1449 00:02D8: F4 00 00     	pea	#<$0
  Thu Dec  3 2020 22:25                                                Page 28


  1450 00:02DB: F4 0F 00     	pea	#<$f
  1451 00:02DE: F4 00 00     	pea	#0
  1452 00:02E1: 18           	clc
  1453 00:02E2: 7B           	tdc
  1454 00:02E3: 69 05 00     	adc	#<L40+krcBuffer_1
  1455 00:02E6: 48           	pha
  1456 00:02E7: 22 xx xx xx  	jsl	~~k_strip_padding
  1457 00:02EB: 85 01        	sta	<R0
  1458 00:02ED: 86 03        	stx	<R0+2
  1459 00:02EF: DA           	phx
  1460 00:02F0: 48           	pha
  1461 00:02F1: D4 1C        	pei	<L39+line_0
  1462 00:02F3: D4 15        	pei	<L40+pos_1
  1463 00:02F5: 22 xx xx xx  	jsl	~~k_put_string
  1464 00:02F9: 85 15        	sta	<L40+pos_1
  1465                        ;
  1466                        ;
  1467                        ;	return line;
  1468                        	.line	137
  1469 00:02FB: A5 1C        	lda	<L39+line_0
  1470                        L42:
  1471 00:02FD: A8           	tay
  1472 00:02FE: A5 18        	lda	<L39+2
  1473 00:0300: 85 1C        	sta	<L39+2+4
  1474 00:0302: A5 17        	lda	<L39+1
  1475 00:0304: 85 1B        	sta	<L39+1+4
  1476 00:0306: 2B           	pld
  1477 00:0307: 3B           	tsc
  1478 00:0308: 18           	clc
  1479 00:0309: 69 1A 00     	adc	#L39+4
  1480 00:030C: 1B           	tcs
  1481 00:030D: 98           	tya
  1482 00:030E: 6B           	rtl
  1483                        ;}
  1484                        	.line	138
  1485                        	.endblock	138
  1486             00000016   L39	equ	22
  1487             00000005   L40	equ	5
  1488                        	ends
  1489                        	efunc
  1490                        	.endfunc	138,5,22
  1491                        	.line	138
  1492                        	data
  1493                        L2:
  1494 00:0021: 20 20 0B 0C  	db	$20,$20,$0B,$0C,$0B,$0C,$0B,$0C,$0B,$0C,
                    $0B,$0C,$20,$43,$32
       00:0025: 0B 0C 0B 0C 
       00:0029: 0B 0C 0B 0C 
       00:002D: 20 43 32 
  1495 00:0030: 35 36 20 46  	db	$35,$36,$20,$46,$6F,$65,$6E,$69,$78,$20,
                    $44,$65,$76,$65,$6C
       00:0034: 6F 65 6E 69 
       00:0038: 78 20 44 65 
       00:003C: 76 65 6C 
  1496 00:003F: 6F 70 6D 65  	db	$6F,$70,$6D,$65,$6E,$74,$20,$53,$79,$73,
                    $74,$65,$6D,$00,$1D
       00:0043: 6E 74 20 53 
       00:0047: 79 73 74 65 
  Thu Dec  3 2020 22:25                                                Page 29


       00:004B: 6D 00 1D 
  1497 00:004E: 1D 1D 1D 8D  	db	$1D,$1D,$1D,$FFFFFF8D,$FFFFFF8D,$4D,$4D,
                    $2D,$2D,$5D,$5D,$00,$20,$0B,$0C
       00:0052: 8D 4D 4D 2D 
       00:0056: 2D 5D 5D 00 
       00:005A: 20 0B 0C 
  1498 00:005D: 0B 0C 0B 0C  	db	$0B,$0C,$0B,$0C,$0B,$0C,$0B,$0C,$20,$20,
                    $41,$20,$68,$61,$72
       00:0061: 0B 0C 0B 0C 
       00:0065: 20 20 41 20 
       00:0069: 68 61 72 
  1499 00:006C: 64 77 61 72  	db	$64,$77,$61,$72,$65,$20,$70,$6C,$61,$74,
                    $66,$6F,$72,$6D,$20
       00:0070: 65 20 70 6C 
       00:0074: 61 74 66 6F 
       00:0078: 72 6D 20 
  1500 00:007B: 63 72 61 66  	db	$63,$72,$61,$66,$74,$65,$64,$20,$62,$79,
                    $3A,$20,$53,$74,$65
       00:007F: 74 65 64 20 
       00:0083: 62 79 3A 20 
       00:0087: 53 74 65 
  1501 00:008A: 66 61 6E 79  	db	$66,$61,$6E,$79,$20,$41,$6C,$6C,$61,$69,
                    $72,$65,$00,$1D,$1D
       00:008E: 20 41 6C 6C 
       00:0092: 61 69 72 65 
       00:0096: 00 1D 1D 
  1502 00:0099: 1D 8D 8D 4D  	db	$1D,$FFFFFF8D,$FFFFFF8D,$4D,$4D,$2D,$2D,
                    $5D,$5D,$5D,$00,$0B,$0C,$0B,$0C
       00:009D: 4D 2D 2D 5D 
       00:00A1: 5D 5D 00 0B 
       00:00A5: 0C 0B 0C 
  1503 00:00A8: 0B 0C 0B 0C  	db	$0B,$0C,$0B,$0C,$0B,$0C,$20,$20,$20,$00,
                    $1D,$1D,$FFFFFF8D,$FFFFFF8D,$4D
       00:00AC: 0B 0C 20 20 
       00:00B0: 20 00 1D 1D 
       00:00B4: 8D 8D 4D 
  1504 00:00B7: 4D 2D 2D 5D  	db	$4D,$2D,$2D,$5D,$5D,$5D,$5D,$00,$43,$32,
                    $35,$36,$20,$42,$6F
       00:00BB: 5D 5D 5D 00 
       00:00BF: 43 32 35 36 
       00:00C3: 20 42 6F 
  1505 00:00C6: 61 72 64 20  	db	$61,$72,$64,$20,$52,$65,$76,$69,$73,$69,
                    $6F,$6E,$3A,$00,$46
       00:00CA: 52 65 76 69 
       00:00CE: 73 69 6F 6E 
       00:00D2: 3A 00 46 
  1506 00:00D5: 50 47 41 20  	db	$50,$47,$41,$20,$44,$61,$74,$65,$20,$3A,
                    $00,$2F,$00,$2F,$00
       00:00D9: 44 61 74 65 
       00:00DD: 20 3A 00 2F 
       00:00E1: 00 2F 00 
  1507 00:00E4:              	ends
  1508                        ;/*
  1509                        ; *
  1510                        ; *
  1511                        ; *
  1512                        ; *
  1513                        ; */
  Thu Dec  3 2020 22:25                                                Page 30


  1514                        ;void k_delay(int millisecs)
  1515                        ;{
  1516                        	.line	145
  1517                        	.line	146
  1518                        	code
  1519                        	xdef	~~k_delay
  1520                        	func
  1521                        	.function	146
  1522                        ~~k_delay:
  1523                        	longa	on
  1524                        	longi	on
  1525 00:030F: 3B           	tsc
  1526 00:0310: 38           	sec
  1527 00:0311: E9 04 00     	sbc	#L44
  1528 00:0314: 1B           	tcs
  1529 00:0315: 0B           	phd
  1530 00:0316: 5B           	tcd
  1531             00000004   millisecs_0	set	4
  1532                        	.block	146
  1533                        ;	int y = 0;
  1534                        ;	int i = 0;
  1535                        ;
  1536                        ;	for(y=0;y<millisecs;y++)
  1537             00000000   y_1	set	0
  1538             00000002   i_1	set	2
  1539                        	.sym	y,0,5,1,16
  1540                        	.sym	i,2,5,1,16
  1541                        	.sym	millisecs,4,5,6,16
  1542 00:0317: 64 01        	stz	<L45+y_1
  1543 00:0319: 64 03        	stz	<L45+i_1
  1544                        	.line	150
  1545 00:031B: 64 01        	stz	<L45+y_1
  1546 00:031D: 82 17 00     	brl	L10011
  1547                        L10010:
  1548                        ;	{
  1549                        	.line	151
  1550                        ;		for(i=0;i<0xFF;i++)
  1551                        	.line	152
  1552 00:0320: 64 03        	stz	<L45+i_1
  1553                        L10014:
  1554                        ;		{
  1555                        	.line	153
  1556                        ;			asm NOP;
  1557                        	.line	154
  1558                        	asmstart
  1559 00:0322: EA           	NOP
  1560                        	asmend
  1561                        ;		}
  1562                        	.line	155
  1563                        L10012:
  1564 00:0323: E6 03        	inc	<L45+i_1
  1565 00:0325: 38           	sec
  1566 00:0326: A5 03        	lda	<L45+i_1
  1567 00:0328: E9 FF 00     	sbc	#<$ff
  1568 00:032B: 70 03        	bvs	L47
  1569 00:032D: 49 00 80     	eor	#$8000
  1570                        L47:
  1571 00:0330: 30 03        	bmi	L48
  Thu Dec  3 2020 22:25                                                Page 31


  1572 00:0332: 82 ED FF     	brl	L10014
  1573                        L48:
  1574                        L10013:
  1575                        ;	}
  1576                        	.line	156
  1577                        L10008:
  1578 00:0335: E6 01        	inc	<L45+y_1
  1579                        L10011:
  1580 00:0337: 38           	sec
  1581 00:0338: A5 01        	lda	<L45+y_1
  1582 00:033A: E5 08        	sbc	<L44+millisecs_0
  1583 00:033C: 70 03        	bvs	L49
  1584 00:033E: 49 00 80     	eor	#$8000
  1585                        L49:
  1586 00:0341: 30 03        	bmi	L50
  1587 00:0343: 82 DA FF     	brl	L10010
  1588                        L50:
  1589                        L10009:
  1590                        ;}
  1591                        	.line	157
  1592                        L51:
  1593 00:0346: A5 06        	lda	<L44+2
  1594 00:0348: 85 08        	sta	<L44+2+2
  1595 00:034A: A5 05        	lda	<L44+1
  1596 00:034C: 85 07        	sta	<L44+1+2
  1597 00:034E: 2B           	pld
  1598 00:034F: 3B           	tsc
  1599 00:0350: 18           	clc
  1600 00:0351: 69 06 00     	adc	#L44+2
  1601 00:0354: 1B           	tcs
  1602 00:0355: 6B           	rtl
  1603                        	.endblock	157
  1604             00000004   L44	equ	4
  1605             00000001   L45	equ	1
  1606                        	ends
  1607                        	efunc
  1608                        	.endfunc	157,1,4
  1609                        	.line	157
  1610                        ;/*
  1611                        ; *
  1612                        ; *
  1613                        ; *
  1614                        ; *
  1615                        ; */
  1616                        ;void k_debug_string(char FAR* debugString)
  1617                        ;{
  1618                        	.line	164
  1619                        	.line	165
  1620                        	code
  1621                        	xdef	~~k_debug_string
  1622                        	func
  1623                        	.function	165
  1624                        ~~k_debug_string:
  1625                        	longa	on
  1626                        	longi	on
  1627 00:0356: 3B           	tsc
  1628 00:0357: 38           	sec
  1629 00:0358: E9 00 00     	sbc	#L52
  Thu Dec  3 2020 22:25                                                Page 32


  1630 00:035B: 1B           	tcs
  1631 00:035C: 0B           	phd
  1632 00:035D: 5B           	tcd
  1633             00000004   debugString_0	set	4
  1634                        	.block	165
  1635                        ;#ifdef USE_FX256_FMX
  1636                        ;	k_debug_string_com1(debugString);
  1637                        	.sym	debugString,4,142,6,32
  1638                        	.line	167
  1639 00:035E: D4 06        	pei	<L52+debugString_0+2
  1640 00:0360: D4 04        	pei	<L52+debugString_0
  1641 00:0362: 22 xx xx xx  	jsl	~~k_debug_string_com1
  1642                        ;#else
  1643                        ;	//k_debug_string_com2(debugString);
  1644                        ;	k_debug_string_com1(debugString);
  1645                        ;#endif
  1646                        ;}
  1647                        	.line	172
  1648                        L55:
  1649 00:0366: A5 02        	lda	<L52+2
  1650 00:0368: 85 06        	sta	<L52+2+4
  1651 00:036A: A5 01        	lda	<L52+1
  1652 00:036C: 85 05        	sta	<L52+1+4
  1653 00:036E: 2B           	pld
  1654 00:036F: 3B           	tsc
  1655 00:0370: 18           	clc
  1656 00:0371: 69 04 00     	adc	#L52+4
  1657 00:0374: 1B           	tcs
  1658 00:0375: 6B           	rtl
  1659                        	.endblock	172
  1660             00000000   L52	equ	0
  1661             00000001   L53	equ	1
  1662                        	ends
  1663                        	efunc
  1664                        	.endfunc	172,1,0
  1665                        	.line	172
  1666                        ;
  1667                        ;VOID k_DebugOutString(VOID)
  1668                        ;{
  1669                        	.line	174
  1670                        	.line	175
  1671                        	code
  1672                        	xdef	~~k_DebugOutString
  1673                        	func
  1674                        	.function	175
  1675                        ~~k_DebugOutString:
  1676                        	longa	on
  1677                        	longi	on
  1678 00:0376: 3B           	tsc
  1679 00:0377: 38           	sec
  1680 00:0378: E9 00 00     	sbc	#L56
  1681 00:037B: 1B           	tcs
  1682 00:037C: 0B           	phd
  1683 00:037D: 5B           	tcd
  1684                        	.block	175
  1685                        ;	//PFXZERPOPAGE zp = k_getZeroPage();
  1686                        ;
  1687                        ;	//k_debug_pointer("k_DebugOutString1:",zp->kerne
  Thu Dec  3 2020 22:25                                                Page 33


                    lFunctionCallParameter);
  1688                        ;
  1689                        ;
  1690                        ;	//k_debug_string(zp->kernelFunctionCallParameter
                    );
  1691                        ;	k_debug_string("k_DebugOutString!!!!\r\n");
  1692                        	.line	182
  1693 00:037E: F4 xx xx     	pea	#^L43
  1694 00:0381: F4 xx xx     	pea	#<L43
  1695 00:0384: 22 xx xx xx  	jsl	~~k_debug_string
  1696                        ;
  1697                        ;}
  1698                        	.line	184
  1699                        L59:
  1700 00:0388: 2B           	pld
  1701 00:0389: 3B           	tsc
  1702 00:038A: 18           	clc
  1703 00:038B: 69 00 00     	adc	#L56
  1704 00:038E: 1B           	tcs
  1705 00:038F: 6B           	rtl
  1706                        	.endblock	184
  1707             00000000   L56	equ	0
  1708             00000001   L57	equ	1
  1709                        	ends
  1710                        	efunc
  1711                        	.endfunc	184,1,0
  1712                        	.line	184
  1713                        	data
  1714                        L43:
  1715 00:00E4: 6B 5F 44 65  	db	$6B,$5F,$44,$65,$62,$75,$67,$4F,$75,$74,
                    $53,$74,$72,$69,$6E
       00:00E8: 62 75 67 4F 
       00:00EC: 75 74 53 74 
       00:00F0: 72 69 6E 
  1716 00:00F3: 67 21 21 21  	db	$67,$21,$21,$21,$21,$0D,$0A,$00
       00:00F7: 21 0D 0A 00 
  1717 00:00FB:              	ends
  1718                        ;
  1719                        ;void k_debug_nstring(char FAR* debugString,int ns
                    ize)
  1720                        ;{
  1721                        	.line	186
  1722                        	.line	187
  1723                        	code
  1724                        	xdef	~~k_debug_nstring
  1725                        	func
  1726                        	.function	187
  1727                        ~~k_debug_nstring:
  1728                        	longa	on
  1729                        	longi	on
  1730 00:0390: 3B           	tsc
  1731 00:0391: 38           	sec
  1732 00:0392: E9 00 00     	sbc	#L61
  1733 00:0395: 1B           	tcs
  1734 00:0396: 0B           	phd
  1735 00:0397: 5B           	tcd
  1736             00000004   debugString_0	set	4
  1737             00000008   nsize_0	set	8
  Thu Dec  3 2020 22:25                                                Page 34


  1738                        	.block	187
  1739                        ;	//k_debug_nstring_com2(debugString,nsize);
  1740                        ;	//k_debug_nstring_com1(debugString,nsize);
  1741                        ;#ifdef USE_FX256_FMX
  1742                        ;	k_debug_nstring_com1(debugString,nsize);
  1743                        	.sym	debugString,4,142,6,32
  1744                        	.sym	nsize,8,5,6,16
  1745                        	.line	191
  1746 00:0398: D4 08        	pei	<L61+nsize_0
  1747 00:039A: D4 06        	pei	<L61+debugString_0+2
  1748 00:039C: D4 04        	pei	<L61+debugString_0
  1749 00:039E: 22 xx xx xx  	jsl	~~k_debug_nstring_com1
  1750                        ;#else
  1751                        ;	//k_debug_nstring_com2(debugString,nsize);
  1752                        ;	k_debug_nstring_com1(debugString,nsize);
  1753                        ;#endif
  1754                        ;}
  1755                        	.line	196
  1756                        L64:
  1757 00:03A2: A5 02        	lda	<L61+2
  1758 00:03A4: 85 08        	sta	<L61+2+6
  1759 00:03A6: A5 01        	lda	<L61+1
  1760 00:03A8: 85 07        	sta	<L61+1+6
  1761 00:03AA: 2B           	pld
  1762 00:03AB: 3B           	tsc
  1763 00:03AC: 18           	clc
  1764 00:03AD: 69 06 00     	adc	#L61+6
  1765 00:03B0: 1B           	tcs
  1766 00:03B1: 6B           	rtl
  1767                        	.endblock	196
  1768             00000000   L61	equ	0
  1769             00000001   L62	equ	1
  1770                        	ends
  1771                        	efunc
  1772                        	.endfunc	196,1,0
  1773                        	.line	196
  1774                        ;
  1775                        ;/*
  1776                        ; *
  1777                        ; *
  1778                        ; *
  1779                        ; *
  1780                        ; */
  1781                        ;void k_debug_string_com1(char FAR* debugString)
  1782                        ;{
  1783                        	.line	204
  1784                        	.line	205
  1785                        	code
  1786                        	xdef	~~k_debug_string_com1
  1787                        	func
  1788                        	.function	205
  1789                        ~~k_debug_string_com1:
  1790                        	longa	on
  1791                        	longi	on
  1792 00:03B2: 3B           	tsc
  1793 00:03B3: 38           	sec
  1794 00:03B4: E9 04 00     	sbc	#L65
  1795 00:03B7: 1B           	tcs
  Thu Dec  3 2020 22:25                                                Page 35


  1796 00:03B8: 0B           	phd
  1797 00:03B9: 5B           	tcd
  1798             00000004   debugString_0	set	4
  1799                        	.block	205
  1800                        ;	char FAR* ptr = debugString;
  1801                        ;	while(*ptr)
  1802             00000000   ptr_1	set	0
  1803                        	.sym	ptr,0,142,1,32
  1804                        	.sym	debugString,4,142,6,32
  1805 00:03BA: A5 08        	lda	<L65+debugString_0
  1806 00:03BC: 85 01        	sta	<L66+ptr_1
  1807 00:03BE: A5 0A        	lda	<L65+debugString_0+2
  1808 00:03C0: 85 03        	sta	<L66+ptr_1+2
  1809                        	.line	207
  1810                        L10015:
  1811 00:03C2: A7 01        	lda	[<L66+ptr_1]
  1812 00:03C4: 29 FF 00     	and	#$ff
  1813 00:03C7: D0 03        	bne	L68
  1814 00:03C9: 82 25 00     	brl	L10016
  1815                        L68:
  1816                        ;	{
  1817                        	.line	208
  1818                        ;		while(!(UART1_BASE[5] & 0x20))
  1819                        	.line	209
  1820                        L10017:
  1821 00:03CC: E2 20        	sep	#$20
  1822                        	longa	off
  1823 00:03CE: AF FD 13 AF  	lda	>11473917
  1824 00:03D2: 29 20        	and	#<$20
  1825 00:03D4: C2 20        	rep	#$20
  1826                        	longa	on
  1827 00:03D6: F0 03        	beq	L69
  1828 00:03D8: 82 03 00     	brl	L10018
  1829                        L69:
  1830                        ;		{
  1831                        	.line	210
  1832                        ;		}
  1833                        	.line	211
  1834 00:03DB: 82 EE FF     	brl	L10017
  1835                        L10018:
  1836                        ;		UART1_BASE[0] = *ptr;
  1837                        	.line	212
  1838 00:03DE: E2 20        	sep	#$20
  1839                        	longa	off
  1840 00:03E0: A7 01        	lda	[<L66+ptr_1]
  1841 00:03E2: 8F F8 13 AF  	sta	>11473912
  1842 00:03E6: C2 20        	rep	#$20
  1843                        	longa	on
  1844                        ;		ptr++;
  1845                        	.line	213
  1846 00:03E8: E6 01        	inc	<L66+ptr_1
  1847 00:03EA: D0 02        	bne	L70
  1848 00:03EC: E6 03        	inc	<L66+ptr_1+2
  1849                        L70:
  1850                        ;	}
  1851                        	.line	214
  1852 00:03EE: 82 D1 FF     	brl	L10015
  1853                        L10016:
  Thu Dec  3 2020 22:25                                                Page 36


  1854                        ;	return;
  1855                        	.line	215
  1856                        L71:
  1857 00:03F1: A5 06        	lda	<L65+2
  1858 00:03F3: 85 0A        	sta	<L65+2+4
  1859 00:03F5: A5 05        	lda	<L65+1
  1860 00:03F7: 85 09        	sta	<L65+1+4
  1861 00:03F9: 2B           	pld
  1862 00:03FA: 3B           	tsc
  1863 00:03FB: 18           	clc
  1864 00:03FC: 69 08 00     	adc	#L65+4
  1865 00:03FF: 1B           	tcs
  1866 00:0400: 6B           	rtl
  1867                        ;}
  1868                        	.line	216
  1869                        	.endblock	216
  1870             00000004   L65	equ	4
  1871             00000001   L66	equ	1
  1872                        	ends
  1873                        	efunc
  1874                        	.endfunc	216,1,4
  1875                        	.line	216
  1876                        ;/*
  1877                        ; *
  1878                        ; *
  1879                        ; *
  1880                        ; *
  1881                        ; */
  1882                        ;
  1883                        ;void k_debug_string_com2(char FAR* debugString)
  1884                        ;{
  1885                        	.line	224
  1886                        	.line	225
  1887                        	code
  1888                        	xdef	~~k_debug_string_com2
  1889                        	func
  1890                        	.function	225
  1891                        ~~k_debug_string_com2:
  1892                        	longa	on
  1893                        	longi	on
  1894 00:0401: 3B           	tsc
  1895 00:0402: 38           	sec
  1896 00:0403: E9 04 00     	sbc	#L72
  1897 00:0406: 1B           	tcs
  1898 00:0407: 0B           	phd
  1899 00:0408: 5B           	tcd
  1900             00000004   debugString_0	set	4
  1901                        	.block	225
  1902                        ;	char FAR* ptr = debugString;
  1903                        ;	while(*ptr)
  1904             00000000   ptr_1	set	0
  1905                        	.sym	ptr,0,142,1,32
  1906                        	.sym	debugString,4,142,6,32
  1907 00:0409: A5 08        	lda	<L72+debugString_0
  1908 00:040B: 85 01        	sta	<L73+ptr_1
  1909 00:040D: A5 0A        	lda	<L72+debugString_0+2
  1910 00:040F: 85 03        	sta	<L73+ptr_1+2
  1911                        	.line	227
  Thu Dec  3 2020 22:25                                                Page 37


  1912                        L10019:
  1913 00:0411: A7 01        	lda	[<L73+ptr_1]
  1914 00:0413: 29 FF 00     	and	#$ff
  1915 00:0416: D0 03        	bne	L75
  1916 00:0418: 82 25 00     	brl	L10020
  1917                        L75:
  1918                        ;	{
  1919                        	.line	228
  1920                        ;		while(!(UART2_BASE[5] & 0x20))
  1921                        	.line	229
  1922                        L10021:
  1923 00:041B: E2 20        	sep	#$20
  1924                        	longa	off
  1925 00:041D: AF FD 12 AF  	lda	>11473661
  1926 00:0421: 29 20        	and	#<$20
  1927 00:0423: C2 20        	rep	#$20
  1928                        	longa	on
  1929 00:0425: F0 03        	beq	L76
  1930 00:0427: 82 03 00     	brl	L10022
  1931                        L76:
  1932                        ;		{
  1933                        	.line	230
  1934                        ;		}
  1935                        	.line	231
  1936 00:042A: 82 EE FF     	brl	L10021
  1937                        L10022:
  1938                        ;		UART2_BASE[0] = *ptr;
  1939                        	.line	232
  1940 00:042D: E2 20        	sep	#$20
  1941                        	longa	off
  1942 00:042F: A7 01        	lda	[<L73+ptr_1]
  1943 00:0431: 8F F8 12 AF  	sta	>11473656
  1944 00:0435: C2 20        	rep	#$20
  1945                        	longa	on
  1946                        ;		ptr++;
  1947                        	.line	233
  1948 00:0437: E6 01        	inc	<L73+ptr_1
  1949 00:0439: D0 02        	bne	L77
  1950 00:043B: E6 03        	inc	<L73+ptr_1+2
  1951                        L77:
  1952                        ;	}
  1953                        	.line	234
  1954 00:043D: 82 D1 FF     	brl	L10019
  1955                        L10020:
  1956                        ;	return;
  1957                        	.line	235
  1958                        L78:
  1959 00:0440: A5 06        	lda	<L72+2
  1960 00:0442: 85 0A        	sta	<L72+2+4
  1961 00:0444: A5 05        	lda	<L72+1
  1962 00:0446: 85 09        	sta	<L72+1+4
  1963 00:0448: 2B           	pld
  1964 00:0449: 3B           	tsc
  1965 00:044A: 18           	clc
  1966 00:044B: 69 08 00     	adc	#L72+4
  1967 00:044E: 1B           	tcs
  1968 00:044F: 6B           	rtl
  1969                        ;}
  Thu Dec  3 2020 22:25                                                Page 38


  1970                        	.line	236
  1971                        	.endblock	236
  1972             00000004   L72	equ	4
  1973             00000001   L73	equ	1
  1974                        	ends
  1975                        	efunc
  1976                        	.endfunc	236,1,4
  1977                        	.line	236
  1978                        ;
  1979                        ;void k_debug_nstring_com1(char FAR* debugString,i
                    nt nsize)
  1980                        ;{
  1981                        	.line	238
  1982                        	.line	239
  1983                        	code
  1984                        	xdef	~~k_debug_nstring_com1
  1985                        	func
  1986                        	.function	239
  1987                        ~~k_debug_nstring_com1:
  1988                        	longa	on
  1989                        	longi	on
  1990 00:0450: 3B           	tsc
  1991 00:0451: 38           	sec
  1992 00:0452: E9 06 00     	sbc	#L79
  1993 00:0455: 1B           	tcs
  1994 00:0456: 0B           	phd
  1995 00:0457: 5B           	tcd
  1996             00000004   debugString_0	set	4
  1997             00000008   nsize_0	set	8
  1998                        	.block	239
  1999                        ;	int i = 0;
  2000                        ;	char FAR* ptr = debugString;
  2001                        ;	for(i=0;i<nsize;i++)
  2002             00000000   i_1	set	0
  2003             00000002   ptr_1	set	2
  2004                        	.sym	i,0,5,1,16
  2005                        	.sym	ptr,2,142,1,32
  2006                        	.sym	debugString,4,142,6,32
  2007                        	.sym	nsize,8,5,6,16
  2008 00:0458: 64 01        	stz	<L80+i_1
  2009 00:045A: A5 0A        	lda	<L79+debugString_0
  2010 00:045C: 85 03        	sta	<L80+ptr_1
  2011 00:045E: A5 0C        	lda	<L79+debugString_0+2
  2012 00:0460: 85 05        	sta	<L80+ptr_1+2
  2013                        	.line	242
  2014 00:0462: 64 01        	stz	<L80+i_1
  2015 00:0464: 82 20 00     	brl	L10026
  2016                        L10025:
  2017                        ;	{
  2018                        	.line	243
  2019                        ;		while(!(UART1_BASE[5] & 0x20))
  2020                        	.line	244
  2021                        L10027:
  2022 00:0467: E2 20        	sep	#$20
  2023                        	longa	off
  2024 00:0469: AF FD 13 AF  	lda	>11473917
  2025 00:046D: 29 20        	and	#<$20
  2026 00:046F: C2 20        	rep	#$20
  Thu Dec  3 2020 22:25                                                Page 39


  2027                        	longa	on
  2028 00:0471: F0 03        	beq	L82
  2029 00:0473: 82 03 00     	brl	L10028
  2030                        L82:
  2031                        ;		{
  2032                        	.line	245
  2033                        ;		}
  2034                        	.line	246
  2035 00:0476: 82 EE FF     	brl	L10027
  2036                        L10028:
  2037                        ;		//UART1_BASE[0] = *ptr;
  2038                        ;		//ptr++;
  2039                        ;		UART1_BASE[0] = debugString[i];
  2040                        	.line	249
  2041 00:0479: E2 20        	sep	#$20
  2042                        	longa	off
  2043 00:047B: A4 01        	ldy	<L80+i_1
  2044 00:047D: B7 0A        	lda	[<L79+debugString_0],Y
  2045 00:047F: 8F F8 13 AF  	sta	>11473912
  2046 00:0483: C2 20        	rep	#$20
  2047                        	longa	on
  2048                        ;	}
  2049                        	.line	250
  2050                        L10023:
  2051 00:0485: E6 01        	inc	<L80+i_1
  2052                        L10026:
  2053 00:0487: 38           	sec
  2054 00:0488: A5 01        	lda	<L80+i_1
  2055 00:048A: E5 0E        	sbc	<L79+nsize_0
  2056 00:048C: 70 03        	bvs	L83
  2057 00:048E: 49 00 80     	eor	#$8000
  2058                        L83:
  2059 00:0491: 30 03        	bmi	L84
  2060 00:0493: 82 D1 FF     	brl	L10025
  2061                        L84:
  2062                        L10024:
  2063                        ;	return;
  2064                        	.line	251
  2065                        L85:
  2066 00:0496: A5 08        	lda	<L79+2
  2067 00:0498: 85 0E        	sta	<L79+2+6
  2068 00:049A: A5 07        	lda	<L79+1
  2069 00:049C: 85 0D        	sta	<L79+1+6
  2070 00:049E: 2B           	pld
  2071 00:049F: 3B           	tsc
  2072 00:04A0: 18           	clc
  2073 00:04A1: 69 0C 00     	adc	#L79+6
  2074 00:04A4: 1B           	tcs
  2075 00:04A5: 6B           	rtl
  2076                        ;}
  2077                        	.line	252
  2078                        	.endblock	252
  2079             00000006   L79	equ	6
  2080             00000001   L80	equ	1
  2081                        	ends
  2082                        	efunc
  2083                        	.endfunc	252,1,6
  2084                        	.line	252
  Thu Dec  3 2020 22:25                                                Page 40


  2085                        ;
  2086                        ;void k_debug_nstring_com2(char FAR* debugString,i
                    nt nsize)
  2087                        ;{
  2088                        	.line	254
  2089                        	.line	255
  2090                        	code
  2091                        	xdef	~~k_debug_nstring_com2
  2092                        	func
  2093                        	.function	255
  2094                        ~~k_debug_nstring_com2:
  2095                        	longa	on
  2096                        	longi	on
  2097 00:04A6: 3B           	tsc
  2098 00:04A7: 38           	sec
  2099 00:04A8: E9 06 00     	sbc	#L86
  2100 00:04AB: 1B           	tcs
  2101 00:04AC: 0B           	phd
  2102 00:04AD: 5B           	tcd
  2103             00000004   debugString_0	set	4
  2104             00000008   nsize_0	set	8
  2105                        	.block	255
  2106                        ;	int i = 0;
  2107                        ;	char FAR* ptr = debugString;
  2108                        ;	for(i=0;i<nsize;i++)
  2109             00000000   i_1	set	0
  2110             00000002   ptr_1	set	2
  2111                        	.sym	i,0,5,1,16
  2112                        	.sym	ptr,2,142,1,32
  2113                        	.sym	debugString,4,142,6,32
  2114                        	.sym	nsize,8,5,6,16
  2115 00:04AE: 64 01        	stz	<L87+i_1
  2116 00:04B0: A5 0A        	lda	<L86+debugString_0
  2117 00:04B2: 85 03        	sta	<L87+ptr_1
  2118 00:04B4: A5 0C        	lda	<L86+debugString_0+2
  2119 00:04B6: 85 05        	sta	<L87+ptr_1+2
  2120                        	.line	258
  2121 00:04B8: 64 01        	stz	<L87+i_1
  2122 00:04BA: 82 20 00     	brl	L10032
  2123                        L10031:
  2124                        ;	{
  2125                        	.line	259
  2126                        ;		while(!(UART2_BASE[5] & 0x20))
  2127                        	.line	260
  2128                        L10033:
  2129 00:04BD: E2 20        	sep	#$20
  2130                        	longa	off
  2131 00:04BF: AF FD 12 AF  	lda	>11473661
  2132 00:04C3: 29 20        	and	#<$20
  2133 00:04C5: C2 20        	rep	#$20
  2134                        	longa	on
  2135 00:04C7: F0 03        	beq	L89
  2136 00:04C9: 82 03 00     	brl	L10034
  2137                        L89:
  2138                        ;		{
  2139                        	.line	261
  2140                        ;		}
  2141                        	.line	262
  Thu Dec  3 2020 22:25                                                Page 41


  2142 00:04CC: 82 EE FF     	brl	L10033
  2143                        L10034:
  2144                        ;		//UART2_BASE[0] = *ptr;
  2145                        ;		//ptr++;
  2146                        ;		UART2_BASE[0] = debugString[i];
  2147                        	.line	265
  2148 00:04CF: E2 20        	sep	#$20
  2149                        	longa	off
  2150 00:04D1: A4 01        	ldy	<L87+i_1
  2151 00:04D3: B7 0A        	lda	[<L86+debugString_0],Y
  2152 00:04D5: 8F F8 12 AF  	sta	>11473656
  2153 00:04D9: C2 20        	rep	#$20
  2154                        	longa	on
  2155                        ;	}
  2156                        	.line	266
  2157                        L10029:
  2158 00:04DB: E6 01        	inc	<L87+i_1
  2159                        L10032:
  2160 00:04DD: 38           	sec
  2161 00:04DE: A5 01        	lda	<L87+i_1
  2162 00:04E0: E5 0E        	sbc	<L86+nsize_0
  2163 00:04E2: 70 03        	bvs	L90
  2164 00:04E4: 49 00 80     	eor	#$8000
  2165                        L90:
  2166 00:04E7: 30 03        	bmi	L91
  2167 00:04E9: 82 D1 FF     	brl	L10031
  2168                        L91:
  2169                        L10030:
  2170                        ;	return;
  2171                        	.line	267
  2172                        L92:
  2173 00:04EC: A5 08        	lda	<L86+2
  2174 00:04EE: 85 0E        	sta	<L86+2+6
  2175 00:04F0: A5 07        	lda	<L86+1
  2176 00:04F2: 85 0D        	sta	<L86+1+6
  2177 00:04F4: 2B           	pld
  2178 00:04F5: 3B           	tsc
  2179 00:04F6: 18           	clc
  2180 00:04F7: 69 0C 00     	adc	#L86+6
  2181 00:04FA: 1B           	tcs
  2182 00:04FB: 6B           	rtl
  2183                        ;}
  2184                        	.line	268
  2185                        	.endblock	268
  2186             00000006   L86	equ	6
  2187             00000001   L87	equ	1
  2188                        	ends
  2189                        	efunc
  2190                        	.endfunc	268,1,6
  2191                        	.line	268
  2192                        ;/*
  2193                        ; *
  2194                        ; *
  2195                        ; *
  2196                        ; *
  2197                        ; */
  2198                        ;
  2199                        ;void k_debug_pointer(char FAR* debugString, void 
  Thu Dec  3 2020 22:25                                                Page 42


                    FAR* p)
  2200                        ;{
  2201                        	.line	276
  2202                        	.line	277
  2203                        	code
  2204                        	xdef	~~k_debug_pointer
  2205                        	func
  2206                        	.function	277
  2207                        ~~k_debug_pointer:
  2208                        	longa	on
  2209                        	longi	on
  2210 00:04FC: 3B           	tsc
  2211 00:04FD: 38           	sec
  2212 00:04FE: E9 0C 00     	sbc	#L93
  2213 00:0501: 1B           	tcs
  2214 00:0502: 0B           	phd
  2215 00:0503: 5B           	tcd
  2216             00000004   debugString_0	set	4
  2217             00000008   p_0	set	8
  2218                        	.block	277
  2219                        ;	k_debug_string(debugString);
  2220                        	.sym	debugString,4,142,6,32
  2221                        	.sym	p,8,129,6,32
  2222                        	.line	278
  2223 00:0504: D4 12        	pei	<L93+debugString_0+2
  2224 00:0506: D4 10        	pei	<L93+debugString_0
  2225 00:0508: 22 xx xx xx  	jsl	~~k_debug_string
  2226                        ;
  2227                        ;	k_debug_string(k_bytetohex(H24BYTE(p),k16buffer)
                    );
  2228                        	.line	280
  2229 00:050C: A9 xx xx     	lda	#<~~k16buffer
  2230 00:050F: 85 01        	sta	<R0
  2231                        	xref	_BEG_DATA
  2232 00:0511: A9 xx xx     	lda	#_BEG_DATA>>16
  2233 00:0514: 85 03        	sta	<R0+2
  2234 00:0516: D4 03        	pei	<R0+2
  2235 00:0518: D4 01        	pei	<R0
  2236 00:051A: D4 16        	pei	<L93+p_0+2
  2237 00:051C: D4 14        	pei	<L93+p_0
  2238 00:051E: A9 10 00     	lda	#$10
  2239                        	xref	~~~llsr
  2240 00:0521: 22 xx xx xx  	jsl	~~~llsr
  2241 00:0525: 85 05        	sta	<R1
  2242 00:0527: 86 07        	stx	<R1+2
  2243 00:0529: A5 05        	lda	<R1
  2244 00:052B: 29 FF 00     	and	#<$ff
  2245 00:052E: 85 09        	sta	<R2
  2246 00:0530: 64 0B        	stz	<R2+2
  2247 00:0532: D4 09        	pei	<R2
  2248 00:0534: 22 xx xx xx  	jsl	~~k_bytetohex
  2249 00:0538: 85 05        	sta	<R1
  2250 00:053A: 86 07        	stx	<R1+2
  2251 00:053C: DA           	phx
  2252 00:053D: 48           	pha
  2253 00:053E: 22 xx xx xx  	jsl	~~k_debug_string
  2254                        ;	k_debug_string(k_bytetohex(M24BYTE(p),k16buffer)
                    );
  Thu Dec  3 2020 22:25                                                Page 43


  2255                        	.line	281
  2256 00:0542: A9 xx xx     	lda	#<~~k16buffer
  2257 00:0545: 85 01        	sta	<R0
  2258                        	xref	_BEG_DATA
  2259 00:0547: A9 xx xx     	lda	#_BEG_DATA>>16
  2260 00:054A: 85 03        	sta	<R0+2
  2261 00:054C: D4 03        	pei	<R0+2
  2262 00:054E: D4 01        	pei	<R0
  2263 00:0550: D4 16        	pei	<L93+p_0+2
  2264 00:0552: D4 14        	pei	<L93+p_0
  2265 00:0554: A9 08 00     	lda	#$8
  2266                        	xref	~~~llsr
  2267 00:0557: 22 xx xx xx  	jsl	~~~llsr
  2268 00:055B: 85 05        	sta	<R1
  2269 00:055D: 86 07        	stx	<R1+2
  2270 00:055F: A5 05        	lda	<R1
  2271 00:0561: 29 FF 00     	and	#<$ff
  2272 00:0564: 85 09        	sta	<R2
  2273 00:0566: 64 0B        	stz	<R2+2
  2274 00:0568: D4 09        	pei	<R2
  2275 00:056A: 22 xx xx xx  	jsl	~~k_bytetohex
  2276 00:056E: 85 05        	sta	<R1
  2277 00:0570: 86 07        	stx	<R1+2
  2278 00:0572: DA           	phx
  2279 00:0573: 48           	pha
  2280 00:0574: 22 xx xx xx  	jsl	~~k_debug_string
  2281                        ;	k_debug_string(k_bytetohex(L24BYTE(p),k16buffer)
                    );
  2282                        	.line	282
  2283 00:0578: A9 xx xx     	lda	#<~~k16buffer
  2284 00:057B: 85 01        	sta	<R0
  2285                        	xref	_BEG_DATA
  2286 00:057D: A9 xx xx     	lda	#_BEG_DATA>>16
  2287 00:0580: 85 03        	sta	<R0+2
  2288 00:0582: D4 03        	pei	<R0+2
  2289 00:0584: D4 01        	pei	<R0
  2290 00:0586: D4 14        	pei	<L93+p_0
  2291 00:0588: 22 xx xx xx  	jsl	~~k_bytetohex
  2292 00:058C: 85 05        	sta	<R1
  2293 00:058E: 86 07        	stx	<R1+2
  2294 00:0590: DA           	phx
  2295 00:0591: 48           	pha
  2296 00:0592: 22 xx xx xx  	jsl	~~k_debug_string
  2297                        ;
  2298                        ;	k_debug_string("\r\n");
  2299                        	.line	284
  2300 00:0596: F4 xx xx     	pea	#^L60
  2301 00:0599: F4 xx xx     	pea	#<L60
  2302 00:059C: 22 xx xx xx  	jsl	~~k_debug_string
  2303                        ;
  2304                        ;	return;
  2305                        	.line	286
  2306                        L96:
  2307 00:05A0: A5 0E        	lda	<L93+2
  2308 00:05A2: 85 16        	sta	<L93+2+8
  2309 00:05A4: A5 0D        	lda	<L93+1
  2310 00:05A6: 85 15        	sta	<L93+1+8
  2311 00:05A8: 2B           	pld
  Thu Dec  3 2020 22:25                                                Page 44


  2312 00:05A9: 3B           	tsc
  2313 00:05AA: 18           	clc
  2314 00:05AB: 69 14 00     	adc	#L93+8
  2315 00:05AE: 1B           	tcs
  2316 00:05AF: 6B           	rtl
  2317                        ;}
  2318                        	.line	287
  2319                        	.endblock	287
  2320             0000000C   L93	equ	12
  2321             0000000D   L94	equ	13
  2322                        	ends
  2323                        	efunc
  2324                        	.endfunc	287,13,12
  2325                        	.line	287
  2326                        	data
  2327                        L60:
  2328 00:00FB: 0D 0A 00     	db	$0D,$0A,$00
  2329 00:00FE:              	ends
  2330                        ;/*
  2331                        ; *
  2332                        ; *
  2333                        ; *
  2334                        ; *
  2335                        ; */
  2336                        ;void k_debug_char(char FAR* debugString, UCHAR n)
  2337                        ;{
  2338                        	.line	294
  2339                        	.line	295
  2340                        	code
  2341                        	xdef	~~k_debug_char
  2342                        	func
  2343                        	.function	295
  2344                        ~~k_debug_char:
  2345                        	longa	on
  2346                        	longi	on
  2347 00:05B0: 3B           	tsc
  2348 00:05B1: 38           	sec
  2349 00:05B2: E9 02 00     	sbc	#L98
  2350 00:05B5: 1B           	tcs
  2351 00:05B6: 0B           	phd
  2352 00:05B7: 5B           	tcd
  2353             00000004   debugString_0	set	4
  2354             00000008   n_0	set	8
  2355                        	.block	295
  2356                        ;	char b[2];
  2357                        ;
  2358                        ;	b[0] = n;
  2359             00000000   b_1	set	0
  2360                        	.sym	b,0,110,1,0,2
  2361                        	.sym	debugString,4,142,6,32
  2362                        	.sym	n,8,14,6,8
  2363                        	.line	298
  2364 00:05B8: E2 20        	sep	#$20
  2365                        	longa	off
  2366 00:05BA: A5 0A        	lda	<L98+n_0
  2367 00:05BC: 85 01        	sta	<L99+b_1
  2368 00:05BE: C2 20        	rep	#$20
  2369                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 45


  2370                        ;	b[1] = 0;
  2371                        	.line	299
  2372 00:05C0: E2 20        	sep	#$20
  2373                        	longa	off
  2374 00:05C2: 64 02        	stz	<L99+b_1+1
  2375 00:05C4: C2 20        	rep	#$20
  2376                        	longa	on
  2377                        ;
  2378                        ;	k_debug_string(debugString);
  2379                        	.line	301
  2380 00:05C6: D4 08        	pei	<L98+debugString_0+2
  2381 00:05C8: D4 06        	pei	<L98+debugString_0
  2382 00:05CA: 22 xx xx xx  	jsl	~~k_debug_string
  2383                        ;
  2384                        ;	k_debug_string(b);
  2385                        	.line	303
  2386 00:05CE: F4 00 00     	pea	#0
  2387 00:05D1: 18           	clc
  2388 00:05D2: 7B           	tdc
  2389 00:05D3: 69 01 00     	adc	#<L99+b_1
  2390 00:05D6: 48           	pha
  2391 00:05D7: 22 xx xx xx  	jsl	~~k_debug_string
  2392                        ;
  2393                        ;	k_debug_string("\r\n");
  2394                        	.line	305
  2395 00:05DB: F4 xx xx     	pea	#^L97
  2396 00:05DE: F4 xx xx     	pea	#<L97
  2397 00:05E1: 22 xx xx xx  	jsl	~~k_debug_string
  2398                        ;
  2399                        ;	return;
  2400                        	.line	307
  2401                        L101:
  2402 00:05E5: A5 04        	lda	<L98+2
  2403 00:05E7: 85 0A        	sta	<L98+2+6
  2404 00:05E9: A5 03        	lda	<L98+1
  2405 00:05EB: 85 09        	sta	<L98+1+6
  2406 00:05ED: 2B           	pld
  2407 00:05EE: 3B           	tsc
  2408 00:05EF: 18           	clc
  2409 00:05F0: 69 08 00     	adc	#L98+6
  2410 00:05F3: 1B           	tcs
  2411 00:05F4: 6B           	rtl
  2412                        ;}
  2413                        	.line	308
  2414                        	.endblock	308
  2415             00000002   L98	equ	2
  2416             00000001   L99	equ	1
  2417                        	ends
  2418                        	efunc
  2419                        	.endfunc	308,1,2
  2420                        	.line	308
  2421                        	data
  2422                        L97:
  2423 00:00FE: 0D 0A 00     	db	$0D,$0A,$00
  2424 00:0101:              	ends
  2425                        ;/*
  2426                        ; *
  2427                        ; *
  Thu Dec  3 2020 22:25                                                Page 46


  2428                        ; *
  2429                        ; *
  2430                        ; */
  2431                        ;void k_debug_integer(char FAR* debugString, UINT 
                    n)
  2432                        ;{
  2433                        	.line	315
  2434                        	.line	316
  2435                        	code
  2436                        	xdef	~~k_debug_integer
  2437                        	func
  2438                        	.function	316
  2439                        ~~k_debug_integer:
  2440                        	longa	on
  2441                        	longi	on
  2442 00:05F5: 3B           	tsc
  2443 00:05F6: 38           	sec
  2444 00:05F7: E9 08 00     	sbc	#L103
  2445 00:05FA: 1B           	tcs
  2446 00:05FB: 0B           	phd
  2447 00:05FC: 5B           	tcd
  2448             00000004   debugString_0	set	4
  2449             00000008   n_0	set	8
  2450                        	.block	316
  2451                        ;	k_debug_string(debugString);
  2452                        	.sym	debugString,4,142,6,32
  2453                        	.sym	n,8,16,6,16
  2454                        	.line	317
  2455 00:05FD: D4 0E        	pei	<L103+debugString_0+2
  2456 00:05FF: D4 0C        	pei	<L103+debugString_0
  2457 00:0601: 22 xx xx xx  	jsl	~~k_debug_string
  2458                        ;
  2459                        ;	k_debug_string(k_inttodec(n,k16buffer));
  2460                        	.line	319
  2461 00:0605: A9 xx xx     	lda	#<~~k16buffer
  2462 00:0608: 85 01        	sta	<R0
  2463                        	xref	_BEG_DATA
  2464 00:060A: A9 xx xx     	lda	#_BEG_DATA>>16
  2465 00:060D: 85 03        	sta	<R0+2
  2466 00:060F: D4 03        	pei	<R0+2
  2467 00:0611: D4 01        	pei	<R0
  2468 00:0613: D4 10        	pei	<L103+n_0
  2469 00:0615: 22 xx xx xx  	jsl	~~k_inttodec
  2470 00:0619: 85 05        	sta	<R1
  2471 00:061B: 86 07        	stx	<R1+2
  2472 00:061D: DA           	phx
  2473 00:061E: 48           	pha
  2474 00:061F: 22 xx xx xx  	jsl	~~k_debug_string
  2475                        ;
  2476                        ;	k_debug_string("\r\n");
  2477                        	.line	321
  2478 00:0623: F4 xx xx     	pea	#^L102
  2479 00:0626: F4 xx xx     	pea	#<L102
  2480 00:0629: 22 xx xx xx  	jsl	~~k_debug_string
  2481                        ;
  2482                        ;	return;
  2483                        	.line	323
  2484                        L106:
  Thu Dec  3 2020 22:25                                                Page 47


  2485 00:062D: A5 0A        	lda	<L103+2
  2486 00:062F: 85 10        	sta	<L103+2+6
  2487 00:0631: A5 09        	lda	<L103+1
  2488 00:0633: 85 0F        	sta	<L103+1+6
  2489 00:0635: 2B           	pld
  2490 00:0636: 3B           	tsc
  2491 00:0637: 18           	clc
  2492 00:0638: 69 0E 00     	adc	#L103+6
  2493 00:063B: 1B           	tcs
  2494 00:063C: 6B           	rtl
  2495                        ;}
  2496                        	.line	324
  2497                        	.endblock	324
  2498             00000008   L103	equ	8
  2499             00000009   L104	equ	9
  2500                        	ends
  2501                        	efunc
  2502                        	.endfunc	324,9,8
  2503                        	.line	324
  2504                        	data
  2505                        L102:
  2506 00:0101: 0D 0A 00     	db	$0D,$0A,$00
  2507 00:0104:              	ends
  2508                        ;
  2509                        ;void k_debug_integers(char FAR* format, int nHowM
                    any, ...)
  2510                        ;{
  2511                        	.line	326
  2512                        	.line	327
  2513                        	code
  2514                        	xdef	~~k_debug_integers
  2515                        	func
  2516                        	.function	327
  2517                        ~~k_debug_integers:
  2518                        	longa	on
  2519                        	longi	on
  2520 00:063D: 3B           	tsc
  2521 00:063E: 38           	sec
  2522 00:063F: E9 0C 00     	sbc	#L108
  2523 00:0642: 1B           	tcs
  2524 00:0643: 0B           	phd
  2525 00:0644: 5B           	tcd
  2526             00000006   format_0	set	6
  2527             0000000A   nHowMany_0	set	10
  2528                        	.block	327
  2529                        ;	int i = 0;
  2530                        ;	int nSum = 0;
  2531                        ;
  2532                        ;	va_list intArgumentPointer;
  2533                        ;	va_start(intArgumentPointer, nHowMany);
  2534             00000000   i_1	set	0
  2535             00000002   nSum_1	set	2
  2536             00000004   intArgumentPointer_1	set	4
  2537                        	.sym	i,0,5,1,16
  2538                        	.sym	nSum,2,5,1,16
  2539                        	.sym	intArgumentPointer,4,142,1,32
  2540                        	.sym	format,6,142,6,32
  2541                        	.sym	nHowMany,10,5,6,16
  Thu Dec  3 2020 22:25                                                Page 48


  2542 00:0645: 64 05        	stz	<L109+i_1
  2543 00:0647: 64 07        	stz	<L109+nSum_1
  2544                        	.line	332
  2545 00:0649: 18           	clc
  2546 00:064A: 7B           	tdc
  2547 00:064B: 69 18 00     	adc	#<L108+nHowMany_0+2
  2548 00:064E: 85 09        	sta	<L109+intArgumentPointer_1
  2549 00:0650: A9 00 00     	lda	#$0
  2550 00:0653: 85 0B        	sta	<L109+intArgumentPointer_1+2
  2551                        ;
  2552                        ;
  2553                        ;	for (i = 0; i < nHowMany; i++)
  2554                        	.line	335
  2555 00:0655: 64 05        	stz	<L109+i_1
  2556 00:0657: 82 24 00     	brl	L10038
  2557                        L10037:
  2558                        ;		nSum += va_arg(intArgumentPointer, int);
  2559                        	.line	336
  2560 00:065A: 18           	clc
  2561 00:065B: A9 02 00     	lda	#$2
  2562 00:065E: 65 09        	adc	<L109+intArgumentPointer_1
  2563 00:0660: 85 09        	sta	<L109+intArgumentPointer_1
  2564 00:0662: 90 02        	bcc	L111
  2565 00:0664: E6 0B        	inc	<L109+intArgumentPointer_1+2
  2566                        L111:
  2567 00:0666: 18           	clc
  2568 00:0667: A9 FE FF     	lda	#$fffe
  2569 00:066A: 65 09        	adc	<L109+intArgumentPointer_1
  2570 00:066C: 85 01        	sta	<R0
  2571 00:066E: A9 FF FF     	lda	#$ffff
  2572 00:0671: 65 0B        	adc	<L109+intArgumentPointer_1+2
  2573 00:0673: 85 03        	sta	<R0+2
  2574 00:0675: 18           	clc
  2575 00:0676: A7 01        	lda	[<R0]
  2576 00:0678: 65 07        	adc	<L109+nSum_1
  2577 00:067A: 85 07        	sta	<L109+nSum_1
  2578                        L10035:
  2579 00:067C: E6 05        	inc	<L109+i_1
  2580                        L10038:
  2581 00:067E: 38           	sec
  2582 00:067F: A5 05        	lda	<L109+i_1
  2583 00:0681: E5 16        	sbc	<L108+nHowMany_0
  2584 00:0683: 70 03        	bvs	L112
  2585 00:0685: 49 00 80     	eor	#$8000
  2586                        L112:
  2587 00:0688: 30 03        	bmi	L113
  2588 00:068A: 82 CD FF     	brl	L10037
  2589                        L113:
  2590                        L10036:
  2591                        ;
  2592                        ;	va_end(intArgumentPointer);
  2593                        	.line	338
  2594                        ;
  2595                        ;	k_debug_integer(format, nSum);
  2596                        	.line	340
  2597 00:068D: D4 07        	pei	<L109+nSum_1
  2598 00:068F: D4 14        	pei	<L108+format_0+2
  2599 00:0691: D4 12        	pei	<L108+format_0
  Thu Dec  3 2020 22:25                                                Page 49


  2600 00:0693: 22 xx xx xx  	jsl	~~k_debug_integer
  2601                        ;}
  2602                        	.line	341
  2603                        L114:
  2604 00:0697: DA           	phx
  2605 00:0698: A6 10        	ldx	<L108+4
  2606 00:069A: A5 0E        	lda	<L108+2
  2607 00:069C: 95 0E        	sta	<L108+2,X
  2608 00:069E: A5 0D        	lda	<L108+1
  2609 00:06A0: 95 0D        	sta	<L108+1,X
  2610 00:06A2: 8A           	txa
  2611 00:06A3: FA           	plx
  2612 00:06A4: 2B           	pld
  2613 00:06A5: 48           	pha
  2614 00:06A6: 3B           	tsc
  2615 00:06A7: 18           	clc
  2616 00:06A8: 69 0E 00     	adc	#L108+2
  2617 00:06AB: 63 01        	adc	<1,s
  2618 00:06AD: 1B           	tcs
  2619 00:06AE: 6B           	rtl
  2620                        	.endblock	341
  2621             0000000C   L108	equ	12
  2622             00000005   L109	equ	5
  2623                        	ends
  2624                        	efunc
  2625                        	.endfunc	341,5,12
  2626                        	.line	341
  2627                        ;
  2628                        ;/*
  2629                        ; *
  2630                        ; *
  2631                        ; *
  2632                        ; *
  2633                        ; */
  2634                        ;void k_debug_integer_array(char FAR* debugString,
                    UINT FAR *n,UINT size)
  2635                        ;{
  2636                        	.line	349
  2637                        	.line	350
  2638                        	code
  2639                        	xdef	~~k_debug_integer_array
  2640                        	func
  2641                        	.function	350
  2642                        ~~k_debug_integer_array:
  2643                        	longa	on
  2644                        	longi	on
  2645 00:06AF: 3B           	tsc
  2646 00:06B0: 38           	sec
  2647 00:06B1: E9 12 00     	sbc	#L115
  2648 00:06B4: 1B           	tcs
  2649 00:06B5: 0B           	phd
  2650 00:06B6: 5B           	tcd
  2651             00000004   debugString_0	set	4
  2652             00000008   n_0	set	8
  2653             0000000C   size_0	set	12
  2654                        	.block	350
  2655                        ;	int i = 0;
  2656                        ;	k_debug_string(debugString);
  Thu Dec  3 2020 22:25                                                Page 50


  2657             00000000   i_1	set	0
  2658                        	.sym	i,0,5,1,16
  2659                        	.sym	debugString,4,142,6,32
  2660                        	.sym	n,8,144,6,32
  2661                        	.sym	size,12,16,6,16
  2662 00:06B7: 64 11        	stz	<L116+i_1
  2663                        	.line	352
  2664 00:06B9: D4 18        	pei	<L115+debugString_0+2
  2665 00:06BB: D4 16        	pei	<L115+debugString_0
  2666 00:06BD: 22 xx xx xx  	jsl	~~k_debug_string
  2667                        ;
  2668                        ;	for(i=0;i<size;i++)
  2669                        	.line	354
  2670 00:06C1: 64 11        	stz	<L116+i_1
  2671 00:06C3: 82 5A 00     	brl	L10042
  2672                        L10041:
  2673                        ;	{
  2674                        	.line	355
  2675                        ;		if(i!=0)
  2676                        	.line	356
  2677                        ;			k_debug_string(",");
  2678 00:06C6: A5 11        	lda	<L116+i_1
  2679 00:06C8: D0 03        	bne	L118
  2680 00:06CA: 82 0A 00     	brl	L10043
  2681                        L118:
  2682                        	.line	357
  2683 00:06CD: F4 xx xx     	pea	#^L107
  2684 00:06D0: F4 xx xx     	pea	#<L107
  2685 00:06D3: 22 xx xx xx  	jsl	~~k_debug_string
  2686                        ;
  2687                        ;		k_debug_string(k_inttodec(n[i],k16buffer
                    ));
  2688                        L10043:
  2689                        	.line	359
  2690 00:06D7: A9 xx xx     	lda	#<~~k16buffer
  2691 00:06DA: 85 01        	sta	<R0
  2692                        	xref	_BEG_DATA
  2693 00:06DC: A9 xx xx     	lda	#_BEG_DATA>>16
  2694 00:06DF: 85 03        	sta	<R0+2
  2695 00:06E1: D4 03        	pei	<R0+2
  2696 00:06E3: D4 01        	pei	<R0
  2697 00:06E5: A0 00 00     	ldy	#$0
  2698 00:06E8: A5 11        	lda	<L116+i_1
  2699 00:06EA: 10 01        	bpl	L119
  2700 00:06EC: 88           	dey
  2701                        L119:
  2702 00:06ED: 85 09        	sta	<R2
  2703 00:06EF: 84 0B        	sty	<R2+2
  2704 00:06F1: D4 0B        	pei	<R2+2
  2705 00:06F3: D4 09        	pei	<R2
  2706 00:06F5: A9 01 00     	lda	#$1
  2707                        	xref	~~~lasl
  2708 00:06F8: 22 xx xx xx  	jsl	~~~lasl
  2709 00:06FC: 85 05        	sta	<R1
  2710 00:06FE: 86 07        	stx	<R1+2
  2711 00:0700: 18           	clc
  2712 00:0701: A5 1A        	lda	<L115+n_0
  2713 00:0703: 65 05        	adc	<R1
  Thu Dec  3 2020 22:25                                                Page 51


  2714 00:0705: 85 0D        	sta	<R3
  2715 00:0707: A5 1C        	lda	<L115+n_0+2
  2716 00:0709: 65 07        	adc	<R1+2
  2717 00:070B: 85 0F        	sta	<R3+2
  2718 00:070D: A7 0D        	lda	[<R3]
  2719 00:070F: 48           	pha
  2720 00:0710: 22 xx xx xx  	jsl	~~k_inttodec
  2721 00:0714: 85 05        	sta	<R1
  2722 00:0716: 86 07        	stx	<R1+2
  2723 00:0718: DA           	phx
  2724 00:0719: 48           	pha
  2725 00:071A: 22 xx xx xx  	jsl	~~k_debug_string
  2726                        ;	}
  2727                        	.line	360
  2728                        L10039:
  2729 00:071E: E6 11        	inc	<L116+i_1
  2730                        L10042:
  2731 00:0720: A5 11        	lda	<L116+i_1
  2732 00:0722: C5 1E        	cmp	<L115+size_0
  2733 00:0724: B0 03        	bcs	L120
  2734 00:0726: 82 9D FF     	brl	L10041
  2735                        L120:
  2736                        L10040:
  2737                        ;
  2738                        ;	k_debug_string("\r\n");
  2739                        	.line	362
  2740 00:0729: F4 xx xx     	pea	#^L107+2
  2741 00:072C: F4 xx xx     	pea	#<L107+2
  2742 00:072F: 22 xx xx xx  	jsl	~~k_debug_string
  2743                        ;
  2744                        ;	return;
  2745                        	.line	364
  2746                        L121:
  2747 00:0733: A5 14        	lda	<L115+2
  2748 00:0735: 85 1E        	sta	<L115+2+10
  2749 00:0737: A5 13        	lda	<L115+1
  2750 00:0739: 85 1D        	sta	<L115+1+10
  2751 00:073B: 2B           	pld
  2752 00:073C: 3B           	tsc
  2753 00:073D: 18           	clc
  2754 00:073E: 69 1C 00     	adc	#L115+10
  2755 00:0741: 1B           	tcs
  2756 00:0742: 6B           	rtl
  2757                        ;}
  2758                        	.line	365
  2759                        	.endblock	365
  2760             00000012   L115	equ	18
  2761             00000011   L116	equ	17
  2762                        	ends
  2763                        	efunc
  2764                        	.endfunc	365,17,18
  2765                        	.line	365
  2766                        	data
  2767                        L107:
  2768 00:0104: 2C 00 0D 0A  	db	$2C,$00,$0D,$0A,$00
       00:0108: 00 
  2769 00:0109:              	ends
  2770                        ;
  Thu Dec  3 2020 22:25                                                Page 52


  2771                        ;/*
  2772                        ; *
  2773                        ; *
  2774                        ; *
  2775                        ; *
  2776                        ; */
  2777                        ;void k_debug_long(char FAR* debugString, ULONG n)
  2778                        ;{
  2779                        	.line	373
  2780                        	.line	374
  2781                        	code
  2782                        	xdef	~~k_debug_long
  2783                        	func
  2784                        	.function	374
  2785                        ~~k_debug_long:
  2786                        	longa	on
  2787                        	longi	on
  2788 00:0743: 3B           	tsc
  2789 00:0744: 38           	sec
  2790 00:0745: E9 08 00     	sbc	#L123
  2791 00:0748: 1B           	tcs
  2792 00:0749: 0B           	phd
  2793 00:074A: 5B           	tcd
  2794             00000004   debugString_0	set	4
  2795             00000008   n_0	set	8
  2796                        	.block	374
  2797                        ;	k_debug_string(debugString);
  2798                        	.sym	debugString,4,142,6,32
  2799                        	.sym	n,8,18,6,32
  2800                        	.line	375
  2801 00:074B: D4 0E        	pei	<L123+debugString_0+2
  2802 00:074D: D4 0C        	pei	<L123+debugString_0
  2803 00:074F: 22 xx xx xx  	jsl	~~k_debug_string
  2804                        ;
  2805                        ;	k_debug_string(k_longtodec(n,k16buffer));
  2806                        	.line	377
  2807 00:0753: A9 xx xx     	lda	#<~~k16buffer
  2808 00:0756: 85 01        	sta	<R0
  2809                        	xref	_BEG_DATA
  2810 00:0758: A9 xx xx     	lda	#_BEG_DATA>>16
  2811 00:075B: 85 03        	sta	<R0+2
  2812 00:075D: D4 03        	pei	<R0+2
  2813 00:075F: D4 01        	pei	<R0
  2814 00:0761: D4 12        	pei	<L123+n_0+2
  2815 00:0763: D4 10        	pei	<L123+n_0
  2816 00:0765: 22 xx xx xx  	jsl	~~k_longtodec
  2817 00:0769: 85 05        	sta	<R1
  2818 00:076B: 86 07        	stx	<R1+2
  2819 00:076D: DA           	phx
  2820 00:076E: 48           	pha
  2821 00:076F: 22 xx xx xx  	jsl	~~k_debug_string
  2822                        ;
  2823                        ;	k_debug_string("\r\n");
  2824                        	.line	379
  2825 00:0773: F4 xx xx     	pea	#^L122
  2826 00:0776: F4 xx xx     	pea	#<L122
  2827 00:0779: 22 xx xx xx  	jsl	~~k_debug_string
  2828                        ;
  Thu Dec  3 2020 22:25                                                Page 53


  2829                        ;	return;
  2830                        	.line	381
  2831                        L126:
  2832 00:077D: A5 0A        	lda	<L123+2
  2833 00:077F: 85 12        	sta	<L123+2+8
  2834 00:0781: A5 09        	lda	<L123+1
  2835 00:0783: 85 11        	sta	<L123+1+8
  2836 00:0785: 2B           	pld
  2837 00:0786: 3B           	tsc
  2838 00:0787: 18           	clc
  2839 00:0788: 69 10 00     	adc	#L123+8
  2840 00:078B: 1B           	tcs
  2841 00:078C: 6B           	rtl
  2842                        ;}
  2843                        	.line	382
  2844                        	.endblock	382
  2845             00000008   L123	equ	8
  2846             00000009   L124	equ	9
  2847                        	ends
  2848                        	efunc
  2849                        	.endfunc	382,9,8
  2850                        	.line	382
  2851                        	data
  2852                        L122:
  2853 00:0109: 0D 0A 00     	db	$0D,$0A,$00
  2854 00:010C:              	ends
  2855                        ;/*
  2856                        ; *
  2857                        ; *
  2858                        ; *
  2859                        ; *
  2860                        ; */
  2861                        ;void k_debug_hex(PFAR debugString, UCHAR n)
  2862                        ;{
  2863                        	.line	389
  2864                        	.line	390
  2865                        	code
  2866                        	xdef	~~k_debug_hex
  2867                        	func
  2868                        	.function	390
  2869                        ~~k_debug_hex:
  2870                        	longa	on
  2871                        	longi	on
  2872 00:078D: 3B           	tsc
  2873 00:078E: 38           	sec
  2874 00:078F: E9 08 00     	sbc	#L128
  2875 00:0792: 1B           	tcs
  2876 00:0793: 0B           	phd
  2877 00:0794: 5B           	tcd
  2878             00000004   debugString_0	set	4
  2879             00000008   n_0	set	8
  2880                        	.block	390
  2881                        ;	k_debug_string(debugString);
  2882                        	.sym	debugString,4,142,6,32
  2883                        	.sym	n,8,14,6,8
  2884                        	.line	391
  2885 00:0795: D4 0E        	pei	<L128+debugString_0+2
  2886 00:0797: D4 0C        	pei	<L128+debugString_0
  Thu Dec  3 2020 22:25                                                Page 54


  2887 00:0799: 22 xx xx xx  	jsl	~~k_debug_string
  2888                        ;
  2889                        ;	k_debug_string(k_bytetohex(n,k16buffer));
  2890                        	.line	393
  2891 00:079D: A9 xx xx     	lda	#<~~k16buffer
  2892 00:07A0: 85 01        	sta	<R0
  2893                        	xref	_BEG_DATA
  2894 00:07A2: A9 xx xx     	lda	#_BEG_DATA>>16
  2895 00:07A5: 85 03        	sta	<R0+2
  2896 00:07A7: D4 03        	pei	<R0+2
  2897 00:07A9: D4 01        	pei	<R0
  2898 00:07AB: D4 10        	pei	<L128+n_0
  2899 00:07AD: 22 xx xx xx  	jsl	~~k_bytetohex
  2900 00:07B1: 85 05        	sta	<R1
  2901 00:07B3: 86 07        	stx	<R1+2
  2902 00:07B5: DA           	phx
  2903 00:07B6: 48           	pha
  2904 00:07B7: 22 xx xx xx  	jsl	~~k_debug_string
  2905                        ;
  2906                        ;	k_debug_string("\r\n");
  2907                        	.line	395
  2908 00:07BB: F4 xx xx     	pea	#^L127
  2909 00:07BE: F4 xx xx     	pea	#<L127
  2910 00:07C1: 22 xx xx xx  	jsl	~~k_debug_string
  2911                        ;
  2912                        ;	return;
  2913                        	.line	397
  2914                        L131:
  2915 00:07C5: A5 0A        	lda	<L128+2
  2916 00:07C7: 85 10        	sta	<L128+2+6
  2917 00:07C9: A5 09        	lda	<L128+1
  2918 00:07CB: 85 0F        	sta	<L128+1+6
  2919 00:07CD: 2B           	pld
  2920 00:07CE: 3B           	tsc
  2921 00:07CF: 18           	clc
  2922 00:07D0: 69 0E 00     	adc	#L128+6
  2923 00:07D3: 1B           	tcs
  2924 00:07D4: 6B           	rtl
  2925                        ;}
  2926                        	.line	398
  2927                        	.endblock	398
  2928             00000008   L128	equ	8
  2929             00000009   L129	equ	9
  2930                        	ends
  2931                        	efunc
  2932                        	.endfunc	398,9,8
  2933                        	.line	398
  2934                        	data
  2935                        L127:
  2936 00:010C: 0D 0A 00     	db	$0D,$0A,$00
  2937 00:010F:              	ends
  2938                        ;
  2939                        ;void k_debug_message(char FAR* debugString,char F
                    AR *message)
  2940                        ;{
  2941                        	.line	400
  2942                        	.line	401
  2943                        	code
  Thu Dec  3 2020 22:25                                                Page 55


  2944                        	xdef	~~k_debug_message
  2945                        	func
  2946                        	.function	401
  2947                        ~~k_debug_message:
  2948                        	longa	on
  2949                        	longi	on
  2950 00:07D5: 3B           	tsc
  2951 00:07D6: 38           	sec
  2952 00:07D7: E9 00 00     	sbc	#L133
  2953 00:07DA: 1B           	tcs
  2954 00:07DB: 0B           	phd
  2955 00:07DC: 5B           	tcd
  2956             00000004   debugString_0	set	4
  2957             00000008   message_0	set	8
  2958                        	.block	401
  2959                        ;	k_debug_string(debugString);
  2960                        	.sym	debugString,4,142,6,32
  2961                        	.sym	message,8,142,6,32
  2962                        	.line	402
  2963 00:07DD: D4 06        	pei	<L133+debugString_0+2
  2964 00:07DF: D4 04        	pei	<L133+debugString_0
  2965 00:07E1: 22 xx xx xx  	jsl	~~k_debug_string
  2966                        ;
  2967                        ;	k_debug_string(message);
  2968                        	.line	404
  2969 00:07E5: D4 0A        	pei	<L133+message_0+2
  2970 00:07E7: D4 08        	pei	<L133+message_0
  2971 00:07E9: 22 xx xx xx  	jsl	~~k_debug_string
  2972                        ;
  2973                        ;	k_debug_string("\r\n");
  2974                        	.line	406
  2975 00:07ED: F4 xx xx     	pea	#^L132
  2976 00:07F0: F4 xx xx     	pea	#<L132
  2977 00:07F3: 22 xx xx xx  	jsl	~~k_debug_string
  2978                        ;
  2979                        ;	return;
  2980                        	.line	408
  2981                        L136:
  2982 00:07F7: A5 02        	lda	<L133+2
  2983 00:07F9: 85 0A        	sta	<L133+2+8
  2984 00:07FB: A5 01        	lda	<L133+1
  2985 00:07FD: 85 09        	sta	<L133+1+8
  2986 00:07FF: 2B           	pld
  2987 00:0800: 3B           	tsc
  2988 00:0801: 18           	clc
  2989 00:0802: 69 08 00     	adc	#L133+8
  2990 00:0805: 1B           	tcs
  2991 00:0806: 6B           	rtl
  2992                        ;}
  2993                        	.line	409
  2994                        	.endblock	409
  2995             00000000   L133	equ	0
  2996             00000001   L134	equ	1
  2997                        	ends
  2998                        	efunc
  2999                        	.endfunc	409,1,0
  3000                        	.line	409
  3001                        	data
  Thu Dec  3 2020 22:25                                                Page 56


  3002                        L132:
  3003 00:010F: 0D 0A 00     	db	$0D,$0A,$00
  3004 00:0112:              	ends
  3005                        ;
  3006                        ;void k_debug_strings(char FAR* debugString,char F
                    AR *message)
  3007                        ;{
  3008                        	.line	411
  3009                        	.line	412
  3010                        	code
  3011                        	xdef	~~k_debug_strings
  3012                        	func
  3013                        	.function	412
  3014                        ~~k_debug_strings:
  3015                        	longa	on
  3016                        	longi	on
  3017 00:0807: 3B           	tsc
  3018 00:0808: 38           	sec
  3019 00:0809: E9 00 00     	sbc	#L138
  3020 00:080C: 1B           	tcs
  3021 00:080D: 0B           	phd
  3022 00:080E: 5B           	tcd
  3023             00000004   debugString_0	set	4
  3024             00000008   message_0	set	8
  3025                        	.block	412
  3026                        ;	k_debug_message(debugString,message);
  3027                        	.sym	debugString,4,142,6,32
  3028                        	.sym	message,8,142,6,32
  3029                        	.line	413
  3030 00:080F: D4 0A        	pei	<L138+message_0+2
  3031 00:0811: D4 08        	pei	<L138+message_0
  3032 00:0813: D4 06        	pei	<L138+debugString_0+2
  3033 00:0815: D4 04        	pei	<L138+debugString_0
  3034 00:0817: 22 xx xx xx  	jsl	~~k_debug_message
  3035                        ;}
  3036                        	.line	414
  3037                        L141:
  3038 00:081B: A5 02        	lda	<L138+2
  3039 00:081D: 85 0A        	sta	<L138+2+8
  3040 00:081F: A5 01        	lda	<L138+1
  3041 00:0821: 85 09        	sta	<L138+1+8
  3042 00:0823: 2B           	pld
  3043 00:0824: 3B           	tsc
  3044 00:0825: 18           	clc
  3045 00:0826: 69 08 00     	adc	#L138+8
  3046 00:0829: 1B           	tcs
  3047 00:082A: 6B           	rtl
  3048                        	.endblock	414
  3049             00000000   L138	equ	0
  3050             00000001   L139	equ	1
  3051                        	ends
  3052                        	efunc
  3053                        	.endfunc	414,1,0
  3054                        	.line	414
  3055                        ;
  3056                        ;
  3057                        ;void k_debug_nmessage(char FAR* debugString,char 
                    FAR *message,UINT size)
  Thu Dec  3 2020 22:25                                                Page 57


  3058                        ;{
  3059                        	.line	417
  3060                        	.line	418
  3061                        	code
  3062                        	xdef	~~k_debug_nmessage
  3063                        	func
  3064                        	.function	418
  3065                        ~~k_debug_nmessage:
  3066                        	longa	on
  3067                        	longi	on
  3068 00:082B: 3B           	tsc
  3069 00:082C: 38           	sec
  3070 00:082D: E9 00 00     	sbc	#L142
  3071 00:0830: 1B           	tcs
  3072 00:0831: 0B           	phd
  3073 00:0832: 5B           	tcd
  3074             00000004   debugString_0	set	4
  3075             00000008   message_0	set	8
  3076             0000000C   size_0	set	12
  3077                        	.block	418
  3078                        ;	k_debug_string(debugString);
  3079                        	.sym	debugString,4,142,6,32
  3080                        	.sym	message,8,142,6,32
  3081                        	.sym	size,12,16,6,16
  3082                        	.line	419
  3083 00:0833: D4 06        	pei	<L142+debugString_0+2
  3084 00:0835: D4 04        	pei	<L142+debugString_0
  3085 00:0837: 22 xx xx xx  	jsl	~~k_debug_string
  3086                        ;	k_debug_string("[");
  3087                        	.line	420
  3088 00:083B: F4 xx xx     	pea	#^L137
  3089 00:083E: F4 xx xx     	pea	#<L137
  3090 00:0841: 22 xx xx xx  	jsl	~~k_debug_string
  3091                        ;	k_debug_nstring(message,size);
  3092                        	.line	421
  3093 00:0845: D4 0C        	pei	<L142+size_0
  3094 00:0847: D4 0A        	pei	<L142+message_0+2
  3095 00:0849: D4 08        	pei	<L142+message_0
  3096 00:084B: 22 xx xx xx  	jsl	~~k_debug_nstring
  3097                        ;	k_debug_string("]");
  3098                        	.line	422
  3099 00:084F: F4 xx xx     	pea	#^L137+2
  3100 00:0852: F4 xx xx     	pea	#<L137+2
  3101 00:0855: 22 xx xx xx  	jsl	~~k_debug_string
  3102                        ;	k_debug_string("\r\n");
  3103                        	.line	423
  3104 00:0859: F4 xx xx     	pea	#^L137+4
  3105 00:085C: F4 xx xx     	pea	#<L137+4
  3106 00:085F: 22 xx xx xx  	jsl	~~k_debug_string
  3107                        ;
  3108                        ;	return;
  3109                        	.line	425
  3110                        L145:
  3111 00:0863: A5 02        	lda	<L142+2
  3112 00:0865: 85 0C        	sta	<L142+2+10
  3113 00:0867: A5 01        	lda	<L142+1
  3114 00:0869: 85 0B        	sta	<L142+1+10
  3115 00:086B: 2B           	pld
  Thu Dec  3 2020 22:25                                                Page 58


  3116 00:086C: 3B           	tsc
  3117 00:086D: 18           	clc
  3118 00:086E: 69 0A 00     	adc	#L142+10
  3119 00:0871: 1B           	tcs
  3120 00:0872: 6B           	rtl
  3121                        ;}
  3122                        	.line	426
  3123                        	.endblock	426
  3124             00000000   L142	equ	0
  3125             00000001   L143	equ	1
  3126                        	ends
  3127                        	efunc
  3128                        	.endfunc	426,1,0
  3129                        	.line	426
  3130                        	data
  3131                        L137:
  3132 00:0112: 5B 00 5D 00  	db	$5B,$00,$5D,$00,$0D,$0A,$00
       00:0116: 0D 0A 00 
  3133 00:0119:              	ends
  3134                        ;
  3135                        ;void k_debug_nstrings(char FAR* debugString,char 
                    FAR *message,UINT size)
  3136                        ;{
  3137                        	.line	428
  3138                        	.line	429
  3139                        	code
  3140                        	xdef	~~k_debug_nstrings
  3141                        	func
  3142                        	.function	429
  3143                        ~~k_debug_nstrings:
  3144                        	longa	on
  3145                        	longi	on
  3146 00:0873: 3B           	tsc
  3147 00:0874: 38           	sec
  3148 00:0875: E9 00 00     	sbc	#L147
  3149 00:0878: 1B           	tcs
  3150 00:0879: 0B           	phd
  3151 00:087A: 5B           	tcd
  3152             00000004   debugString_0	set	4
  3153             00000008   message_0	set	8
  3154             0000000C   size_0	set	12
  3155                        	.block	429
  3156                        ;	k_debug_nmessage(debugString,message,size);
  3157                        	.sym	debugString,4,142,6,32
  3158                        	.sym	message,8,142,6,32
  3159                        	.sym	size,12,16,6,16
  3160                        	.line	430
  3161 00:087B: D4 0C        	pei	<L147+size_0
  3162 00:087D: D4 0A        	pei	<L147+message_0+2
  3163 00:087F: D4 08        	pei	<L147+message_0
  3164 00:0881: D4 06        	pei	<L147+debugString_0+2
  3165 00:0883: D4 04        	pei	<L147+debugString_0
  3166 00:0885: 22 xx xx xx  	jsl	~~k_debug_nmessage
  3167                        ;}
  3168                        	.line	431
  3169                        L150:
  3170 00:0889: A5 02        	lda	<L147+2
  3171 00:088B: 85 0C        	sta	<L147+2+10
  Thu Dec  3 2020 22:25                                                Page 59


  3172 00:088D: A5 01        	lda	<L147+1
  3173 00:088F: 85 0B        	sta	<L147+1+10
  3174 00:0891: 2B           	pld
  3175 00:0892: 3B           	tsc
  3176 00:0893: 18           	clc
  3177 00:0894: 69 0A 00     	adc	#L147+10
  3178 00:0897: 1B           	tcs
  3179 00:0898: 6B           	rtl
  3180                        	.endblock	431
  3181             00000000   L147	equ	0
  3182             00000001   L148	equ	1
  3183                        	ends
  3184                        	efunc
  3185                        	.endfunc	431,1,0
  3186                        	.line	431
  3187                        ;
  3188                        ;/*
  3189                        ; *
  3190                        ; *
  3191                        ; *
  3192                        ; *
  3193                        ; */
  3194                        ;void k_debug_hexchar(PFAR debugString, UCHAR n)
  3195                        ;{
  3196                        	.line	439
  3197                        	.line	440
  3198                        	code
  3199                        	xdef	~~k_debug_hexchar
  3200                        	func
  3201                        	.function	440
  3202                        ~~k_debug_hexchar:
  3203                        	longa	on
  3204                        	longi	on
  3205 00:0899: 3B           	tsc
  3206 00:089A: 38           	sec
  3207 00:089B: E9 0A 00     	sbc	#L151
  3208 00:089E: 1B           	tcs
  3209 00:089F: 0B           	phd
  3210 00:08A0: 5B           	tcd
  3211             00000004   debugString_0	set	4
  3212             00000008   n_0	set	8
  3213                        	.block	440
  3214                        ;	char b[2];
  3215                        ;
  3216                        ;	b[0] = n;
  3217             00000000   b_1	set	0
  3218                        	.sym	b,0,110,1,0,2
  3219                        	.sym	debugString,4,142,6,32
  3220                        	.sym	n,8,14,6,8
  3221                        	.line	443
  3222 00:08A1: E2 20        	sep	#$20
  3223                        	longa	off
  3224 00:08A3: A5 12        	lda	<L151+n_0
  3225 00:08A5: 85 09        	sta	<L152+b_1
  3226 00:08A7: C2 20        	rep	#$20
  3227                        	longa	on
  3228                        ;	b[1] = 0;
  3229                        	.line	444
  Thu Dec  3 2020 22:25                                                Page 60


  3230 00:08A9: E2 20        	sep	#$20
  3231                        	longa	off
  3232 00:08AB: 64 0A        	stz	<L152+b_1+1
  3233 00:08AD: C2 20        	rep	#$20
  3234                        	longa	on
  3235                        ;
  3236                        ;	k_debug_string(debugString);
  3237                        	.line	446
  3238 00:08AF: D4 10        	pei	<L151+debugString_0+2
  3239 00:08B1: D4 0E        	pei	<L151+debugString_0
  3240 00:08B3: 22 xx xx xx  	jsl	~~k_debug_string
  3241                        ;
  3242                        ;	k_debug_string(k_bytetohex(n,k16buffer));
  3243                        	.line	448
  3244 00:08B7: A9 xx xx     	lda	#<~~k16buffer
  3245 00:08BA: 85 01        	sta	<R0
  3246                        	xref	_BEG_DATA
  3247 00:08BC: A9 xx xx     	lda	#_BEG_DATA>>16
  3248 00:08BF: 85 03        	sta	<R0+2
  3249 00:08C1: D4 03        	pei	<R0+2
  3250 00:08C3: D4 01        	pei	<R0
  3251 00:08C5: D4 12        	pei	<L151+n_0
  3252 00:08C7: 22 xx xx xx  	jsl	~~k_bytetohex
  3253 00:08CB: 85 05        	sta	<R1
  3254 00:08CD: 86 07        	stx	<R1+2
  3255 00:08CF: DA           	phx
  3256 00:08D0: 48           	pha
  3257 00:08D1: 22 xx xx xx  	jsl	~~k_debug_string
  3258                        ;	k_debug_string("(");
  3259                        	.line	449
  3260 00:08D5: F4 xx xx     	pea	#^L146
  3261 00:08D8: F4 xx xx     	pea	#<L146
  3262 00:08DB: 22 xx xx xx  	jsl	~~k_debug_string
  3263                        ;	k_debug_string(b);
  3264                        	.line	450
  3265 00:08DF: F4 00 00     	pea	#0
  3266 00:08E2: 18           	clc
  3267 00:08E3: 7B           	tdc
  3268 00:08E4: 69 09 00     	adc	#<L152+b_1
  3269 00:08E7: 48           	pha
  3270 00:08E8: 22 xx xx xx  	jsl	~~k_debug_string
  3271                        ;	k_debug_string(")");
  3272                        	.line	451
  3273 00:08EC: F4 xx xx     	pea	#^L146+2
  3274 00:08EF: F4 xx xx     	pea	#<L146+2
  3275 00:08F2: 22 xx xx xx  	jsl	~~k_debug_string
  3276                        ;	k_debug_string("\r\n");
  3277                        	.line	452
  3278 00:08F6: F4 xx xx     	pea	#^L146+4
  3279 00:08F9: F4 xx xx     	pea	#<L146+4
  3280 00:08FC: 22 xx xx xx  	jsl	~~k_debug_string
  3281                        ;
  3282                        ;	return;
  3283                        	.line	454
  3284                        L154:
  3285 00:0900: A5 0C        	lda	<L151+2
  3286 00:0902: 85 12        	sta	<L151+2+6
  3287 00:0904: A5 0B        	lda	<L151+1
  Thu Dec  3 2020 22:25                                                Page 61


  3288 00:0906: 85 11        	sta	<L151+1+6
  3289 00:0908: 2B           	pld
  3290 00:0909: 3B           	tsc
  3291 00:090A: 18           	clc
  3292 00:090B: 69 10 00     	adc	#L151+6
  3293 00:090E: 1B           	tcs
  3294 00:090F: 6B           	rtl
  3295                        ;}
  3296                        	.line	455
  3297                        	.endblock	455
  3298             0000000A   L151	equ	10
  3299             00000009   L152	equ	9
  3300                        	ends
  3301                        	efunc
  3302                        	.endfunc	455,9,10
  3303                        	.line	455
  3304                        	data
  3305                        L146:
  3306 00:0119: 28 00 29 00  	db	$28,$00,$29,$00,$0D,$0A,$00
       00:011D: 0D 0A 00 
  3307 00:0120:              	ends
  3308                        ;
  3309                        ;void k_debug_on(UCHAR n)
  3310                        ;{
  3311                        	.line	457
  3312                        	.line	458
  3313                        	code
  3314                        	xdef	~~k_debug_on
  3315                        	func
  3316                        	.function	458
  3317                        ~~k_debug_on:
  3318                        	longa	on
  3319                        	longi	on
  3320 00:0910: 3B           	tsc
  3321 00:0911: 38           	sec
  3322 00:0912: E9 00 00     	sbc	#L156
  3323 00:0915: 1B           	tcs
  3324 00:0916: 0B           	phd
  3325 00:0917: 5B           	tcd
  3326             00000004   n_0	set	4
  3327                        	.block	458
  3328                        ;	if(n == 0)
  3329                        	.sym	n,4,14,6,8
  3330                        	.line	459
  3331                        ;	{
  3332 00:0918: A5 04        	lda	<L156+n_0
  3333 00:091A: 29 FF 00     	and	#$ff
  3334 00:091D: F0 03        	beq	L159
  3335 00:091F: 82 0D 00     	brl	L10044
  3336                        L159:
  3337                        	.line	460
  3338                        ;		k_debug_string("0");
  3339                        	.line	461
  3340 00:0922: F4 xx xx     	pea	#^L155
  3341 00:0925: F4 xx xx     	pea	#<L155
  3342 00:0928: 22 xx xx xx  	jsl	~~k_debug_string
  3343                        ;	}
  3344                        	.line	462
  Thu Dec  3 2020 22:25                                                Page 62


  3345                        ;	else
  3346 00:092C: 82 0A 00     	brl	L10045
  3347                        L10044:
  3348                        ;	{
  3349                        	.line	464
  3350                        ;		k_debug_string("1");
  3351                        	.line	465
  3352 00:092F: F4 xx xx     	pea	#^L155+2
  3353 00:0932: F4 xx xx     	pea	#<L155+2
  3354 00:0935: 22 xx xx xx  	jsl	~~k_debug_string
  3355                        ;	}
  3356                        	.line	466
  3357                        L10045:
  3358                        ;}
  3359                        	.line	467
  3360                        L160:
  3361 00:0939: A5 02        	lda	<L156+2
  3362 00:093B: 85 04        	sta	<L156+2+2
  3363 00:093D: A5 01        	lda	<L156+1
  3364 00:093F: 85 03        	sta	<L156+1+2
  3365 00:0941: 2B           	pld
  3366 00:0942: 3B           	tsc
  3367 00:0943: 18           	clc
  3368 00:0944: 69 02 00     	adc	#L156+2
  3369 00:0947: 1B           	tcs
  3370 00:0948: 6B           	rtl
  3371                        	.endblock	467
  3372             00000000   L156	equ	0
  3373             00000001   L157	equ	1
  3374                        	ends
  3375                        	efunc
  3376                        	.endfunc	467,1,0
  3377                        	.line	467
  3378                        	data
  3379                        L155:
  3380 00:0120: 30 00 31 00  	db	$30,$00,$31,$00
  3381 00:0124:              	ends
  3382                        ;
  3383                        ;void k_debug_bits(PFAR debugString, UCHAR n)
  3384                        ;{
  3385                        	.line	469
  3386                        	.line	470
  3387                        	code
  3388                        	xdef	~~k_debug_bits
  3389                        	func
  3390                        	.function	470
  3391                        ~~k_debug_bits:
  3392                        	longa	on
  3393                        	longi	on
  3394 00:0949: 3B           	tsc
  3395 00:094A: 38           	sec
  3396 00:094B: E9 08 00     	sbc	#L162
  3397 00:094E: 1B           	tcs
  3398 00:094F: 0B           	phd
  3399 00:0950: 5B           	tcd
  3400             00000004   debugString_0	set	4
  3401             00000008   n_0	set	8
  3402                        	.block	470
  Thu Dec  3 2020 22:25                                                Page 63


  3403                        ;	PDEBUGBYTEBITS pbits = (PDEBUGBYTEBITS)&n;
  3404                        ;
  3405                        ;	k_debug_string(debugString);
  3406             00000000   pbits_1	set	0
  3407                        	.sym	pbits,0,138,1,32,61
  3408                        	.sym	debugString,4,142,6,32
  3409                        	.sym	n,8,14,6,8
  3410 00:0951: 18           	clc
  3411 00:0952: 7B           	tdc
  3412 00:0953: 69 10 00     	adc	#<L162+n_0
  3413 00:0956: 85 05        	sta	<L163+pbits_1
  3414 00:0958: A9 00 00     	lda	#$0
  3415 00:095B: 85 07        	sta	<L163+pbits_1+2
  3416                        	.line	473
  3417 00:095D: D4 0E        	pei	<L162+debugString_0+2
  3418 00:095F: D4 0C        	pei	<L162+debugString_0
  3419 00:0961: 22 xx xx xx  	jsl	~~k_debug_string
  3420                        ;
  3421                        ;
  3422                        ;	/*
  3423                        ;	k_debug_on(pbits->bit7);
  3424                        ;	k_debug_on(pbits->bit6);
  3425                        ;	k_debug_on(pbits->bit5);
  3426                        ;	k_debug_on(pbits->bit4);
  3427                        ;	k_debug_on(pbits->bit3);
  3428                        ;	k_debug_on(pbits->bit2);
  3429                        ;	k_debug_on(pbits->bit1);
  3430                        ;	k_debug_on(pbits->bit0);
  3431                        ;	*/
  3432                        ;
  3433                        ;	k_debug_on(pbits->bit0);
  3434                        	.line	487
  3435 00:0965: E2 20        	sep	#$20
  3436                        	longa	off
  3437 00:0967: A7 05        	lda	[<L163+pbits_1]
  3438 00:0969: 85 01        	sta	<R0
  3439 00:096B: C2 20        	rep	#$20
  3440                        	longa	on
  3441 00:096D: E2 20        	sep	#$20
  3442                        	longa	off
  3443 00:096F: 46 01        	lsr	<R0
  3444 00:0971: 46 01        	lsr	<R0
  3445 00:0973: 46 01        	lsr	<R0
  3446 00:0975: 46 01        	lsr	<R0
  3447 00:0977: 46 01        	lsr	<R0
  3448 00:0979: 46 01        	lsr	<R0
  3449 00:097B: 46 01        	lsr	<R0
  3450 00:097D: C2 20        	rep	#$20
  3451                        	longa	on
  3452 00:097F: D4 01        	pei	<R0
  3453 00:0981: 22 xx xx xx  	jsl	~~k_debug_on
  3454                        ;	k_debug_on(pbits->bit1);
  3455                        	.line	488
  3456 00:0985: E2 20        	sep	#$20
  3457                        	longa	off
  3458 00:0987: A7 05        	lda	[<L163+pbits_1]
  3459 00:0989: 85 01        	sta	<R0
  3460 00:098B: C2 20        	rep	#$20
  Thu Dec  3 2020 22:25                                                Page 64


  3461                        	longa	on
  3462 00:098D: E2 20        	sep	#$20
  3463                        	longa	off
  3464 00:098F: 46 01        	lsr	<R0
  3465 00:0991: 46 01        	lsr	<R0
  3466 00:0993: 46 01        	lsr	<R0
  3467 00:0995: 46 01        	lsr	<R0
  3468 00:0997: 46 01        	lsr	<R0
  3469 00:0999: 46 01        	lsr	<R0
  3470 00:099B: C2 20        	rep	#$20
  3471                        	longa	on
  3472 00:099D: E2 20        	sep	#$20
  3473                        	longa	off
  3474 00:099F: A5 01        	lda	<R0
  3475 00:09A1: 29 01        	and	#<$1
  3476 00:09A3: 85 01        	sta	<R0
  3477 00:09A5: C2 20        	rep	#$20
  3478                        	longa	on
  3479 00:09A7: D4 01        	pei	<R0
  3480 00:09A9: 22 xx xx xx  	jsl	~~k_debug_on
  3481                        ;	k_debug_on(pbits->bit2);
  3482                        	.line	489
  3483 00:09AD: E2 20        	sep	#$20
  3484                        	longa	off
  3485 00:09AF: A7 05        	lda	[<L163+pbits_1]
  3486 00:09B1: 85 01        	sta	<R0
  3487 00:09B3: C2 20        	rep	#$20
  3488                        	longa	on
  3489 00:09B5: E2 20        	sep	#$20
  3490                        	longa	off
  3491 00:09B7: 46 01        	lsr	<R0
  3492 00:09B9: 46 01        	lsr	<R0
  3493 00:09BB: 46 01        	lsr	<R0
  3494 00:09BD: 46 01        	lsr	<R0
  3495 00:09BF: 46 01        	lsr	<R0
  3496 00:09C1: C2 20        	rep	#$20
  3497                        	longa	on
  3498 00:09C3: E2 20        	sep	#$20
  3499                        	longa	off
  3500 00:09C5: A5 01        	lda	<R0
  3501 00:09C7: 29 01        	and	#<$1
  3502 00:09C9: 85 01        	sta	<R0
  3503 00:09CB: C2 20        	rep	#$20
  3504                        	longa	on
  3505 00:09CD: D4 01        	pei	<R0
  3506 00:09CF: 22 xx xx xx  	jsl	~~k_debug_on
  3507                        ;	k_debug_on(pbits->bit3);
  3508                        	.line	490
  3509 00:09D3: E2 20        	sep	#$20
  3510                        	longa	off
  3511 00:09D5: A7 05        	lda	[<L163+pbits_1]
  3512 00:09D7: 85 01        	sta	<R0
  3513 00:09D9: C2 20        	rep	#$20
  3514                        	longa	on
  3515 00:09DB: E2 20        	sep	#$20
  3516                        	longa	off
  3517 00:09DD: 46 01        	lsr	<R0
  3518 00:09DF: 46 01        	lsr	<R0
  Thu Dec  3 2020 22:25                                                Page 65


  3519 00:09E1: 46 01        	lsr	<R0
  3520 00:09E3: 46 01        	lsr	<R0
  3521 00:09E5: C2 20        	rep	#$20
  3522                        	longa	on
  3523 00:09E7: E2 20        	sep	#$20
  3524                        	longa	off
  3525 00:09E9: A5 01        	lda	<R0
  3526 00:09EB: 29 01        	and	#<$1
  3527 00:09ED: 85 01        	sta	<R0
  3528 00:09EF: C2 20        	rep	#$20
  3529                        	longa	on
  3530 00:09F1: D4 01        	pei	<R0
  3531 00:09F3: 22 xx xx xx  	jsl	~~k_debug_on
  3532                        ;	k_debug_on(pbits->bit4);
  3533                        	.line	491
  3534 00:09F7: E2 20        	sep	#$20
  3535                        	longa	off
  3536 00:09F9: A7 05        	lda	[<L163+pbits_1]
  3537 00:09FB: 85 01        	sta	<R0
  3538 00:09FD: C2 20        	rep	#$20
  3539                        	longa	on
  3540 00:09FF: E2 20        	sep	#$20
  3541                        	longa	off
  3542 00:0A01: 46 01        	lsr	<R0
  3543 00:0A03: 46 01        	lsr	<R0
  3544 00:0A05: 46 01        	lsr	<R0
  3545 00:0A07: C2 20        	rep	#$20
  3546                        	longa	on
  3547 00:0A09: E2 20        	sep	#$20
  3548                        	longa	off
  3549 00:0A0B: A5 01        	lda	<R0
  3550 00:0A0D: 29 01        	and	#<$1
  3551 00:0A0F: 85 01        	sta	<R0
  3552 00:0A11: C2 20        	rep	#$20
  3553                        	longa	on
  3554 00:0A13: D4 01        	pei	<R0
  3555 00:0A15: 22 xx xx xx  	jsl	~~k_debug_on
  3556                        ;	k_debug_on(pbits->bit5);
  3557                        	.line	492
  3558 00:0A19: E2 20        	sep	#$20
  3559                        	longa	off
  3560 00:0A1B: A7 05        	lda	[<L163+pbits_1]
  3561 00:0A1D: 85 01        	sta	<R0
  3562 00:0A1F: C2 20        	rep	#$20
  3563                        	longa	on
  3564 00:0A21: E2 20        	sep	#$20
  3565                        	longa	off
  3566 00:0A23: 46 01        	lsr	<R0
  3567 00:0A25: 46 01        	lsr	<R0
  3568 00:0A27: C2 20        	rep	#$20
  3569                        	longa	on
  3570 00:0A29: E2 20        	sep	#$20
  3571                        	longa	off
  3572 00:0A2B: A5 01        	lda	<R0
  3573 00:0A2D: 29 01        	and	#<$1
  3574 00:0A2F: 85 01        	sta	<R0
  3575 00:0A31: C2 20        	rep	#$20
  3576                        	longa	on
  Thu Dec  3 2020 22:25                                                Page 66


  3577 00:0A33: D4 01        	pei	<R0
  3578 00:0A35: 22 xx xx xx  	jsl	~~k_debug_on
  3579                        ;	k_debug_on(pbits->bit6);
  3580                        	.line	493
  3581 00:0A39: E2 20        	sep	#$20
  3582                        	longa	off
  3583 00:0A3B: A7 05        	lda	[<L163+pbits_1]
  3584 00:0A3D: 85 01        	sta	<R0
  3585 00:0A3F: C2 20        	rep	#$20
  3586                        	longa	on
  3587 00:0A41: E2 20        	sep	#$20
  3588                        	longa	off
  3589 00:0A43: 46 01        	lsr	<R0
  3590 00:0A45: C2 20        	rep	#$20
  3591                        	longa	on
  3592 00:0A47: E2 20        	sep	#$20
  3593                        	longa	off
  3594 00:0A49: A5 01        	lda	<R0
  3595 00:0A4B: 29 01        	and	#<$1
  3596 00:0A4D: 85 01        	sta	<R0
  3597 00:0A4F: C2 20        	rep	#$20
  3598                        	longa	on
  3599 00:0A51: D4 01        	pei	<R0
  3600 00:0A53: 22 xx xx xx  	jsl	~~k_debug_on
  3601                        ;	k_debug_on(pbits->bit7);
  3602                        	.line	494
  3603 00:0A57: E2 20        	sep	#$20
  3604                        	longa	off
  3605 00:0A59: A7 05        	lda	[<L163+pbits_1]
  3606 00:0A5B: 85 01        	sta	<R0
  3607 00:0A5D: C2 20        	rep	#$20
  3608                        	longa	on
  3609 00:0A5F: E2 20        	sep	#$20
  3610                        	longa	off
  3611 00:0A61: A5 01        	lda	<R0
  3612 00:0A63: 29 01        	and	#<$1
  3613 00:0A65: 85 01        	sta	<R0
  3614 00:0A67: C2 20        	rep	#$20
  3615                        	longa	on
  3616 00:0A69: D4 01        	pei	<R0
  3617 00:0A6B: 22 xx xx xx  	jsl	~~k_debug_on
  3618                        ;
  3619                        ;
  3620                        ;	/*
  3621                        ;	k_debug_string(k_bytetohex(pbits->bit7,k16buffer
                    ));
  3622                        ;	k_debug_string(k_bytetohex(pbits->bit6,k16buffer
                    ));
  3623                        ;	k_debug_string(k_bytetohex(pbits->bit5,k16buffer
                    ));
  3624                        ;	k_debug_string(k_bytetohex(pbits->bit4,k16buffer
                    ));
  3625                        ;	k_debug_string(k_bytetohex(pbits->bit3,k16buffer
                    ));
  3626                        ;	k_debug_string(k_bytetohex(pbits->bit2,k16buffer
                    ));
  3627                        ;	k_debug_string(k_bytetohex(pbits->bit1,k16buffer
                    ));
  Thu Dec  3 2020 22:25                                                Page 67


  3628                        ;	k_debug_string(k_bytetohex(pbits->bit0,k16buffer
                    ));
  3629                        ;	*/
  3630                        ;
  3631                        ;	k_debug_string("\r\n");
  3632                        	.line	508
  3633 00:0A6F: F4 xx xx     	pea	#^L161
  3634 00:0A72: F4 xx xx     	pea	#<L161
  3635 00:0A75: 22 xx xx xx  	jsl	~~k_debug_string
  3636                        ;}
  3637                        	.line	509
  3638                        L165:
  3639 00:0A79: A5 0A        	lda	<L162+2
  3640 00:0A7B: 85 10        	sta	<L162+2+6
  3641 00:0A7D: A5 09        	lda	<L162+1
  3642 00:0A7F: 85 0F        	sta	<L162+1+6
  3643 00:0A81: 2B           	pld
  3644 00:0A82: 3B           	tsc
  3645 00:0A83: 18           	clc
  3646 00:0A84: 69 0E 00     	adc	#L162+6
  3647 00:0A87: 1B           	tcs
  3648 00:0A88: 6B           	rtl
  3649                        	.endblock	509
  3650             00000008   L162	equ	8
  3651             00000005   L163	equ	5
  3652                        	ends
  3653                        	efunc
  3654                        	.endfunc	509,5,8
  3655                        	.line	509
  3656                        	data
  3657                        L161:
  3658 00:0124: 0D 0A 00     	db	$0D,$0A,$00
  3659 00:0127:              	ends
  3660                        ;
  3661                        ;void k_debug_byte_array(LPCHAR debugString,PBYTE 
                    n,ULONG size)
  3662                        ;{
  3663                        	.line	511
  3664                        	.line	512
  3665                        	code
  3666                        	xdef	~~k_debug_byte_array
  3667                        	func
  3668                        	.function	512
  3669                        ~~k_debug_byte_array:
  3670                        	longa	on
  3671                        	longi	on
  3672 00:0A89: 3B           	tsc
  3673 00:0A8A: 38           	sec
  3674 00:0A8B: E9 0C 00     	sbc	#L167
  3675 00:0A8E: 1B           	tcs
  3676 00:0A8F: 0B           	phd
  3677 00:0A90: 5B           	tcd
  3678             00000004   debugString_0	set	4
  3679             00000008   n_0	set	8
  3680             0000000C   size_0	set	12
  3681                        	.block	512
  3682                        ;	ULONG i = 0;
  3683                        ;	k_debug_string(debugString);
  Thu Dec  3 2020 22:25                                                Page 68


  3684             00000000   i_1	set	0
  3685                        	.sym	i,0,18,1,32
  3686                        	.sym	debugString,4,142,6,32
  3687                        	.sym	n,8,142,6,32
  3688                        	.sym	size,12,18,6,32
  3689 00:0A91: 64 09        	stz	<L168+i_1
  3690 00:0A93: 64 0B        	stz	<L168+i_1+2
  3691                        	.line	514
  3692 00:0A95: D4 12        	pei	<L167+debugString_0+2
  3693 00:0A97: D4 10        	pei	<L167+debugString_0
  3694 00:0A99: 22 xx xx xx  	jsl	~~k_debug_string
  3695                        ;
  3696                        ;	for(i=0;i<size;i++)
  3697                        	.line	516
  3698 00:0A9D: 64 09        	stz	<L168+i_1
  3699 00:0A9F: 64 0B        	stz	<L168+i_1+2
  3700 00:0AA1: 82 45 00     	brl	L10049
  3701                        L10048:
  3702                        ;	{
  3703                        	.line	517
  3704                        ;		if(i!=0)
  3705                        	.line	518
  3706                        ;			k_debug_string(" ");
  3707 00:0AA4: A5 09        	lda	<L168+i_1
  3708 00:0AA6: 05 0B        	ora	<L168+i_1+2
  3709 00:0AA8: D0 03        	bne	L170
  3710 00:0AAA: 82 0A 00     	brl	L10050
  3711                        L170:
  3712                        	.line	519
  3713 00:0AAD: F4 xx xx     	pea	#^L166
  3714 00:0AB0: F4 xx xx     	pea	#<L166
  3715 00:0AB3: 22 xx xx xx  	jsl	~~k_debug_string
  3716                        ;
  3717                        ;		k_debug_string(k_bytetohex(n[i],k16buffe
                    r));
  3718                        L10050:
  3719                        	.line	521
  3720 00:0AB7: A9 xx xx     	lda	#<~~k16buffer
  3721 00:0ABA: 85 01        	sta	<R0
  3722                        	xref	_BEG_DATA
  3723 00:0ABC: A9 xx xx     	lda	#_BEG_DATA>>16
  3724 00:0ABF: 85 03        	sta	<R0+2
  3725 00:0AC1: D4 03        	pei	<R0+2
  3726 00:0AC3: D4 01        	pei	<R0
  3727 00:0AC5: 18           	clc
  3728 00:0AC6: A5 14        	lda	<L167+n_0
  3729 00:0AC8: 65 09        	adc	<L168+i_1
  3730 00:0ACA: 85 05        	sta	<R1
  3731 00:0ACC: A5 16        	lda	<L167+n_0+2
  3732 00:0ACE: 65 0B        	adc	<L168+i_1+2
  3733 00:0AD0: 85 07        	sta	<R1+2
  3734 00:0AD2: A7 05        	lda	[<R1]
  3735 00:0AD4: 48           	pha
  3736 00:0AD5: 22 xx xx xx  	jsl	~~k_bytetohex
  3737 00:0AD9: 85 05        	sta	<R1
  3738 00:0ADB: 86 07        	stx	<R1+2
  3739 00:0ADD: DA           	phx
  3740 00:0ADE: 48           	pha
  Thu Dec  3 2020 22:25                                                Page 69


  3741 00:0ADF: 22 xx xx xx  	jsl	~~k_debug_string
  3742                        ;	}
  3743                        	.line	522
  3744                        L10046:
  3745 00:0AE3: E6 09        	inc	<L168+i_1
  3746 00:0AE5: D0 02        	bne	L171
  3747 00:0AE7: E6 0B        	inc	<L168+i_1+2
  3748                        L171:
  3749                        L10049:
  3750 00:0AE9: A5 09        	lda	<L168+i_1
  3751 00:0AEB: C5 18        	cmp	<L167+size_0
  3752 00:0AED: A5 0B        	lda	<L168+i_1+2
  3753 00:0AEF: E5 1A        	sbc	<L167+size_0+2
  3754 00:0AF1: B0 03        	bcs	L172
  3755 00:0AF3: 82 AE FF     	brl	L10048
  3756                        L172:
  3757                        L10047:
  3758                        ;
  3759                        ;	k_debug_string("\r\n");
  3760                        	.line	524
  3761 00:0AF6: F4 xx xx     	pea	#^L166+2
  3762 00:0AF9: F4 xx xx     	pea	#<L166+2
  3763 00:0AFC: 22 xx xx xx  	jsl	~~k_debug_string
  3764                        ;
  3765                        ;	return;
  3766                        	.line	526
  3767                        L173:
  3768 00:0B00: A5 0E        	lda	<L167+2
  3769 00:0B02: 85 1A        	sta	<L167+2+12
  3770 00:0B04: A5 0D        	lda	<L167+1
  3771 00:0B06: 85 19        	sta	<L167+1+12
  3772 00:0B08: 2B           	pld
  3773 00:0B09: 3B           	tsc
  3774 00:0B0A: 18           	clc
  3775 00:0B0B: 69 18 00     	adc	#L167+12
  3776 00:0B0E: 1B           	tcs
  3777 00:0B0F: 6B           	rtl
  3778                        ;}
  3779                        	.line	527
  3780                        	.endblock	527
  3781             0000000C   L167	equ	12
  3782             00000009   L168	equ	9
  3783                        	ends
  3784                        	efunc
  3785                        	.endfunc	527,9,12
  3786                        	.line	527
  3787                        	data
  3788                        L166:
  3789 00:0127: 20 00 0D 0A  	db	$20,$00,$0D,$0A,$00
       00:012B: 00 
  3790 00:012C:              	ends
  3791                        ;
  3792                        ;
  3793                        ;/**
  3794                        ; *
  3795                        ; *
  3796                        ; */
  3797                        ;void k_debug_node(PFXNODE node)
  Thu Dec  3 2020 22:25                                                Page 70


  3798                        ;{
  3799                        	.line	534
  3800                        	.line	535
  3801                        	code
  3802                        	xdef	~~k_debug_node
  3803                        	func
  3804                        	.function	535
  3805                        ~~k_debug_node:
  3806                        	longa	on
  3807                        	longi	on
  3808 00:0B10: 3B           	tsc
  3809 00:0B11: 38           	sec
  3810 00:0B12: E9 04 00     	sbc	#L175
  3811 00:0B15: 1B           	tcs
  3812 00:0B16: 0B           	phd
  3813 00:0B17: 5B           	tcd
  3814             00000004   node_0	set	4
  3815                        	.block	535
  3816                        ;	k_debug_pointer("     NODE:",node);
  3817                        	.sym	node,4,138,6,32,5
  3818                        	.line	536
  3819 00:0B18: D4 0A        	pei	<L175+node_0+2
  3820 00:0B1A: D4 08        	pei	<L175+node_0
  3821 00:0B1C: F4 xx xx     	pea	#^L174
  3822 00:0B1F: F4 xx xx     	pea	#<L174
  3823 00:0B22: 22 xx xx xx  	jsl	~~k_debug_pointer
  3824                        ;	if(node && node->name)
  3825                        	.line	537
  3826                        ;	{
  3827 00:0B26: A5 08        	lda	<L175+node_0
  3828 00:0B28: 05 0A        	ora	<L175+node_0+2
  3829 00:0B2A: D0 03        	bne	L178
  3830 00:0B2C: 82 74 00     	brl	L10051
  3831                        L178:
  3832 00:0B2F: 18           	clc
  3833 00:0B30: A9 0E 00     	lda	#$e
  3834 00:0B33: 65 08        	adc	<L175+node_0
  3835 00:0B35: 85 01        	sta	<R0
  3836 00:0B37: A9 00 00     	lda	#$0
  3837 00:0B3A: 65 0A        	adc	<L175+node_0+2
  3838 00:0B3C: 85 03        	sta	<R0+2
  3839 00:0B3E: A5 01        	lda	<R0
  3840 00:0B40: 05 03        	ora	<R0+2
  3841 00:0B42: D0 03        	bne	L179
  3842 00:0B44: 82 5C 00     	brl	L10051
  3843                        L179:
  3844                        	.line	538
  3845                        ;		node->name[31] = 0;
  3846                        	.line	539
  3847 00:0B47: E2 20        	sep	#$20
  3848                        	longa	off
  3849 00:0B49: A9 00        	lda	#$0
  3850 00:0B4B: A0 2D 00     	ldy	#$2d
  3851 00:0B4E: 97 08        	sta	[<L175+node_0],Y
  3852 00:0B50: C2 20        	rep	#$20
  3853                        	longa	on
  3854                        ;		k_debug_string("NODE NAME:");
  3855                        	.line	540
  Thu Dec  3 2020 22:25                                                Page 71


  3856 00:0B52: F4 xx xx     	pea	#^L174+11
  3857 00:0B55: F4 xx xx     	pea	#<L174+11
  3858 00:0B58: 22 xx xx xx  	jsl	~~k_debug_string
  3859                        ;		k_debug_string(node->name);
  3860                        	.line	541
  3861 00:0B5C: 18           	clc
  3862 00:0B5D: A9 0E 00     	lda	#$e
  3863 00:0B60: 65 08        	adc	<L175+node_0
  3864 00:0B62: 85 01        	sta	<R0
  3865 00:0B64: A9 00 00     	lda	#$0
  3866 00:0B67: 65 0A        	adc	<L175+node_0+2
  3867 00:0B69: 85 03        	sta	<R0+2
  3868 00:0B6B: D4 03        	pei	<R0+2
  3869 00:0B6D: D4 01        	pei	<R0
  3870 00:0B6F: 22 xx xx xx  	jsl	~~k_debug_string
  3871                        ;		k_debug_string("\r\n");
  3872                        	.line	542
  3873 00:0B73: F4 xx xx     	pea	#^L174+22
  3874 00:0B76: F4 xx xx     	pea	#<L174+22
  3875 00:0B79: 22 xx xx xx  	jsl	~~k_debug_string
  3876                        ;
  3877                        ;		k_debug_integer("     TYPE:",node->type)
                    ;
  3878                        	.line	544
  3879 00:0B7D: A7 08        	lda	[<L175+node_0]
  3880 00:0B7F: 29 FF 00     	and	#$ff
  3881 00:0B82: 48           	pha
  3882 00:0B83: F4 xx xx     	pea	#^L174+25
  3883 00:0B86: F4 xx xx     	pea	#<L174+25
  3884 00:0B89: 22 xx xx xx  	jsl	~~k_debug_integer
  3885                        ;		k_debug_pointer("  POINTER:",node->data)
                    ;
  3886                        	.line	545
  3887 00:0B8D: A0 04 00     	ldy	#$4
  3888 00:0B90: B7 08        	lda	[<L175+node_0],Y
  3889 00:0B92: 48           	pha
  3890 00:0B93: A0 02 00     	ldy	#$2
  3891 00:0B96: B7 08        	lda	[<L175+node_0],Y
  3892 00:0B98: 48           	pha
  3893 00:0B99: F4 xx xx     	pea	#^L174+36
  3894 00:0B9C: F4 xx xx     	pea	#<L174+36
  3895 00:0B9F: 22 xx xx xx  	jsl	~~k_debug_pointer
  3896                        ;
  3897                        ;	}
  3898                        	.line	547
  3899                        ;}
  3900                        L10051:
  3901                        	.line	548
  3902                        L180:
  3903 00:0BA3: A5 06        	lda	<L175+2
  3904 00:0BA5: 85 0A        	sta	<L175+2+4
  3905 00:0BA7: A5 05        	lda	<L175+1
  3906 00:0BA9: 85 09        	sta	<L175+1+4
  3907 00:0BAB: 2B           	pld
  3908 00:0BAC: 3B           	tsc
  3909 00:0BAD: 18           	clc
  3910 00:0BAE: 69 08 00     	adc	#L175+4
  3911 00:0BB1: 1B           	tcs
  Thu Dec  3 2020 22:25                                                Page 72


  3912 00:0BB2: 6B           	rtl
  3913                        	.endblock	548
  3914             00000004   L175	equ	4
  3915             00000005   L176	equ	5
  3916                        	ends
  3917                        	efunc
  3918                        	.endfunc	548,5,4
  3919                        	.line	548
  3920                        	data
  3921                        L174:
  3922 00:012C: 20 20 20 20  	db	$20,$20,$20,$20,$20,$4E,$4F,$44,$45,$3A,
                    $00,$4E,$4F,$44,$45
       00:0130: 20 4E 4F 44 
       00:0134: 45 3A 00 4E 
       00:0138: 4F 44 45 
  3923 00:013B: 20 4E 41 4D  	db	$20,$4E,$41,$4D,$45,$3A,$00,$0D,$0A,$00,
                    $20,$20,$20,$20,$20
       00:013F: 45 3A 00 0D 
       00:0143: 0A 00 20 20 
       00:0147: 20 20 20 
  3924 00:014A: 54 59 50 45  	db	$54,$59,$50,$45,$3A,$00,$20,$20,$50,$4F,
                    $49,$4E,$54,$45,$52
       00:014E: 3A 00 20 20 
       00:0152: 50 4F 49 4E 
       00:0156: 54 45 52 
  3925 00:0159: 3A 00        	db	$3A,$00
  3926 00:015B:              	ends
  3927                        ;/**
  3928                        ; *
  3929                        ; *
  3930                        ; */
  3931                        ;void k_debug_nodelist(PFXNODE head)
  3932                        ;{
  3933                        	.line	553
  3934                        	.line	554
  3935                        	code
  3936                        	xdef	~~k_debug_nodelist
  3937                        	func
  3938                        	.function	554
  3939                        ~~k_debug_nodelist:
  3940                        	longa	on
  3941                        	longi	on
  3942 00:0BB3: 3B           	tsc
  3943 00:0BB4: 38           	sec
  3944 00:0BB5: E9 08 00     	sbc	#L182
  3945 00:0BB8: 1B           	tcs
  3946 00:0BB9: 0B           	phd
  3947 00:0BBA: 5B           	tcd
  3948             00000004   head_0	set	4
  3949                        	.block	554
  3950                        ;	PFXNODE ptr = head;
  3951                        ;	while(ptr!=NULL)
  3952             00000000   ptr_1	set	0
  3953                        	.sym	ptr,0,138,1,32,5
  3954                        	.sym	head,4,138,6,32,5
  3955 00:0BBB: A5 0C        	lda	<L182+head_0
  3956 00:0BBD: 85 05        	sta	<L183+ptr_1
  3957 00:0BBF: A5 0E        	lda	<L182+head_0+2
  Thu Dec  3 2020 22:25                                                Page 73


  3958 00:0BC1: 85 07        	sta	<L183+ptr_1+2
  3959                        	.line	556
  3960                        L10052:
  3961 00:0BC3: A5 05        	lda	<L183+ptr_1
  3962 00:0BC5: 05 07        	ora	<L183+ptr_1+2
  3963 00:0BC7: D0 03        	bne	L185
  3964 00:0BC9: 82 21 00     	brl	L10053
  3965                        L185:
  3966                        ;	{
  3967                        	.line	557
  3968                        ;		k_debug_node(ptr);
  3969                        	.line	558
  3970 00:0BCC: D4 07        	pei	<L183+ptr_1+2
  3971 00:0BCE: D4 05        	pei	<L183+ptr_1
  3972 00:0BD0: 22 xx xx xx  	jsl	~~k_debug_node
  3973                        ;		ptr = ptr->next;
  3974                        	.line	559
  3975 00:0BD4: A0 0A 00     	ldy	#$a
  3976 00:0BD7: B7 05        	lda	[<L183+ptr_1],Y
  3977 00:0BD9: 85 01        	sta	<R0
  3978 00:0BDB: A0 0C 00     	ldy	#$c
  3979 00:0BDE: B7 05        	lda	[<L183+ptr_1],Y
  3980 00:0BE0: 85 03        	sta	<R0+2
  3981 00:0BE2: A5 01        	lda	<R0
  3982 00:0BE4: 85 05        	sta	<L183+ptr_1
  3983 00:0BE6: A5 03        	lda	<R0+2
  3984 00:0BE8: 85 07        	sta	<L183+ptr_1+2
  3985                        ;	}
  3986                        	.line	560
  3987 00:0BEA: 82 D6 FF     	brl	L10052
  3988                        L10053:
  3989                        ;}
  3990                        	.line	561
  3991                        L186:
  3992 00:0BED: A5 0A        	lda	<L182+2
  3993 00:0BEF: 85 0E        	sta	<L182+2+4
  3994 00:0BF1: A5 09        	lda	<L182+1
  3995 00:0BF3: 85 0D        	sta	<L182+1+4
  3996 00:0BF5: 2B           	pld
  3997 00:0BF6: 3B           	tsc
  3998 00:0BF7: 18           	clc
  3999 00:0BF8: 69 0C 00     	adc	#L182+4
  4000 00:0BFB: 1B           	tcs
  4001 00:0BFC: 6B           	rtl
  4002                        	.endblock	561
  4003             00000008   L182	equ	8
  4004             00000005   L183	equ	5
  4005                        	ends
  4006                        	efunc
  4007                        	.endfunc	561,5,8
  4008                        	.line	561
  4009                        ;
  4010                        ;/**
  4011                        ; *
  4012                        ; *
  4013                        ; */
  4014                        ;void k_debug_nodelist_list(PFXNODELIST list,FOREA
                    CHNODE handler)
  Thu Dec  3 2020 22:25                                                Page 74


  4015                        ;{
  4016                        	.line	567
  4017                        	.line	568
  4018                        	code
  4019                        	xdef	~~k_debug_nodelist_list
  4020                        	func
  4021                        	.function	568
  4022                        ~~k_debug_nodelist_list:
  4023                        	longa	on
  4024                        	longi	on
  4025 00:0BFD: 3B           	tsc
  4026 00:0BFE: 38           	sec
  4027 00:0BFF: E9 08 00     	sbc	#L187
  4028 00:0C02: 1B           	tcs
  4029 00:0C03: 0B           	phd
  4030 00:0C04: 5B           	tcd
  4031             00000004   list_0	set	4
  4032             00000008   handler_0	set	8
  4033                        	.block	568
  4034                        ;	PFXNODE ptr = list->listhead->next;
  4035                        ;
  4036                        ;	k_debug_strings("NODELIST:",(LPCHAR)list->listhe
                    ad->data);
  4037             00000000   ptr_1	set	0
  4038                        	.sym	ptr,0,138,1,32,5
  4039                        	.sym	list,4,138,6,32,6
  4040                        	.sym	handler,8,641,6,32
  4041 00:0C05: A7 0C        	lda	[<L187+list_0]
  4042 00:0C07: 85 01        	sta	<R0
  4043 00:0C09: A0 02 00     	ldy	#$2
  4044 00:0C0C: B7 0C        	lda	[<L187+list_0],Y
  4045 00:0C0E: 85 03        	sta	<R0+2
  4046 00:0C10: A0 0A 00     	ldy	#$a
  4047 00:0C13: B7 01        	lda	[<R0],Y
  4048 00:0C15: 85 05        	sta	<L188+ptr_1
  4049 00:0C17: A0 0C 00     	ldy	#$c
  4050 00:0C1A: B7 01        	lda	[<R0],Y
  4051 00:0C1C: 85 07        	sta	<L188+ptr_1+2
  4052                        	.line	571
  4053 00:0C1E: A7 0C        	lda	[<L187+list_0]
  4054 00:0C20: 85 01        	sta	<R0
  4055 00:0C22: A0 02 00     	ldy	#$2
  4056 00:0C25: B7 0C        	lda	[<L187+list_0],Y
  4057 00:0C27: 85 03        	sta	<R0+2
  4058 00:0C29: A0 04 00     	ldy	#$4
  4059 00:0C2C: B7 01        	lda	[<R0],Y
  4060 00:0C2E: 48           	pha
  4061 00:0C2F: A0 02 00     	ldy	#$2
  4062 00:0C32: B7 01        	lda	[<R0],Y
  4063 00:0C34: 48           	pha
  4064 00:0C35: F4 xx xx     	pea	#^L181
  4065 00:0C38: F4 xx xx     	pea	#<L181
  4066 00:0C3B: 22 xx xx xx  	jsl	~~k_debug_strings
  4067                        ;
  4068                        ;	k_debug_nodelist_with_data(list->listhead->next,
                    handler);
  4069                        	.line	573
  4070 00:0C3F: D4 12        	pei	<L187+handler_0+2
  Thu Dec  3 2020 22:25                                                Page 75


  4071 00:0C41: D4 10        	pei	<L187+handler_0
  4072 00:0C43: A7 0C        	lda	[<L187+list_0]
  4073 00:0C45: 85 01        	sta	<R0
  4074 00:0C47: A0 02 00     	ldy	#$2
  4075 00:0C4A: B7 0C        	lda	[<L187+list_0],Y
  4076 00:0C4C: 85 03        	sta	<R0+2
  4077 00:0C4E: A0 0C 00     	ldy	#$c
  4078 00:0C51: B7 01        	lda	[<R0],Y
  4079 00:0C53: 48           	pha
  4080 00:0C54: A0 0A 00     	ldy	#$a
  4081 00:0C57: B7 01        	lda	[<R0],Y
  4082 00:0C59: 48           	pha
  4083 00:0C5A: 22 xx xx xx  	jsl	~~k_debug_nodelist_with_data
  4084                        ;}
  4085                        	.line	574
  4086                        L190:
  4087 00:0C5E: A5 0A        	lda	<L187+2
  4088 00:0C60: 85 12        	sta	<L187+2+8
  4089 00:0C62: A5 09        	lda	<L187+1
  4090 00:0C64: 85 11        	sta	<L187+1+8
  4091 00:0C66: 2B           	pld
  4092 00:0C67: 3B           	tsc
  4093 00:0C68: 18           	clc
  4094 00:0C69: 69 10 00     	adc	#L187+8
  4095 00:0C6C: 1B           	tcs
  4096 00:0C6D: 6B           	rtl
  4097                        	.endblock	574
  4098             00000008   L187	equ	8
  4099             00000005   L188	equ	5
  4100                        	ends
  4101                        	efunc
  4102                        	.endfunc	574,5,8
  4103                        	.line	574
  4104                        	data
  4105                        L181:
  4106 00:015B: 4E 4F 44 45  	db	$4E,$4F,$44,$45,$4C,$49,$53,$54,$3A,$00
       00:015F: 4C 49 53 54 
       00:0163: 3A 00 
  4107 00:0165:              	ends
  4108                        ;
  4109                        ;
  4110                        ;void k_debug_nodelist_with_data(PFXNODE head,FORE
                    ACHNODE handler)
  4111                        ;{
  4112                        	.line	577
  4113                        	.line	578
  4114                        	code
  4115                        	xdef	~~k_debug_nodelist_with_data
  4116                        	func
  4117                        	.function	578
  4118                        ~~k_debug_nodelist_with_data:
  4119                        	longa	on
  4120                        	longi	on
  4121 00:0C6E: 3B           	tsc
  4122 00:0C6F: 38           	sec
  4123 00:0C70: E9 08 00     	sbc	#L192
  4124 00:0C73: 1B           	tcs
  4125 00:0C74: 0B           	phd
  Thu Dec  3 2020 22:25                                                Page 76


  4126 00:0C75: 5B           	tcd
  4127             00000004   head_0	set	4
  4128             00000008   handler_0	set	8
  4129                        	.block	578
  4130                        ;	PFXNODE ptr = head;
  4131                        ;	while(ptr!=NULL)
  4132             00000000   ptr_1	set	0
  4133                        	.sym	ptr,0,138,1,32,5
  4134                        	.sym	head,4,138,6,32,5
  4135                        	.sym	handler,8,641,6,32
  4136 00:0C76: A5 0C        	lda	<L192+head_0
  4137 00:0C78: 85 05        	sta	<L193+ptr_1
  4138 00:0C7A: A5 0E        	lda	<L192+head_0+2
  4139 00:0C7C: 85 07        	sta	<L193+ptr_1+2
  4140                        	.line	580
  4141                        L10054:
  4142 00:0C7E: A5 05        	lda	<L193+ptr_1
  4143 00:0C80: 05 07        	ora	<L193+ptr_1+2
  4144 00:0C82: D0 03        	bne	L195
  4145 00:0C84: 82 44 00     	brl	L10055
  4146                        L195:
  4147                        ;	{
  4148                        	.line	581
  4149                        ;		k_debug_node(ptr);
  4150                        	.line	582
  4151 00:0C87: D4 07        	pei	<L193+ptr_1+2
  4152 00:0C89: D4 05        	pei	<L193+ptr_1
  4153 00:0C8B: 22 xx xx xx  	jsl	~~k_debug_node
  4154                        ;		if(handler)
  4155                        	.line	583
  4156                        ;			handler(NULL,ptr->data);
  4157 00:0C8F: A5 10        	lda	<L192+handler_0
  4158 00:0C91: 05 12        	ora	<L192+handler_0+2
  4159 00:0C93: D0 03        	bne	L196
  4160 00:0C95: 82 1A 00     	brl	L10056
  4161                        L196:
  4162                        	.line	584
  4163 00:0C98: A0 04 00     	ldy	#$4
  4164 00:0C9B: B7 05        	lda	[<L193+ptr_1],Y
  4165 00:0C9D: 48           	pha
  4166 00:0C9E: A0 02 00     	ldy	#$2
  4167 00:0CA1: B7 05        	lda	[<L193+ptr_1],Y
  4168 00:0CA3: 48           	pha
  4169 00:0CA4: F4 00 00     	pea	#^$0
  4170 00:0CA7: F4 00 00     	pea	#<$0
  4171 00:0CAA: A6 12        	ldx	<L192+handler_0+2
  4172 00:0CAC: A5 10        	lda	<L192+handler_0
  4173                        	xref	~~~lcal
  4174 00:0CAE: 22 xx xx xx  	jsl	~~~lcal
  4175                        ;		ptr = ptr->next;
  4176                        L10056:
  4177                        	.line	585
  4178 00:0CB2: A0 0A 00     	ldy	#$a
  4179 00:0CB5: B7 05        	lda	[<L193+ptr_1],Y
  4180 00:0CB7: 85 01        	sta	<R0
  4181 00:0CB9: A0 0C 00     	ldy	#$c
  4182 00:0CBC: B7 05        	lda	[<L193+ptr_1],Y
  4183 00:0CBE: 85 03        	sta	<R0+2
  Thu Dec  3 2020 22:25                                                Page 77


  4184 00:0CC0: A5 01        	lda	<R0
  4185 00:0CC2: 85 05        	sta	<L193+ptr_1
  4186 00:0CC4: A5 03        	lda	<R0+2
  4187 00:0CC6: 85 07        	sta	<L193+ptr_1+2
  4188                        ;	}
  4189                        	.line	586
  4190 00:0CC8: 82 B3 FF     	brl	L10054
  4191                        L10055:
  4192                        ;}
  4193                        	.line	587
  4194                        L197:
  4195 00:0CCB: A5 0A        	lda	<L192+2
  4196 00:0CCD: 85 12        	sta	<L192+2+8
  4197 00:0CCF: A5 09        	lda	<L192+1
  4198 00:0CD1: 85 11        	sta	<L192+1+8
  4199 00:0CD3: 2B           	pld
  4200 00:0CD4: 3B           	tsc
  4201 00:0CD5: 18           	clc
  4202 00:0CD6: 69 10 00     	adc	#L192+8
  4203 00:0CD9: 1B           	tcs
  4204 00:0CDA: 6B           	rtl
  4205                        	.endblock	587
  4206             00000008   L192	equ	8
  4207             00000005   L193	equ	5
  4208                        	ends
  4209                        	efunc
  4210                        	.endfunc	587,5,8
  4211                        	.line	587
  4212                        ;/*
  4213                        ; *
  4214                        ; *
  4215                        ; *
  4216                        ; */
  4217                        ;void k_debug_crlf(void)
  4218                        ;{
  4219                        	.line	593
  4220                        	.line	594
  4221                        	code
  4222                        	xdef	~~k_debug_crlf
  4223                        	func
  4224                        	.function	594
  4225                        ~~k_debug_crlf:
  4226                        	longa	on
  4227                        	longi	on
  4228 00:0CDB: 3B           	tsc
  4229 00:0CDC: 38           	sec
  4230 00:0CDD: E9 00 00     	sbc	#L198
  4231 00:0CE0: 1B           	tcs
  4232 00:0CE1: 0B           	phd
  4233 00:0CE2: 5B           	tcd
  4234                        	.block	594
  4235                        ;	k_debug_string("\r\n");
  4236                        	.line	595
  4237 00:0CE3: F4 xx xx     	pea	#^L191
  4238 00:0CE6: F4 xx xx     	pea	#<L191
  4239 00:0CE9: 22 xx xx xx  	jsl	~~k_debug_string
  4240                        ;}
  4241                        	.line	596
  Thu Dec  3 2020 22:25                                                Page 78


  4242                        L201:
  4243 00:0CED: 2B           	pld
  4244 00:0CEE: 3B           	tsc
  4245 00:0CEF: 18           	clc
  4246 00:0CF0: 69 00 00     	adc	#L198
  4247 00:0CF3: 1B           	tcs
  4248 00:0CF4: 6B           	rtl
  4249                        	.endblock	596
  4250             00000000   L198	equ	0
  4251             00000001   L199	equ	1
  4252                        	ends
  4253                        	efunc
  4254                        	.endfunc	596,1,0
  4255                        	.line	596
  4256                        	data
  4257                        L191:
  4258 00:0165: 0D 0A 00     	db	$0D,$0A,$00
  4259 00:0168:              	ends
  4260                        ;
  4261                        ;void k_debug_uart_status_com1(int lc)
  4262                        ;{
  4263                        	.line	598
  4264                        	.line	599
  4265                        	code
  4266                        	xdef	~~k_debug_uart_status_com1
  4267                        	func
  4268                        	.function	599
  4269                        ~~k_debug_uart_status_com1:
  4270                        	longa	on
  4271                        	longi	on
  4272 00:0CF5: 3B           	tsc
  4273 00:0CF6: 38           	sec
  4274 00:0CF7: E9 09 00     	sbc	#L203
  4275 00:0CFA: 1B           	tcs
  4276 00:0CFB: 0B           	phd
  4277 00:0CFC: 5B           	tcd
  4278             00000004   lc_0	set	4
  4279                        	.block	599
  4280                        ;	char uartbuffer[3];
  4281                        ;	int lcp = 0;
  4282                        ;
  4283                        ;	//lcp = k_put_string(lcp,lc,"XX",15,0);
  4284                        ;	//k_put_char(lcp,lc,'-',15,0);lcp++;
  4285                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_DLH],uartbuffer),15,0);
  4286             00000000   uartbuffer_1	set	0
  4287             00000003   lcp_1	set	3
  4288                        	.sym	uartbuffer,0,110,1,0,3
  4289                        	.sym	lcp,3,5,1,16
  4290                        	.sym	lc,4,5,6,16
  4291 00:0CFD: 64 08        	stz	<L204+lcp_1
  4292                        	.line	605
  4293 00:0CFF: F4 00 00     	pea	#<$0
  4294 00:0D02: F4 0F 00     	pea	#<$f
  4295 00:0D05: F4 00 00     	pea	#0
  4296 00:0D08: 18           	clc
  4297 00:0D09: 7B           	tdc
  4298 00:0D0A: 69 05 00     	adc	#<L204+uartbuffer_1
  Thu Dec  3 2020 22:25                                                Page 79


  4299 00:0D0D: 48           	pha
  4300 00:0D0E: AF F9 13 AF  	lda	>11473913
  4301 00:0D12: 48           	pha
  4302 00:0D13: 22 xx xx xx  	jsl	~~k_bytetohex
  4303 00:0D17: 85 01        	sta	<R0
  4304 00:0D19: 86 03        	stx	<R0+2
  4305 00:0D1B: DA           	phx
  4306 00:0D1C: 48           	pha
  4307 00:0D1D: D4 0D        	pei	<L203+lc_0
  4308 00:0D1F: D4 08        	pei	<L204+lcp_1
  4309 00:0D21: 22 xx xx xx  	jsl	~~k_put_string
  4310 00:0D25: 85 08        	sta	<L204+lcp_1
  4311                        ;
  4312                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4313                        	.line	607
  4314 00:0D27: F4 00 00     	pea	#<$0
  4315 00:0D2A: F4 0F 00     	pea	#<$f
  4316 00:0D2D: F4 2D 00     	pea	#<$2d
  4317 00:0D30: D4 0D        	pei	<L203+lc_0
  4318 00:0D32: D4 08        	pei	<L204+lcp_1
  4319 00:0D34: 22 xx xx xx  	jsl	~~k_put_char
  4320                        	.line	607
  4321 00:0D38: E6 08        	inc	<L204+lcp_1
  4322                        ;
  4323                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_FCR],uartbuffer),15,0);
  4324                        	.line	609
  4325 00:0D3A: F4 00 00     	pea	#<$0
  4326 00:0D3D: F4 0F 00     	pea	#<$f
  4327 00:0D40: F4 00 00     	pea	#0
  4328 00:0D43: 18           	clc
  4329 00:0D44: 7B           	tdc
  4330 00:0D45: 69 05 00     	adc	#<L204+uartbuffer_1
  4331 00:0D48: 48           	pha
  4332 00:0D49: AF FA 13 AF  	lda	>11473914
  4333 00:0D4D: 48           	pha
  4334 00:0D4E: 22 xx xx xx  	jsl	~~k_bytetohex
  4335 00:0D52: 85 01        	sta	<R0
  4336 00:0D54: 86 03        	stx	<R0+2
  4337 00:0D56: DA           	phx
  4338 00:0D57: 48           	pha
  4339 00:0D58: D4 0D        	pei	<L203+lc_0
  4340 00:0D5A: D4 08        	pei	<L204+lcp_1
  4341 00:0D5C: 22 xx xx xx  	jsl	~~k_put_string
  4342 00:0D60: 85 08        	sta	<L204+lcp_1
  4343                        ;
  4344                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4345                        	.line	611
  4346 00:0D62: F4 00 00     	pea	#<$0
  4347 00:0D65: F4 0F 00     	pea	#<$f
  4348 00:0D68: F4 2D 00     	pea	#<$2d
  4349 00:0D6B: D4 0D        	pei	<L203+lc_0
  4350 00:0D6D: D4 08        	pei	<L204+lcp_1
  4351 00:0D6F: 22 xx xx xx  	jsl	~~k_put_char
  4352                        	.line	611
  4353 00:0D73: E6 08        	inc	<L204+lcp_1
  4354                        ;
  4355                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
  Thu Dec  3 2020 22:25                                                Page 80


                    [UART_DLH],uartbuffer),15,0);
  4356                        	.line	613
  4357 00:0D75: F4 00 00     	pea	#<$0
  4358 00:0D78: F4 0F 00     	pea	#<$f
  4359 00:0D7B: F4 00 00     	pea	#0
  4360 00:0D7E: 18           	clc
  4361 00:0D7F: 7B           	tdc
  4362 00:0D80: 69 05 00     	adc	#<L204+uartbuffer_1
  4363 00:0D83: 48           	pha
  4364 00:0D84: AF F9 13 AF  	lda	>11473913
  4365 00:0D88: 48           	pha
  4366 00:0D89: 22 xx xx xx  	jsl	~~k_bytetohex
  4367 00:0D8D: 85 01        	sta	<R0
  4368 00:0D8F: 86 03        	stx	<R0+2
  4369 00:0D91: DA           	phx
  4370 00:0D92: 48           	pha
  4371 00:0D93: D4 0D        	pei	<L203+lc_0
  4372 00:0D95: D4 08        	pei	<L204+lcp_1
  4373 00:0D97: 22 xx xx xx  	jsl	~~k_put_string
  4374 00:0D9B: 85 08        	sta	<L204+lcp_1
  4375                        ;
  4376                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4377                        	.line	615
  4378 00:0D9D: F4 00 00     	pea	#<$0
  4379 00:0DA0: F4 0F 00     	pea	#<$f
  4380 00:0DA3: F4 2D 00     	pea	#<$2d
  4381 00:0DA6: D4 0D        	pei	<L203+lc_0
  4382 00:0DA8: D4 08        	pei	<L204+lcp_1
  4383 00:0DAA: 22 xx xx xx  	jsl	~~k_put_char
  4384                        	.line	615
  4385 00:0DAE: E6 08        	inc	<L204+lcp_1
  4386                        ;
  4387                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_LCR],uartbuffer),15,0);
  4388                        	.line	617
  4389 00:0DB0: F4 00 00     	pea	#<$0
  4390 00:0DB3: F4 0F 00     	pea	#<$f
  4391 00:0DB6: F4 00 00     	pea	#0
  4392 00:0DB9: 18           	clc
  4393 00:0DBA: 7B           	tdc
  4394 00:0DBB: 69 05 00     	adc	#<L204+uartbuffer_1
  4395 00:0DBE: 48           	pha
  4396 00:0DBF: AF FB 13 AF  	lda	>11473915
  4397 00:0DC3: 48           	pha
  4398 00:0DC4: 22 xx xx xx  	jsl	~~k_bytetohex
  4399 00:0DC8: 85 01        	sta	<R0
  4400 00:0DCA: 86 03        	stx	<R0+2
  4401 00:0DCC: DA           	phx
  4402 00:0DCD: 48           	pha
  4403 00:0DCE: D4 0D        	pei	<L203+lc_0
  4404 00:0DD0: D4 08        	pei	<L204+lcp_1
  4405 00:0DD2: 22 xx xx xx  	jsl	~~k_put_string
  4406 00:0DD6: 85 08        	sta	<L204+lcp_1
  4407                        ;
  4408                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4409                        	.line	619
  4410 00:0DD8: F4 00 00     	pea	#<$0
  4411 00:0DDB: F4 0F 00     	pea	#<$f
  Thu Dec  3 2020 22:25                                                Page 81


  4412 00:0DDE: F4 2D 00     	pea	#<$2d
  4413 00:0DE1: D4 0D        	pei	<L203+lc_0
  4414 00:0DE3: D4 08        	pei	<L204+lcp_1
  4415 00:0DE5: 22 xx xx xx  	jsl	~~k_put_char
  4416                        	.line	619
  4417 00:0DE9: E6 08        	inc	<L204+lcp_1
  4418                        ;
  4419                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_MCR],uartbuffer),15,0);
  4420                        	.line	621
  4421 00:0DEB: F4 00 00     	pea	#<$0
  4422 00:0DEE: F4 0F 00     	pea	#<$f
  4423 00:0DF1: F4 00 00     	pea	#0
  4424 00:0DF4: 18           	clc
  4425 00:0DF5: 7B           	tdc
  4426 00:0DF6: 69 05 00     	adc	#<L204+uartbuffer_1
  4427 00:0DF9: 48           	pha
  4428 00:0DFA: AF FC 13 AF  	lda	>11473916
  4429 00:0DFE: 48           	pha
  4430 00:0DFF: 22 xx xx xx  	jsl	~~k_bytetohex
  4431 00:0E03: 85 01        	sta	<R0
  4432 00:0E05: 86 03        	stx	<R0+2
  4433 00:0E07: DA           	phx
  4434 00:0E08: 48           	pha
  4435 00:0E09: D4 0D        	pei	<L203+lc_0
  4436 00:0E0B: D4 08        	pei	<L204+lcp_1
  4437 00:0E0D: 22 xx xx xx  	jsl	~~k_put_string
  4438 00:0E11: 85 08        	sta	<L204+lcp_1
  4439                        ;
  4440                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4441                        	.line	623
  4442 00:0E13: F4 00 00     	pea	#<$0
  4443 00:0E16: F4 0F 00     	pea	#<$f
  4444 00:0E19: F4 2D 00     	pea	#<$2d
  4445 00:0E1C: D4 0D        	pei	<L203+lc_0
  4446 00:0E1E: D4 08        	pei	<L204+lcp_1
  4447 00:0E20: 22 xx xx xx  	jsl	~~k_put_char
  4448                        	.line	623
  4449 00:0E24: E6 08        	inc	<L204+lcp_1
  4450                        ;
  4451                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART1_BASE
                    [UART_MSR],uartbuffer),15,0);
  4452                        	.line	625
  4453 00:0E26: F4 00 00     	pea	#<$0
  4454 00:0E29: F4 0F 00     	pea	#<$f
  4455 00:0E2C: F4 00 00     	pea	#0
  4456 00:0E2F: 18           	clc
  4457 00:0E30: 7B           	tdc
  4458 00:0E31: 69 05 00     	adc	#<L204+uartbuffer_1
  4459 00:0E34: 48           	pha
  4460 00:0E35: AF FE 13 AF  	lda	>11473918
  4461 00:0E39: 48           	pha
  4462 00:0E3A: 22 xx xx xx  	jsl	~~k_bytetohex
  4463 00:0E3E: 85 01        	sta	<R0
  4464 00:0E40: 86 03        	stx	<R0+2
  4465 00:0E42: DA           	phx
  4466 00:0E43: 48           	pha
  4467 00:0E44: D4 0D        	pei	<L203+lc_0
  Thu Dec  3 2020 22:25                                                Page 82


  4468 00:0E46: D4 08        	pei	<L204+lcp_1
  4469 00:0E48: 22 xx xx xx  	jsl	~~k_put_string
  4470 00:0E4C: 85 08        	sta	<L204+lcp_1
  4471                        ;}
  4472                        	.line	626
  4473                        L206:
  4474 00:0E4E: A5 0B        	lda	<L203+2
  4475 00:0E50: 85 0D        	sta	<L203+2+2
  4476 00:0E52: A5 0A        	lda	<L203+1
  4477 00:0E54: 85 0C        	sta	<L203+1+2
  4478 00:0E56: 2B           	pld
  4479 00:0E57: 3B           	tsc
  4480 00:0E58: 18           	clc
  4481 00:0E59: 69 0B 00     	adc	#L203+2
  4482 00:0E5C: 1B           	tcs
  4483 00:0E5D: 6B           	rtl
  4484                        	.endblock	626
  4485             00000009   L203	equ	9
  4486             00000005   L204	equ	5
  4487                        	ends
  4488                        	efunc
  4489                        	.endfunc	626,5,9
  4490                        	.line	626
  4491                        ;
  4492                        ;void k_debug_uart_status_com2(int lc)
  4493                        ;{
  4494                        	.line	628
  4495                        	.line	629
  4496                        	code
  4497                        	xdef	~~k_debug_uart_status_com2
  4498                        	func
  4499                        	.function	629
  4500                        ~~k_debug_uart_status_com2:
  4501                        	longa	on
  4502                        	longi	on
  4503 00:0E5E: 3B           	tsc
  4504 00:0E5F: 38           	sec
  4505 00:0E60: E9 09 00     	sbc	#L207
  4506 00:0E63: 1B           	tcs
  4507 00:0E64: 0B           	phd
  4508 00:0E65: 5B           	tcd
  4509             00000004   lc_0	set	4
  4510                        	.block	629
  4511                        ;	char uartbuffer[3];
  4512                        ;	int lcp = 0;
  4513                        ;
  4514                        ;	//lcp = k_put_string(lcp,lc,"XX",15,0);
  4515                        ;	//k_put_char(lcp,lc,'-',15,0);lcp++;
  4516                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_DLH],uartbuffer),15,0);
  4517             00000000   uartbuffer_1	set	0
  4518             00000003   lcp_1	set	3
  4519                        	.sym	uartbuffer,0,110,1,0,3
  4520                        	.sym	lcp,3,5,1,16
  4521                        	.sym	lc,4,5,6,16
  4522 00:0E66: 64 08        	stz	<L208+lcp_1
  4523                        	.line	635
  4524 00:0E68: F4 00 00     	pea	#<$0
  Thu Dec  3 2020 22:25                                                Page 83


  4525 00:0E6B: F4 0F 00     	pea	#<$f
  4526 00:0E6E: F4 00 00     	pea	#0
  4527 00:0E71: 18           	clc
  4528 00:0E72: 7B           	tdc
  4529 00:0E73: 69 05 00     	adc	#<L208+uartbuffer_1
  4530 00:0E76: 48           	pha
  4531 00:0E77: AF F9 12 AF  	lda	>11473657
  4532 00:0E7B: 48           	pha
  4533 00:0E7C: 22 xx xx xx  	jsl	~~k_bytetohex
  4534 00:0E80: 85 01        	sta	<R0
  4535 00:0E82: 86 03        	stx	<R0+2
  4536 00:0E84: DA           	phx
  4537 00:0E85: 48           	pha
  4538 00:0E86: D4 0D        	pei	<L207+lc_0
  4539 00:0E88: D4 08        	pei	<L208+lcp_1
  4540 00:0E8A: 22 xx xx xx  	jsl	~~k_put_string
  4541 00:0E8E: 85 08        	sta	<L208+lcp_1
  4542                        ;
  4543                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4544                        	.line	637
  4545 00:0E90: F4 00 00     	pea	#<$0
  4546 00:0E93: F4 0F 00     	pea	#<$f
  4547 00:0E96: F4 2D 00     	pea	#<$2d
  4548 00:0E99: D4 0D        	pei	<L207+lc_0
  4549 00:0E9B: D4 08        	pei	<L208+lcp_1
  4550 00:0E9D: 22 xx xx xx  	jsl	~~k_put_char
  4551                        	.line	637
  4552 00:0EA1: E6 08        	inc	<L208+lcp_1
  4553                        ;
  4554                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_FCR],uartbuffer),15,0);
  4555                        	.line	639
  4556 00:0EA3: F4 00 00     	pea	#<$0
  4557 00:0EA6: F4 0F 00     	pea	#<$f
  4558 00:0EA9: F4 00 00     	pea	#0
  4559 00:0EAC: 18           	clc
  4560 00:0EAD: 7B           	tdc
  4561 00:0EAE: 69 05 00     	adc	#<L208+uartbuffer_1
  4562 00:0EB1: 48           	pha
  4563 00:0EB2: AF FA 12 AF  	lda	>11473658
  4564 00:0EB6: 48           	pha
  4565 00:0EB7: 22 xx xx xx  	jsl	~~k_bytetohex
  4566 00:0EBB: 85 01        	sta	<R0
  4567 00:0EBD: 86 03        	stx	<R0+2
  4568 00:0EBF: DA           	phx
  4569 00:0EC0: 48           	pha
  4570 00:0EC1: D4 0D        	pei	<L207+lc_0
  4571 00:0EC3: D4 08        	pei	<L208+lcp_1
  4572 00:0EC5: 22 xx xx xx  	jsl	~~k_put_string
  4573 00:0EC9: 85 08        	sta	<L208+lcp_1
  4574                        ;
  4575                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4576                        	.line	641
  4577 00:0ECB: F4 00 00     	pea	#<$0
  4578 00:0ECE: F4 0F 00     	pea	#<$f
  4579 00:0ED1: F4 2D 00     	pea	#<$2d
  4580 00:0ED4: D4 0D        	pei	<L207+lc_0
  4581 00:0ED6: D4 08        	pei	<L208+lcp_1
  Thu Dec  3 2020 22:25                                                Page 84


  4582 00:0ED8: 22 xx xx xx  	jsl	~~k_put_char
  4583                        	.line	641
  4584 00:0EDC: E6 08        	inc	<L208+lcp_1
  4585                        ;
  4586                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_DLH],uartbuffer),15,0);
  4587                        	.line	643
  4588 00:0EDE: F4 00 00     	pea	#<$0
  4589 00:0EE1: F4 0F 00     	pea	#<$f
  4590 00:0EE4: F4 00 00     	pea	#0
  4591 00:0EE7: 18           	clc
  4592 00:0EE8: 7B           	tdc
  4593 00:0EE9: 69 05 00     	adc	#<L208+uartbuffer_1
  4594 00:0EEC: 48           	pha
  4595 00:0EED: AF F9 12 AF  	lda	>11473657
  4596 00:0EF1: 48           	pha
  4597 00:0EF2: 22 xx xx xx  	jsl	~~k_bytetohex
  4598 00:0EF6: 85 01        	sta	<R0
  4599 00:0EF8: 86 03        	stx	<R0+2
  4600 00:0EFA: DA           	phx
  4601 00:0EFB: 48           	pha
  4602 00:0EFC: D4 0D        	pei	<L207+lc_0
  4603 00:0EFE: D4 08        	pei	<L208+lcp_1
  4604 00:0F00: 22 xx xx xx  	jsl	~~k_put_string
  4605 00:0F04: 85 08        	sta	<L208+lcp_1
  4606                        ;
  4607                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4608                        	.line	645
  4609 00:0F06: F4 00 00     	pea	#<$0
  4610 00:0F09: F4 0F 00     	pea	#<$f
  4611 00:0F0C: F4 2D 00     	pea	#<$2d
  4612 00:0F0F: D4 0D        	pei	<L207+lc_0
  4613 00:0F11: D4 08        	pei	<L208+lcp_1
  4614 00:0F13: 22 xx xx xx  	jsl	~~k_put_char
  4615                        	.line	645
  4616 00:0F17: E6 08        	inc	<L208+lcp_1
  4617                        ;
  4618                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_LCR],uartbuffer),15,0);
  4619                        	.line	647
  4620 00:0F19: F4 00 00     	pea	#<$0
  4621 00:0F1C: F4 0F 00     	pea	#<$f
  4622 00:0F1F: F4 00 00     	pea	#0
  4623 00:0F22: 18           	clc
  4624 00:0F23: 7B           	tdc
  4625 00:0F24: 69 05 00     	adc	#<L208+uartbuffer_1
  4626 00:0F27: 48           	pha
  4627 00:0F28: AF FB 12 AF  	lda	>11473659
  4628 00:0F2C: 48           	pha
  4629 00:0F2D: 22 xx xx xx  	jsl	~~k_bytetohex
  4630 00:0F31: 85 01        	sta	<R0
  4631 00:0F33: 86 03        	stx	<R0+2
  4632 00:0F35: DA           	phx
  4633 00:0F36: 48           	pha
  4634 00:0F37: D4 0D        	pei	<L207+lc_0
  4635 00:0F39: D4 08        	pei	<L208+lcp_1
  4636 00:0F3B: 22 xx xx xx  	jsl	~~k_put_string
  4637 00:0F3F: 85 08        	sta	<L208+lcp_1
  Thu Dec  3 2020 22:25                                                Page 85


  4638                        ;
  4639                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4640                        	.line	649
  4641 00:0F41: F4 00 00     	pea	#<$0
  4642 00:0F44: F4 0F 00     	pea	#<$f
  4643 00:0F47: F4 2D 00     	pea	#<$2d
  4644 00:0F4A: D4 0D        	pei	<L207+lc_0
  4645 00:0F4C: D4 08        	pei	<L208+lcp_1
  4646 00:0F4E: 22 xx xx xx  	jsl	~~k_put_char
  4647                        	.line	649
  4648 00:0F52: E6 08        	inc	<L208+lcp_1
  4649                        ;
  4650                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_MCR],uartbuffer),15,0);
  4651                        	.line	651
  4652 00:0F54: F4 00 00     	pea	#<$0
  4653 00:0F57: F4 0F 00     	pea	#<$f
  4654 00:0F5A: F4 00 00     	pea	#0
  4655 00:0F5D: 18           	clc
  4656 00:0F5E: 7B           	tdc
  4657 00:0F5F: 69 05 00     	adc	#<L208+uartbuffer_1
  4658 00:0F62: 48           	pha
  4659 00:0F63: AF FC 12 AF  	lda	>11473660
  4660 00:0F67: 48           	pha
  4661 00:0F68: 22 xx xx xx  	jsl	~~k_bytetohex
  4662 00:0F6C: 85 01        	sta	<R0
  4663 00:0F6E: 86 03        	stx	<R0+2
  4664 00:0F70: DA           	phx
  4665 00:0F71: 48           	pha
  4666 00:0F72: D4 0D        	pei	<L207+lc_0
  4667 00:0F74: D4 08        	pei	<L208+lcp_1
  4668 00:0F76: 22 xx xx xx  	jsl	~~k_put_string
  4669 00:0F7A: 85 08        	sta	<L208+lcp_1
  4670                        ;
  4671                        ;	k_put_char(lcp,lc,'-',15,0);lcp++;
  4672                        	.line	653
  4673 00:0F7C: F4 00 00     	pea	#<$0
  4674 00:0F7F: F4 0F 00     	pea	#<$f
  4675 00:0F82: F4 2D 00     	pea	#<$2d
  4676 00:0F85: D4 0D        	pei	<L207+lc_0
  4677 00:0F87: D4 08        	pei	<L208+lcp_1
  4678 00:0F89: 22 xx xx xx  	jsl	~~k_put_char
  4679                        	.line	653
  4680 00:0F8D: E6 08        	inc	<L208+lcp_1
  4681                        ;
  4682                        ;	lcp = k_put_string(lcp,lc,k_bytetohex(UART2_BASE
                    [UART_MSR],uartbuffer),15,0);
  4683                        	.line	655
  4684 00:0F8F: F4 00 00     	pea	#<$0
  4685 00:0F92: F4 0F 00     	pea	#<$f
  4686 00:0F95: F4 00 00     	pea	#0
  4687 00:0F98: 18           	clc
  4688 00:0F99: 7B           	tdc
  4689 00:0F9A: 69 05 00     	adc	#<L208+uartbuffer_1
  4690 00:0F9D: 48           	pha
  4691 00:0F9E: AF FE 12 AF  	lda	>11473662
  4692 00:0FA2: 48           	pha
  4693 00:0FA3: 22 xx xx xx  	jsl	~~k_bytetohex
  Thu Dec  3 2020 22:25                                                Page 86


  4694 00:0FA7: 85 01        	sta	<R0
  4695 00:0FA9: 86 03        	stx	<R0+2
  4696 00:0FAB: DA           	phx
  4697 00:0FAC: 48           	pha
  4698 00:0FAD: D4 0D        	pei	<L207+lc_0
  4699 00:0FAF: D4 08        	pei	<L208+lcp_1
  4700 00:0FB1: 22 xx xx xx  	jsl	~~k_put_string
  4701 00:0FB5: 85 08        	sta	<L208+lcp_1
  4702                        ;}
  4703                        	.line	656
  4704                        L210:
  4705 00:0FB7: A5 0B        	lda	<L207+2
  4706 00:0FB9: 85 0D        	sta	<L207+2+2
  4707 00:0FBB: A5 0A        	lda	<L207+1
  4708 00:0FBD: 85 0C        	sta	<L207+1+2
  4709 00:0FBF: 2B           	pld
  4710 00:0FC0: 3B           	tsc
  4711 00:0FC1: 18           	clc
  4712 00:0FC2: 69 0B 00     	adc	#L207+2
  4713 00:0FC5: 1B           	tcs
  4714 00:0FC6: 6B           	rtl
  4715                        	.endblock	656
  4716             00000009   L207	equ	9
  4717             00000005   L208	equ	5
  4718                        	ends
  4719                        	efunc
  4720                        	.endfunc	656,5,9
  4721                        	.line	656
  4722                        ;
  4723                        ;void k_debug_rect(LPCSTR message,PRECT prect)
  4724                        ;{
  4725                        	.line	658
  4726                        	.line	659
  4727                        	code
  4728                        	xdef	~~k_debug_rect
  4729                        	func
  4730                        	.function	659
  4731                        ~~k_debug_rect:
  4732                        	longa	on
  4733                        	longi	on
  4734 00:0FC7: 3B           	tsc
  4735 00:0FC8: 38           	sec
  4736 00:0FC9: E9 10 00     	sbc	#L211
  4737 00:0FCC: 1B           	tcs
  4738 00:0FCD: 0B           	phd
  4739 00:0FCE: 5B           	tcd
  4740             00000004   message_0	set	4
  4741             00000008   prect_0	set	8
  4742                        	.block	659
  4743                        ;	char buffer[16];
  4744                        ;
  4745                        ;	k_debug_string((LPCHAR)message);
  4746             00000000   buffer_1	set	0
  4747                        	.sym	buffer,0,110,1,0,16
  4748                        	.sym	message,4,142,6,32
  4749                        	.sym	prect,8,138,6,32,25
  4750                        	.line	662
  4751 00:0FCF: D4 16        	pei	<L211+message_0+2
  Thu Dec  3 2020 22:25                                                Page 87


  4752 00:0FD1: D4 14        	pei	<L211+message_0
  4753 00:0FD3: 22 xx xx xx  	jsl	~~k_debug_string
  4754                        ;	k_debug_crlf();
  4755                        	.line	663
  4756 00:0FD7: 22 xx xx xx  	jsl	~~k_debug_crlf
  4757                        ;	k_debug_integer("    RECT X:",prect->x);
  4758                        	.line	664
  4759 00:0FDB: A7 18        	lda	[<L211+prect_0]
  4760 00:0FDD: 48           	pha
  4761 00:0FDE: F4 xx xx     	pea	#^L202
  4762 00:0FE1: F4 xx xx     	pea	#<L202
  4763 00:0FE4: 22 xx xx xx  	jsl	~~k_debug_integer
  4764                        ;	k_debug_integer("    RECT Y:",prect->y);
  4765                        	.line	665
  4766 00:0FE8: A0 02 00     	ldy	#$2
  4767 00:0FEB: B7 18        	lda	[<L211+prect_0],Y
  4768 00:0FED: 48           	pha
  4769 00:0FEE: F4 xx xx     	pea	#^L202+12
  4770 00:0FF1: F4 xx xx     	pea	#<L202+12
  4771 00:0FF4: 22 xx xx xx  	jsl	~~k_debug_integer
  4772                        ;	k_debug_integer("    RECT W:",prect->width);
  4773                        	.line	666
  4774 00:0FF8: A0 04 00     	ldy	#$4
  4775 00:0FFB: B7 18        	lda	[<L211+prect_0],Y
  4776 00:0FFD: 48           	pha
  4777 00:0FFE: F4 xx xx     	pea	#^L202+24
  4778 00:1001: F4 xx xx     	pea	#<L202+24
  4779 00:1004: 22 xx xx xx  	jsl	~~k_debug_integer
  4780                        ;	k_debug_integer("    RECT H:",prect->height);
  4781                        	.line	667
  4782 00:1008: A0 06 00     	ldy	#$6
  4783 00:100B: B7 18        	lda	[<L211+prect_0],Y
  4784 00:100D: 48           	pha
  4785 00:100E: F4 xx xx     	pea	#^L202+36
  4786 00:1011: F4 xx xx     	pea	#<L202+36
  4787 00:1014: 22 xx xx xx  	jsl	~~k_debug_integer
  4788                        ;}
  4789                        	.line	668
  4790                        L214:
  4791 00:1018: A5 12        	lda	<L211+2
  4792 00:101A: 85 1A        	sta	<L211+2+8
  4793 00:101C: A5 11        	lda	<L211+1
  4794 00:101E: 85 19        	sta	<L211+1+8
  4795 00:1020: 2B           	pld
  4796 00:1021: 3B           	tsc
  4797 00:1022: 18           	clc
  4798 00:1023: 69 18 00     	adc	#L211+8
  4799 00:1026: 1B           	tcs
  4800 00:1027: 6B           	rtl
  4801                        	.endblock	668
  4802             00000010   L211	equ	16
  4803             00000001   L212	equ	1
  4804                        	ends
  4805                        	efunc
  4806                        	.endfunc	668,1,16
  4807                        	.line	668
  4808                        	data
  4809                        L202:
  Thu Dec  3 2020 22:25                                                Page 88


  4810 00:0168: 20 20 20 20  	db	$20,$20,$20,$20,$52,$45,$43,$54,$20,$58,
                    $3A,$00,$20,$20,$20
       00:016C: 52 45 43 54 
       00:0170: 20 58 3A 00 
       00:0174: 20 20 20 
  4811 00:0177: 20 52 45 43  	db	$20,$52,$45,$43,$54,$20,$59,$3A,$00,$20,
                    $20,$20,$20,$52,$45
       00:017B: 54 20 59 3A 
       00:017F: 00 20 20 20 
       00:0183: 20 52 45 
  4812 00:0186: 43 54 20 57  	db	$43,$54,$20,$57,$3A,$00,$20,$20,$20,$20,
                    $52,$45,$43,$54,$20
       00:018A: 3A 00 20 20 
       00:018E: 20 20 52 45 
       00:0192: 43 54 20 
  4813 00:0195: 48 3A 00     	db	$48,$3A,$00
  4814 00:0198:              	ends
  4815                        ;
  4816                        ;UINT k_get_rtc_hour(void)
  4817                        ;{
  4818                        	.line	670
  4819                        	.line	671
  4820                        	code
  4821                        	xdef	~~k_get_rtc_hour
  4822                        	func
  4823                        	.function	671
  4824                        ~~k_get_rtc_hour:
  4825                        	longa	on
  4826                        	longi	on
  4827 00:1028: 3B           	tsc
  4828 00:1029: 38           	sec
  4829 00:102A: E9 08 00     	sbc	#L216
  4830 00:102D: 1B           	tcs
  4831 00:102E: 0B           	phd
  4832 00:102F: 5B           	tcd
  4833                        	.block	671
  4834                        ;	return (((RTC_HRS[0]&0x30)>>4) * 10)  + (RTC_HRS
                    [0]&0x0F) ;
  4835                        	.line	672
  4836 00:1030: AF 04 08 AF  	lda	>11470852
  4837 00:1034: 29 0F 00     	and	#<$f
  4838 00:1037: 85 01        	sta	<R0
  4839 00:1039: AF 04 08 AF  	lda	>11470852
  4840 00:103D: 29 30 00     	and	#<$30
  4841 00:1040: A2 04 00     	ldx	#<$4
  4842                        	xref	~~~asr
  4843 00:1043: 22 xx xx xx  	jsl	~~~asr
  4844 00:1047: 85 05        	sta	<R1
  4845 00:1049: A5 05        	lda	<R1
  4846 00:104B: 0A           	asl	A
  4847 00:104C: 0A           	asl	A
  4848 00:104D: 65 05        	adc	<R1
  4849 00:104F: 0A           	asl	A
  4850 00:1050: 85 05        	sta	<R1
  4851 00:1052: 18           	clc
  4852 00:1053: A5 05        	lda	<R1
  4853 00:1055: 65 01        	adc	<R0
  4854                        L219:
  Thu Dec  3 2020 22:25                                                Page 89


  4855 00:1057: A8           	tay
  4856 00:1058: 2B           	pld
  4857 00:1059: 3B           	tsc
  4858 00:105A: 18           	clc
  4859 00:105B: 69 08 00     	adc	#L216
  4860 00:105E: 1B           	tcs
  4861 00:105F: 98           	tya
  4862 00:1060: 6B           	rtl
  4863                        ;}
  4864                        	.line	673
  4865                        	.endblock	673
  4866             00000008   L216	equ	8
  4867             00000009   L217	equ	9
  4868                        	ends
  4869                        	efunc
  4870                        	.endfunc	673,9,8
  4871                        	.line	673
  4872                        ;
  4873                        ;UINT k_get_rtc_minute(void)
  4874                        ;{
  4875                        	.line	675
  4876                        	.line	676
  4877                        	code
  4878                        	xdef	~~k_get_rtc_minute
  4879                        	func
  4880                        	.function	676
  4881                        ~~k_get_rtc_minute:
  4882                        	longa	on
  4883                        	longi	on
  4884 00:1061: 3B           	tsc
  4885 00:1062: 38           	sec
  4886 00:1063: E9 08 00     	sbc	#L220
  4887 00:1066: 1B           	tcs
  4888 00:1067: 0B           	phd
  4889 00:1068: 5B           	tcd
  4890                        	.block	676
  4891                        ;	return (((RTC_MIN[0]&0x70)>>4) * 10)  + (RTC_MIN
                    [0]&0x0F);
  4892                        	.line	677
  4893 00:1069: AF 02 08 AF  	lda	>11470850
  4894 00:106D: 29 0F 00     	and	#<$f
  4895 00:1070: 85 01        	sta	<R0
  4896 00:1072: AF 02 08 AF  	lda	>11470850
  4897 00:1076: 29 70 00     	and	#<$70
  4898 00:1079: A2 04 00     	ldx	#<$4
  4899                        	xref	~~~asr
  4900 00:107C: 22 xx xx xx  	jsl	~~~asr
  4901 00:1080: 85 05        	sta	<R1
  4902 00:1082: A5 05        	lda	<R1
  4903 00:1084: 0A           	asl	A
  4904 00:1085: 0A           	asl	A
  4905 00:1086: 65 05        	adc	<R1
  4906 00:1088: 0A           	asl	A
  4907 00:1089: 85 05        	sta	<R1
  4908 00:108B: 18           	clc
  4909 00:108C: A5 05        	lda	<R1
  4910 00:108E: 65 01        	adc	<R0
  4911                        L223:
  Thu Dec  3 2020 22:25                                                Page 90


  4912 00:1090: A8           	tay
  4913 00:1091: 2B           	pld
  4914 00:1092: 3B           	tsc
  4915 00:1093: 18           	clc
  4916 00:1094: 69 08 00     	adc	#L220
  4917 00:1097: 1B           	tcs
  4918 00:1098: 98           	tya
  4919 00:1099: 6B           	rtl
  4920                        ;}
  4921                        	.line	678
  4922                        	.endblock	678
  4923             00000008   L220	equ	8
  4924             00000009   L221	equ	9
  4925                        	ends
  4926                        	efunc
  4927                        	.endfunc	678,9,8
  4928                        	.line	678
  4929                        ;
  4930                        ;UINT k_get_rtc_second(void)
  4931                        ;{
  4932                        	.line	680
  4933                        	.line	681
  4934                        	code
  4935                        	xdef	~~k_get_rtc_second
  4936                        	func
  4937                        	.function	681
  4938                        ~~k_get_rtc_second:
  4939                        	longa	on
  4940                        	longi	on
  4941 00:109A: 3B           	tsc
  4942 00:109B: 38           	sec
  4943 00:109C: E9 08 00     	sbc	#L224
  4944 00:109F: 1B           	tcs
  4945 00:10A0: 0B           	phd
  4946 00:10A1: 5B           	tcd
  4947                        	.block	681
  4948                        ;	return (((RTC_SEC[0]&0x70)>>4) * 10)  + (RTC_SEC
                    [0]&0x0F);
  4949                        	.line	682
  4950 00:10A2: AF 00 08 AF  	lda	>11470848
  4951 00:10A6: 29 0F 00     	and	#<$f
  4952 00:10A9: 85 01        	sta	<R0
  4953 00:10AB: AF 00 08 AF  	lda	>11470848
  4954 00:10AF: 29 70 00     	and	#<$70
  4955 00:10B2: A2 04 00     	ldx	#<$4
  4956                        	xref	~~~asr
  4957 00:10B5: 22 xx xx xx  	jsl	~~~asr
  4958 00:10B9: 85 05        	sta	<R1
  4959 00:10BB: A5 05        	lda	<R1
  4960 00:10BD: 0A           	asl	A
  4961 00:10BE: 0A           	asl	A
  4962 00:10BF: 65 05        	adc	<R1
  4963 00:10C1: 0A           	asl	A
  4964 00:10C2: 85 05        	sta	<R1
  4965 00:10C4: 18           	clc
  4966 00:10C5: A5 05        	lda	<R1
  4967 00:10C7: 65 01        	adc	<R0
  4968                        L227:
  Thu Dec  3 2020 22:25                                                Page 91


  4969 00:10C9: A8           	tay
  4970 00:10CA: 2B           	pld
  4971 00:10CB: 3B           	tsc
  4972 00:10CC: 18           	clc
  4973 00:10CD: 69 08 00     	adc	#L224
  4974 00:10D0: 1B           	tcs
  4975 00:10D1: 98           	tya
  4976 00:10D2: 6B           	rtl
  4977                        ;}
  4978                        	.line	683
  4979                        	.endblock	683
  4980             00000008   L224	equ	8
  4981             00000009   L225	equ	9
  4982                        	ends
  4983                        	efunc
  4984                        	.endfunc	683,9,8
  4985                        	.line	683
  4986                        ;
  4987                        ;UINT k_get_rtc_month(void)
  4988                        ;{
  4989                        	.line	685
  4990                        	.line	686
  4991                        	code
  4992                        	xdef	~~k_get_rtc_month
  4993                        	func
  4994                        	.function	686
  4995                        ~~k_get_rtc_month:
  4996                        	longa	on
  4997                        	longi	on
  4998 00:10D3: 3B           	tsc
  4999 00:10D4: 38           	sec
  5000 00:10D5: E9 08 00     	sbc	#L228
  5001 00:10D8: 1B           	tcs
  5002 00:10D9: 0B           	phd
  5003 00:10DA: 5B           	tcd
  5004                        	.block	686
  5005                        ;	return  (((RTC_MONTH[0]&0x10)>>4)  * 10)  + (RTC
                    _MONTH[0]&0x0F) ;
  5006                        	.line	687
  5007 00:10DB: AF 09 08 AF  	lda	>11470857
  5008 00:10DF: 29 0F 00     	and	#<$f
  5009 00:10E2: 85 01        	sta	<R0
  5010 00:10E4: AF 09 08 AF  	lda	>11470857
  5011 00:10E8: 29 10 00     	and	#<$10
  5012 00:10EB: A2 04 00     	ldx	#<$4
  5013                        	xref	~~~asr
  5014 00:10EE: 22 xx xx xx  	jsl	~~~asr
  5015 00:10F2: 85 05        	sta	<R1
  5016 00:10F4: A5 05        	lda	<R1
  5017 00:10F6: 0A           	asl	A
  5018 00:10F7: 0A           	asl	A
  5019 00:10F8: 65 05        	adc	<R1
  5020 00:10FA: 0A           	asl	A
  5021 00:10FB: 85 05        	sta	<R1
  5022 00:10FD: 18           	clc
  5023 00:10FE: A5 05        	lda	<R1
  5024 00:1100: 65 01        	adc	<R0
  5025                        L231:
  Thu Dec  3 2020 22:25                                                Page 92


  5026 00:1102: A8           	tay
  5027 00:1103: 2B           	pld
  5028 00:1104: 3B           	tsc
  5029 00:1105: 18           	clc
  5030 00:1106: 69 08 00     	adc	#L228
  5031 00:1109: 1B           	tcs
  5032 00:110A: 98           	tya
  5033 00:110B: 6B           	rtl
  5034                        ;}
  5035                        	.line	688
  5036                        	.endblock	688
  5037             00000008   L228	equ	8
  5038             00000009   L229	equ	9
  5039                        	ends
  5040                        	efunc
  5041                        	.endfunc	688,9,8
  5042                        	.line	688
  5043                        ;
  5044                        ;UINT k_get_rtc_day(void)
  5045                        ;{
  5046                        	.line	690
  5047                        	.line	691
  5048                        	code
  5049                        	xdef	~~k_get_rtc_day
  5050                        	func
  5051                        	.function	691
  5052                        ~~k_get_rtc_day:
  5053                        	longa	on
  5054                        	longi	on
  5055 00:110C: 3B           	tsc
  5056 00:110D: 38           	sec
  5057 00:110E: E9 08 00     	sbc	#L232
  5058 00:1111: 1B           	tcs
  5059 00:1112: 0B           	phd
  5060 00:1113: 5B           	tcd
  5061                        	.block	691
  5062                        ;	return (((RTC_DAY[0]&0x10)>>4)    * 10)  + (RTC_
                    DAY[0]&0x0F) ;
  5063                        	.line	692
  5064 00:1114: AF 06 08 AF  	lda	>11470854
  5065 00:1118: 29 0F 00     	and	#<$f
  5066 00:111B: 85 01        	sta	<R0
  5067 00:111D: AF 06 08 AF  	lda	>11470854
  5068 00:1121: 29 10 00     	and	#<$10
  5069 00:1124: A2 04 00     	ldx	#<$4
  5070                        	xref	~~~asr
  5071 00:1127: 22 xx xx xx  	jsl	~~~asr
  5072 00:112B: 85 05        	sta	<R1
  5073 00:112D: A5 05        	lda	<R1
  5074 00:112F: 0A           	asl	A
  5075 00:1130: 0A           	asl	A
  5076 00:1131: 65 05        	adc	<R1
  5077 00:1133: 0A           	asl	A
  5078 00:1134: 85 05        	sta	<R1
  5079 00:1136: 18           	clc
  5080 00:1137: A5 05        	lda	<R1
  5081 00:1139: 65 01        	adc	<R0
  5082                        L235:
  Thu Dec  3 2020 22:25                                                Page 93


  5083 00:113B: A8           	tay
  5084 00:113C: 2B           	pld
  5085 00:113D: 3B           	tsc
  5086 00:113E: 18           	clc
  5087 00:113F: 69 08 00     	adc	#L232
  5088 00:1142: 1B           	tcs
  5089 00:1143: 98           	tya
  5090 00:1144: 6B           	rtl
  5091                        ;}
  5092                        	.line	693
  5093                        	.endblock	693
  5094             00000008   L232	equ	8
  5095             00000009   L233	equ	9
  5096                        	ends
  5097                        	efunc
  5098                        	.endfunc	693,9,8
  5099                        	.line	693
  5100                        ;
  5101                        ;UINT k_get_rtc_year(void)
  5102                        ;{
  5103                        	.line	695
  5104                        	.line	696
  5105                        	code
  5106                        	xdef	~~k_get_rtc_year
  5107                        	func
  5108                        	.function	696
  5109                        ~~k_get_rtc_year:
  5110                        	longa	on
  5111                        	longi	on
  5112 00:1145: 3B           	tsc
  5113 00:1146: 38           	sec
  5114 00:1147: E9 08 00     	sbc	#L236
  5115 00:114A: 1B           	tcs
  5116 00:114B: 0B           	phd
  5117 00:114C: 5B           	tcd
  5118                        	.block	696
  5119                        ;	return  (((RTC_YEAR[0]&0xF0)>>4)   * 10)  + (RTC
                    _YEAR[0]&0x0F);
  5120                        	.line	697
  5121 00:114D: AF 0A 08 AF  	lda	>11470858
  5122 00:1151: 29 0F 00     	and	#<$f
  5123 00:1154: 85 01        	sta	<R0
  5124 00:1156: AF 0A 08 AF  	lda	>11470858
  5125 00:115A: 29 F0 00     	and	#<$f0
  5126 00:115D: A2 04 00     	ldx	#<$4
  5127                        	xref	~~~asr
  5128 00:1160: 22 xx xx xx  	jsl	~~~asr
  5129 00:1164: 85 05        	sta	<R1
  5130 00:1166: A5 05        	lda	<R1
  5131 00:1168: 0A           	asl	A
  5132 00:1169: 0A           	asl	A
  5133 00:116A: 65 05        	adc	<R1
  5134 00:116C: 0A           	asl	A
  5135 00:116D: 85 05        	sta	<R1
  5136 00:116F: 18           	clc
  5137 00:1170: A5 05        	lda	<R1
  5138 00:1172: 65 01        	adc	<R0
  5139                        L239:
  Thu Dec  3 2020 22:25                                                Page 94


  5140 00:1174: A8           	tay
  5141 00:1175: 2B           	pld
  5142 00:1176: 3B           	tsc
  5143 00:1177: 18           	clc
  5144 00:1178: 69 08 00     	adc	#L236
  5145 00:117B: 1B           	tcs
  5146 00:117C: 98           	tya
  5147 00:117D: 6B           	rtl
  5148                        ;}
  5149                        	.line	698
  5150                        	.endblock	698
  5151             00000008   L236	equ	8
  5152             00000009   L237	equ	9
  5153                        	ends
  5154                        	efunc
  5155                        	.endfunc	698,9,8
  5156                        	.line	698
  5157                        ;
  5158                        ;UINT k_get_rtc_century(void)
  5159                        ;{
  5160                        	.line	700
  5161                        	.line	701
  5162                        	code
  5163                        	xdef	~~k_get_rtc_century
  5164                        	func
  5165                        	.function	701
  5166                        ~~k_get_rtc_century:
  5167                        	longa	on
  5168                        	longi	on
  5169 00:117E: 3B           	tsc
  5170 00:117F: 38           	sec
  5171 00:1180: E9 08 00     	sbc	#L240
  5172 00:1183: 1B           	tcs
  5173 00:1184: 0B           	phd
  5174 00:1185: 5B           	tcd
  5175                        	.block	701
  5176                        ;	return (((RTC_CENTURY[0]&0xF0)>>4)* 10)  + (RTC_
                    CENTURY[0]&0x0F);
  5177                        	.line	702
  5178 00:1186: AF 0F 08 AF  	lda	>11470863
  5179 00:118A: 29 0F 00     	and	#<$f
  5180 00:118D: 85 01        	sta	<R0
  5181 00:118F: AF 0F 08 AF  	lda	>11470863
  5182 00:1193: 29 F0 00     	and	#<$f0
  5183 00:1196: A2 04 00     	ldx	#<$4
  5184                        	xref	~~~asr
  5185 00:1199: 22 xx xx xx  	jsl	~~~asr
  5186 00:119D: 85 05        	sta	<R1
  5187 00:119F: A5 05        	lda	<R1
  5188 00:11A1: 0A           	asl	A
  5189 00:11A2: 0A           	asl	A
  5190 00:11A3: 65 05        	adc	<R1
  5191 00:11A5: 0A           	asl	A
  5192 00:11A6: 85 05        	sta	<R1
  5193 00:11A8: 18           	clc
  5194 00:11A9: A5 05        	lda	<R1
  5195 00:11AB: 65 01        	adc	<R0
  5196                        L243:
  Thu Dec  3 2020 22:25                                                Page 95


  5197 00:11AD: A8           	tay
  5198 00:11AE: 2B           	pld
  5199 00:11AF: 3B           	tsc
  5200 00:11B0: 18           	clc
  5201 00:11B1: 69 08 00     	adc	#L240
  5202 00:11B4: 1B           	tcs
  5203 00:11B5: 98           	tya
  5204 00:11B6: 6B           	rtl
  5205                        ;}
  5206                        	.line	703
  5207                        	.endblock	703
  5208             00000008   L240	equ	8
  5209             00000009   L241	equ	9
  5210                        	ends
  5211                        	efunc
  5212                        	.endfunc	703,9,8
  5213                        	.line	703
  5214                        ;
  5215                        ;void k_get_fpga_date_day(char *buffer)
  5216                        ;{
  5217                        	.line	705
  5218                        	.line	706
  5219                        	code
  5220                        	xdef	~~k_get_fpga_date_day
  5221                        	func
  5222                        	.function	706
  5223                        ~~k_get_fpga_date_day:
  5224                        	longa	on
  5225                        	longi	on
  5226 00:11B7: 3B           	tsc
  5227 00:11B8: 38           	sec
  5228 00:11B9: E9 00 00     	sbc	#L244
  5229 00:11BC: 1B           	tcs
  5230 00:11BD: 0B           	phd
  5231 00:11BE: 5B           	tcd
  5232             00000004   buffer_0	set	4
  5233                        	.block	706
  5234                        ;	k_bytetodec(FPGA_DOR[0],buffer);
  5235                        	.sym	buffer,4,142,6,32
  5236                        	.line	707
  5237 00:11BF: D4 06        	pei	<L244+buffer_0+2
  5238 00:11C1: D4 04        	pei	<L244+buffer_0
  5239 00:11C3: AF 0D 07 AF  	lda	>11470605
  5240 00:11C7: 48           	pha
  5241 00:11C8: 22 xx xx xx  	jsl	~~k_bytetodec
  5242                        ;}
  5243                        	.line	708
  5244                        L247:
  5245 00:11CC: A5 02        	lda	<L244+2
  5246 00:11CE: 85 06        	sta	<L244+2+4
  5247 00:11D0: A5 01        	lda	<L244+1
  5248 00:11D2: 85 05        	sta	<L244+1+4
  5249 00:11D4: 2B           	pld
  5250 00:11D5: 3B           	tsc
  5251 00:11D6: 18           	clc
  5252 00:11D7: 69 04 00     	adc	#L244+4
  5253 00:11DA: 1B           	tcs
  5254 00:11DB: 6B           	rtl
  Thu Dec  3 2020 22:25                                                Page 96


  5255                        	.endblock	708
  5256             00000000   L244	equ	0
  5257             00000001   L245	equ	1
  5258                        	ends
  5259                        	efunc
  5260                        	.endfunc	708,1,0
  5261                        	.line	708
  5262                        ;
  5263                        ;void k_get_fpga_date_month(char *buffer)
  5264                        ;{
  5265                        	.line	710
  5266                        	.line	711
  5267                        	code
  5268                        	xdef	~~k_get_fpga_date_month
  5269                        	func
  5270                        	.function	711
  5271                        ~~k_get_fpga_date_month:
  5272                        	longa	on
  5273                        	longi	on
  5274 00:11DC: 3B           	tsc
  5275 00:11DD: 38           	sec
  5276 00:11DE: E9 00 00     	sbc	#L248
  5277 00:11E1: 1B           	tcs
  5278 00:11E2: 0B           	phd
  5279 00:11E3: 5B           	tcd
  5280             00000004   buffer_0	set	4
  5281                        	.block	711
  5282                        ;	k_bytetodec(FPGA_MOR[0],buffer);
  5283                        	.sym	buffer,4,142,6,32
  5284                        	.line	712
  5285 00:11E4: D4 06        	pei	<L248+buffer_0+2
  5286 00:11E6: D4 04        	pei	<L248+buffer_0
  5287 00:11E8: AF 0E 07 AF  	lda	>11470606
  5288 00:11EC: 48           	pha
  5289 00:11ED: 22 xx xx xx  	jsl	~~k_bytetodec
  5290                        ;}
  5291                        	.line	713
  5292                        L251:
  5293 00:11F1: A5 02        	lda	<L248+2
  5294 00:11F3: 85 06        	sta	<L248+2+4
  5295 00:11F5: A5 01        	lda	<L248+1
  5296 00:11F7: 85 05        	sta	<L248+1+4
  5297 00:11F9: 2B           	pld
  5298 00:11FA: 3B           	tsc
  5299 00:11FB: 18           	clc
  5300 00:11FC: 69 04 00     	adc	#L248+4
  5301 00:11FF: 1B           	tcs
  5302 00:1200: 6B           	rtl
  5303                        	.endblock	713
  5304             00000000   L248	equ	0
  5305             00000001   L249	equ	1
  5306                        	ends
  5307                        	efunc
  5308                        	.endfunc	713,1,0
  5309                        	.line	713
  5310                        ;
  5311                        ;void k_get_fpga_date_year(char *buffer)
  5312                        ;{
  Thu Dec  3 2020 22:25                                                Page 97


  5313                        	.line	715
  5314                        	.line	716
  5315                        	code
  5316                        	xdef	~~k_get_fpga_date_year
  5317                        	func
  5318                        	.function	716
  5319                        ~~k_get_fpga_date_year:
  5320                        	longa	on
  5321                        	longi	on
  5322 00:1201: 3B           	tsc
  5323 00:1202: 38           	sec
  5324 00:1203: E9 00 00     	sbc	#L252
  5325 00:1206: 1B           	tcs
  5326 00:1207: 0B           	phd
  5327 00:1208: 5B           	tcd
  5328             00000004   buffer_0	set	4
  5329                        	.block	716
  5330                        ;	k_bytetodec(FPGA_YOR[0],buffer);
  5331                        	.sym	buffer,4,142,6,32
  5332                        	.line	717
  5333 00:1209: D4 06        	pei	<L252+buffer_0+2
  5334 00:120B: D4 04        	pei	<L252+buffer_0
  5335 00:120D: AF 0F 07 AF  	lda	>11470607
  5336 00:1211: 48           	pha
  5337 00:1212: 22 xx xx xx  	jsl	~~k_bytetodec
  5338                        ;}
  5339                        	.line	718
  5340                        L255:
  5341 00:1216: A5 02        	lda	<L252+2
  5342 00:1218: 85 06        	sta	<L252+2+4
  5343 00:121A: A5 01        	lda	<L252+1
  5344 00:121C: 85 05        	sta	<L252+1+4
  5345 00:121E: 2B           	pld
  5346 00:121F: 3B           	tsc
  5347 00:1220: 18           	clc
  5348 00:1221: 69 04 00     	adc	#L252+4
  5349 00:1224: 1B           	tcs
  5350 00:1225: 6B           	rtl
  5351                        	.endblock	718
  5352             00000000   L252	equ	0
  5353             00000001   L253	equ	1
  5354                        	ends
  5355                        	efunc
  5356                        	.endfunc	718,1,0
  5357                        	.line	718
  5358                        ;
  5359                        ;void k_get_c256_major_version(char *buffer)
  5360                        ;{
  5361                        	.line	720
  5362                        	.line	721
  5363                        	code
  5364                        	xdef	~~k_get_c256_major_version
  5365                        	func
  5366                        	.function	721
  5367                        ~~k_get_c256_major_version:
  5368                        	longa	on
  5369                        	longi	on
  5370 00:1226: 3B           	tsc
  Thu Dec  3 2020 22:25                                                Page 98


  5371 00:1227: 38           	sec
  5372 00:1228: E9 00 00     	sbc	#L256
  5373 00:122B: 1B           	tcs
  5374 00:122C: 0B           	phd
  5375 00:122D: 5B           	tcd
  5376             00000004   buffer_0	set	4
  5377                        	.block	721
  5378                        ;	buffer[0] = *C256F_MODEL_MAJOR;
  5379                        	.sym	buffer,4,142,6,32
  5380                        	.line	722
  5381 00:122E: E2 20        	sep	#$20
  5382                        	longa	off
  5383 00:1230: AF 0B 07 AF  	lda	>11470603
  5384 00:1234: 87 04        	sta	[<L256+buffer_0]
  5385 00:1236: C2 20        	rep	#$20
  5386                        	longa	on
  5387                        ;	buffer[1] = 0;
  5388                        	.line	723
  5389 00:1238: E2 20        	sep	#$20
  5390                        	longa	off
  5391 00:123A: A9 00        	lda	#$0
  5392 00:123C: A0 01 00     	ldy	#$1
  5393 00:123F: 97 04        	sta	[<L256+buffer_0],Y
  5394 00:1241: C2 20        	rep	#$20
  5395                        	longa	on
  5396                        ;}
  5397                        	.line	724
  5398                        L259:
  5399 00:1243: A5 02        	lda	<L256+2
  5400 00:1245: 85 06        	sta	<L256+2+4
  5401 00:1247: A5 01        	lda	<L256+1
  5402 00:1249: 85 05        	sta	<L256+1+4
  5403 00:124B: 2B           	pld
  5404 00:124C: 3B           	tsc
  5405 00:124D: 18           	clc
  5406 00:124E: 69 04 00     	adc	#L256+4
  5407 00:1251: 1B           	tcs
  5408 00:1252: 6B           	rtl
  5409                        	.endblock	724
  5410             00000000   L256	equ	0
  5411             00000001   L257	equ	1
  5412                        	ends
  5413                        	efunc
  5414                        	.endfunc	724,1,0
  5415                        	.line	724
  5416                        ;
  5417                        ;void k_get_c256_minor_version(char *buffer)
  5418                        ;{
  5419                        	.line	726
  5420                        	.line	727
  5421                        	code
  5422                        	xdef	~~k_get_c256_minor_version
  5423                        	func
  5424                        	.function	727
  5425                        ~~k_get_c256_minor_version:
  5426                        	longa	on
  5427                        	longi	on
  5428 00:1253: 3B           	tsc
  Thu Dec  3 2020 22:25                                                Page 99


  5429 00:1254: 38           	sec
  5430 00:1255: E9 00 00     	sbc	#L260
  5431 00:1258: 1B           	tcs
  5432 00:1259: 0B           	phd
  5433 00:125A: 5B           	tcd
  5434             00000004   buffer_0	set	4
  5435                        	.block	727
  5436                        ;	buffer[0] = *C256F_MODEL_MINOR;
  5437                        	.sym	buffer,4,142,6,32
  5438                        	.line	728
  5439 00:125B: E2 20        	sep	#$20
  5440                        	longa	off
  5441 00:125D: AF 0C 07 AF  	lda	>11470604
  5442 00:1261: 87 04        	sta	[<L260+buffer_0]
  5443 00:1263: C2 20        	rep	#$20
  5444                        	longa	on
  5445                        ;	buffer[1] = 0;
  5446                        	.line	729
  5447 00:1265: E2 20        	sep	#$20
  5448                        	longa	off
  5449 00:1267: A9 00        	lda	#$0
  5450 00:1269: A0 01 00     	ldy	#$1
  5451 00:126C: 97 04        	sta	[<L260+buffer_0],Y
  5452 00:126E: C2 20        	rep	#$20
  5453                        	longa	on
  5454                        ;}
  5455                        	.line	730
  5456                        L263:
  5457 00:1270: A5 02        	lda	<L260+2
  5458 00:1272: 85 06        	sta	<L260+2+4
  5459 00:1274: A5 01        	lda	<L260+1
  5460 00:1276: 85 05        	sta	<L260+1+4
  5461 00:1278: 2B           	pld
  5462 00:1279: 3B           	tsc
  5463 00:127A: 18           	clc
  5464 00:127B: 69 04 00     	adc	#L260+4
  5465 00:127E: 1B           	tcs
  5466 00:127F: 6B           	rtl
  5467                        	.endblock	730
  5468             00000000   L260	equ	0
  5469             00000001   L261	equ	1
  5470                        	ends
  5471                        	efunc
  5472                        	.endfunc	730,1,0
  5473                        	.line	730
  5474                        ;
  5475                        	.line	730
  5476                        	.file	"G:\devprojects\c256Foenix\fxos\FXOSWork
                    space\FXOSv1\src\fxkernel.c",726
  5477                        	xref	~~k_put_color
  5478                        	xref	~~k_put_string
  5479                        	xref	~~k_put_char
  5480                        	xref	~~k_longtodec
  5481                        	xref	~~k_inttodec
  5482                        	xref	~~k_bytetodec
  5483                        	xref	~~k_bytetohex
  5484                        	xref	~~k_strip_padding
  5485                        	udata
  Thu Dec  3 2020 22:25                                                Page 100


  5486                        ~~KERNEL_FUNCTION_TABLE
  5487 00:0000:              	ds	4
  5488 00:0004:              	ends
  5489                        	udata
  5490                        ~~k16buffer
  5491 00:0004:              	ds	16
  5492 00:0014:              	ends
  5493                        	.sym	~~KERNEL_FUNCTION_TABLE,~~KERNEL_FUNCTIO
                    N_TABLE,5249,3,32
  5494                        	.sym	~~k16buffer,~~k16buffer,110,3,0,16
  5495                        	.sym	~~FXOSVERSIONSTRING,~~FXOSVERSIONSTRING,
                    142,3,32
  5496                        	.sym	~~FXOSVERSION,~~FXOSVERSION,18,3,32
  5497                        	.sym	va_list,0,142,14,32
  5498                        	.sym	DEVICEDRIVER_COMMAND,0,656,14,32
  5499                        	.sym	DEVICEDRIVER_UNLOAD,0,654,14,32
  5500                        	.sym	DEVICEDRIVER_WRITE,0,656,14,32
  5501                        	.sym	DEVICEDRIVER_READ,0,656,14,32
  5502                        	.sym	DEVICEDRIVER_LOAD,0,654,14,32
  5503                        	.sym	PFX_BLOCK_DEVICE_DRIVER,0,138,14,32,63
  5504                        	.sym	FX_BLOCK_DEVICE_DRIVER,0,10,14,1448,63
  5505                        	.sym	PFX_DEVICE_DRIVER,0,138,14,32,62
  5506                        	.sym	FX_DEVICE_DRIVER,0,10,14,1416,62
  5507                        	.sym	~~k_DebugOutString,~~k_DebugOutString,65
                    ,2,0
  5508                        	.sym	~~k_get_c256_minor_version,~~k_get_c256_
                    minor_version,65,2,0
  5509                        	.sym	~~k_get_c256_major_version,~~k_get_c256_
                    major_version,65,2,0
  5510                        	.sym	~~k_get_fpga_date_year,~~k_get_fpga_date
                    _year,65,2,0
  5511                        	.sym	~~k_get_fpga_date_month,~~k_get_fpga_dat
                    e_month,65,2,0
  5512                        	.sym	~~k_get_fpga_date_day,~~k_get_fpga_date_
                    day,65,2,0
  5513                        	.sym	~~k_get_rtc_century,~~k_get_rtc_century,
                    80,2,0
  5514                        	.sym	~~k_get_rtc_year,~~k_get_rtc_year,80,2,0
  5515                        	.sym	~~k_get_rtc_day,~~k_get_rtc_day,80,2,0
  5516                        	.sym	~~k_get_rtc_month,~~k_get_rtc_month,80,2
                    ,0
  5517                        	.sym	~~k_get_rtc_second,~~k_get_rtc_second,80
                    ,2,0
  5518                        	.sym	~~k_get_rtc_minute,~~k_get_rtc_minute,80
                    ,2,0
  5519                        	.sym	~~k_get_rtc_hour,~~k_get_rtc_hour,80,2,0
  5520                        	.sym	~~k_debug_uart_status_com2,~~k_debug_uar
                    t_status_com2,65,2,0
  5521                        	.sym	~~k_debug_uart_status_com1,~~k_debug_uar
                    t_status_com1,65,2,0
  5522                        	.sym	~~k_debug_nodelist_with_data,~~k_debug_n
                    odelist_with_data,65,2,0
  5523                        	.sym	~~k_debug_nodelist_list,~~k_debug_nodeli
                    st_list,65,2,0
  5524                        	.sym	~~k_debug_nodelist,~~k_debug_nodelist,65
                    ,2,0
  5525                        	.sym	~~k_debug_node,~~k_debug_node,65,2,0
  5526                        	.sym	~~k_debug_integers,~~k_debug_integers,65
  Thu Dec  3 2020 22:25                                                Page 101


                    ,2,0
  5527                        	.sym	~~k_debug_crlf,~~k_debug_crlf,65,2,0
  5528                        	.sym	~~k_debug_rect,~~k_debug_rect,65,2,0
  5529                        	.sym	~~k_debug_nstrings,~~k_debug_nstrings,65
                    ,2,0
  5530                        	.sym	~~k_debug_nmessage,~~k_debug_nmessage,65
                    ,2,0
  5531                        	.sym	~~k_debug_strings,~~k_debug_strings,65,2
                    ,0
  5532                        	.sym	~~k_debug_message,~~k_debug_message,65,2
                    ,0
  5533                        	.sym	~~k_debug_byte_array,~~k_debug_byte_arra
                    y,65,2,0
  5534                        	.sym	~~k_debug_on,~~k_debug_on,65,2,0
  5535                        	.sym	~~k_debug_bits,~~k_debug_bits,65,2,0
  5536                        	.sym	~~k_debug_hexchar,~~k_debug_hexchar,65,2
                    ,0
  5537                        	.sym	~~k_debug_hex,~~k_debug_hex,65,2,0
  5538                        	.sym	~~k_debug_long,~~k_debug_long,65,2,0
  5539                        	.sym	~~k_debug_integer_array,~~k_debug_intege
                    r_array,65,2,0
  5540                        	.sym	~~k_debug_integer,~~k_debug_integer,65,2
                    ,0
  5541                        	.sym	~~k_debug_pointer,~~k_debug_pointer,65,2
                    ,0
  5542                        	.sym	~~k_debug_char,~~k_debug_char,65,2,0
  5543                        	.sym	~~k_debug_nstring,~~k_debug_nstring,65,2
                    ,0
  5544                        	.sym	~~k_debug_string,~~k_debug_string,65,2,0
  5545                        	.sym	~~k_debug_nstring_com1,~~k_debug_nstring
                    _com1,65,2,0
  5546                        	.sym	~~k_debug_nstring_com2,~~k_debug_nstring
                    _com2,65,2,0
  5547                        	.sym	~~k_debug_string_com2,~~k_debug_string_c
                    om2,65,2,0
  5548                        	.sym	~~k_debug_string_com1,~~k_debug_string_c
                    om1,65,2,0
  5549                        	.sym	~~k_delay,~~k_delay,65,2,0
  5550                        	.sym	~~k_report_configuration,~~k_report_conf
                    iguration,69,2,0
  5551                        	.sym	~~k_getFXOSVersionName,~~k_getFXOSVersio
                    nName,1102,2,32
  5552                        	.sym	~~sleep,~~sleep,65,2,0
  5553                        	.sym	~~k_delay_1ms,~~k_delay_1ms,65,2,0
  5554                        	.sym	~~k_delay_1,~~k_delay_1,65,2,0
  5555                        	.sym	~~k_delay_nop,~~k_delay_nop,65,2,0
  5556                        	.sym	~~k_initializeZeroPage,~~k_initializeZer
                    oPage,65,2,0
  5557                        	.sym	~~k_getKernelTrapTable,~~k_getKernelTrap
                    Table,42049,2,32
  5558                        	.sym	~~k_getZeroPage,~~k_getZeroPage,1098,2,3
                    2,59
  5559                        	.sym	PDEBUGBYTEBITS,0,138,14,32,61
  5560                        	.sym	DEBUGBYTEBITS,0,10,14,8,61
  5561                        	.sym	PFXENVIRONMENT,0,138,14,32,60
  5562                        	.sym	FXENVIRONMENT,0,10,14,96,60
  5563                        	.sym	PFXZERPOPAGE,0,138,14,32,59
  5564                        	.sym	FXZERPOPAGE,0,10,14,448,59
  Thu Dec  3 2020 22:25                                                Page 102


  5565                        	.sym	KERNELTRAPCALL,0,641,14,32
  5566                        	.sym	~~k_put_color,~~k_put_color,69,18,0
  5567                        	.sym	~~k_put_string,~~k_put_string,69,18,0
  5568                        	.sym	~~k_put_char,~~k_put_char,65,18,0
  5569                        	.sym	PCOMMANDARGS,0,138,14,32,58
  5570                        	.sym	COMMANDARGS,0,10,14,64,58
  5571                        	.sym	PTOKENIZESTATE,0,133,14,32
  5572                        	.sym	TOKENIZESTATE,0,5,14,16
  5573                        	.sym	PTOKEN,0,138,14,32,57
  5574                        	.sym	TOKEN,0,10,14,64,57
  5575                        	.sym	PTOKENTYPE,0,133,14,32
  5576                        	.sym	TOKENTYPE,0,5,14,16
  5577                        	.sym	FXCommandHandler,0,656,14,32
  5578                        	.sym	PCONSOLECTX,0,138,14,32,56
  5579                        	.sym	CONSOLECTX,0,10,14,1144,56
  5580                        	.sym	PSPINNERCTX,0,138,14,32,55
  5581                        	.sym	SPINNERCTX,0,10,14,48,55
  5582                        	.sym	PMOUSE_MSG_STATE,0,138,14,32,54
  5583                        	.sym	MOUSE_MSG_STATE,0,10,14,184,54
  5584                        	.sym	PFXEVENTPROCESS,0,138,14,32,53
  5585                        	.sym	FXEVENTPROCESS,0,10,14,64,53
  5586                        	.sym	FXEventProc,0,641,14,32
  5587                        	.sym	PMOUSEMSGDATA,0,138,14,32,52
  5588                        	.sym	MOUSEMSGDATA,0,10,14,64,52
  5589                        	.sym	MSGIRQ,0,5,14,16
  5590                        	.sym	MAINLOOPARGS,0,10,14,16,51
  5591                        	.sym	PEACHCHILD_MSG,0,138,14,32,50
  5592                        	.sym	EACHCHILD_MSG,0,10,14,64,50
  5593                        	.sym	PCUR_PALETTE_MAP,0,138,14,32,49
  5594                        	.sym	CUR_PALETTE_MAP,0,10,14,400,49
  5595                        	.sym	PCLICKDETECTED,0,138,14,32,48
  5596                        	.sym	CLICKDETECTED,0,10,14,64,48
  5597                        	.sym	OBJECTCLICKED,0,641,14,32
  5598                        	.sym	MemoryCallback,0,641,14,32
  5599                        	.sym	PFXMEMORYMAP,0,138,14,32,47
  5600                        	.sym	FXMEMORYMAP,0,10,14,2072,47
  5601                        	.sym	UMM_HEAP_INFO,0,10,14,256,46
  5602                        	.sym	FOREACHNODEUNTIL,0,654,14,32
  5603                        	.sym	FOREACHNODE,0,641,14,32
  5604                        	.sym	~~k_longtodec,~~k_longtodec,1102,18,32
  5605                        	.sym	~~k_inttodec,~~k_inttodec,1102,18,32
  5606                        	.sym	~~k_bytetodec,~~k_bytetodec,1102,18,32
  5607                        	.sym	~~k_bytetohex,~~k_bytetohex,1102,18,32
  5608                        	.sym	~~k_strip_padding,~~k_strip_padding,1102
                    ,18,32
  5609                        	.sym	PFXSTRING,0,138,14,32,45
  5610                        	.sym	FXSTRING,0,10,14,64,45
  5611                        	.sym	PFXCOMBUFFER,0,138,14,32,44
  5612                        	.sym	FXCOMBUFFER,0,10,14,2080,44
  5613                        	.sym	PSUBMENULIST,0,138,14,32,43
  5614                        	.sym	SUBMENULIST,0,10,14,40,43
  5615                        	.sym	HSUBMENU,0,7,14,32
  5616                        	.sym	PSUBMENU,0,138,14,32,42
  5617                        	.sym	SUBMENU,0,10,14,64,42
  5618                        	.sym	MenuAction,0,641,14,32
  5619                        	.sym	PMENUANCHOR,0,138,14,32,41
  5620                        	.sym	MENUANCHOR,0,10,14,144,41
  5621                        	.sym	PTEXTBOX,0,138,14,32,40
  Thu Dec  3 2020 22:25                                                Page 103


  5622                        	.sym	TEXTBOX,0,10,14,144,40
  5623                        	.sym	PLISTBOX,0,138,14,32,39
  5624                        	.sym	LISTBOX,0,10,14,240,39
  5625                        	.sym	PSCROLLBAR,0,138,14,32,38
  5626                        	.sym	SCROLLBAR,0,10,14,192,38
  5627                        	.sym	PBUTTON,0,138,14,32,37
  5628                        	.sym	BUTTON,0,10,14,80,37
  5629                        	.sym	PMENUDROPDOWNDATA,0,138,14,32,36
  5630                        	.sym	MENUDROPDOWNDATA,0,10,14,3568,36
  5631                        	.sym	PMENUTAG,0,138,14,32,35
  5632                        	.sym	MENUTAG,0,10,14,112,35
  5633                        	.sym	PMENU,0,138,14,32,34
  5634                        	.sym	MENU,0,10,14,248,34
  5635                        	.sym	HMENURESOURCE,0,129,14,32
  5636                        	.sym	HTEXTBOX,0,7,14,32
  5637                        	.sym	PTEXTBOXX,0,138,14,32,33
  5638                        	.sym	TEXTBOXX,0,10,14,112,33
  5639                        	.sym	FONTMETRIC,0,10,14,32,32
  5640                        	.sym	TITLE,0,142,14,32
  5641                        	.sym	PHANDLE,0,1153,14,32
  5642                        	.sym	HANDLE,0,129,14,32
  5643                        	.sym	PWINDOWEX,0,138,14,32,31
  5644                        	.sym	WINDOWEX,0,10,14,2704,31
  5645                        	.sym	PWINDOW,0,138,14,32,30
  5646                        	.sym	WINDOW,0,10,14,2808,30
  5647                        	.sym	PDRAGDATA,0,138,14,32,29
  5648                        	.sym	DRAGDATA,0,10,14,136,29
  5649                        	.sym	PNCCLICKABLE,0,138,14,32,28
  5650                        	.sym	NCCLICKABLE,0,10,14,88,28
  5651                        	.sym	HCLICKABLE,0,7,14,32
  5652                        	.sym	PCLICKABLE,0,138,14,32,27
  5653                        	.sym	CLICKABLE,0,10,14,88,27
  5654                        	.sym	PWNDCLASS,0,138,14,32,26
  5655                        	.sym	WNDCLASS,0,10,14,256,26
  5656                        	.sym	HBRUSH,0,129,14,32
  5657                        	.sym	HCURSOR,0,129,14,32
  5658                        	.sym	HICON,0,129,14,32
  5659                        	.sym	HINSTANCE,0,129,14,32
  5660                        	.sym	FXWndProc,0,654,14,32
  5661                        	.sym	PRECT,0,138,14,32,25
  5662                        	.sym	RECT,0,10,14,64,25
  5663                        	.sym	PPOINT,0,138,14,32,24
  5664                        	.sym	POINT,0,10,14,32,24
  5665                        	.sym	PFXPROPERTY,0,138,14,32,22
  5666                        	.sym	FXPROPERTY,0,10,14,384,22
  5667                        	.sym	SCANCODE,0,14,14,8
  5668                        	.sym	KEYCODE,0,14,14,8
  5669                        	.sym	PFXPROCESSMESSAGE,0,138,14,32,21
  5670                        	.sym	FXPROCESSMESSAGE,0,10,14,112,21
  5671                        	.sym	PFXPROCESS,0,138,14,32,20
  5672                        	.sym	FXPROCESS,0,10,14,800,20
  5673                        	.sym	PDESKTOP_CONTROL,0,138,14,32,19
  5674                        	.sym	DESKTOP_CONTROL,0,10,14,392,19
  5675                        	.sym	PCONSOLE_CONTROL,0,138,14,32,18
  5676                        	.sym	CONSOLE_CONTROL,0,10,14,448,18
  5677                        	.sym	FXProcessProc,0,641,14,32
  5678                        	.sym	PFXCMDMESSAGE,0,138,14,32,17
  5679                        	.sym	FXCMDMESSAGE,0,10,14,304,17
  Thu Dec  3 2020 22:25                                                Page 104


  5680                        	.sym	PFXOSMESSAGE,0,138,14,32,16
  5681                        	.sym	FXOSMESSAGE,0,10,14,304,16
  5682                        	.sym	PINT_REGS,0,138,14,32,15
  5683                        	.sym	INT_REGS,0,10,14,104,15
  5684                        	.sym	TASK_STACK,0,10,14,32,14
  5685                        	.sym	TASK,0,10,14,48,13
  5686                        	.sym	PIRQDATA,0,138,14,32,12
  5687                        	.sym	IRQDATA,0,10,14,48,12
  5688                        	.sym	HMENU,0,129,14,32
  5689                        	.sym	HWND,0,129,14,32
  5690                        	.sym	MSGDATA,0,14,14,8
  5691                        	.sym	MSGDEST,0,18,14,32
  5692                        	.sym	MSGSRC,0,18,14,32
  5693                        	.sym	MSGTYPE,0,16,14,16
  5694                        	.sym	PROCESS_RESOURCE_LIST,0,138,14,32,6
  5695                        	.sym	PROCESS_TLS_LIST,0,138,14,32,6
  5696                        	.sym	SEMAPHORE_LIST,0,138,14,32,6
  5697                        	.sym	FILE_BLOCK_LIST,0,138,14,32,6
  5698                        	.sym	FILE_PATH_LIST,0,138,14,32,6
  5699                        	.sym	PROCEDURE_LIST,0,138,14,32,6
  5700                        	.sym	FILE_HANDLE,0,138,14,32,11
  5701                        	.sym	FILE_BLOCK,0,10,14,552,11
  5702                        	.sym	SEMAPHORE,0,10,14,16,10
  5703                        	.sym	PPROCESS_SIGNAL,0,138,14,32,9
  5704                        	.sym	PROCESS_SIGNAL,0,10,14,16,9
  5705                        	.sym	KRESULT,0,18,14,32
  5706                        	.sym	PKERNEL_ERROR,0,138,14,32,8
  5707                        	.sym	KERNEL_ERROR,0,10,14,32,8
  5708                        	.sym	PROCESS_STATUS,0,16,14,16
  5709                        	.sym	FILE_PATH_NAME,0,142,14,32
  5710                        	.sym	PROCESS_RESOURCE,0,129,14,32
  5711                        	.sym	PROCESS_TLS,0,129,14,32
  5712                        	.sym	PROCESS_CTX,0,129,14,32
  5713                        	.sym	USERID,0,16,14,16
  5714                        	.sym	PROCESS_ID,0,18,14,32
  5715                        	.sym	PROCESS_BANK,0,14,14,8
  5716                        	.sym	PFXQUEUE,0,138,14,32,7
  5717                        	.sym	FXQUEUE,0,10,14,80,7
  5718                        	.sym	PFXNODELIST,0,138,14,32,6
  5719                        	.sym	FXNODELIST,0,10,14,96,6
  5720                        	.sym	NodeListDeallocator,0,641,14,32
  5721                        	.sym	PFXNODE,0,138,14,32,5
  5722                        	.sym	FXNODE,0,10,14,384,5
  5723                        	.sym	PBYTEBITS,0,138,14,32,4
  5724                        	.sym	BYTEBITS,0,10,14,8,4
  5725                        	.sym	HCOLOR,0,129,14,32
  5726                        	.sym	HFONT,0,129,14,32
  5727                        	.sym	HDC,0,129,14,32
  5728                        	.sym	HPOINTER,0,129,14,32
  5729                        	.sym	uint32_t,0,18,14,32
  5730                        	.sym	uint8_t,0,14,14,8
  5731                        	.sym	PFAR,0,142,14,32
  5732                        	.sym	LPBOOL,0,142,14,32
  5733                        	.sym	BOOL,0,14,14,8
  5734                        	.sym	DWORD,0,18,14,32
  5735                        	.sym	ULONG,0,18,14,32
  5736                        	.sym	LPLONG,0,135,14,32
  5737                        	.sym	LONG,0,7,14,32
  Thu Dec  3 2020 22:25                                                Page 105


  5738                        	.sym	PUINT,0,144,14,32
  5739                        	.sym	USHORT,0,16,14,16
  5740                        	.sym	UINT,0,16,14,16
  5741                        	.sym	INT,0,5,14,16
  5742                        	.sym	WORD,0,5,14,16
  5743                        	.sym	PBYTE,0,142,14,32
  5744                        	.sym	BYTE,0,14,14,8
  5745                        	.sym	UCHAR,0,14,14,8
  5746                        	.sym	LPWCSTR,0,142,14,32
  5747                        	.sym	LPCSTR,0,142,14,32
  5748                        	.sym	LPSTR,0,142,14,32
  5749                        	.sym	LPCHAR,0,142,14,32
  5750                        	.sym	CHAR,0,14,14,8
  5751                        	.sym	LPVOID,0,129,14,32
  5752                        	.sym	VOID,0,1,14,32
  5753                        	.sym	Boolean_T,0,5,14,16
  5754                        	.sym	ldiv_t,0,10,14,64,2
  5755                        	.sym	div_t,0,10,14,32,1
  5756                        	.sym	wctype_t,0,16,14,16
  5757                        	.sym	wint_t,0,16,14,16
  5758                        	.sym	wchar_t,0,14,14,8
  5759                        	.sym	ptrdiff_t,0,7,14,32
  5760                        	.sym	size_t,0,16,14,16
  5761                        	end


      Lines assembled: 5761
      Errors: 0
